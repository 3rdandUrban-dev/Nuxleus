#!/bin/bash
prefix=/usr/local
common_packages=" mono;2.8"

usage ()
{
	echo "Usage : configure [OPTION]... [--config=CONFIG]"
	echo
	echo "Options:"
	echo "  --prefix=PREFIX         install architecture-independent files in PREFIX"
	echo "                          [/usr/local]"
	echo
}
check_package ()
{
	name=`echo $1 | cut -d\; -f1`
	version=`echo $1 | cut -d\; -f2`
	echo -n "Checking for package '$name'.." | tee -a config.log
	pkg-config --atleast-version=$version $name
	if [ $? -ne 0 ]; then
		echo " ERROR: Package named '$name' >= $version not found." | tee -a config.log
		echo "Try adjusting your PKG_CONFIG_PATH environment variable." | tee -a config.log
		return 1
	fi
	echo " found." | tee -a config.log
}

check_required_packages ()
{
	echo "Looking for required packages" | tee config.log
	var=required_packages_$config
	for pkg in $common_packages ${!var}; do
		check_package $pkg
		retval=$?
		[ $retval -ne 0 ] && return $retval
	done
	return 0
}

check_darwin ()
{
	# This is hacky convience thing for Mac users that just installed vanialla Mono without setting up env
	# that don't have PKG_CONFIG_PATH defined. 
	unamestr=`uname`
	if [[ "$unamestr" == 'Darwin' && -n "${PKG_CONFIG_PATH-x}" && -d /Library/Frameworks/Mono.framework/ ]]; then
		echo "adding default Mono installation to PKG_CONFIG_PATH. Override by setting PKG_CONFIG_PATH"
		export PKG_CONFIG_PATH=/Library/Frameworks/Mono.framework/Versions/Current/lib/pkgconfig/
	fi	  
}

while test x$1 != x; do
		case $1 in
		--prefix=*)
				prefix=`echo $1 | sed 's/--prefix=//'`
				;;
		--prefix)
				shift
				prefix=$1
				;;
		--help)
			usage
			exit
			;;
		*)
			echo Unknown argument $1 >&2
			usage
			exit 1
			;;
		esac
		shift
done

check_darwin
check_required_packages

[ $? -eq 1 ] && exit 1

echo "prefix=$prefix" > config.make

echo
echo "$PACKAGE has been configured with "
echo "        prefix = $prefix"
echo
