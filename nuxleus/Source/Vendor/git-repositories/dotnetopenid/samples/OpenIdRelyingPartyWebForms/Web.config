<?xml version="1.0"?>
<configuration>
	<configSections>
		<section name="uri" type="System.Configuration.UriSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler" requirePermission="false" />
		<section name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection" requirePermission="false" allowLocation="true"/>
	</configSections>

	<!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
	     which is necessary for OpenID urls with unicode characters in the domain/host name. 
	     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
	<uri>
		<idn enabled="All"/>
		<iriParsing enabled="true"/>
	</uri>

	<system.net>
		<defaultProxy enabled="true" />
		<settings>
			<!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
			<!--<servicePointManager checkCertificateRevocationList="true"/>-->
		</settings>
	</system.net>

	<!-- this is an optional configuration section where aspects of dotnetopenauth can be customized -->
	<dotNetOpenAuth>
		<openid>
			<relyingParty>
				<security requireSsl="false" />
				<behaviors>
					<!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). -->
					<add type="DotNetOpenAuth.OpenId.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth" />
				</behaviors>
				<!-- Uncomment the following to activate the sample custom store.  -->
				<!--<store type="OpenIdRelyingPartyWebForms.CustomStore, OpenIdRelyingPartyWebForms" />-->
			</relyingParty>
		</openid>
		<messaging>
			<untrustedWebRequest>
				<whitelistHosts>
					<!-- since this is a sample, and will often be used with localhost -->
					<add name="localhost" />
				</whitelistHosts>
			</untrustedWebRequest>
		</messaging>
	</dotNetOpenAuth>

	<appSettings>
		<!-- Fill in your various consumer keys and secrets here to make the sample work. -->
		<!-- You must get these values by signing up with each individual service provider. -->
		<!-- Google sign-up: https://www.google.com/accounts/ManageDomains -->
		<add key="googleConsumerKey" value="demo.dotnetopenauth.net"/>
		<add key="googleConsumerSecret" value="5Yv1TfKm1551QrXZ9GpqepeD"/>
	</appSettings>

	<system.web>
		<!--<sessionState cookieless="true" />-->
		<compilation debug="true"/>
		<customErrors mode="RemoteOnly"/>
		<authentication mode="Forms">
			<forms name="OpenIdRelyingPartySession"/> <!-- named cookie prevents conflicts with other samples -->
		</authentication>
		<trace enabled="false" writeToDiagnosticsTrace="true" />
		<!-- Trust level discussion:
		Full: everything works
		High: TRACE compilation symbol must NOT be defined
		Medium/Low: doesn't work on default machine.config, because WebPermission.Connect is denied.
		-->
		<trust level="High" originUrl=""/>
	</system.web>

	<!-- log4net is a 3rd party (free) logger library that dotnetopenid will use if present but does not require. -->
	<log4net>
		<appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
			<file value="RelyingParty.log" />
			<appendToFile value="true" />
			<rollingStyle value="Size" />
			<maxSizeRollBackups value="10" />
			<maximumFileSize value="100KB" />
			<staticLogFileName value="true" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date (GMT%date{%z}) [%thread] %-5level %logger - %message%newline" />
			</layout>
		</appender>
		<appender name="TracePageAppender" type="OpenIdRelyingPartyWebForms.Code.TracePageAppender, OpenIdRelyingPartyWebForms">
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date (GMT%date{%z}) [%thread] %-5level %logger - %message%newline" />
			</layout>
		</appender>
		<!-- Setup the root category, add the appenders and set the default level -->
		<root>
			<level value="INFO" />
			<!--<appender-ref ref="RollingFileAppender" />-->
			<appender-ref ref="TracePageAppender" />
		</root>
		<!-- Specify the level for some specific categories -->
		<logger name="DotNetOpenAuth">
			<level value="INFO" />
		</logger>
	</log4net>

</configuration>
