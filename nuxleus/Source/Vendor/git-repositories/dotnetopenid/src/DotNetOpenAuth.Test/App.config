<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<configSections>
		<section name="uri" type="System.Configuration.UriSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
		<section name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth"/>
	</configSections>

	<!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
	     which is necessary for OpenID urls with unicode characters in the domain/host name. 
	     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
	<uri>
		<idn enabled="All"/>
		<iriParsing enabled="true"/>
	</uri>

	<dotNetOpenAuth>
		<!-- The values here are carefully chosen to be somewhat weird so that tests can be 
		     reasonably confident that if the values are the weird ones here that they did
		     indeed come from the config file and not from a programmatic default. -->
		<messaging>
			<untrustedWebRequest timeout="01:23:45" readWriteTimeout="01:23:56" maximumBytesToRead="500001" maximumRedirections="9">
				<whitelistHosts>
					<add name="evilButTrusted"/>
					<add name="localhost"/>
				</whitelistHosts>
				<whitelistHostsRegex>
					<add name=".+trusted.+"/>
				</whitelistHostsRegex>
				<blacklistHosts>
					<add name="positivelyevil"/>
				</blacklistHosts>
				<blacklistHostsRegex>
					<add name=".+veryevil.+"/>
				</blacklistHostsRegex>
			</untrustedWebRequest>
		</messaging>
		<openid maxAuthenticationTime="00:08:17">
			<relyingParty>
				<!--<store type=""/>-->
				<security minimumRequiredOpenIdVersion="V10" minimumHashBitLength="6" maximumHashBitLength="301" requireSsl="false"/>
			</relyingParty>
			<provider>
				<!--<store type=""/>-->
				<security protectDownlevelReplayAttacks="true" minimumHashBitLength="7" maximumHashBitLength="302">
					<associations>
						<add type="HMAC-SHA1" lifetime="2.00:00:02" />
						<add type="HMAC-SHA256" lifetime="14.00:00:14" />
					</associations>
				</security>
			</provider>
		</openid>
	</dotNetOpenAuth>
</configuration>