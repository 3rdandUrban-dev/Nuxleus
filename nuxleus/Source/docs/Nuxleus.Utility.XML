<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nuxleus.Utility</name>
    </assembly>
    <members>
        <member name="T:Nuxleus.Utility.S3.AWSAuthConnection">
            An interface into the S3 system.  It is initially configured with
            authentication and connection parameters and exposes methods to access and
            manipulate S3 data.
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.createBucket(System.String)">
            <summary>
            Creates a new bucket.
            </summary>
            <param name="bucket">The name of the bucket to create</param>
            <param name="headers">A Map of string to string representing the headers to pass (can be null)</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.listBucket(System.String,System.String,System.String,System.Int32,System.Collections.SortedList)">
            <summary>
            Lists the contents of a bucket.
            </summary>
            <param name="bucket">The name of the bucket to list</param>
            <param name="prefix">All returned keys will start with this string (can be null)</param>
            <param name="marker">All returned keys will be lexographically greater than this string (can be null)</param>
            <param name="maxKeys">The maximum number of keys to return (can be 0)</param>
            <param name="headers">A Map of string to string representing HTTP headers to pass.</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.listBucket(System.String,System.String,System.String,System.Int32,System.String,System.Collections.SortedList)">
            <summary>
            Lists the contents of a bucket.
            </summary>
            <param name="bucket">The name of the bucket to list</param>
            <param name="prefix">All returned keys will start with this string (can be null)</param>
            <param name="marker">All returned keys will be lexographically greater than this string (can be null)</param>
            <param name="maxKeys">The maximum number of keys to return (can be 0)</param>
            <param name="headers">A Map of string to string representing HTTP headers to pass.</param>
            <param name="delimiter">Keys that contain a string between the prefix and the first
            occurrence of the delimiter will be rolled up into a single element.</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.deleteBucket(System.String,System.Collections.SortedList)">
            <summary>
            Deletes an empty Bucket.
            </summary>
            <param name="bucket">The name of the bucket to delete</param>
            <param name="headers">A map of string to string representing the HTTP headers to pass (can be null)</param>
            <returns></returns>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.put(System.String,System.String,Nuxleus.Utility.S3.S3Object)">
            <summary>
            Writes an object to S3.
            </summary>
            <param name="bucket">The name of the bucket to which the object will be added.</param>
            <param name="key">The name of the key to use</param>
            <param name="obj">An S3Object containing the data to write.</param>
            <param name="headers">A map of string to string representing the HTTP headers to pass (can be null)</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.put(System.String,System.String,Nuxleus.Utility.S3.S3Object,System.Collections.SortedList)">
            <summary>
            Writes an object to S3.
            </summary>
            <param name="bucket">The name of the bucket to which the object will be added.</param>
            <param name="key">The name of the key to use</param>
            <param name="obj">An S3Object containing the data to write.</param>
            <param name="headers">A map of string to string representing the HTTP headers to pass (can be null)</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.get(System.String,System.String,System.Collections.SortedList)">
            <summary>
            Reads an object from S3
            </summary>
            <param name="bucket">The name of the bucket where the object lives</param>
            <param name="key">The name of the key to use</param>
            <param name="headers">A Map of string to string representing the HTTP headers to pass (can be null)</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.delete(System.String,System.String,System.Collections.SortedList)">
            <summary>
            Delete an object from S3.
            </summary>
            <param name="bucket">The name of the bucket where the object lives.</param>
            <param name="key">The name of the key to use.</param>
            <param name="headers">A map of string to string representing the HTTP headers to pass (can be null)</param>
            <returns></returns>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.getBucketLogging(System.String,System.Collections.SortedList)">
            <summary>
            Get the logging xml document for a given bucket
            </summary>
            <param name="bucket">The name of the bucket</param>
            <param name="headers">A map of string to string representing the HTTP headers to pass (can be null)</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.putBucketLogging(System.String,System.String,System.Collections.SortedList)">
            <summary>
            Write a new logging xml document for a given bucket
            </summary>
            <param name="bucket">The name of the bucket to enable/disable logging on</param>
            <param name="loggingXMLDoc">The xml representation of the logging configuration as a String.</param>
            <param name="headers">A map of string to string representing the HTTP headers to pass (can be null)</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.getBucketACL(System.String,System.Collections.SortedList)">
            <summary>
            Get the ACL for a given bucket.
            </summary>
            <param name="bucket">The the bucket to get the ACL from.</param>
            <param name="headers">A map of string to string representing the HTTP headers to pass (can be null)</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.getACL(System.String,System.String,System.Collections.SortedList)">
            <summary>
            Get the ACL for a given object
            </summary>
            <param name="bucket">The name of the bucket where the object lives</param>
            <param name="key">The name of the key to use.</param>
            <param name="headers">A map of string to string representing the HTTP headers to pass (can be null)</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.putBucketACL(System.String,System.String,System.Collections.SortedList)">
            <summary>
            Write a new ACL for a given bucket
            </summary>
            <param name="bucket">The name of the bucket to change the ACL.</param>
            <param name="aclXMLDoc">An XML representation of the ACL as a string.</param>
            <param name="headers">A map of string to string representing the HTTP headers to pass (can be null)</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.putACL(System.String,System.String,System.String,System.Collections.SortedList)">
            <summary>
            Write a new ACL for a given object
            </summary>
            <param name="bucket">The name of the bucket where the object lives or the
            name of the bucket to change the ACL if key is null.</param>
            <param name="key">The name of the key to use; can be null.</param>
            <param name="aclXMLDoc">An XML representation of the ACL as a string.</param>
            <param name="headers">A map of string to string representing the HTTP headers to pass (can be null)</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.listAllMyBuckets(System.Collections.SortedList)">
            <summary>
            List all the buckets created by this account.
            </summary>
            <param name="headers">A map of string to string representing the HTTP headers to pass (can be null)</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.makeRequest(System.String,System.String,System.String,System.Collections.SortedList)">
            <summary>
            Make a new WebRequest without an S3Object.
            </summary>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.makeRequest(System.String,System.String,System.String,System.Collections.SortedList,Nuxleus.Utility.S3.S3Object)">
            <summary>
            Make a new WebRequest with an S3Object.
            </summary>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.makeRequest(System.String,System.String,System.String,System.Collections.SortedList,System.Collections.SortedList,Nuxleus.Utility.S3.S3Object)">
            <summary>
            Make a new WebRequest
            </summary>
            <param name="method">The HTTP method to use (GET, PUT, DELETE)</param>
            <param name="bucket">The bucket name for this request</param>
            <param name="key">The key this request is for</param>
            <param name="headers">A map of string to string representing the HTTP headers to pass (can be null)</param>
            <param name="obj">S3Object that is to be written (can be null).</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.addHeaders(System.Net.WebRequest,System.Collections.SortedList)">
            <summary>
            Add the given headers to the WebRequest
            </summary>
            <param name="req">Web request to add the headers to.</param>
            <param name="headers">A map of string to string representing the HTTP headers to pass (can be null)</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.addMetadataHeaders(System.Net.WebRequest,System.Collections.SortedList)">
            <summary>
            Add the given metadata fields to the WebRequest.
            </summary>
            <param name="req">Web request to add the headers to.</param>
            <param name="metadata">A map of string to string representing the S3 metadata for this resource.</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.addHeaders(System.Net.WebRequest,System.Collections.SortedList,System.String)">
            <summary>
            Add the given headers to the WebRequest with a prefix before the keys.
            </summary>
            <param name="req">WebRequest to add the headers to.</param>
            <param name="headers">Headers to add.</param>
            <param name="prefix">String to prepend to each before ebfore adding it to the WebRequest</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.AWSAuthConnection.addAuthHeader(System.Net.WebRequest,System.String,System.String,System.Collections.SortedList)">
            <summary>
            Add the appropriate Authorization header to the WebRequest
            </summary>
            <param name="request">Request to add the header to</param>
            <param name="resource">The resource name (bucketName + "/" + key)</param>
        </member>
        <member name="F:Nuxleus.Utility.S3.ListBucketResponse.name">
            <summary>
            The name of the bucket being listed.  Null if the request fails.
            </summary>
        </member>
        <member name="F:Nuxleus.Utility.S3.ListBucketResponse.prefix">
            <summary>
            The prefix echoed back from the request.  Null if the request fails.
            </summary>
        </member>
        <member name="F:Nuxleus.Utility.S3.ListBucketResponse.marker">
            <summary>
            The marker echoed back from the request.  Null if the request fails.
            </summary>
        </member>
        <member name="F:Nuxleus.Utility.S3.ListBucketResponse.delimiter">
            <summary>
            The delimiter echoed back from the request.  Null if not specified in
            the request or it fails.
            </summary>
        </member>
        <member name="F:Nuxleus.Utility.S3.ListBucketResponse.maxKeys">
            <summary>
            The maxKeys echoed back from the request if specified.  0 if the request fails.
            </summary>
        </member>
        <member name="F:Nuxleus.Utility.S3.ListBucketResponse.isTruncated">
            <summary>
            Indicates if there are more results to the list.  True if the current
            list results have been truncated.  The value will be false if the request
            fails.
            </summary>
        </member>
        <member name="F:Nuxleus.Utility.S3.ListBucketResponse.nextMarker">
            <summary>
            Indicates what to use as a marker for subsequent list requests in the event
            that the results are truncated.  Present only when a delimiter is specified.
            Null if the requests fails.
            </summary>
        </member>
        <member name="F:Nuxleus.Utility.S3.ListBucketResponse.entries">
            <summary>
            A list of ListEntry objects representing the objects in the given bucket.
            Null if the request fails.
            </summary>
        </member>
        <member name="F:Nuxleus.Utility.S3.ListBucketResponse.commonPrefixEntries">
            <summary>
            A list of CommonPrefixEntry objects representing the common prefixes of the
            keys that matched up to the delimiter.  Null if the request fails.
            </summary>
        </member>
        <member name="T:Nuxleus.Utility.S3.QueryStringAuthGenerator">
            This class mimics the behavior of AWSAuthConnection, except instead of actually performing
            the operation, QueryStringAuthGenerator will return URLs with query string parameters that
            can be used to do the same thing.  These parameters include an expiration date, so that
            if you hand them off to someone else, they will only work for a limited amount of time.
        </member>
        <member name="P:Nuxleus.Utility.S3.QueryStringAuthGenerator.Expires">
            <summary>
            Sets/Gets the milliseconds since the Epoch that this
            expires at
            </summary>
        </member>
        <member name="M:Nuxleus.Utility.S3.Utils.buildUrlBase(System.String,System.Int32,System.String,Nuxleus.Utility.S3.CallingFormat)">
            <summary>
            Calculates the endpoint based on the calling format.
            </summary>
        </member>
        <member name="F:Nuxleus.Utility.S3.CommonPrefixEntry.prefix">
            <summary>
            The prefix common to the delimited keys it represents.
            </summary>
        </member>
        <member name="T:Nuxleus.Utility.Xml.XmlFragmentStream">
            <summary>
            Allows streams without a root element (i.e. multiple document 
            fragments) to be passed to an <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <remarks>A faked root element is added at the stream 
            level to enclose the fragments, which can be customized 
            using the overloaded constructors.
            <para>Author: Daniel Cazzulino, kzu@aspnet2.com</para>
            See: http://weblogs.asp.net/cazzu/archive/2004/04/23/119263.aspx.
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nuxleus.Utility.Xml.XmlFragmentStream.#ctor(System.IO.Stream)" -->
        <member name="M:Nuxleus.Utility.Xml.XmlFragmentStream.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes the class with the underlying stream to use, with 
            a custom root element. 
            </summary>
            <param name="innerStream">The stream to read from.</param>
            <param name="rootName">Custom root element name to use.</param>
        </member>
        <member name="M:Nuxleus.Utility.Xml.XmlFragmentStream.#ctor(System.IO.Stream,System.String,System.String)">
            <summary>
            Initializes the class with the underlying stream to use, with 
            a custom root element. 
            </summary>
            <param name="innerStream">The stream to read from.</param>
            <param name="rootName">Custom root element name to use.</param>
            <param name="ns">The namespace of the root element.</param>
        </member>
        <member name="M:Nuxleus.Utility.Xml.XmlFragmentStream.Flush">
            <summary>See <see cref="M:System.IO.Stream.Flush"/>.</summary>
        </member>
        <member name="M:Nuxleus.Utility.Xml.XmlFragmentStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>See <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)"/>.</summary>
        </member>
        <member name="M:Nuxleus.Utility.Xml.XmlFragmentStream.SetLength(System.Int64)">
            <summary>See <see cref="M:System.IO.Stream.SetLength(System.Int64)"/>.</summary>
        </member>
        <member name="M:Nuxleus.Utility.Xml.XmlFragmentStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>See <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)"/>.</summary>
        </member>
        <member name="M:Nuxleus.Utility.Xml.XmlFragmentStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>See <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)"/>.</summary>
        </member>
        <member name="P:Nuxleus.Utility.Xml.XmlFragmentStream.CanRead">
            <summary>See <see cref="P:System.IO.Stream.CanRead"/>.</summary>
        </member>
        <member name="P:Nuxleus.Utility.Xml.XmlFragmentStream.CanSeek">
            <summary>See <see cref="P:System.IO.Stream.CanSeek"/>.</summary>
        </member>
        <member name="P:Nuxleus.Utility.Xml.XmlFragmentStream.CanWrite">
            <summary>See <see cref="P:System.IO.Stream.CanWrite"/>.</summary>
        </member>
        <member name="P:Nuxleus.Utility.Xml.XmlFragmentStream.Length">
            <summary>See <see cref="P:System.IO.Stream.Length"/>.</summary>
        </member>
        <member name="P:Nuxleus.Utility.Xml.XmlFragmentStream.Position">
            <summary>See <see cref="P:System.IO.Stream.Position"/>.</summary>
        </member>
        <member name="M:Nuxleus.Utility.StringMatching.AreNeighbors(System.String,System.String,System.Int32)">
            <summary>Returns true if both strings are close, the threshold is the token determining at which point both strings are considered too far away to be similar. This uses the Levenshtein distance algorithm to compute the distance between the two strings.</summary>
            <param name="x">First word.</param>
            <param name="y">Second word</param>
            <param name="threshold">Level above which two words should be considered not similar enough. The bigger that number is the greater chance you take to get quite unsimilar words.</param>
            <return>true if both words' distance is below or equals the threshold, false otherwise.</return>
        </member>
        <member name="M:Nuxleus.Utility.S3.S3Object.#ctor(System.Byte[],System.Collections.SortedList)">
            <summary>
            Constructs an S3Object.
            </summary>
            <param name="bytes">Byte array representing the object</param>
            <param name="metadata">Metadata associated with the object</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.S3Object.#ctor(System.String,System.Collections.SortedList)">
            <summary>
            Constructs an S3Object.
            </summary>
            <param name="data">String representation of the data; this will be decoded via ASCII</param>
            <param name="metadata">Metadata associated with the object</param>
        </member>
        <member name="M:Nuxleus.Utility.S3.S3Object.#ctor(System.String)">
            <summary>
            Constructs an S3Object.
            </summary>
            <param name="data">String representation of the data; this will be decoded via ASCII</param>
            <param name="metadata">Metadata associated with the object</param>
        </member>
        <member name="P:Nuxleus.Utility.S3.S3Object.Bytes">
            <summary>
            Acquires the binary representation of an object.
            </summary>
        </member>
        <member name="P:Nuxleus.Utility.S3.S3Object.Data">
            <summary>
            Acquires the ASCII Encoding representation of an object.
            </summary>
        </member>
        <member name="P:Nuxleus.Utility.S3.S3Object.Metadata">
            <summary>
            Acquires the metadata.
            </summary>
        </member>
    </members>
</doc>
