<?xml version="1.0"?>
<!--
  COPYRIGHT: (c) 2006 by M. David Peterson and Sylvain Hellegouarch
  LICENSE: The code contained in this file is licensed under The MIT License. 
  Please see http://www.opensource.org/licenses/mit-license.php for specific detail.
-->
<configuration>
	<configSections>
		<sectionGroup name="Xameleon.WebApp">
			<section name="xameleon" type="Nuxleus.Configuration.AspNetXameleonConfiguration,Nuxleus.Configuration"/>
			<section name="memcached" type="Nuxleus.Configuration.AspNetMemcachedConfiguration,Nuxleus.Configuration"/>
			<section name="aws" type="Nuxleus.Configuration.AspNetAwsConfiguration,Nuxleus.Configuration"/>
			<section name="bungee" type="Nuxleus.Configuration.AspNetBungeeAppConfiguration,Nuxleus.Configuration"/>
			<section name="queueserver" type="Nuxleus.Configuration.AspNetQueueServerConfiguration,Nuxleus.Configuration"/>
		</sectionGroup>
	</configSections>
	<Xameleon.WebApp>
		<xameleon debugMode="no" useMemcached="yes" defaultEngine="Saxon">
			<baseSettings baseXsltName="base" objectHashKey="1234567890"/>
			<preCompiledXslt base-uri="~">
				<add name="base" useAsBaseXslt="yes" base-uri="~" uri="/service/transform/base.xslt"/>
				<add name="base-result-document" base-uri="~" uri="/service/transform/base.xslt" baseOutputUri="~"/>
				<add name="precompile-atomictalk" base-uri="~" uri="/service/transform/atomictalk.base.xslt" />
				<add name="base-client-xslt" base-uri="~" uri="/service/transform/base.xslt" initialMode="client-xslt"/>
				<!--
        <add name="base-blip-message" base-uri="~" uri="/service/transform/base.xslt" initialTemplate="base-blip-message"/>
        -->
			</preCompiledXslt>
			<globalXsltParams>
				<add name="google.maps.key" select="YOUR.GOOGLE.MAPS.KEY"/>
			</globalXsltParams>
			<sessionXsltParams/>
			<httpContextXsltParams/>
			<requestXsltParams/>
		</xameleon>
		<aws>
			<awsS3 defaultBucket="YOUR.DEFAULT.BUCKET" defaultKeyPrefix="YOUR.DEFAULT.KEY.PREFIX">
				<add name="foo" key="bar" value="baz"/>
			</awsS3>
			<awsKeyCollection externalFile="/path/to/external/key/collection/file.config">
				<add name="aws-one" public-key="YOUR-FIRST-AWS-PUBLIC-KEY" private-key="YOUR-FIRST-AWS-PRIVATE-KEY"/>
				<add name="aws-two" public-key="YOUR-SECOND-AWS-PUBLIC-KEY" private-key="YOUR-SECOND-AWS-PRIVATE-KEY"/>
			</awsKeyCollection>
		</aws>
		<bungee>
			<application defaultAppVersion="YOUR.DEFAULT.APP.ID">
				<add name="YOUR.BUNGEE.APP.NAME" version="YOUR.BUNGEE.APP.VERSION" deployID="YOUR.DEPLOY.ID" deployURL="YOUR.DEPLOY.URL" z="YOUR.Z" elementID="ELEMENT.ID.TO.RENDER.APP.IN"/>
			</application>
		</bungee>
		<memcached useCompression="no">
			<poolConfig initConnections="5" minConnections="5" maxConnections="1024" socketConnectTimeout="1000" socketConnect="3000" maintenanceSleep="30" failover="true" nagle="true"/>
			<server>
				<add name="localhost" ip="127.0.0.1" port="11211"/>
			</server>
		</memcached>
		<queueserver ip="127.0.0.1" port="9876" poolSize="5" threshold="10"/>
	</Xameleon.WebApp>
	<appSettings>
		<add key="MonoServerDefaultIndexFiles" value="index.page,service.op,default.omx,index.xml,index.aspx,default.aspx,index.html,default.asmx"/>
	</appSettings>
	<system.web>
		<httpHandlers>
      <add verb="GET,HEAD" path="/service/session/logout/*.*" type="Nuxleus.Web.HttpHandler.NuxleusHttpSessionLogoutHandler,Nuxleus.Web"/>
      <add verb="GET,HEAD" path="/service/session/get-session-request-info/*.*" type="Nuxleus.Web.HttpHandler.NuxleusHttpSessionRequestHandler,Nuxleus.Web"/>
      <add verb="GET,HEAD" path="/service/geo/get-geo-info-by-city-name/*.*" type="Nuxleus.Web.HttpHandler.NuxleusHttpGeoLocationHandler,Nuxleus.Web"/>
			<add verb="GET,HEAD" path="*.page" type="Nuxleus.Web.HttpHandler.NuxleusHttpAsyncHandler,Nuxleus.Web"/>
			<add verb="GET,HEAD" path="**/doc" type="Nuxleus.Web.HttpHandler.NuxleusHttpAsyncHandler,Nuxleus.Web"/>
			<add verb="GET,HEAD" path="**/search" type="Nuxleus.Web.HttpHandler.NuxleusHttpAsyncHandler,Nuxleus.Web"/>
			<add verb="GET,HEAD" path="**/query" type="Nuxleus.Web.HttpHandler.NuxleusHttpAsyncHandler,Nuxleus.Web"/>
			<add verb="GET,HEAD" path="**/clipboard" type="Nuxleus.Web.HttpHandler.NuxleusHttpAsyncHandler,Nuxleus.Web"/>
			<add verb="GET,HEAD" path="**/feed" type="Nuxleus.Web.HttpHandler.NuxleusHttpAsyncHandler,Nuxleus.Web"/>
			<add verb="GET,HEAD" path="**/service" type="Nuxleus.Web.HttpHandler.NuxleusHttpAsyncHandler,Nuxleus.Web"/>
			<add verb="GET,HEAD" path="**/bookmark" type="Nuxleus.Web.HttpHandler.NuxleusHttpAsyncHandler,Nuxleus.Web"/>
			<add verb="GET,HEAD" path="**/profile" type="Nuxleus.Web.HttpHandler.NuxleusHttpAsyncHandler,Nuxleus.Web"/>
			<add verb="GET,HEAD" path="**/workspace" type="Nuxleus.Web.HttpHandler.NuxleusHttpAsyncHandler,Nuxleus.Web"/>
			<add verb="GET,HEAD" path="**/collection" type="Nuxleus.Web.HttpHandler.NuxleusHttpAsyncHandler,Nuxleus.Web"/>
			<add verb="GET,HEAD" path="*.js" type="System.Web.StaticFileHandler"/>
			<add verb="GET,HEAD" path="*.swf" type="System.Web.StaticFileHandler"/>
			<add verb="GET,HEAD" path="*.txt" type="System.Web.StaticFileHandler"/>
			<add verb="GET,HEAD" path="*.xspf" type="System.Web.StaticFileHandler"/>
			<add verb="*" path="*.aspx" type="System.Web.UI.PageHandlerFactory"/>
			<add verb="*" path="*.config" type="System.Web.HttpForbiddenHandler"/>
			<add verb="*" path="*.asmx" type="System.Web.Services.Protocols.WebServiceHandlerFactory"/>
			<add verb="GET,HEAD" path="*.xml" type="System.Web.StaticFileHandler"/>
			<add verb="GET,HEAD" path="*.xsl" type="System.Web.StaticFileHandler"/>
			<add verb="GET,HEAD" path="*.xslt" type="System.Web.StaticFileHandler"/>
			<add verb="GET,HEAD" path="*.css" type="System.Web.StaticFileHandler"/>
			<add verb="GET,HEAD" path="*.png" type="System.Web.StaticFileHandler"/>
			<add verb="GET,HEAD" path="*.jpg" type="System.Web.StaticFileHandler"/>
			<add verb="GET,HEAD" path="*.gif" type="System.Web.StaticFileHandler"/>
			<add verb="GET,HEAD" path="*.ico" type="System.Web.StaticFileHandler"/>
			<add verb="GET,HEAD" path="*.atom" type="System.Web.StaticFileHandler"/>
			<add verb="GET,HEAD" path="*.omx" type="Nuxleus.Web.HttpHandler.NuxleusHttpAsyncHandler,Nuxleus.Web"/>
			<add verb="*" path="*.op" type="Nuxleus.Web.HttpHandler.NuxleusHttpAsyncHandler,Nuxleus.Web"/>
			<add verb="POST" path="*" type="Nuxleus.Web.HttpHandler.NuxleusHttpNotFoundHandler,Nuxleus.Web"/>
			<add verb="GET,HEAD" path="*" type="Nuxleus.Web.HttpHandler.NuxleusHttpNotFoundHandler,Nuxleus.Web"/>
		</httpHandlers>
<!-- <httpModules>
      <add name="AsyncRequestLogHttpModule" type="Xameleon.HttpModule.AsyncRequestLogHttpModule,Xameleon" />
    </httpModules> -->
		<sessionState mode="Off"/>
		<authentication mode="None"/>
		<customErrors mode="Off"/>
		<compilation debug="true"/>
		<httpRuntime executionTimeout="300"/>
	</system.web>
</configuration>
