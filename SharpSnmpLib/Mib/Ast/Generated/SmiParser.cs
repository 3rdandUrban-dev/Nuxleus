//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.4.1.9004
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.4.1.9004 Smi.g 2012-01-01 21:23:18

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// CLS compliance checking will not be performed on 'type' because it is not visible from outside this assembly.
#pragma warning disable 3019


#pragma warning disable 3001, 3003, 3005, 3009, 1591 


using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;


using Antlr.Runtime.Tree;
using RewriteRuleITokenStream = Antlr.Runtime.Tree.RewriteRuleTokenStream;

namespace  Lextm.SharpSnmpLib.Mib.Ast 
{
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.4.1.9004")]
[System.CLSCompliant(false)]
public partial class SmiParser : Antlr.Runtime.Parser
{
	internal static readonly string[] tokenNames = new string[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "ABSENT_KW", "ABSTRACT_SYNTAX_KW", "ALL_KW", "ANY_KW", "APPLICATION_KW", "ARGUMENT_KW", "ASSIGN_OP", "AUTOMATIC_KW", "BAR", "BASED_NUM_KW", "BEGIN_KW", "BIT_KW", "BLK_COMMENT", "BMP_STR_KW", "BOOLEAN_KW", "BY_KW", "B_STRING", "CHARACTER_KW", "CHARB", "CHARH", "CHOICE_KW", "CLASS_KW", "COLON", "COMMA", "COMMENT", "COMPONENTS_KW", "COMPONENT_KW", "CONSTRAINED_KW", "C_STRING", "DEFAULT_KW", "DEFINED_KW", "DEFINITIONS_KW", "DOT", "DOTDOT", "DOTDOTDOT", "EMBEDDED_KW", "END_KW", "ENUMERATED_KW", "ERRORS_KW", "ERROR_KW", "EXCEPT_KW", "EXCLAMATION", "EXPLICIT_KW", "EXPORTS_KW", "EXTENSIBILITY_KW", "EXTERNAL_KW", "FALSE_KW", "FROM_KW", "GENERALIZED_TIME_KW", "GENERAL_STR_KW", "GRAPHIC_STR_KW", "HDIG", "H_STRING", "IA5_STRING_KW", "IDENTIFIER_KW", "IMPLICIT_KW", "IMPLIED_KW", "IMPORTS_KW", "INCLUDES_KW", "INSTANCE_KW", "INTEGER_KW", "INTERSECTION", "INTERSECTION_KW", "ISO646_STR_KW", "LESS", "LINKED_KW", "LOWER", "L_BRACE", "L_BRACKET", "L_PAREN", "MAX_KW", "MINUS", "MINUS_INFINITY_KW", "MIN_KW", "NULL_KW", "NUMBER", "NUMERIC_STR_KW", "OBJECT_DESCRIPTOR_KW", "OBJECT_KW", "OCTET_KW", "OF_KW", "OID_KW", "OPERATION_KW", "OPTIONAL_KW", "PARAMETER_KW", "PATTERN_KW", "PDV_KW", "PLUS", "PLUS_INFINITY_KW", "PRESENT_KW", "PRINTABLE_STR_KW", "PRIVATE_KW", "REAL_KW", "RELATIVE_KW", "RESULT_KW", "R_BRACE", "R_BRACKET", "R_PAREN", "SEMI", "SEQUENCE_KW", "SET_KW", "SINGLE_QUOTE", "SIZE_KW", "SL_COMMENT", "STRING_KW", "T61_STR_KW", "TAGS_KW", "TELETEX_STR_KW", "TRUE_KW", "TYPE_IDENTIFIER_KW", "UNION_KW", "UNIQUE_KW", "UNIVERSAL_KW", "UNIVERSAL_STR_KW", "UPPER", "UTC_TIME_KW", "UTF8_STR_KW", "VIDEOTEX_STR_KW", "VISIBLE_STR_KW", "WITH_KW", "WS", "'ABSTRACT-BIND'", "'ABSTRACT-ERROR'", "'ABSTRACT-OPERATION'", "'ABSTRACT-UNBIND'", "'ACCESS'", "'AGENT-CAPABILITIES'", "'ALGORITHM'", "'APPLICATION-CONTEXT'", "'APPLICATION-SERVICE-ELEMENT'", "'AUGMENTS'", "'BIND'", "'BITS'", "'CONTACT-INFO'", "'CREATION-REQUIRES'", "'DEFVAL'", "'DESCRIPTION'", "'DISPLAY-HINT'", "'ENCRYPTED'", "'ENTERPRISE'", "'EXTENDS'", "'EXTENSION'", "'EXTENSION-ATTRIBUTE'", "'EXTENSIONS'", "'GROUP'", "'INDEX'", "'INSTALL-ERRORS'", "'LAST-UPDATED'", "'MACRO'", "'MANDATORY-GROUPS'", "'MAX-ACCESS'", "'MIN-ACCESS'", "'MODULE'", "'MODULE-COMPLIANCE'", "'MODULE-IDENTITY'", "'NOTIFICATION-GROUP'", "'NOTIFICATION-TYPE'", "'NOTIFICATIONS'", "'OBJECT-GROUP'", "'OBJECT-IDENTITY'", "'OBJECT-TYPE'", "'OBJECTS'", "'ORGANIZATION'", "'PIB-ACCESS'", "'PIB-DEFINITIONS'", "'PIB-INDEX'", "'PIB-MIN-ACCESS'", "'PIB-REFERENCES'", "'PIB-TAG'", "'PORT'", "'PRODUCT-RELEASE'", "'PROTECTED'", "'REFERENCE'", "'REFINE'", "'RELATIVE-OID'", "'REVISION'", "'SECURITY-CATEGORY'", "'SIGNATURE'", "'SIGNED'", "'STATUS'", "'SUBJECT-CATEGORIES'", "'SUPPORTS'", "'SYNTAX'", "'TEXTUAL-CONVENTION'", "'TOKEN'", "'TOKEN-DATA'", "'TRAP-TYPE'", "'UNBIND'", "'UNIQUENESS'", "'UNITS'", "'VARIABLES'", "'VARIATION'", "'WRITE-SYNTAX'"
	};
	public const int EOF=-1;
	public const int ABSENT_KW=4;
	public const int ABSTRACT_SYNTAX_KW=5;
	public const int ALL_KW=6;
	public const int ANY_KW=7;
	public const int APPLICATION_KW=8;
	public const int ARGUMENT_KW=9;
	public const int ASSIGN_OP=10;
	public const int AUTOMATIC_KW=11;
	public const int BAR=12;
	public const int BASED_NUM_KW=13;
	public const int BEGIN_KW=14;
	public const int BIT_KW=15;
	public const int BLK_COMMENT=16;
	public const int BMP_STR_KW=17;
	public const int BOOLEAN_KW=18;
	public const int BY_KW=19;
	public const int B_STRING=20;
	public const int CHARACTER_KW=21;
	public const int CHARB=22;
	public const int CHARH=23;
	public const int CHOICE_KW=24;
	public const int CLASS_KW=25;
	public const int COLON=26;
	public const int COMMA=27;
	public const int COMMENT=28;
	public const int COMPONENTS_KW=29;
	public const int COMPONENT_KW=30;
	public const int CONSTRAINED_KW=31;
	public const int C_STRING=32;
	public const int DEFAULT_KW=33;
	public const int DEFINED_KW=34;
	public const int DEFINITIONS_KW=35;
	public const int DOT=36;
	public const int DOTDOT=37;
	public const int DOTDOTDOT=38;
	public const int EMBEDDED_KW=39;
	public const int END_KW=40;
	public const int ENUMERATED_KW=41;
	public const int ERRORS_KW=42;
	public const int ERROR_KW=43;
	public const int EXCEPT_KW=44;
	public const int EXCLAMATION=45;
	public const int EXPLICIT_KW=46;
	public const int EXPORTS_KW=47;
	public const int EXTENSIBILITY_KW=48;
	public const int EXTERNAL_KW=49;
	public const int FALSE_KW=50;
	public const int FROM_KW=51;
	public const int GENERALIZED_TIME_KW=52;
	public const int GENERAL_STR_KW=53;
	public const int GRAPHIC_STR_KW=54;
	public const int HDIG=55;
	public const int H_STRING=56;
	public const int IA5_STRING_KW=57;
	public const int IDENTIFIER_KW=58;
	public const int IMPLICIT_KW=59;
	public const int IMPLIED_KW=60;
	public const int IMPORTS_KW=61;
	public const int INCLUDES_KW=62;
	public const int INSTANCE_KW=63;
	public const int INTEGER_KW=64;
	public const int INTERSECTION=65;
	public const int INTERSECTION_KW=66;
	public const int ISO646_STR_KW=67;
	public const int LESS=68;
	public const int LINKED_KW=69;
	public const int LOWER=70;
	public const int L_BRACE=71;
	public const int L_BRACKET=72;
	public const int L_PAREN=73;
	public const int MAX_KW=74;
	public const int MINUS=75;
	public const int MINUS_INFINITY_KW=76;
	public const int MIN_KW=77;
	public const int NULL_KW=78;
	public const int NUMBER=79;
	public const int NUMERIC_STR_KW=80;
	public const int OBJECT_DESCRIPTOR_KW=81;
	public const int OBJECT_KW=82;
	public const int OCTET_KW=83;
	public const int OF_KW=84;
	public const int OID_KW=85;
	public const int OPERATION_KW=86;
	public const int OPTIONAL_KW=87;
	public const int PARAMETER_KW=88;
	public const int PATTERN_KW=89;
	public const int PDV_KW=90;
	public const int PLUS=91;
	public const int PLUS_INFINITY_KW=92;
	public const int PRESENT_KW=93;
	public const int PRINTABLE_STR_KW=94;
	public const int PRIVATE_KW=95;
	public const int REAL_KW=96;
	public const int RELATIVE_KW=97;
	public const int RESULT_KW=98;
	public const int R_BRACE=99;
	public const int R_BRACKET=100;
	public const int R_PAREN=101;
	public const int SEMI=102;
	public const int SEQUENCE_KW=103;
	public const int SET_KW=104;
	public const int SINGLE_QUOTE=105;
	public const int SIZE_KW=106;
	public const int SL_COMMENT=107;
	public const int STRING_KW=108;
	public const int T61_STR_KW=109;
	public const int TAGS_KW=110;
	public const int TELETEX_STR_KW=111;
	public const int TRUE_KW=112;
	public const int TYPE_IDENTIFIER_KW=113;
	public const int UNION_KW=114;
	public const int UNIQUE_KW=115;
	public const int UNIVERSAL_KW=116;
	public const int UNIVERSAL_STR_KW=117;
	public const int UPPER=118;
	public const int UTC_TIME_KW=119;
	public const int UTF8_STR_KW=120;
	public const int VIDEOTEX_STR_KW=121;
	public const int VISIBLE_STR_KW=122;
	public const int WITH_KW=123;
	public const int WS=124;
	public const int T__125=125;
	public const int T__126=126;
	public const int T__127=127;
	public const int T__128=128;
	public const int T__129=129;
	public const int T__130=130;
	public const int T__131=131;
	public const int T__132=132;
	public const int T__133=133;
	public const int T__134=134;
	public const int T__135=135;
	public const int T__136=136;
	public const int T__137=137;
	public const int T__138=138;
	public const int T__139=139;
	public const int T__140=140;
	public const int T__141=141;
	public const int T__142=142;
	public const int T__143=143;
	public const int T__144=144;
	public const int T__145=145;
	public const int T__146=146;
	public const int T__147=147;
	public const int T__148=148;
	public const int T__149=149;
	public const int T__150=150;
	public const int T__151=151;
	public const int T__152=152;
	public const int T__153=153;
	public const int T__154=154;
	public const int T__155=155;
	public const int T__156=156;
	public const int T__157=157;
	public const int T__158=158;
	public const int T__159=159;
	public const int T__160=160;
	public const int T__161=161;
	public const int T__162=162;
	public const int T__163=163;
	public const int T__164=164;
	public const int T__165=165;
	public const int T__166=166;
	public const int T__167=167;
	public const int T__168=168;
	public const int T__169=169;
	public const int T__170=170;
	public const int T__171=171;
	public const int T__172=172;
	public const int T__173=173;
	public const int T__174=174;
	public const int T__175=175;
	public const int T__176=176;
	public const int T__177=177;
	public const int T__178=178;
	public const int T__179=179;
	public const int T__180=180;
	public const int T__181=181;
	public const int T__182=182;
	public const int T__183=183;
	public const int T__184=184;
	public const int T__185=185;
	public const int T__186=186;
	public const int T__187=187;
	public const int T__188=188;
	public const int T__189=189;
	public const int T__190=190;
	public const int T__191=191;
	public const int T__192=192;
	public const int T__193=193;
	public const int T__194=194;
	public const int T__195=195;
	public const int T__196=196;

	public SmiParser(ITokenStream input)
		: this(input, new RecognizerSharedState())
	{
	}
	public SmiParser(ITokenStream input, RecognizerSharedState state)
		: base(input, state)
	{
		ITreeAdaptor treeAdaptor = default(ITreeAdaptor);
		CreateTreeAdaptor(ref treeAdaptor);
		TreeAdaptor = treeAdaptor ?? new CommonTreeAdaptor();
		OnCreated();
	}
	// Implement this function in your helper file to use a custom tree adaptor
	partial void CreateTreeAdaptor(ref ITreeAdaptor adaptor);

	private ITreeAdaptor adaptor;

	public ITreeAdaptor TreeAdaptor
	{
		get
		{
			return adaptor;
		}

		set
		{
			this.adaptor = value;
		}
	}

	public override string[] TokenNames { get { return SmiParser.tokenNames; } }
	public override string GrammarFileName { get { return "Smi.g"; } }


	partial void OnCreated();
	partial void EnterRule(string ruleName, int ruleIndex);
	partial void LeaveRule(string ruleName, int ruleIndex);

	#region Rules
	private sealed partial class statement_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public MibDocument result = new MibDocument();
		public statement_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_statement();
	partial void LeaveRule_statement();
	// $ANTLR start "statement"
	// Smi.g:606:1: statement returns [MibDocument result = new MibDocument()] : (mod= module_definition )* EOF ;
	[GrammarRule("statement")]
	private SmiParser.statement_return statement()
	{
		EnterRule_statement();
		EnterRule("statement", 1);
		TraceIn("statement", 1);
		SmiParser.statement_return retval = new SmiParser.statement_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken EOF1 = default(IToken);
		SmiParser.module_definition_return mod = default(SmiParser.module_definition_return);

		CommonTree EOF1_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "statement");
		DebugLocation(606, 1);
		try
		{
			// Smi.g:607:5: ( (mod= module_definition )* EOF )
			DebugEnterAlt(1);
			// Smi.g:607:7: (mod= module_definition )* EOF
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(607, 7);
			// Smi.g:607:7: (mod= module_definition )*
			try { DebugEnterSubRule(1);
			while (true)
			{
				int alt1=2;
				try { DebugEnterDecision(1, false);
				int LA1_1 = input.LA(1);

				if ((LA1_1==UPPER))
				{
					alt1 = 1;
				}


				} finally { DebugExitDecision(1); }
				switch ( alt1 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:607:8: mod= module_definition
					{
					DebugLocation(607, 11);
					PushFollow(Follow._module_definition_in_statement1918);
					mod=module_definition();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, mod.Tree);
					DebugLocation(607, 30);
					if (state.backtracking == 0)
					{
						 retval.result.Add(mod.result); 
					}

					}
					break;

				default:
					goto loop1;
				}
			}

			loop1:
				;

			} finally { DebugExitSubRule(1); }

			DebugLocation(607, 61);
			EOF1=(IToken)Match(input,EOF,Follow._EOF_in_statement1924); if (state.failed) return retval;
			if (state.backtracking == 0) {
			EOF1_tree = (CommonTree)adaptor.Create(EOF1);
			adaptor.AddChild(root_0, EOF1_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("statement", 1);
			LeaveRule("statement", 1);
			LeaveRule_statement();
		}
		DebugLocation(608, 1);
		} finally { DebugExitRule(GrammarFileName, "statement"); }
		return retval;

	}
	// $ANTLR end "statement"

	private sealed partial class module_definition_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public MibModule result;
		public module_definition_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_module_definition();
	partial void LeaveRule_module_definition();
	// $ANTLR start "module_definition"
	// Smi.g:613:1: module_definition returns [MibModule result] : name= module_identifier ( 'PIB-DEFINITIONS' | DEFINITIONS_KW ) ( ( EXPLICIT_KW | IMPLICIT_KW | AUTOMATIC_KW ) TAGS_KW )? ( EXTENSIBILITY_KW IMPLIED_KW )? ASSIGN_OP BEGIN_KW mod= module_body END_KW ;
	[GrammarRule("module_definition")]
	private SmiParser.module_definition_return module_definition()
	{
		EnterRule_module_definition();
		EnterRule("module_definition", 2);
		TraceIn("module_definition", 2);
		SmiParser.module_definition_return retval = new SmiParser.module_definition_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken set2 = default(IToken);
		IToken set3 = default(IToken);
		IToken TAGS_KW4 = default(IToken);
		IToken EXTENSIBILITY_KW5 = default(IToken);
		IToken IMPLIED_KW6 = default(IToken);
		IToken ASSIGN_OP7 = default(IToken);
		IToken BEGIN_KW8 = default(IToken);
		IToken END_KW9 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> name = default(AstParserRuleReturnScope<CommonTree, IToken>);
		SmiParser.module_body_return mod = default(SmiParser.module_body_return);

		CommonTree set2_tree = default(CommonTree);
		CommonTree set3_tree = default(CommonTree);
		CommonTree TAGS_KW4_tree = default(CommonTree);
		CommonTree EXTENSIBILITY_KW5_tree = default(CommonTree);
		CommonTree IMPLIED_KW6_tree = default(CommonTree);
		CommonTree ASSIGN_OP7_tree = default(CommonTree);
		CommonTree BEGIN_KW8_tree = default(CommonTree);
		CommonTree END_KW9_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "module_definition");
		DebugLocation(613, 4);
		try
		{
			// Smi.g:614:5: (name= module_identifier ( 'PIB-DEFINITIONS' | DEFINITIONS_KW ) ( ( EXPLICIT_KW | IMPLICIT_KW | AUTOMATIC_KW ) TAGS_KW )? ( EXTENSIBILITY_KW IMPLIED_KW )? ASSIGN_OP BEGIN_KW mod= module_body END_KW )
			DebugEnterAlt(1);
			// Smi.g:614:7: name= module_identifier ( 'PIB-DEFINITIONS' | DEFINITIONS_KW ) ( ( EXPLICIT_KW | IMPLICIT_KW | AUTOMATIC_KW ) TAGS_KW )? ( EXTENSIBILITY_KW IMPLIED_KW )? ASSIGN_OP BEGIN_KW mod= module_body END_KW
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(614, 11);
			PushFollow(Follow._module_identifier_in_module_definition1949);
			name=module_identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, name.Tree);
			DebugLocation(614, 30);

			set2=(IToken)input.LT(1);
			if (input.LA(1)==DEFINITIONS_KW||input.LA(1)==168)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set2));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}

			DebugLocation(615, 3);
			// Smi.g:615:3: ( ( EXPLICIT_KW | IMPLICIT_KW | AUTOMATIC_KW ) TAGS_KW )?
			int alt2=2;
			try { DebugEnterSubRule(2);
			try { DebugEnterDecision(2, false);
			int LA2_1 = input.LA(1);

			if ((LA2_1==AUTOMATIC_KW||LA2_1==EXPLICIT_KW||LA2_1==IMPLICIT_KW))
			{
				alt2 = 1;
			}
			} finally { DebugExitDecision(2); }
			switch (alt2)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:615:5: ( EXPLICIT_KW | IMPLICIT_KW | AUTOMATIC_KW ) TAGS_KW
				{
				DebugLocation(615, 5);

				set3=(IToken)input.LT(1);
				if (input.LA(1)==AUTOMATIC_KW||input.LA(1)==EXPLICIT_KW||input.LA(1)==IMPLICIT_KW)
				{
					input.Consume();
					if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set3));
					state.errorRecovery=false;state.failed=false;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					DebugRecognitionException(mse);
					throw mse;
				}

				DebugLocation(615, 48);
				TAGS_KW4=(IToken)Match(input,TAGS_KW,Follow._TAGS_KW_in_module_definition1976); if (state.failed) return retval;
				if (state.backtracking == 0) {
				TAGS_KW4_tree = (CommonTree)adaptor.Create(TAGS_KW4);
				adaptor.AddChild(root_0, TAGS_KW4_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(2); }

			DebugLocation(616, 3);
			// Smi.g:616:3: ( EXTENSIBILITY_KW IMPLIED_KW )?
			int alt3=2;
			try { DebugEnterSubRule(3);
			try { DebugEnterDecision(3, false);
			int LA3_1 = input.LA(1);

			if ((LA3_1==EXTENSIBILITY_KW))
			{
				alt3 = 1;
			}
			} finally { DebugExitDecision(3); }
			switch (alt3)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:616:4: EXTENSIBILITY_KW IMPLIED_KW
				{
				DebugLocation(616, 4);
				EXTENSIBILITY_KW5=(IToken)Match(input,EXTENSIBILITY_KW,Follow._EXTENSIBILITY_KW_in_module_definition1985); if (state.failed) return retval;
				if (state.backtracking == 0) {
				EXTENSIBILITY_KW5_tree = (CommonTree)adaptor.Create(EXTENSIBILITY_KW5);
				adaptor.AddChild(root_0, EXTENSIBILITY_KW5_tree);
				}
				DebugLocation(616, 21);
				IMPLIED_KW6=(IToken)Match(input,IMPLIED_KW,Follow._IMPLIED_KW_in_module_definition1987); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IMPLIED_KW6_tree = (CommonTree)adaptor.Create(IMPLIED_KW6);
				adaptor.AddChild(root_0, IMPLIED_KW6_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(3); }

			DebugLocation(617, 3);
			ASSIGN_OP7=(IToken)Match(input,ASSIGN_OP,Follow._ASSIGN_OP_in_module_definition1993); if (state.failed) return retval;
			if (state.backtracking == 0) {
			ASSIGN_OP7_tree = (CommonTree)adaptor.Create(ASSIGN_OP7);
			adaptor.AddChild(root_0, ASSIGN_OP7_tree);
			}
			DebugLocation(617, 13);
			BEGIN_KW8=(IToken)Match(input,BEGIN_KW,Follow._BEGIN_KW_in_module_definition1995); if (state.failed) return retval;
			if (state.backtracking == 0) {
			BEGIN_KW8_tree = (CommonTree)adaptor.Create(BEGIN_KW8);
			adaptor.AddChild(root_0, BEGIN_KW8_tree);
			}
			DebugLocation(617, 25);
			PushFollow(Follow._module_body_in_module_definition1999);
			mod=module_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, mod.Tree);
			DebugLocation(617, 38);
			END_KW9=(IToken)Match(input,END_KW,Follow._END_KW_in_module_definition2001); if (state.failed) return retval;
			if (state.backtracking == 0) {
			END_KW9_tree = (CommonTree)adaptor.Create(END_KW9);
			adaptor.AddChild(root_0, END_KW9_tree);
			}
			DebugLocation(618, 3);
			if (state.backtracking == 0)
			{

						    retval.result = (mod!=null?mod.result:default(MibModule)); 
							retval.result.Name = (name!=null?input.ToString(name.Start,name.Stop):null);
						
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("module_definition", 2);
			LeaveRule("module_definition", 2);
			LeaveRule_module_definition();
		}
		DebugLocation(622, 4);
		} finally { DebugExitRule(GrammarFileName, "module_definition"); }
		return retval;

	}
	// $ANTLR end "module_definition"

	partial void EnterRule_module_identifier();
	partial void LeaveRule_module_identifier();
	// $ANTLR start "module_identifier"
	// Smi.g:624:1: module_identifier : UPPER ( obj_id_comp_lst )? ;
	[GrammarRule("module_identifier")]
	private AstParserRuleReturnScope<CommonTree, IToken> module_identifier()
	{
		EnterRule_module_identifier();
		EnterRule("module_identifier", 3);
		TraceIn("module_identifier", 3);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken UPPER10 = default(IToken);
		SmiParser.obj_id_comp_lst_return obj_id_comp_lst11 = default(SmiParser.obj_id_comp_lst_return);

		CommonTree UPPER10_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "module_identifier");
		DebugLocation(624, 44);
		try
		{
			// Smi.g:624:18: ( UPPER ( obj_id_comp_lst )? )
			DebugEnterAlt(1);
			// Smi.g:624:20: UPPER ( obj_id_comp_lst )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(624, 20);
			UPPER10=(IToken)Match(input,UPPER,Follow._UPPER_in_module_identifier2018); if (state.failed) return retval;
			if (state.backtracking == 0) {
			UPPER10_tree = (CommonTree)adaptor.Create(UPPER10);
			adaptor.AddChild(root_0, UPPER10_tree);
			}
			DebugLocation(624, 26);
			// Smi.g:624:26: ( obj_id_comp_lst )?
			int alt4=2;
			try { DebugEnterSubRule(4);
			try { DebugEnterDecision(4, false);
			int LA4_1 = input.LA(1);

			if ((LA4_1==L_BRACE))
			{
				alt4 = 1;
			}
			} finally { DebugExitDecision(4); }
			switch (alt4)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:624:27: obj_id_comp_lst
				{
				DebugLocation(624, 27);
				PushFollow(Follow._obj_id_comp_lst_in_module_identifier2021);
				obj_id_comp_lst11=obj_id_comp_lst();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, obj_id_comp_lst11.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(4); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("module_identifier", 3);
			LeaveRule("module_identifier", 3);
			LeaveRule_module_identifier();
		}
		DebugLocation(624, 44);
		} finally { DebugExitRule(GrammarFileName, "module_identifier"); }
		return retval;

	}
	// $ANTLR end "module_identifier"

	private sealed partial class module_body_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public MibModule result = new MibModule();
		public module_body_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_module_body();
	partial void LeaveRule_module_body();
	// $ANTLR start "module_body"
	// Smi.g:626:1: module_body returns [MibModule result = new MibModule()] : (ex= exports )? (im= imports )? (a= assignment )* ;
	[GrammarRule("module_body")]
	private SmiParser.module_body_return module_body()
	{
		EnterRule_module_body();
		EnterRule("module_body", 4);
		TraceIn("module_body", 4);
		SmiParser.module_body_return retval = new SmiParser.module_body_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		SmiParser.exports_return ex = default(SmiParser.exports_return);
		SmiParser.imports_return im = default(SmiParser.imports_return);
		SmiParser.assignment_return a = default(SmiParser.assignment_return);

		try { DebugEnterRule(GrammarFileName, "module_body");
		DebugLocation(626, 45);
		try
		{
			// Smi.g:627:5: ( (ex= exports )? (im= imports )? (a= assignment )* )
			DebugEnterAlt(1);
			// Smi.g:628:2: (ex= exports )? (im= imports )? (a= assignment )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(628, 2);
			// Smi.g:628:2: (ex= exports )?
			int alt5=2;
			try { DebugEnterSubRule(5);
			try { DebugEnterDecision(5, false);
			int LA5_1 = input.LA(1);

			if ((LA5_1==EXPORTS_KW))
			{
				alt5 = 1;
			}
			} finally { DebugExitDecision(5); }
			switch (alt5)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:628:3: ex= exports
				{
				DebugLocation(628, 5);
				PushFollow(Follow._exports_in_module_body2044);
				ex=exports();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, ex.Tree);
				DebugLocation(628, 14);
				if (state.backtracking == 0)
				{
					 retval.result.Exports = (ex!=null?ex.result:default(Exports)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(5); }

			DebugLocation(629, 2);
			// Smi.g:629:2: (im= imports )?
			int alt6=2;
			try { DebugEnterSubRule(6);
			try { DebugEnterDecision(6, false);
			int LA6_1 = input.LA(1);

			if ((LA6_1==IMPORTS_KW))
			{
				alt6 = 1;
			}
			} finally { DebugExitDecision(6); }
			switch (alt6)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:629:3: im= imports
				{
				DebugLocation(629, 5);
				PushFollow(Follow._imports_in_module_body2055);
				im=imports();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, im.Tree);
				DebugLocation(629, 14);
				if (state.backtracking == 0)
				{
					 retval.result.Imports = (im!=null?im.result:default(Imports)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(6); }

			DebugLocation(630, 2);
			// Smi.g:630:2: (a= assignment )*
			try { DebugEnterSubRule(7);
			while (true)
			{
				int alt7=2;
				try { DebugEnterDecision(7, false);
				int LA7_1 = input.LA(1);

				if ((LA7_1==ERROR_KW||LA7_1==LOWER||LA7_1==OBJECT_KW||LA7_1==OPERATION_KW||LA7_1==UPPER||(LA7_1>=125 && LA7_1<=128)||(LA7_1>=130 && LA7_1<=133)||LA7_1==135||LA7_1==142||(LA7_1>=145 && LA7_1<=147)||(LA7_1>=157 && LA7_1<=160)||(LA7_1>=162 && LA7_1<=164)||LA7_1==173||LA7_1==175||LA7_1==177||(LA7_1>=180 && LA7_1<=182)||(LA7_1>=187 && LA7_1<=191)))
				{
					alt7 = 1;
				}


				} finally { DebugExitDecision(7); }
				switch ( alt7 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:630:3: a= assignment
					{
					DebugLocation(630, 4);
					PushFollow(Follow._assignment_in_module_body2066);
					a=assignment();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, a.Tree);
					DebugLocation(630, 16);
					if (state.backtracking == 0)
					{
						 retval.result.Add((a!=null?a.result:default(IConstruct))); 
					}

					}
					break;

				default:
					goto loop7;
				}
			}

			loop7:
				;

			} finally { DebugExitSubRule(7); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("module_body", 4);
			LeaveRule("module_body", 4);
			LeaveRule_module_body();
		}
		DebugLocation(630, 45);
		} finally { DebugExitRule(GrammarFileName, "module_body"); }
		return retval;

	}
	// $ANTLR end "module_body"

	private sealed partial class obj_id_comp_lst_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public IdComponentList result = new IdComponentList();
		public obj_id_comp_lst_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_obj_id_comp_lst();
	partial void LeaveRule_obj_id_comp_lst();
	// $ANTLR start "obj_id_comp_lst"
	// Smi.g:633:1: obj_id_comp_lst returns [IdComponentList result = new IdComponentList()] : L_BRACE ( ( LOWER ( LOWER | NUMBER ) )=>dv= defined_value )? (oid= obj_id_component )+ R_BRACE ;
	[GrammarRule("obj_id_comp_lst")]
	private SmiParser.obj_id_comp_lst_return obj_id_comp_lst()
	{
		EnterRule_obj_id_comp_lst();
		EnterRule("obj_id_comp_lst", 5);
		TraceIn("obj_id_comp_lst", 5);
		SmiParser.obj_id_comp_lst_return retval = new SmiParser.obj_id_comp_lst_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE12 = default(IToken);
		IToken R_BRACE13 = default(IToken);
		SmiParser.defined_value_return dv = default(SmiParser.defined_value_return);
		SmiParser.obj_id_component_return oid = default(SmiParser.obj_id_component_return);

		CommonTree L_BRACE12_tree = default(CommonTree);
		CommonTree R_BRACE13_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "obj_id_comp_lst");
		DebugLocation(633, 1);
		try
		{
			// Smi.g:634:5: ( L_BRACE ( ( LOWER ( LOWER | NUMBER ) )=>dv= defined_value )? (oid= obj_id_component )+ R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:634:7: L_BRACE ( ( LOWER ( LOWER | NUMBER ) )=>dv= defined_value )? (oid= obj_id_component )+ R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(634, 7);
			L_BRACE12=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_obj_id_comp_lst2089); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE12_tree = (CommonTree)adaptor.Create(L_BRACE12);
			adaptor.AddChild(root_0, L_BRACE12_tree);
			}
			DebugLocation(634, 15);
			// Smi.g:634:15: ( ( LOWER ( LOWER | NUMBER ) )=>dv= defined_value )?
			int alt8=2;
			try { DebugEnterSubRule(8);
			try { DebugEnterDecision(8, false);
			int LA8_1 = input.LA(1);

			if ((LA8_1==UPPER) && (EvaluatePredicate(synpred1_Smi_fragment)))
			{
				alt8 = 1;
			}
			else if ((LA8_1==LOWER))
			{
				int LA8_2 = input.LA(2);

				if ((EvaluatePredicate(synpred1_Smi_fragment)))
				{
					alt8 = 1;
				}
			}
			} finally { DebugExitDecision(8); }
			switch (alt8)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:634:16: ( LOWER ( LOWER | NUMBER ) )=>dv= defined_value
				{
				DebugLocation(634, 44);
				PushFollow(Follow._defined_value_in_obj_id_comp_lst2106);
				dv=defined_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, dv.Tree);
				DebugLocation(634, 59);
				if (state.backtracking == 0)
				{
					 retval.result.DefinedValue = (dv!=null?dv.result:default(DefinedValue)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(8); }

			DebugLocation(635, 2);
			// Smi.g:635:2: (oid= obj_id_component )+
			int cnt9=0;
			try { DebugEnterSubRule(9);
			while (true)
			{
				int alt9=2;
				try { DebugEnterDecision(9, false);
				int LA9_1 = input.LA(1);

				if ((LA9_1==LOWER||LA9_1==NUMBER))
				{
					alt9 = 1;
				}


				} finally { DebugExitDecision(9); }
				switch (alt9)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:635:3: oid= obj_id_component
					{
					DebugLocation(635, 6);
					PushFollow(Follow._obj_id_component_in_obj_id_comp_lst2116);
					oid=obj_id_component();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, oid.Tree);
					DebugLocation(635, 24);
					if (state.backtracking == 0)
					{
						 retval.result.Add((oid!=null?oid.result:default(IdComponent))); 
					}

					}
					break;

				default:
					if (cnt9 >= 1)
						goto loop9;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee9 = new EarlyExitException( 9, input );
					DebugRecognitionException(eee9);
					throw eee9;
				}
				cnt9++;
			}
			loop9:
				;

			} finally { DebugExitSubRule(9); }

			DebugLocation(636, 2);
			R_BRACE13=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_obj_id_comp_lst2124); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE13_tree = (CommonTree)adaptor.Create(R_BRACE13);
			adaptor.AddChild(root_0, R_BRACE13_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("obj_id_comp_lst", 5);
			LeaveRule("obj_id_comp_lst", 5);
			LeaveRule_obj_id_comp_lst();
		}
		DebugLocation(637, 1);
		} finally { DebugExitRule(GrammarFileName, "obj_id_comp_lst"); }
		return retval;

	}
	// $ANTLR end "obj_id_comp_lst"

	protected sealed partial class defined_value_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public DefinedValue result = new DefinedValue();
		public defined_value_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_defined_value();
	partial void LeaveRule_defined_value();
	// $ANTLR start "defined_value"
	// Smi.g:640:11: protected defined_value returns [DefinedValue result = new DefinedValue()] : (mod= UPPER DOT )? v= LOWER ;
	[GrammarRule("defined_value")]
	protected SmiParser.defined_value_return defined_value()
	{
		EnterRule_defined_value();
		EnterRule("defined_value", 6);
		TraceIn("defined_value", 6);
		SmiParser.defined_value_return retval = new SmiParser.defined_value_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken mod = default(IToken);
		IToken v = default(IToken);
		IToken DOT14 = default(IToken);

		CommonTree mod_tree = default(CommonTree);
		CommonTree v_tree = default(CommonTree);
		CommonTree DOT14_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "defined_value");
		DebugLocation(640, 1);
		try
		{
			// Smi.g:641:5: ( (mod= UPPER DOT )? v= LOWER )
			DebugEnterAlt(1);
			// Smi.g:641:7: (mod= UPPER DOT )? v= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(641, 7);
			// Smi.g:641:7: (mod= UPPER DOT )?
			int alt10=2;
			try { DebugEnterSubRule(10);
			try { DebugEnterDecision(10, false);
			int LA10_1 = input.LA(1);

			if ((LA10_1==UPPER))
			{
				alt10 = 1;
			}
			} finally { DebugExitDecision(10); }
			switch (alt10)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:641:8: mod= UPPER DOT
				{
				DebugLocation(641, 11);
				mod=(IToken)Match(input,UPPER,Follow._UPPER_in_defined_value2148); if (state.failed) return retval;
				if (state.backtracking == 0) {
				mod_tree = (CommonTree)adaptor.Create(mod);
				adaptor.AddChild(root_0, mod_tree);
				}
				DebugLocation(641, 18);
				DOT14=(IToken)Match(input,DOT,Follow._DOT_in_defined_value2150); if (state.failed) return retval;
				if (state.backtracking == 0) {
				DOT14_tree = (CommonTree)adaptor.Create(DOT14);
				adaptor.AddChild(root_0, DOT14_tree);
				}
				DebugLocation(641, 22);
				if (state.backtracking == 0)
				{
					 retval.result.Module = (mod!=null?mod.Text:null); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(10); }

			DebugLocation(642, 3);
			v=(IToken)Match(input,LOWER,Follow._LOWER_in_defined_value2160); if (state.failed) return retval;
			if (state.backtracking == 0) {
			v_tree = (CommonTree)adaptor.Create(v);
			adaptor.AddChild(root_0, v_tree);
			}
			DebugLocation(642, 10);
			if (state.backtracking == 0)
			{
				 retval.result.Value = (v!=null?v.Text:null); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("defined_value", 6);
			LeaveRule("defined_value", 6);
			LeaveRule_defined_value();
		}
		DebugLocation(643, 1);
		} finally { DebugExitRule(GrammarFileName, "defined_value"); }
		return retval;

	}
	// $ANTLR end "defined_value"

	private sealed partial class obj_id_component_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public IdComponent result = new IdComponent();
		public obj_id_component_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_obj_id_component();
	partial void LeaveRule_obj_id_component();
	// $ANTLR start "obj_id_component"
	// Smi.g:646:1: obj_id_component returns [IdComponent result = new IdComponent()] : (num1= NUMBER |name= LOWER ) ( L_PAREN num2= NUMBER R_PAREN )? ;
	[GrammarRule("obj_id_component")]
	private SmiParser.obj_id_component_return obj_id_component()
	{
		EnterRule_obj_id_component();
		EnterRule("obj_id_component", 7);
		TraceIn("obj_id_component", 7);
		SmiParser.obj_id_component_return retval = new SmiParser.obj_id_component_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken num1 = default(IToken);
		IToken name = default(IToken);
		IToken num2 = default(IToken);
		IToken L_PAREN15 = default(IToken);
		IToken R_PAREN16 = default(IToken);

		CommonTree num1_tree = default(CommonTree);
		CommonTree name_tree = default(CommonTree);
		CommonTree num2_tree = default(CommonTree);
		CommonTree L_PAREN15_tree = default(CommonTree);
		CommonTree R_PAREN16_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "obj_id_component");
		DebugLocation(646, 1);
		try
		{
			// Smi.g:647:5: ( (num1= NUMBER |name= LOWER ) ( L_PAREN num2= NUMBER R_PAREN )? )
			DebugEnterAlt(1);
			// Smi.g:647:7: (num1= NUMBER |name= LOWER ) ( L_PAREN num2= NUMBER R_PAREN )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(647, 7);
			// Smi.g:647:7: (num1= NUMBER |name= LOWER )
			int alt11=2;
			try { DebugEnterSubRule(11);
			try { DebugEnterDecision(11, false);
			int LA11_1 = input.LA(1);

			if ((LA11_1==NUMBER))
			{
				alt11 = 1;
			}
			else if ((LA11_1==LOWER))
			{
				alt11 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 11, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(11); }
			switch (alt11)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:647:8: num1= NUMBER
				{
				DebugLocation(647, 12);
				num1=(IToken)Match(input,NUMBER,Follow._NUMBER_in_obj_id_component2185); if (state.failed) return retval;
				if (state.backtracking == 0) {
				num1_tree = (CommonTree)adaptor.Create(num1);
				adaptor.AddChild(root_0, num1_tree);
				}
				DebugLocation(647, 20);
				if (state.backtracking == 0)
				{
					 retval.result.Number = long.Parse((num1!=null?num1.Text:null)); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:648:7: name= LOWER
				{
				DebugLocation(648, 11);
				name=(IToken)Match(input,LOWER,Follow._LOWER_in_obj_id_component2197); if (state.failed) return retval;
				if (state.backtracking == 0) {
				name_tree = (CommonTree)adaptor.Create(name);
				adaptor.AddChild(root_0, name_tree);
				}
				DebugLocation(648, 18);
				if (state.backtracking == 0)
				{
					 retval.result.Name = (name!=null?name.Text:null); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(11); }

			DebugLocation(649, 2);
			// Smi.g:649:2: ( L_PAREN num2= NUMBER R_PAREN )?
			int alt12=2;
			try { DebugEnterSubRule(12);
			try { DebugEnterDecision(12, false);
			int LA12_1 = input.LA(1);

			if ((LA12_1==L_PAREN))
			{
				alt12 = 1;
			}
			} finally { DebugExitDecision(12); }
			switch (alt12)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:649:3: L_PAREN num2= NUMBER R_PAREN
				{
				DebugLocation(649, 3);
				L_PAREN15=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_obj_id_component2204); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_PAREN15_tree = (CommonTree)adaptor.Create(L_PAREN15);
				adaptor.AddChild(root_0, L_PAREN15_tree);
				}
				DebugLocation(649, 15);
				num2=(IToken)Match(input,NUMBER,Follow._NUMBER_in_obj_id_component2208); if (state.failed) return retval;
				if (state.backtracking == 0) {
				num2_tree = (CommonTree)adaptor.Create(num2);
				adaptor.AddChild(root_0, num2_tree);
				}
				DebugLocation(649, 23);
				R_PAREN16=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_obj_id_component2210); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_PAREN16_tree = (CommonTree)adaptor.Create(R_PAREN16);
				adaptor.AddChild(root_0, R_PAREN16_tree);
				}
				DebugLocation(649, 31);
				if (state.backtracking == 0)
				{
					 retval.result.Number = long.Parse((num2!=null?num2.Text:null)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(12); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("obj_id_component", 7);
			LeaveRule("obj_id_component", 7);
			LeaveRule_obj_id_component();
		}
		DebugLocation(650, 1);
		} finally { DebugExitRule(GrammarFileName, "obj_id_component"); }
		return retval;

	}
	// $ANTLR end "obj_id_component"

	private sealed partial class tag_default_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public TagDefault result;
		public tag_default_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_tag_default();
	partial void LeaveRule_tag_default();
	// $ANTLR start "tag_default"
	// Smi.g:656:1: tag_default returns [TagDefault result] : ( EXPLICIT_KW | IMPLICIT_KW | AUTOMATIC_KW );
	[GrammarRule("tag_default")]
	private SmiParser.tag_default_return tag_default()
	{
		EnterRule_tag_default();
		EnterRule("tag_default", 8);
		TraceIn("tag_default", 8);
		SmiParser.tag_default_return retval = new SmiParser.tag_default_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken EXPLICIT_KW17 = default(IToken);
		IToken IMPLICIT_KW18 = default(IToken);
		IToken AUTOMATIC_KW19 = default(IToken);

		CommonTree EXPLICIT_KW17_tree = default(CommonTree);
		CommonTree IMPLICIT_KW18_tree = default(CommonTree);
		CommonTree AUTOMATIC_KW19_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "tag_default");
		DebugLocation(656, 1);
		try
		{
			// Smi.g:657:5: ( EXPLICIT_KW | IMPLICIT_KW | AUTOMATIC_KW )
			int alt13=3;
			try { DebugEnterDecision(13, false);
			switch (input.LA(1))
			{
			case EXPLICIT_KW:
				{
				alt13 = 1;
				}
				break;
			case IMPLICIT_KW:
				{
				alt13 = 2;
				}
				break;
			case AUTOMATIC_KW:
				{
				alt13 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 13, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(13); }
			switch (alt13)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:657:7: EXPLICIT_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(657, 7);
				EXPLICIT_KW17=(IToken)Match(input,EXPLICIT_KW,Follow._EXPLICIT_KW_in_tag_default2236); if (state.failed) return retval;
				if (state.backtracking == 0) {
				EXPLICIT_KW17_tree = (CommonTree)adaptor.Create(EXPLICIT_KW17);
				adaptor.AddChild(root_0, EXPLICIT_KW17_tree);
				}
				DebugLocation(657, 19);
				if (state.backtracking == 0)
				{
					 retval.result = TagDefault.Explicit; 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:658:4: IMPLICIT_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(658, 4);
				IMPLICIT_KW18=(IToken)Match(input,IMPLICIT_KW,Follow._IMPLICIT_KW_in_tag_default2243); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IMPLICIT_KW18_tree = (CommonTree)adaptor.Create(IMPLICIT_KW18);
				adaptor.AddChild(root_0, IMPLICIT_KW18_tree);
				}
				DebugLocation(658, 16);
				if (state.backtracking == 0)
				{
					 retval.result = TagDefault.Implicit; 
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:659:4: AUTOMATIC_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(659, 4);
				AUTOMATIC_KW19=(IToken)Match(input,AUTOMATIC_KW,Follow._AUTOMATIC_KW_in_tag_default2250); if (state.failed) return retval;
				if (state.backtracking == 0) {
				AUTOMATIC_KW19_tree = (CommonTree)adaptor.Create(AUTOMATIC_KW19);
				adaptor.AddChild(root_0, AUTOMATIC_KW19_tree);
				}
				DebugLocation(659, 17);
				if (state.backtracking == 0)
				{
					 retval.result = TagDefault.Automatic; 
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("tag_default", 8);
			LeaveRule("tag_default", 8);
			LeaveRule_tag_default();
		}
		DebugLocation(660, 1);
		} finally { DebugExitRule(GrammarFileName, "tag_default"); }
		return retval;

	}
	// $ANTLR end "tag_default"

	private sealed partial class exports_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public Exports result = new Exports();
		public exports_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_exports();
	partial void LeaveRule_exports();
	// $ANTLR start "exports"
	// Smi.g:662:1: exports returns [Exports result = new Exports()] : EXPORTS_KW ( (sym= symbol_list )? | ALL_KW ) SEMI ;
	[GrammarRule("exports")]
	private SmiParser.exports_return exports()
	{
		EnterRule_exports();
		EnterRule("exports", 9);
		TraceIn("exports", 9);
		SmiParser.exports_return retval = new SmiParser.exports_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken EXPORTS_KW20 = default(IToken);
		IToken ALL_KW21 = default(IToken);
		IToken SEMI22 = default(IToken);
		SmiParser.symbol_list_return sym = default(SmiParser.symbol_list_return);

		CommonTree EXPORTS_KW20_tree = default(CommonTree);
		CommonTree ALL_KW21_tree = default(CommonTree);
		CommonTree SEMI22_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "exports");
		DebugLocation(662, 10);
		try
		{
			// Smi.g:663:5: ( EXPORTS_KW ( (sym= symbol_list )? | ALL_KW ) SEMI )
			DebugEnterAlt(1);
			// Smi.g:663:7: EXPORTS_KW ( (sym= symbol_list )? | ALL_KW ) SEMI
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(663, 7);
			EXPORTS_KW20=(IToken)Match(input,EXPORTS_KW,Follow._EXPORTS_KW_in_exports2270); if (state.failed) return retval;
			if (state.backtracking == 0) {
			EXPORTS_KW20_tree = (CommonTree)adaptor.Create(EXPORTS_KW20);
			adaptor.AddChild(root_0, EXPORTS_KW20_tree);
			}
			DebugLocation(663, 18);
			// Smi.g:663:18: ( (sym= symbol_list )? | ALL_KW )
			int alt15=2;
			try { DebugEnterSubRule(15);
			try { DebugEnterDecision(15, false);
			int LA15_1 = input.LA(1);

			if ((LA15_1==ERROR_KW||LA15_1==LOWER||LA15_1==OBJECT_KW||LA15_1==OPERATION_KW||LA15_1==SEMI||LA15_1==UPPER||(LA15_1>=125 && LA15_1<=128)||(LA15_1>=130 && LA15_1<=133)||LA15_1==135||LA15_1==142||(LA15_1>=145 && LA15_1<=147)||(LA15_1>=157 && LA15_1<=160)||(LA15_1>=162 && LA15_1<=164)||LA15_1==173||LA15_1==175||LA15_1==177||(LA15_1>=180 && LA15_1<=182)||(LA15_1>=187 && LA15_1<=191)))
			{
				alt15 = 1;
			}
			else if ((LA15_1==ALL_KW))
			{
				alt15 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 15, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(15); }
			switch (alt15)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:664:6: (sym= symbol_list )?
				{
				DebugLocation(664, 6);
				// Smi.g:664:6: (sym= symbol_list )?
				int alt14=2;
				try { DebugEnterSubRule(14);
				try { DebugEnterDecision(14, false);
				int LA14_1 = input.LA(1);

				if ((LA14_1==ERROR_KW||LA14_1==LOWER||LA14_1==OBJECT_KW||LA14_1==OPERATION_KW||LA14_1==UPPER||(LA14_1>=125 && LA14_1<=128)||(LA14_1>=130 && LA14_1<=133)||LA14_1==135||LA14_1==142||(LA14_1>=145 && LA14_1<=147)||(LA14_1>=157 && LA14_1<=160)||(LA14_1>=162 && LA14_1<=164)||LA14_1==173||LA14_1==175||LA14_1==177||(LA14_1>=180 && LA14_1<=182)||(LA14_1>=187 && LA14_1<=191)))
				{
					alt14 = 1;
				}
				} finally { DebugExitDecision(14); }
				switch (alt14)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:664:7: sym= symbol_list
					{
					DebugLocation(664, 10);
					PushFollow(Follow._symbol_list_in_exports2282);
					sym=symbol_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, sym.Tree);
					DebugLocation(664, 23);
					if (state.backtracking == 0)
					{
						 retval.result.Add((sym!=null?input.ToString(sym.Start,sym.Stop):null)); 
					}

					}
					break;

				}
				} finally { DebugExitSubRule(14); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:665:5: ALL_KW
				{
				DebugLocation(665, 5);
				ALL_KW21=(IToken)Match(input,ALL_KW,Follow._ALL_KW_in_exports2293); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ALL_KW21_tree = (CommonTree)adaptor.Create(ALL_KW21);
				adaptor.AddChild(root_0, ALL_KW21_tree);
				}
				DebugLocation(665, 12);
				if (state.backtracking == 0)
				{
					 retval.result.AllExported = true; 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(15); }

			DebugLocation(666, 7);
			SEMI22=(IToken)Match(input,SEMI,Follow._SEMI_in_exports2304); if (state.failed) return retval;
			if (state.backtracking == 0) {
			SEMI22_tree = (CommonTree)adaptor.Create(SEMI22);
			adaptor.AddChild(root_0, SEMI22_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("exports", 9);
			LeaveRule("exports", 9);
			LeaveRule_exports();
		}
		DebugLocation(666, 10);
		} finally { DebugExitRule(GrammarFileName, "exports"); }
		return retval;

	}
	// $ANTLR end "exports"

	private sealed partial class imports_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public Imports result = new Imports();
		public imports_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_imports();
	partial void LeaveRule_imports();
	// $ANTLR start "imports"
	// Smi.g:668:1: imports returns [Imports result = new Imports()] : IMPORTS_KW (sym= symbols_from_module )* SEMI ;
	[GrammarRule("imports")]
	private SmiParser.imports_return imports()
	{
		EnterRule_imports();
		EnterRule("imports", 10);
		TraceIn("imports", 10);
		SmiParser.imports_return retval = new SmiParser.imports_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken IMPORTS_KW23 = default(IToken);
		IToken SEMI24 = default(IToken);
		SmiParser.symbols_from_module_return sym = default(SmiParser.symbols_from_module_return);

		CommonTree IMPORTS_KW23_tree = default(CommonTree);
		CommonTree SEMI24_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "imports");
		DebugLocation(668, 79);
		try
		{
			// Smi.g:669:5: ( IMPORTS_KW (sym= symbols_from_module )* SEMI )
			DebugEnterAlt(1);
			// Smi.g:669:7: IMPORTS_KW (sym= symbols_from_module )* SEMI
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(669, 7);
			IMPORTS_KW23=(IToken)Match(input,IMPORTS_KW,Follow._IMPORTS_KW_in_imports2320); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IMPORTS_KW23_tree = (CommonTree)adaptor.Create(IMPORTS_KW23);
			adaptor.AddChild(root_0, IMPORTS_KW23_tree);
			}
			DebugLocation(669, 18);
			// Smi.g:669:18: (sym= symbols_from_module )*
			try { DebugEnterSubRule(16);
			while (true)
			{
				int alt16=2;
				try { DebugEnterDecision(16, false);
				int LA16_1 = input.LA(1);

				if ((LA16_1==ERROR_KW||LA16_1==LOWER||LA16_1==OBJECT_KW||LA16_1==OPERATION_KW||LA16_1==UPPER||(LA16_1>=125 && LA16_1<=128)||(LA16_1>=130 && LA16_1<=133)||LA16_1==135||LA16_1==142||(LA16_1>=145 && LA16_1<=147)||(LA16_1>=157 && LA16_1<=160)||(LA16_1>=162 && LA16_1<=164)||LA16_1==173||LA16_1==175||LA16_1==177||(LA16_1>=180 && LA16_1<=182)||(LA16_1>=187 && LA16_1<=191)))
				{
					alt16 = 1;
				}


				} finally { DebugExitDecision(16); }
				switch ( alt16 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:669:19: sym= symbols_from_module
					{
					DebugLocation(669, 22);
					PushFollow(Follow._symbols_from_module_in_imports2325);
					sym=symbols_from_module();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, sym.Tree);
					DebugLocation(669, 43);
					if (state.backtracking == 0)
					{
						 retval.result.Add((sym!=null?sym.result:default(Import))); 
					}

					}
					break;

				default:
					goto loop16;
				}
			}

			loop16:
				;

			} finally { DebugExitSubRule(16); }

			DebugLocation(669, 75);
			SEMI24=(IToken)Match(input,SEMI,Follow._SEMI_in_imports2331); if (state.failed) return retval;
			if (state.backtracking == 0) {
			SEMI24_tree = (CommonTree)adaptor.Create(SEMI24);
			adaptor.AddChild(root_0, SEMI24_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("imports", 10);
			LeaveRule("imports", 10);
			LeaveRule_imports();
		}
		DebugLocation(669, 79);
		} finally { DebugExitRule(GrammarFileName, "imports"); }
		return retval;

	}
	// $ANTLR end "imports"

	private sealed partial class assignment_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public IConstruct result;
		public assignment_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_assignment();
	partial void LeaveRule_assignment();
	// $ANTLR start "assignment"
	// Smi.g:672:1: assignment returns [IConstruct result] : (u= UPPER ASSIGN_OP t= type |l= LOWER t2= type ASSIGN_OP v= value |name= ( UPPER | macroName ) 'MACRO' ASSIGN_OP BEGIN_KW (~ ( END_KW ) )* END_KW );
	[GrammarRule("assignment")]
	private SmiParser.assignment_return assignment()
	{
		EnterRule_assignment();
		EnterRule("assignment", 11);
		TraceIn("assignment", 11);
		SmiParser.assignment_return retval = new SmiParser.assignment_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken u = default(IToken);
		IToken l = default(IToken);
		IToken name = default(IToken);
		IToken ASSIGN_OP25 = default(IToken);
		IToken ASSIGN_OP26 = default(IToken);
		IToken UPPER27 = default(IToken);
		IToken string_literal29 = default(IToken);
		IToken ASSIGN_OP30 = default(IToken);
		IToken BEGIN_KW31 = default(IToken);
		IToken set32 = default(IToken);
		IToken END_KW33 = default(IToken);
		SmiParser.type_return t = default(SmiParser.type_return);
		SmiParser.type_return t2 = default(SmiParser.type_return);
		SmiParser.value_return v = default(SmiParser.value_return);
		AstParserRuleReturnScope<CommonTree, IToken> macroName28 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree u_tree = default(CommonTree);
		CommonTree l_tree = default(CommonTree);
		CommonTree name_tree = default(CommonTree);
		CommonTree ASSIGN_OP25_tree = default(CommonTree);
		CommonTree ASSIGN_OP26_tree = default(CommonTree);
		CommonTree UPPER27_tree = default(CommonTree);
		CommonTree string_literal29_tree = default(CommonTree);
		CommonTree ASSIGN_OP30_tree = default(CommonTree);
		CommonTree BEGIN_KW31_tree = default(CommonTree);
		CommonTree set32_tree = default(CommonTree);
		CommonTree END_KW33_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "assignment");
		DebugLocation(672, 1);
		try
		{
			// Smi.g:673:5: (u= UPPER ASSIGN_OP t= type |l= LOWER t2= type ASSIGN_OP v= value |name= ( UPPER | macroName ) 'MACRO' ASSIGN_OP BEGIN_KW (~ ( END_KW ) )* END_KW )
			int alt19=3;
			try { DebugEnterDecision(19, false);
			switch (input.LA(1))
			{
			case UPPER:
				{
				int LA19_2 = input.LA(2);

				if ((LA19_2==ASSIGN_OP))
				{
					alt19 = 1;
				}
				else if ((LA19_2==152))
				{
					alt19 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 19, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case LOWER:
				{
				alt19 = 2;
				}
				break;
			case ERROR_KW:
			case OBJECT_KW:
			case OPERATION_KW:
			case 125:
			case 126:
			case 127:
			case 128:
			case 130:
			case 131:
			case 132:
			case 133:
			case 135:
			case 142:
			case 145:
			case 146:
			case 147:
			case 157:
			case 158:
			case 159:
			case 160:
			case 162:
			case 163:
			case 164:
			case 173:
			case 175:
			case 177:
			case 180:
			case 181:
			case 182:
			case 187:
			case 188:
			case 189:
			case 190:
			case 191:
				{
				alt19 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 19, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(19); }
			switch (alt19)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:674:2: u= UPPER ASSIGN_OP t= type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(674, 3);
				u=(IToken)Match(input,UPPER,Follow._UPPER_in_assignment2354); if (state.failed) return retval;
				if (state.backtracking == 0) {
				u_tree = (CommonTree)adaptor.Create(u);
				adaptor.AddChild(root_0, u_tree);
				}
				DebugLocation(674, 10);
				ASSIGN_OP25=(IToken)Match(input,ASSIGN_OP,Follow._ASSIGN_OP_in_assignment2356); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ASSIGN_OP25_tree = (CommonTree)adaptor.Create(ASSIGN_OP25);
				adaptor.AddChild(root_0, ASSIGN_OP25_tree);
				}
				DebugLocation(674, 21);
				PushFollow(Follow._type_in_assignment2360);
				t=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, t.Tree);
				DebugLocation(675, 2);
				if (state.backtracking == 0)
				{
					 
						    retval.result = (t!=null?t.result:default(ISmiType)); 
							retval.result.Name = (u!=null?u.Text:null);
					    
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:679:7: l= LOWER t2= type ASSIGN_OP v= value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(679, 8);
				l=(IToken)Match(input,LOWER,Follow._LOWER_in_assignment2374); if (state.failed) return retval;
				if (state.backtracking == 0) {
				l_tree = (CommonTree)adaptor.Create(l);
				adaptor.AddChild(root_0, l_tree);
				}
				DebugLocation(679, 17);
				PushFollow(Follow._type_in_assignment2378);
				t2=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, t2.Tree);
				DebugLocation(679, 23);
				ASSIGN_OP26=(IToken)Match(input,ASSIGN_OP,Follow._ASSIGN_OP_in_assignment2380); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ASSIGN_OP26_tree = (CommonTree)adaptor.Create(ASSIGN_OP26);
				adaptor.AddChild(root_0, ASSIGN_OP26_tree);
				}
				DebugLocation(679, 34);
				PushFollow(Follow._value_in_assignment2384);
				v=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v.Tree);
				DebugLocation(680, 2);
				if (state.backtracking == 0)
				{
					 
						    retval.result = new ValueAssignment((t2!=null?t2.result:default(ISmiType)), (v!=null?v.result:default(ISmiValue)));
							retval.result.Name = (l!=null?l.Text:null);
					    
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:684:7: name= ( UPPER | macroName ) 'MACRO' ASSIGN_OP BEGIN_KW (~ ( END_KW ) )* END_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(684, 11);
				// Smi.g:684:12: ( UPPER | macroName )
				int alt17=2;
				try { DebugEnterSubRule(17);
				try { DebugEnterDecision(17, false);
				int LA17_1 = input.LA(1);

				if ((LA17_1==UPPER))
				{
					alt17 = 1;
				}
				else if ((LA17_1==ERROR_KW||LA17_1==OBJECT_KW||LA17_1==OPERATION_KW||(LA17_1>=125 && LA17_1<=128)||(LA17_1>=130 && LA17_1<=133)||LA17_1==135||LA17_1==142||(LA17_1>=145 && LA17_1<=147)||(LA17_1>=157 && LA17_1<=160)||(LA17_1>=162 && LA17_1<=164)||LA17_1==173||LA17_1==175||LA17_1==177||(LA17_1>=180 && LA17_1<=182)||(LA17_1>=187 && LA17_1<=191)))
				{
					alt17 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 17, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(17); }
				switch (alt17)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:684:13: UPPER
					{
					DebugLocation(684, 13);
					UPPER27=(IToken)Match(input,UPPER,Follow._UPPER_in_assignment2399); if (state.failed) return retval;
					if (state.backtracking == 0) {
					UPPER27_tree = (CommonTree)adaptor.Create(UPPER27);
					adaptor.AddChild(root_0, UPPER27_tree);
					}

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// Smi.g:684:21: macroName
					{
					DebugLocation(684, 21);
					PushFollow(Follow._macroName_in_assignment2403);
					macroName28=macroName();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, macroName28.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(17); }

				DebugLocation(684, 32);
				string_literal29=(IToken)Match(input,152,Follow._152_in_assignment2406); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal29_tree = (CommonTree)adaptor.Create(string_literal29);
				adaptor.AddChild(root_0, string_literal29_tree);
				}
				DebugLocation(684, 40);
				ASSIGN_OP30=(IToken)Match(input,ASSIGN_OP,Follow._ASSIGN_OP_in_assignment2408); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ASSIGN_OP30_tree = (CommonTree)adaptor.Create(ASSIGN_OP30);
				adaptor.AddChild(root_0, ASSIGN_OP30_tree);
				}
				DebugLocation(684, 50);
				BEGIN_KW31=(IToken)Match(input,BEGIN_KW,Follow._BEGIN_KW_in_assignment2410); if (state.failed) return retval;
				if (state.backtracking == 0) {
				BEGIN_KW31_tree = (CommonTree)adaptor.Create(BEGIN_KW31);
				adaptor.AddChild(root_0, BEGIN_KW31_tree);
				}
				DebugLocation(684, 59);
				// Smi.g:684:59: (~ ( END_KW ) )*
				try { DebugEnterSubRule(18);
				while (true)
				{
					int alt18=2;
					try { DebugEnterDecision(18, false);
					int LA18_1 = input.LA(1);

					if (((LA18_1>=ABSENT_KW && LA18_1<=EMBEDDED_KW)||(LA18_1>=ENUMERATED_KW && LA18_1<=196)))
					{
						alt18 = 1;
					}


					} finally { DebugExitDecision(18); }
					switch ( alt18 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:
						{
						DebugLocation(684, 59);

						set32=(IToken)input.LT(1);
						if ((input.LA(1)>=ABSENT_KW && input.LA(1)<=EMBEDDED_KW)||(input.LA(1)>=ENUMERATED_KW && input.LA(1)<=196))
						{
							input.Consume();
							if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set32));
							state.errorRecovery=false;state.failed=false;
						}
						else
						{
							if (state.backtracking>0) {state.failed=true; return retval;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							DebugRecognitionException(mse);
							throw mse;
						}


						}
						break;

					default:
						goto loop18;
					}
				}

				loop18:
					;

				} finally { DebugExitSubRule(18); }

				DebugLocation(684, 72);
				END_KW33=(IToken)Match(input,END_KW,Follow._END_KW_in_assignment2420); if (state.failed) return retval;
				if (state.backtracking == 0) {
				END_KW33_tree = (CommonTree)adaptor.Create(END_KW33);
				adaptor.AddChild(root_0, END_KW33_tree);
				}
				DebugLocation(684, 79);
				if (state.backtracking == 0)
				{
					 retval.result = new Macro((name!=null?name.Text:null)); 
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("assignment", 11);
			LeaveRule("assignment", 11);
			LeaveRule_assignment();
		}
		DebugLocation(685, 1);
		} finally { DebugExitRule(GrammarFileName, "assignment"); }
		return retval;

	}
	// $ANTLR end "assignment"

	private sealed partial class symbol_list_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public IList<string> result = new List<string>();
		public symbol_list_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_symbol_list();
	partial void LeaveRule_symbol_list();
	// $ANTLR start "symbol_list"
	// Smi.g:693:1: symbol_list returns [IList<string> result = new List<string>()] : sym= symbol ( COMMA sym2= symbol )* ;
	[GrammarRule("symbol_list")]
	private SmiParser.symbol_list_return symbol_list()
	{
		EnterRule_symbol_list();
		EnterRule("symbol_list", 12);
		TraceIn("symbol_list", 12);
		SmiParser.symbol_list_return retval = new SmiParser.symbol_list_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMMA34 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> sym = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> sym2 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree COMMA34_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "symbol_list");
		DebugLocation(693, 52);
		try
		{
			// Smi.g:694:5: (sym= symbol ( COMMA sym2= symbol )* )
			DebugEnterAlt(1);
			// Smi.g:694:7: sym= symbol ( COMMA sym2= symbol )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(694, 10);
			PushFollow(Follow._symbol_in_symbol_list2448);
			sym=symbol();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, sym.Tree);
			DebugLocation(694, 18);
			if (state.backtracking == 0)
			{
				 retval.result.Add((sym!=null?input.ToString(sym.Start,sym.Stop):null)); 
			}
			DebugLocation(695, 3);
			// Smi.g:695:3: ( COMMA sym2= symbol )*
			try { DebugEnterSubRule(20);
			while (true)
			{
				int alt20=2;
				try { DebugEnterDecision(20, false);
				int LA20_1 = input.LA(1);

				if ((LA20_1==COMMA))
				{
					alt20 = 1;
				}


				} finally { DebugExitDecision(20); }
				switch ( alt20 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:695:4: COMMA sym2= symbol
					{
					DebugLocation(695, 4);
					COMMA34=(IToken)Match(input,COMMA,Follow._COMMA_in_symbol_list2455); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA34_tree = (CommonTree)adaptor.Create(COMMA34);
					adaptor.AddChild(root_0, COMMA34_tree);
					}
					DebugLocation(695, 14);
					PushFollow(Follow._symbol_in_symbol_list2459);
					sym2=symbol();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, sym2.Tree);
					DebugLocation(695, 22);
					if (state.backtracking == 0)
					{
						 retval.result.Add((sym2!=null?input.ToString(sym2.Start,sym2.Stop):null)); 
					}

					}
					break;

				default:
					goto loop20;
				}
			}

			loop20:
				;

			} finally { DebugExitSubRule(20); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("symbol_list", 12);
			LeaveRule("symbol_list", 12);
			LeaveRule_symbol_list();
		}
		DebugLocation(695, 52);
		} finally { DebugExitRule(GrammarFileName, "symbol_list"); }
		return retval;

	}
	// $ANTLR end "symbol_list"

	private sealed partial class symbols_from_module_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public Import result = new Import();
		public symbols_from_module_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_symbols_from_module();
	partial void LeaveRule_symbols_from_module();
	// $ANTLR start "symbols_from_module"
	// Smi.g:697:1: symbols_from_module returns [Import result = new Import()] : syms= symbol_list FROM_KW mod= UPPER ( obj_id_comp_lst | ( defined_value )=> defined_value )? ;
	[GrammarRule("symbols_from_module")]
	private SmiParser.symbols_from_module_return symbols_from_module()
	{
		EnterRule_symbols_from_module();
		EnterRule("symbols_from_module", 13);
		TraceIn("symbols_from_module", 13);
		SmiParser.symbols_from_module_return retval = new SmiParser.symbols_from_module_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken mod = default(IToken);
		IToken FROM_KW35 = default(IToken);
		SmiParser.symbol_list_return syms = default(SmiParser.symbol_list_return);
		SmiParser.obj_id_comp_lst_return obj_id_comp_lst36 = default(SmiParser.obj_id_comp_lst_return);
		SmiParser.defined_value_return defined_value37 = default(SmiParser.defined_value_return);

		CommonTree mod_tree = default(CommonTree);
		CommonTree FROM_KW35_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "symbols_from_module");
		DebugLocation(697, 27);
		try
		{
			// Smi.g:698:5: (syms= symbol_list FROM_KW mod= UPPER ( obj_id_comp_lst | ( defined_value )=> defined_value )? )
			DebugEnterAlt(1);
			// Smi.g:698:7: syms= symbol_list FROM_KW mod= UPPER ( obj_id_comp_lst | ( defined_value )=> defined_value )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(698, 11);
			PushFollow(Follow._symbol_list_in_symbols_from_module2482);
			syms=symbol_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, syms.Tree);
			DebugLocation(698, 24);
			if (state.backtracking == 0)
			{
				 retval.result.Symbols = (syms!=null?syms.result:default(IList<string>)); 
			}
			DebugLocation(699, 2);
			FROM_KW35=(IToken)Match(input,FROM_KW,Follow._FROM_KW_in_symbols_from_module2487); if (state.failed) return retval;
			if (state.backtracking == 0) {
			FROM_KW35_tree = (CommonTree)adaptor.Create(FROM_KW35);
			adaptor.AddChild(root_0, FROM_KW35_tree);
			}
			DebugLocation(699, 13);
			mod=(IToken)Match(input,UPPER,Follow._UPPER_in_symbols_from_module2491); if (state.failed) return retval;
			if (state.backtracking == 0) {
			mod_tree = (CommonTree)adaptor.Create(mod);
			adaptor.AddChild(root_0, mod_tree);
			}
			DebugLocation(699, 20);
			if (state.backtracking == 0)
			{
				 retval.result.Module = (mod!=null?mod.Text:null);
			}
			DebugLocation(700, 25);
			// Smi.g:700:25: ( obj_id_comp_lst | ( defined_value )=> defined_value )?
			int alt21=3;
			try { DebugEnterSubRule(21);
			try { DebugEnterDecision(21, false);
			switch (input.LA(1))
			{
			case L_BRACE:
				{
				alt21 = 1;
				}
				break;
			case UPPER:
				{
				int LA21_2 = input.LA(2);

				if ((LA21_2==DOT) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				}
				break;
			case LOWER:
				{
				int LA21_2 = input.LA(2);

				if ((LA21_2==SEMI) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==UPPER) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==LOWER) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==OPERATION_KW) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==ERROR_KW) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==135) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==191) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==133) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==132) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==145) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==147) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==146) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==188) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==189) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==180) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==OBJECT_KW) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==173) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==177) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==125) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==128) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==127) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==126) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==131) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==142) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==182) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==181) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==175) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				else if ((LA21_2==130||(LA21_2>=157 && LA21_2<=160)||(LA21_2>=162 && LA21_2<=164)||LA21_2==187||LA21_2==190) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt21 = 2;
				}
				}
				break;
			}

			} finally { DebugExitDecision(21); }
			switch (alt21)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:700:27: obj_id_comp_lst
				{
				DebugLocation(700, 27);
				PushFollow(Follow._obj_id_comp_lst_in_symbols_from_module2521);
				obj_id_comp_lst36=obj_id_comp_lst();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, obj_id_comp_lst36.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:701:29: ( defined_value )=> defined_value
				{
				DebugLocation(701, 48);
				PushFollow(Follow._defined_value_in_symbols_from_module2558);
				defined_value37=defined_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, defined_value37.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(21); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("symbols_from_module", 13);
			LeaveRule("symbols_from_module", 13);
			LeaveRule_symbols_from_module();
		}
		DebugLocation(702, 27);
		} finally { DebugExitRule(GrammarFileName, "symbols_from_module"); }
		return retval;

	}
	// $ANTLR end "symbols_from_module"

	partial void EnterRule_symbol();
	partial void LeaveRule_symbol();
	// $ANTLR start "symbol"
	// Smi.g:704:1: symbol : ( UPPER | LOWER | macroName );
	[GrammarRule("symbol")]
	private AstParserRuleReturnScope<CommonTree, IToken> symbol()
	{
		EnterRule_symbol();
		EnterRule("symbol", 14);
		TraceIn("symbol", 14);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken UPPER38 = default(IToken);
		IToken LOWER39 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> macroName40 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree UPPER38_tree = default(CommonTree);
		CommonTree LOWER39_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "symbol");
		DebugLocation(704, 33);
		try
		{
			// Smi.g:704:7: ( UPPER | LOWER | macroName )
			int alt22=3;
			try { DebugEnterDecision(22, false);
			switch (input.LA(1))
			{
			case UPPER:
				{
				alt22 = 1;
				}
				break;
			case LOWER:
				{
				alt22 = 2;
				}
				break;
			case ERROR_KW:
			case OBJECT_KW:
			case OPERATION_KW:
			case 125:
			case 126:
			case 127:
			case 128:
			case 130:
			case 131:
			case 132:
			case 133:
			case 135:
			case 142:
			case 145:
			case 146:
			case 147:
			case 157:
			case 158:
			case 159:
			case 160:
			case 162:
			case 163:
			case 164:
			case 173:
			case 175:
			case 177:
			case 180:
			case 181:
			case 182:
			case 187:
			case 188:
			case 189:
			case 190:
			case 191:
				{
				alt22 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 22, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(22); }
			switch (alt22)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:704:9: UPPER
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(704, 9);
				UPPER38=(IToken)Match(input,UPPER,Follow._UPPER_in_symbol2594); if (state.failed) return retval;
				if (state.backtracking == 0) {
				UPPER38_tree = (CommonTree)adaptor.Create(UPPER38);
				adaptor.AddChild(root_0, UPPER38_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:704:17: LOWER
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(704, 17);
				LOWER39=(IToken)Match(input,LOWER,Follow._LOWER_in_symbol2598); if (state.failed) return retval;
				if (state.backtracking == 0) {
				LOWER39_tree = (CommonTree)adaptor.Create(LOWER39);
				adaptor.AddChild(root_0, LOWER39_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:704:25: macroName
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(704, 25);
				PushFollow(Follow._macroName_in_symbol2602);
				macroName40=macroName();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, macroName40.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("symbol", 14);
			LeaveRule("symbol", 14);
			LeaveRule_symbol();
		}
		DebugLocation(704, 33);
		} finally { DebugExitRule(GrammarFileName, "symbol"); }
		return retval;

	}
	// $ANTLR end "symbol"

	partial void EnterRule_macroName();
	partial void LeaveRule_macroName();
	// $ANTLR start "macroName"
	// Smi.g:706:1: macroName : ( OPERATION_KW | ERROR_KW | 'BIND' | 'UNBIND' | 'APPLICATION-SERVICE-ELEMENT' | 'APPLICATION-CONTEXT' | 'EXTENSION' | 'EXTENSIONS' | 'EXTENSION-ATTRIBUTE' | 'TOKEN' | 'TOKEN-DATA' | 'SECURITY-CATEGORY' | 'OBJECT' | 'PORT' | 'REFINE' | 'ABSTRACT-BIND' | 'ABSTRACT-UNBIND' | 'ABSTRACT-OPERATION' | 'ABSTRACT-ERROR' | 'ALGORITHM' | 'ENCRYPTED' | 'SIGNED' | 'SIGNATURE' | 'PROTECTED' | smi_macros );
	[GrammarRule("macroName")]
	private AstParserRuleReturnScope<CommonTree, IToken> macroName()
	{
		EnterRule_macroName();
		EnterRule("macroName", 15);
		TraceIn("macroName", 15);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken OPERATION_KW41 = default(IToken);
		IToken ERROR_KW42 = default(IToken);
		IToken string_literal43 = default(IToken);
		IToken string_literal44 = default(IToken);
		IToken string_literal45 = default(IToken);
		IToken string_literal46 = default(IToken);
		IToken string_literal47 = default(IToken);
		IToken string_literal48 = default(IToken);
		IToken string_literal49 = default(IToken);
		IToken string_literal50 = default(IToken);
		IToken string_literal51 = default(IToken);
		IToken string_literal52 = default(IToken);
		IToken string_literal53 = default(IToken);
		IToken string_literal54 = default(IToken);
		IToken string_literal55 = default(IToken);
		IToken string_literal56 = default(IToken);
		IToken string_literal57 = default(IToken);
		IToken string_literal58 = default(IToken);
		IToken string_literal59 = default(IToken);
		IToken string_literal60 = default(IToken);
		IToken string_literal61 = default(IToken);
		IToken string_literal62 = default(IToken);
		IToken string_literal63 = default(IToken);
		IToken string_literal64 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> smi_macros65 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree OPERATION_KW41_tree = default(CommonTree);
		CommonTree ERROR_KW42_tree = default(CommonTree);
		CommonTree string_literal43_tree = default(CommonTree);
		CommonTree string_literal44_tree = default(CommonTree);
		CommonTree string_literal45_tree = default(CommonTree);
		CommonTree string_literal46_tree = default(CommonTree);
		CommonTree string_literal47_tree = default(CommonTree);
		CommonTree string_literal48_tree = default(CommonTree);
		CommonTree string_literal49_tree = default(CommonTree);
		CommonTree string_literal50_tree = default(CommonTree);
		CommonTree string_literal51_tree = default(CommonTree);
		CommonTree string_literal52_tree = default(CommonTree);
		CommonTree string_literal53_tree = default(CommonTree);
		CommonTree string_literal54_tree = default(CommonTree);
		CommonTree string_literal55_tree = default(CommonTree);
		CommonTree string_literal56_tree = default(CommonTree);
		CommonTree string_literal57_tree = default(CommonTree);
		CommonTree string_literal58_tree = default(CommonTree);
		CommonTree string_literal59_tree = default(CommonTree);
		CommonTree string_literal60_tree = default(CommonTree);
		CommonTree string_literal61_tree = default(CommonTree);
		CommonTree string_literal62_tree = default(CommonTree);
		CommonTree string_literal63_tree = default(CommonTree);
		CommonTree string_literal64_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "macroName");
		DebugLocation(706, 14);
		try
		{
			// Smi.g:706:10: ( OPERATION_KW | ERROR_KW | 'BIND' | 'UNBIND' | 'APPLICATION-SERVICE-ELEMENT' | 'APPLICATION-CONTEXT' | 'EXTENSION' | 'EXTENSIONS' | 'EXTENSION-ATTRIBUTE' | 'TOKEN' | 'TOKEN-DATA' | 'SECURITY-CATEGORY' | 'OBJECT' | 'PORT' | 'REFINE' | 'ABSTRACT-BIND' | 'ABSTRACT-UNBIND' | 'ABSTRACT-OPERATION' | 'ABSTRACT-ERROR' | 'ALGORITHM' | 'ENCRYPTED' | 'SIGNED' | 'SIGNATURE' | 'PROTECTED' | smi_macros )
			int alt23=25;
			try { DebugEnterDecision(23, false);
			switch (input.LA(1))
			{
			case OPERATION_KW:
				{
				alt23 = 1;
				}
				break;
			case ERROR_KW:
				{
				alt23 = 2;
				}
				break;
			case 135:
				{
				alt23 = 3;
				}
				break;
			case 191:
				{
				alt23 = 4;
				}
				break;
			case 133:
				{
				alt23 = 5;
				}
				break;
			case 132:
				{
				alt23 = 6;
				}
				break;
			case 145:
				{
				alt23 = 7;
				}
				break;
			case 147:
				{
				alt23 = 8;
				}
				break;
			case 146:
				{
				alt23 = 9;
				}
				break;
			case 188:
				{
				alt23 = 10;
				}
				break;
			case 189:
				{
				alt23 = 11;
				}
				break;
			case 180:
				{
				alt23 = 12;
				}
				break;
			case OBJECT_KW:
				{
				alt23 = 13;
				}
				break;
			case 173:
				{
				alt23 = 14;
				}
				break;
			case 177:
				{
				alt23 = 15;
				}
				break;
			case 125:
				{
				alt23 = 16;
				}
				break;
			case 128:
				{
				alt23 = 17;
				}
				break;
			case 127:
				{
				alt23 = 18;
				}
				break;
			case 126:
				{
				alt23 = 19;
				}
				break;
			case 131:
				{
				alt23 = 20;
				}
				break;
			case 142:
				{
				alt23 = 21;
				}
				break;
			case 182:
				{
				alt23 = 22;
				}
				break;
			case 181:
				{
				alt23 = 23;
				}
				break;
			case 175:
				{
				alt23 = 24;
				}
				break;
			case 130:
			case 157:
			case 158:
			case 159:
			case 160:
			case 162:
			case 163:
			case 164:
			case 187:
			case 190:
				{
				alt23 = 25;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 23, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(23); }
			switch (alt23)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:706:12: OPERATION_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(706, 12);
				OPERATION_KW41=(IToken)Match(input,OPERATION_KW,Follow._OPERATION_KW_in_macroName2609); if (state.failed) return retval;
				if (state.backtracking == 0) {
				OPERATION_KW41_tree = (CommonTree)adaptor.Create(OPERATION_KW41);
				adaptor.AddChild(root_0, OPERATION_KW41_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:706:27: ERROR_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(706, 27);
				ERROR_KW42=(IToken)Match(input,ERROR_KW,Follow._ERROR_KW_in_macroName2613); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ERROR_KW42_tree = (CommonTree)adaptor.Create(ERROR_KW42);
				adaptor.AddChild(root_0, ERROR_KW42_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:706:39: 'BIND'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(706, 39);
				string_literal43=(IToken)Match(input,135,Follow._135_in_macroName2618); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal43_tree = (CommonTree)adaptor.Create(string_literal43);
				adaptor.AddChild(root_0, string_literal43_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Smi.g:706:48: 'UNBIND'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(706, 48);
				string_literal44=(IToken)Match(input,191,Follow._191_in_macroName2622); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal44_tree = (CommonTree)adaptor.Create(string_literal44);
				adaptor.AddChild(root_0, string_literal44_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Smi.g:707:12: 'APPLICATION-SERVICE-ELEMENT'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(707, 12);
				string_literal45=(IToken)Match(input,133,Follow._133_in_macroName2636); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal45_tree = (CommonTree)adaptor.Create(string_literal45);
				adaptor.AddChild(root_0, string_literal45_tree);
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// Smi.g:707:44: 'APPLICATION-CONTEXT'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(707, 44);
				string_literal46=(IToken)Match(input,132,Follow._132_in_macroName2640); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal46_tree = (CommonTree)adaptor.Create(string_literal46);
				adaptor.AddChild(root_0, string_literal46_tree);
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// Smi.g:707:68: 'EXTENSION'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(707, 68);
				string_literal47=(IToken)Match(input,145,Follow._145_in_macroName2644); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal47_tree = (CommonTree)adaptor.Create(string_literal47);
				adaptor.AddChild(root_0, string_literal47_tree);
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// Smi.g:708:12: 'EXTENSIONS'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(708, 12);
				string_literal48=(IToken)Match(input,147,Follow._147_in_macroName2658); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal48_tree = (CommonTree)adaptor.Create(string_literal48);
				adaptor.AddChild(root_0, string_literal48_tree);
				}

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// Smi.g:708:27: 'EXTENSION-ATTRIBUTE'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(708, 27);
				string_literal49=(IToken)Match(input,146,Follow._146_in_macroName2662); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal49_tree = (CommonTree)adaptor.Create(string_literal49);
				adaptor.AddChild(root_0, string_literal49_tree);
				}

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// Smi.g:708:51: 'TOKEN'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(708, 51);
				string_literal50=(IToken)Match(input,188,Follow._188_in_macroName2666); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal50_tree = (CommonTree)adaptor.Create(string_literal50);
				adaptor.AddChild(root_0, string_literal50_tree);
				}

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// Smi.g:708:61: 'TOKEN-DATA'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(708, 61);
				string_literal51=(IToken)Match(input,189,Follow._189_in_macroName2670); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal51_tree = (CommonTree)adaptor.Create(string_literal51);
				adaptor.AddChild(root_0, string_literal51_tree);
				}

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// Smi.g:709:5: 'SECURITY-CATEGORY'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(709, 5);
				string_literal52=(IToken)Match(input,180,Follow._180_in_macroName2677); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal52_tree = (CommonTree)adaptor.Create(string_literal52);
				adaptor.AddChild(root_0, string_literal52_tree);
				}

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// Smi.g:709:27: 'OBJECT'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(709, 27);
				string_literal53=(IToken)Match(input,OBJECT_KW,Follow._OBJECT_KW_in_macroName2681); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal53_tree = (CommonTree)adaptor.Create(string_literal53);
				adaptor.AddChild(root_0, string_literal53_tree);
				}

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// Smi.g:709:38: 'PORT'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(709, 38);
				string_literal54=(IToken)Match(input,173,Follow._173_in_macroName2685); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal54_tree = (CommonTree)adaptor.Create(string_literal54);
				adaptor.AddChild(root_0, string_literal54_tree);
				}

				}
				break;
			case 15:
				DebugEnterAlt(15);
				// Smi.g:709:47: 'REFINE'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(709, 47);
				string_literal55=(IToken)Match(input,177,Follow._177_in_macroName2689); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal55_tree = (CommonTree)adaptor.Create(string_literal55);
				adaptor.AddChild(root_0, string_literal55_tree);
				}

				}
				break;
			case 16:
				DebugEnterAlt(16);
				// Smi.g:709:58: 'ABSTRACT-BIND'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(709, 58);
				string_literal56=(IToken)Match(input,125,Follow._125_in_macroName2693); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal56_tree = (CommonTree)adaptor.Create(string_literal56);
				adaptor.AddChild(root_0, string_literal56_tree);
				}

				}
				break;
			case 17:
				DebugEnterAlt(17);
				// Smi.g:710:5: 'ABSTRACT-UNBIND'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(710, 5);
				string_literal57=(IToken)Match(input,128,Follow._128_in_macroName2700); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal57_tree = (CommonTree)adaptor.Create(string_literal57);
				adaptor.AddChild(root_0, string_literal57_tree);
				}

				}
				break;
			case 18:
				DebugEnterAlt(18);
				// Smi.g:710:25: 'ABSTRACT-OPERATION'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(710, 25);
				string_literal58=(IToken)Match(input,127,Follow._127_in_macroName2704); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal58_tree = (CommonTree)adaptor.Create(string_literal58);
				adaptor.AddChild(root_0, string_literal58_tree);
				}

				}
				break;
			case 19:
				DebugEnterAlt(19);
				// Smi.g:710:48: 'ABSTRACT-ERROR'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(710, 48);
				string_literal59=(IToken)Match(input,126,Follow._126_in_macroName2708); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal59_tree = (CommonTree)adaptor.Create(string_literal59);
				adaptor.AddChild(root_0, string_literal59_tree);
				}

				}
				break;
			case 20:
				DebugEnterAlt(20);
				// Smi.g:711:5: 'ALGORITHM'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(711, 5);
				string_literal60=(IToken)Match(input,131,Follow._131_in_macroName2715); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal60_tree = (CommonTree)adaptor.Create(string_literal60);
				adaptor.AddChild(root_0, string_literal60_tree);
				}

				}
				break;
			case 21:
				DebugEnterAlt(21);
				// Smi.g:711:19: 'ENCRYPTED'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(711, 19);
				string_literal61=(IToken)Match(input,142,Follow._142_in_macroName2719); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal61_tree = (CommonTree)adaptor.Create(string_literal61);
				adaptor.AddChild(root_0, string_literal61_tree);
				}

				}
				break;
			case 22:
				DebugEnterAlt(22);
				// Smi.g:711:33: 'SIGNED'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(711, 33);
				string_literal62=(IToken)Match(input,182,Follow._182_in_macroName2723); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal62_tree = (CommonTree)adaptor.Create(string_literal62);
				adaptor.AddChild(root_0, string_literal62_tree);
				}

				}
				break;
			case 23:
				DebugEnterAlt(23);
				// Smi.g:711:44: 'SIGNATURE'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(711, 44);
				string_literal63=(IToken)Match(input,181,Follow._181_in_macroName2727); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal63_tree = (CommonTree)adaptor.Create(string_literal63);
				adaptor.AddChild(root_0, string_literal63_tree);
				}

				}
				break;
			case 24:
				DebugEnterAlt(24);
				// Smi.g:711:58: 'PROTECTED'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(711, 58);
				string_literal64=(IToken)Match(input,175,Follow._175_in_macroName2731); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal64_tree = (CommonTree)adaptor.Create(string_literal64);
				adaptor.AddChild(root_0, string_literal64_tree);
				}

				}
				break;
			case 25:
				DebugEnterAlt(25);
				// Smi.g:712:5: smi_macros
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(712, 5);
				PushFollow(Follow._smi_macros_in_macroName2738);
				smi_macros65=smi_macros();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, smi_macros65.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("macroName", 15);
			LeaveRule("macroName", 15);
			LeaveRule_macroName();
		}
		DebugLocation(712, 14);
		} finally { DebugExitRule(GrammarFileName, "macroName"); }
		return retval;

	}
	// $ANTLR end "macroName"

	private sealed partial class type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ISmiType result;
		public type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_type();
	partial void LeaveRule_type();
	// $ANTLR start "type"
	// Smi.g:714:1: type returns [ISmiType result] : (b= built_in_type |d= defined_type |s= selection_type |m= macros_type |sm= smi_type );
	[GrammarRule("type")]
	private SmiParser.type_return type()
	{
		EnterRule_type();
		EnterRule("type", 16);
		TraceIn("type", 16);
		SmiParser.type_return retval = new SmiParser.type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		SmiParser.built_in_type_return b = default(SmiParser.built_in_type_return);
		SmiParser.defined_type_return d = default(SmiParser.defined_type_return);
		SmiParser.selection_type_return s = default(SmiParser.selection_type_return);
		SmiParser.macros_type_return m = default(SmiParser.macros_type_return);
		SmiParser.smi_type_return sm = default(SmiParser.smi_type_return);

		try { DebugEnterRule(GrammarFileName, "type");
		DebugLocation(714, 1);
		try
		{
			// Smi.g:715:5: (b= built_in_type |d= defined_type |s= selection_type |m= macros_type |sm= smi_type )
			int alt24=5;
			try { DebugEnterDecision(24, false);
			switch (input.LA(1))
			{
			case ANY_KW:
			case BIT_KW:
			case BMP_STR_KW:
			case BOOLEAN_KW:
			case CHARACTER_KW:
			case CHOICE_KW:
			case EMBEDDED_KW:
			case ENUMERATED_KW:
			case EXTERNAL_KW:
			case GENERALIZED_TIME_KW:
			case GENERAL_STR_KW:
			case GRAPHIC_STR_KW:
			case IA5_STRING_KW:
			case ISO646_STR_KW:
			case NUMERIC_STR_KW:
			case PRINTABLE_STR_KW:
			case T61_STR_KW:
			case TELETEX_STR_KW:
			case UNIVERSAL_STR_KW:
			case UTC_TIME_KW:
			case UTF8_STR_KW:
			case VIDEOTEX_STR_KW:
			case VISIBLE_STR_KW:
				{
				alt24 = 1;
				}
				break;
			case INTEGER_KW:
			case L_BRACKET:
			case NULL_KW:
			case REAL_KW:
			case SEQUENCE_KW:
			case SET_KW:
			case 178:
				{
				alt24 = 1;
				}
				break;
			case OBJECT_KW:
				{
				int LA24_2 = input.LA(2);

				if ((LA24_2==IDENTIFIER_KW))
				{
					alt24 = 1;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 24, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case OCTET_KW:
				{
				int LA24_2 = input.LA(2);

				if ((LA24_2==STRING_KW))
				{
					alt24 = 1;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 24, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case UPPER:
				{
				alt24 = 2;
				}
				break;
			case LOWER:
				{
				alt24 = 3;
				}
				break;
			case ERROR_KW:
			case OPERATION_KW:
			case 130:
			case 157:
			case 158:
			case 159:
			case 160:
			case 162:
			case 163:
			case 164:
			case 187:
			case 190:
				{
				alt24 = 4;
				}
				break;
			case 136:
				{
				alt24 = 5;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 24, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(24); }
			switch (alt24)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:716:2: b= built_in_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(716, 3);
				PushFollow(Follow._built_in_type_in_type2758);
				b=built_in_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, b.Tree);
				DebugLocation(716, 18);
				if (state.backtracking == 0)
				{
					 retval.result = (b!=null?b.result:default(ISmiType)); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:717:4: d= defined_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(717, 5);
				PushFollow(Follow._defined_type_in_type2767);
				d=defined_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, d.Tree);
				DebugLocation(717, 19);
				if (state.backtracking == 0)
				{
					 retval.result = (d!=null?d.result:default(DefinedType)); 
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:718:4: s= selection_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(718, 5);
				PushFollow(Follow._selection_type_in_type2776);
				s=selection_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, s.Tree);
				DebugLocation(718, 21);
				if (state.backtracking == 0)
				{
					 retval.result = (s!=null?s.result:default(SelectionType)); 
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Smi.g:719:4: m= macros_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(719, 5);
				PushFollow(Follow._macros_type_in_type2785);
				m=macros_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, m.Tree);
				DebugLocation(719, 18);
				if (state.backtracking == 0)
				{
					 retval.result = (m!=null?m.result:default(ISmiType)); 
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Smi.g:720:4: sm= smi_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(720, 6);
				PushFollow(Follow._smi_type_in_type2794);
				sm=smi_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, sm.Tree);
				DebugLocation(720, 16);
				if (state.backtracking == 0)
				{
					 retval.result = (sm!=null?sm.result:default(ISmiType)); 
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("type", 16);
			LeaveRule("type", 16);
			LeaveRule_type();
		}
		DebugLocation(721, 1);
		} finally { DebugExitRule(GrammarFileName, "type"); }
		return retval;

	}
	// $ANTLR end "type"

	private sealed partial class value_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ISmiValue result;
		public value_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_value();
	partial void LeaveRule_value();
	// $ANTLR start "value"
	// Smi.g:723:1: value returns [ISmiValue result] : ( ( TRUE_KW )=> TRUE_KW | ( FALSE_KW )=> FALSE_KW | ( NULL_KW )=> NULL_KW | ( C_STRING )=>s= C_STRING | ( defined_value )=>dv= defined_value | ( signed_number )=>sn= signed_number | ( choice_value )=>cv= choice_value | ( sequence_value )=>sv= sequence_value | ( sequenceof_value )=>sov= sequenceof_value | ( cstr_value )=>csv= cstr_value | ( obj_id_comp_lst )=>oid= obj_id_comp_lst | ( PLUS_INFINITY_KW )=> PLUS_INFINITY_KW | ( MINUS_INFINITY_KW )=> MINUS_INFINITY_KW | ( symbol )=>name= symbol );
	[GrammarRule("value")]
	private SmiParser.value_return value()
	{
		EnterRule_value();
		EnterRule("value", 17);
		TraceIn("value", 17);
		SmiParser.value_return retval = new SmiParser.value_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken s = default(IToken);
		IToken TRUE_KW66 = default(IToken);
		IToken FALSE_KW67 = default(IToken);
		IToken NULL_KW68 = default(IToken);
		IToken PLUS_INFINITY_KW69 = default(IToken);
		IToken MINUS_INFINITY_KW70 = default(IToken);
		SmiParser.defined_value_return dv = default(SmiParser.defined_value_return);
		SmiParser.signed_number_return sn = default(SmiParser.signed_number_return);
		SmiParser.choice_value_return cv = default(SmiParser.choice_value_return);
		SmiParser.sequence_value_return sv = default(SmiParser.sequence_value_return);
		SmiParser.sequenceof_value_return sov = default(SmiParser.sequenceof_value_return);
		SmiParser.cstr_value_return csv = default(SmiParser.cstr_value_return);
		SmiParser.obj_id_comp_lst_return oid = default(SmiParser.obj_id_comp_lst_return);
		AstParserRuleReturnScope<CommonTree, IToken> name = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree s_tree = default(CommonTree);
		CommonTree TRUE_KW66_tree = default(CommonTree);
		CommonTree FALSE_KW67_tree = default(CommonTree);
		CommonTree NULL_KW68_tree = default(CommonTree);
		CommonTree PLUS_INFINITY_KW69_tree = default(CommonTree);
		CommonTree MINUS_INFINITY_KW70_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "value");
		DebugLocation(723, 2);
		try
		{
			// Smi.g:724:5: ( ( TRUE_KW )=> TRUE_KW | ( FALSE_KW )=> FALSE_KW | ( NULL_KW )=> NULL_KW | ( C_STRING )=>s= C_STRING | ( defined_value )=>dv= defined_value | ( signed_number )=>sn= signed_number | ( choice_value )=>cv= choice_value | ( sequence_value )=>sv= sequence_value | ( sequenceof_value )=>sov= sequenceof_value | ( cstr_value )=>csv= cstr_value | ( obj_id_comp_lst )=>oid= obj_id_comp_lst | ( PLUS_INFINITY_KW )=> PLUS_INFINITY_KW | ( MINUS_INFINITY_KW )=> MINUS_INFINITY_KW | ( symbol )=>name= symbol )
			int alt25=14;
			try { DebugEnterDecision(25, false);
			int LA25_1 = input.LA(1);

			if ((LA25_1==TRUE_KW) && (EvaluatePredicate(synpred3_Smi_fragment)))
			{
				alt25 = 1;
			}
			else if ((LA25_1==FALSE_KW) && (EvaluatePredicate(synpred4_Smi_fragment)))
			{
				alt25 = 2;
			}
			else if ((LA25_1==NULL_KW) && (EvaluatePredicate(synpred5_Smi_fragment)))
			{
				alt25 = 3;
			}
			else if ((LA25_1==C_STRING) && (EvaluatePredicate(synpred6_Smi_fragment)))
			{
				alt25 = 4;
			}
			else if ((LA25_1==UPPER))
			{
				int LA25_2 = input.LA(2);

				if ((EvaluatePredicate(synpred7_Smi_fragment)))
				{
					alt25 = 5;
				}
				else if ((EvaluatePredicate(synpred16_Smi_fragment)))
				{
					alt25 = 14;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 25, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA25_1==LOWER))
			{
				int LA25_2 = input.LA(2);

				if ((EvaluatePredicate(synpred7_Smi_fragment)))
				{
					alt25 = 5;
				}
				else if ((EvaluatePredicate(synpred9_Smi_fragment)))
				{
					alt25 = 7;
				}
				else if ((EvaluatePredicate(synpred16_Smi_fragment)))
				{
					alt25 = 14;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 25, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA25_1==MINUS) && (EvaluatePredicate(synpred8_Smi_fragment)))
			{
				alt25 = 6;
			}
			else if ((LA25_1==NUMBER) && (EvaluatePredicate(synpred8_Smi_fragment)))
			{
				alt25 = 6;
			}
			else if ((LA25_1==L_BRACE))
			{
				int LA25_2 = input.LA(2);

				if ((EvaluatePredicate(synpred10_Smi_fragment)))
				{
					alt25 = 8;
				}
				else if ((EvaluatePredicate(synpred11_Smi_fragment)))
				{
					alt25 = 9;
				}
				else if ((EvaluatePredicate(synpred12_Smi_fragment)))
				{
					alt25 = 10;
				}
				else if ((EvaluatePredicate(synpred13_Smi_fragment)))
				{
					alt25 = 11;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 25, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA25_1==H_STRING) && (EvaluatePredicate(synpred12_Smi_fragment)))
			{
				alt25 = 10;
			}
			else if ((LA25_1==B_STRING) && (EvaluatePredicate(synpred12_Smi_fragment)))
			{
				alt25 = 10;
			}
			else if ((LA25_1==PLUS_INFINITY_KW) && (EvaluatePredicate(synpred14_Smi_fragment)))
			{
				alt25 = 12;
			}
			else if ((LA25_1==MINUS_INFINITY_KW) && (EvaluatePredicate(synpred15_Smi_fragment)))
			{
				alt25 = 13;
			}
			else if ((LA25_1==OPERATION_KW) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==ERROR_KW) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==135) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==191) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==133) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==132) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==145) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==147) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==146) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==188) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==189) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==180) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==OBJECT_KW) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==173) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==177) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==125) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==128) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==127) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==126) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==131) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==142) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==182) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==181) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==175) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else if ((LA25_1==130||(LA25_1>=157 && LA25_1<=160)||(LA25_1>=162 && LA25_1<=164)||LA25_1==187||LA25_1==190) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt25 = 14;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 25, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(25); }
			switch (alt25)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:724:7: ( TRUE_KW )=> TRUE_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(724, 20);
				TRUE_KW66=(IToken)Match(input,TRUE_KW,Follow._TRUE_KW_in_value2820); if (state.failed) return retval;
				if (state.backtracking == 0) {
				TRUE_KW66_tree = (CommonTree)adaptor.Create(TRUE_KW66);
				adaptor.AddChild(root_0, TRUE_KW66_tree);
				}
				DebugLocation(724, 28);
				if (state.backtracking == 0)
				{
					 retval.result = new TrueLiteralValue(); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:725:8: ( FALSE_KW )=> FALSE_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(725, 22);
				FALSE_KW67=(IToken)Match(input,FALSE_KW,Follow._FALSE_KW_in_value2837); if (state.failed) return retval;
				if (state.backtracking == 0) {
				FALSE_KW67_tree = (CommonTree)adaptor.Create(FALSE_KW67);
				adaptor.AddChild(root_0, FALSE_KW67_tree);
				}
				DebugLocation(725, 31);
				if (state.backtracking == 0)
				{
					 retval.result = new FalseLiteralValue(); 
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:726:8: ( NULL_KW )=> NULL_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(726, 21);
				NULL_KW68=(IToken)Match(input,NULL_KW,Follow._NULL_KW_in_value2854); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NULL_KW68_tree = (CommonTree)adaptor.Create(NULL_KW68);
				adaptor.AddChild(root_0, NULL_KW68_tree);
				}
				DebugLocation(726, 29);
				if (state.backtracking == 0)
				{
					 retval.result = new NullLiteralValue(); 
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Smi.g:727:8: ( C_STRING )=>s= C_STRING
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(727, 23);
				s=(IToken)Match(input,C_STRING,Follow._C_STRING_in_value2873); if (state.failed) return retval;
				if (state.backtracking == 0) {
				s_tree = (CommonTree)adaptor.Create(s);
				adaptor.AddChild(root_0, s_tree);
				}
				DebugLocation(727, 33);
				if (state.backtracking == 0)
				{
					 retval.result = new LiteralValue((s!=null?s.Text:null)); 
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Smi.g:728:8: ( defined_value )=>dv= defined_value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(728, 29);
				PushFollow(Follow._defined_value_in_value2893);
				dv=defined_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, dv.Tree);
				DebugLocation(728, 44);
				if (state.backtracking == 0)
				{
					 retval.result = (dv!=null?dv.result:default(DefinedValue)); 
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// Smi.g:729:8: ( signed_number )=>sn= signed_number
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(729, 29);
				PushFollow(Follow._signed_number_in_value2912);
				sn=signed_number();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, sn.Tree);
				DebugLocation(729, 44);
				if (state.backtracking == 0)
				{
					 retval.result = (sn!=null?sn.result:default(NumberLiteralValue)); 
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// Smi.g:730:8: ( choice_value )=>cv= choice_value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(730, 28);
				PushFollow(Follow._choice_value_in_value2931);
				cv=choice_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, cv.Tree);
				DebugLocation(730, 42);
				if (state.backtracking == 0)
				{
					 retval.result = (cv!=null?cv.result:default(ChoiceValue)); 
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// Smi.g:731:8: ( sequence_value )=>sv= sequence_value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(731, 30);
				PushFollow(Follow._sequence_value_in_value2950);
				sv=sequence_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, sv.Tree);
				DebugLocation(731, 46);
				if (state.backtracking == 0)
				{
					 retval.result = (sv!=null?sv.result:default(SequenceValue)); 
				}

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// Smi.g:732:8: ( sequenceof_value )=>sov= sequenceof_value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(732, 33);
				PushFollow(Follow._sequenceof_value_in_value2969);
				sov=sequenceof_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, sov.Tree);
				DebugLocation(732, 51);
				if (state.backtracking == 0)
				{
					 retval.result = (sov!=null?sov.result:default(SequenceOfValue)); 
				}

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// Smi.g:733:8: ( cstr_value )=>csv= cstr_value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(733, 27);
				PushFollow(Follow._cstr_value_in_value2988);
				csv=cstr_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, csv.Tree);
				DebugLocation(733, 39);
				if (state.backtracking == 0)
				{
					 retval.result = (csv!=null?csv.result:default(ISmiValue)); 
				}

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// Smi.g:734:8: ( obj_id_comp_lst )=>oid= obj_id_comp_lst
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(734, 32);
				PushFollow(Follow._obj_id_comp_lst_in_value3007);
				oid=obj_id_comp_lst();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, oid.Tree);
				DebugLocation(734, 49);
				if (state.backtracking == 0)
				{
					 retval.result = (oid!=null?oid.result:default(IdComponentList)); 
				}

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// Smi.g:735:8: ( PLUS_INFINITY_KW )=> PLUS_INFINITY_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(735, 30);
				PLUS_INFINITY_KW69=(IToken)Match(input,PLUS_INFINITY_KW,Follow._PLUS_INFINITY_KW_in_value3024); if (state.failed) return retval;
				if (state.backtracking == 0) {
				PLUS_INFINITY_KW69_tree = (CommonTree)adaptor.Create(PLUS_INFINITY_KW69);
				adaptor.AddChild(root_0, PLUS_INFINITY_KW69_tree);
				}
				DebugLocation(735, 47);
				if (state.backtracking == 0)
				{
					 retval.result = new PlusInfinityLiteralValue(); 
				}

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// Smi.g:736:8: ( MINUS_INFINITY_KW )=> MINUS_INFINITY_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(736, 31);
				MINUS_INFINITY_KW70=(IToken)Match(input,MINUS_INFINITY_KW,Follow._MINUS_INFINITY_KW_in_value3041); if (state.failed) return retval;
				if (state.backtracking == 0) {
				MINUS_INFINITY_KW70_tree = (CommonTree)adaptor.Create(MINUS_INFINITY_KW70);
				adaptor.AddChild(root_0, MINUS_INFINITY_KW70_tree);
				}
				DebugLocation(736, 49);
				if (state.backtracking == 0)
				{
					 retval.result = new MinusInfinityLiteralValue(); 
				}

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// Smi.g:737:5: ( symbol )=>name= symbol
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(737, 21);
				PushFollow(Follow._symbol_in_value3057);
				name=symbol();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, name.Tree);
				DebugLocation(737, 29);
				if (state.backtracking == 0)
				{
					 retval.result = new LiteralValue((name!=null?input.ToString(name.Start,name.Stop):null)); 
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("value", 17);
			LeaveRule("value", 17);
			LeaveRule_value();
		}
		DebugLocation(738, 2);
		} finally { DebugExitRule(GrammarFileName, "value"); }
		return retval;

	}
	// $ANTLR end "value"

	private sealed partial class built_in_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ISmiType result;
		public built_in_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_built_in_type();
	partial void LeaveRule_built_in_type();
	// $ANTLR start "built_in_type"
	// Smi.g:740:1: built_in_type returns [ISmiType result] : (a= any_type |bs= bit_string_type |b= boolean_type |cs= character_str_type |c= choice_type |em= embedded_type EMBEDDED_KW PDV_KW |en= enum_type |ex= external_type |i= integer_type |n= null_type |oid= object_identifier_type |oct= octetString_type |real= real_type |r= relativeOid_type |se= sequence_type |so= sequenceof_type |s= set_type |s1= setof_type |t= tagged_type );
	[GrammarRule("built_in_type")]
	private SmiParser.built_in_type_return built_in_type()
	{
		EnterRule_built_in_type();
		EnterRule("built_in_type", 18);
		TraceIn("built_in_type", 18);
		SmiParser.built_in_type_return retval = new SmiParser.built_in_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken EMBEDDED_KW71 = default(IToken);
		IToken PDV_KW72 = default(IToken);
		SmiParser.any_type_return a = default(SmiParser.any_type_return);
		SmiParser.bit_string_type_return bs = default(SmiParser.bit_string_type_return);
		SmiParser.boolean_type_return b = default(SmiParser.boolean_type_return);
		SmiParser.character_str_type_return cs = default(SmiParser.character_str_type_return);
		SmiParser.choice_type_return c = default(SmiParser.choice_type_return);
		SmiParser.embedded_type_return em = default(SmiParser.embedded_type_return);
		SmiParser.enum_type_return en = default(SmiParser.enum_type_return);
		SmiParser.external_type_return ex = default(SmiParser.external_type_return);
		SmiParser.integer_type_return i = default(SmiParser.integer_type_return);
		SmiParser.null_type_return n = default(SmiParser.null_type_return);
		SmiParser.object_identifier_type_return oid = default(SmiParser.object_identifier_type_return);
		SmiParser.octetString_type_return oct = default(SmiParser.octetString_type_return);
		SmiParser.real_type_return real = default(SmiParser.real_type_return);
		SmiParser.relativeOid_type_return r = default(SmiParser.relativeOid_type_return);
		SmiParser.sequence_type_return se = default(SmiParser.sequence_type_return);
		SmiParser.sequenceof_type_return so = default(SmiParser.sequenceof_type_return);
		SmiParser.set_type_return s = default(SmiParser.set_type_return);
		SmiParser.setof_type_return s1 = default(SmiParser.setof_type_return);
		SmiParser.tagged_type_return t = default(SmiParser.tagged_type_return);

		CommonTree EMBEDDED_KW71_tree = default(CommonTree);
		CommonTree PDV_KW72_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "built_in_type");
		DebugLocation(740, 1);
		try
		{
			// Smi.g:741:5: (a= any_type |bs= bit_string_type |b= boolean_type |cs= character_str_type |c= choice_type |em= embedded_type EMBEDDED_KW PDV_KW |en= enum_type |ex= external_type |i= integer_type |n= null_type |oid= object_identifier_type |oct= octetString_type |real= real_type |r= relativeOid_type |se= sequence_type |so= sequenceof_type |s= set_type |s1= setof_type |t= tagged_type )
			int alt26=19;
			try { DebugEnterDecision(26, false);
			switch (input.LA(1))
			{
			case ANY_KW:
				{
				alt26 = 1;
				}
				break;
			case BIT_KW:
				{
				alt26 = 2;
				}
				break;
			case BOOLEAN_KW:
				{
				alt26 = 3;
				}
				break;
			case BMP_STR_KW:
			case CHARACTER_KW:
			case GENERALIZED_TIME_KW:
			case GENERAL_STR_KW:
			case GRAPHIC_STR_KW:
			case IA5_STRING_KW:
			case ISO646_STR_KW:
			case NUMERIC_STR_KW:
			case PRINTABLE_STR_KW:
			case T61_STR_KW:
			case TELETEX_STR_KW:
			case UNIVERSAL_STR_KW:
			case UTC_TIME_KW:
			case UTF8_STR_KW:
			case VIDEOTEX_STR_KW:
			case VISIBLE_STR_KW:
				{
				alt26 = 4;
				}
				break;
			case CHOICE_KW:
				{
				alt26 = 5;
				}
				break;
			case EMBEDDED_KW:
				{
				alt26 = 6;
				}
				break;
			case ENUMERATED_KW:
				{
				alt26 = 7;
				}
				break;
			case EXTERNAL_KW:
				{
				alt26 = 8;
				}
				break;
			case INTEGER_KW:
				{
				alt26 = 9;
				}
				break;
			case NULL_KW:
				{
				alt26 = 10;
				}
				break;
			case OBJECT_KW:
				{
				alt26 = 11;
				}
				break;
			case OCTET_KW:
				{
				alt26 = 12;
				}
				break;
			case REAL_KW:
				{
				alt26 = 13;
				}
				break;
			case 178:
				{
				alt26 = 14;
				}
				break;
			case SEQUENCE_KW:
				{
				int LA26_2 = input.LA(2);

				if ((LA26_2==L_BRACE))
				{
					alt26 = 15;
				}
				else if ((LA26_2==L_PAREN||LA26_2==OF_KW))
				{
					alt26 = 16;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 26, 15, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SET_KW:
				{
				int LA26_2 = input.LA(2);

				if ((LA26_2==L_BRACE))
				{
					alt26 = 17;
				}
				else if ((LA26_2==OF_KW||LA26_2==SIZE_KW))
				{
					alt26 = 18;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 26, 16, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case L_BRACKET:
				{
				alt26 = 19;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 26, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(26); }
			switch (alt26)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:741:7: a= any_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(741, 8);
				PushFollow(Follow._any_type_in_built_in_type3080);
				a=any_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, a.Tree);
				DebugLocation(741, 18);
				if (state.backtracking == 0)
				{
					 retval.result = (a!=null?a.result:default(AnyType)); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:742:7: bs= bit_string_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(742, 9);
				PushFollow(Follow._bit_string_type_in_built_in_type3092);
				bs=bit_string_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, bs.Tree);
				DebugLocation(742, 26);
				if (state.backtracking == 0)
				{
					 retval.result = (bs!=null?bs.result:default(BitStringType)); 
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:743:7: b= boolean_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(743, 8);
				PushFollow(Follow._boolean_type_in_built_in_type3104);
				b=boolean_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, b.Tree);
				DebugLocation(743, 22);
				if (state.backtracking == 0)
				{
					 retval.result = (b!=null?b.result:default(BooleanType)); 
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Smi.g:744:7: cs= character_str_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(744, 9);
				PushFollow(Follow._character_str_type_in_built_in_type3116);
				cs=character_str_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, cs.Tree);
				DebugLocation(744, 29);
				if (state.backtracking == 0)
				{
					 retval.result = (cs!=null?cs.result:default(CharacterStringType)); 
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Smi.g:745:7: c= choice_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(745, 8);
				PushFollow(Follow._choice_type_in_built_in_type3128);
				c=choice_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, c.Tree);
				DebugLocation(745, 21);
				if (state.backtracking == 0)
				{
					 retval.result = (c!=null?c.result:default(ChoiceType)); 
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// Smi.g:746:7: em= embedded_type EMBEDDED_KW PDV_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(746, 9);
				PushFollow(Follow._embedded_type_in_built_in_type3140);
				em=embedded_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, em.Tree);
				DebugLocation(746, 24);
				EMBEDDED_KW71=(IToken)Match(input,EMBEDDED_KW,Follow._EMBEDDED_KW_in_built_in_type3142); if (state.failed) return retval;
				if (state.backtracking == 0) {
				EMBEDDED_KW71_tree = (CommonTree)adaptor.Create(EMBEDDED_KW71);
				adaptor.AddChild(root_0, EMBEDDED_KW71_tree);
				}
				DebugLocation(746, 36);
				PDV_KW72=(IToken)Match(input,PDV_KW,Follow._PDV_KW_in_built_in_type3144); if (state.failed) return retval;
				if (state.backtracking == 0) {
				PDV_KW72_tree = (CommonTree)adaptor.Create(PDV_KW72);
				adaptor.AddChild(root_0, PDV_KW72_tree);
				}
				DebugLocation(746, 43);
				if (state.backtracking == 0)
				{
					 retval.result = (em!=null?em.result:default(EmbeddedType)); 
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// Smi.g:747:7: en= enum_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(747, 9);
				PushFollow(Follow._enum_type_in_built_in_type3156);
				en=enum_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, en.Tree);
				DebugLocation(747, 20);
				if (state.backtracking == 0)
				{
					 retval.result = (en!=null?en.result:default(EnumType)); 
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// Smi.g:748:7: ex= external_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(748, 9);
				PushFollow(Follow._external_type_in_built_in_type3168);
				ex=external_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, ex.Tree);
				DebugLocation(748, 24);
				if (state.backtracking == 0)
				{
					 retval.result = (ex!=null?ex.result:default(ExternalType)); 
				}

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// Smi.g:749:4: i= integer_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(749, 5);
				PushFollow(Follow._integer_type_in_built_in_type3177);
				i=integer_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, i.Tree);
				DebugLocation(749, 19);
				if (state.backtracking == 0)
				{
					 retval.result = (i!=null?i.result:default(IntegerType)); 
				}

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// Smi.g:750:4: n= null_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(750, 5);
				PushFollow(Follow._null_type_in_built_in_type3186);
				n=null_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, n.Tree);
				DebugLocation(750, 16);
				if (state.backtracking == 0)
				{
					 retval.result = (n!=null?n.result:default(NullType)); 
				}

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// Smi.g:751:4: oid= object_identifier_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(751, 7);
				PushFollow(Follow._object_identifier_type_in_built_in_type3195);
				oid=object_identifier_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, oid.Tree);
				DebugLocation(751, 31);
				if (state.backtracking == 0)
				{
					 retval.result = (oid!=null?oid.result:default(ObjectIdentifierType)); 
				}

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// Smi.g:752:4: oct= octetString_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(752, 7);
				PushFollow(Follow._octetString_type_in_built_in_type3204);
				oct=octetString_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, oct.Tree);
				DebugLocation(752, 25);
				if (state.backtracking == 0)
				{
					 retval.result = (oct!=null?oct.result:default(OctetStringType)); 
				}

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// Smi.g:753:4: real= real_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(753, 8);
				PushFollow(Follow._real_type_in_built_in_type3213);
				real=real_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, real.Tree);
				DebugLocation(753, 19);
				if (state.backtracking == 0)
				{
					 retval.result = (real!=null?real.result:default(RealType)); 
				}

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// Smi.g:754:4: r= relativeOid_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(754, 5);
				PushFollow(Follow._relativeOid_type_in_built_in_type3222);
				r=relativeOid_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, r.Tree);
				DebugLocation(754, 23);
				if (state.backtracking == 0)
				{
					 retval.result = (r!=null?r.result:default(RelativeIdType)); 
				}

				}
				break;
			case 15:
				DebugEnterAlt(15);
				// Smi.g:755:4: se= sequence_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(755, 6);
				PushFollow(Follow._sequence_type_in_built_in_type3231);
				se=sequence_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, se.Tree);
				DebugLocation(755, 21);
				if (state.backtracking == 0)
				{
					 retval.result = (se!=null?se.result:default(SequenceType)); 
				}

				}
				break;
			case 16:
				DebugEnterAlt(16);
				// Smi.g:756:4: so= sequenceof_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(756, 6);
				PushFollow(Follow._sequenceof_type_in_built_in_type3240);
				so=sequenceof_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, so.Tree);
				DebugLocation(756, 23);
				if (state.backtracking == 0)
				{
					 retval.result = (so!=null?so.result:default(SequenceOfType)); 
				}

				}
				break;
			case 17:
				DebugEnterAlt(17);
				// Smi.g:757:4: s= set_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(757, 5);
				PushFollow(Follow._set_type_in_built_in_type3249);
				s=set_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, s.Tree);
				DebugLocation(757, 15);
				if (state.backtracking == 0)
				{
					 retval.result = (s!=null?s.result:default(SetType)); 
				}

				}
				break;
			case 18:
				DebugEnterAlt(18);
				// Smi.g:758:4: s1= setof_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(758, 6);
				PushFollow(Follow._setof_type_in_built_in_type3258);
				s1=setof_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, s1.Tree);
				DebugLocation(758, 18);
				if (state.backtracking == 0)
				{
					 retval.result = (s1!=null?s1.result:default(SetOfType)); 
				}

				}
				break;
			case 19:
				DebugEnterAlt(19);
				// Smi.g:759:4: t= tagged_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(759, 5);
				PushFollow(Follow._tagged_type_in_built_in_type3267);
				t=tagged_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, t.Tree);
				DebugLocation(759, 18);
				if (state.backtracking == 0)
				{
					 retval.result = (t!=null?t.result:default(TaggedType)); 
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("built_in_type", 18);
			LeaveRule("built_in_type", 18);
			LeaveRule_built_in_type();
		}
		DebugLocation(760, 1);
		} finally { DebugExitRule(GrammarFileName, "built_in_type"); }
		return retval;

	}
	// $ANTLR end "built_in_type"

	private sealed partial class defined_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public DefinedType result = new DefinedType();
		public defined_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_defined_type();
	partial void LeaveRule_defined_type();
	// $ANTLR start "defined_type"
	// Smi.g:762:1: defined_type returns [DefinedType result = new DefinedType()] : (mod= UPPER DOT )? name= UPPER (c= constraint )? ;
	[GrammarRule("defined_type")]
	private SmiParser.defined_type_return defined_type()
	{
		EnterRule_defined_type();
		EnterRule("defined_type", 19);
		TraceIn("defined_type", 19);
		SmiParser.defined_type_return retval = new SmiParser.defined_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken mod = default(IToken);
		IToken name = default(IToken);
		IToken DOT73 = default(IToken);
		SmiParser.constraint_return c = default(SmiParser.constraint_return);

		CommonTree mod_tree = default(CommonTree);
		CommonTree name_tree = default(CommonTree);
		CommonTree DOT73_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "defined_type");
		DebugLocation(762, 53);
		try
		{
			// Smi.g:763:5: ( (mod= UPPER DOT )? name= UPPER (c= constraint )? )
			DebugEnterAlt(1);
			// Smi.g:763:7: (mod= UPPER DOT )? name= UPPER (c= constraint )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(763, 7);
			// Smi.g:763:7: (mod= UPPER DOT )?
			int alt27=2;
			try { DebugEnterSubRule(27);
			try { DebugEnterDecision(27, false);
			int LA27_1 = input.LA(1);

			if ((LA27_1==UPPER))
			{
				int LA27_2 = input.LA(2);

				if ((LA27_2==DOT))
				{
					alt27 = 1;
				}
			}
			} finally { DebugExitDecision(27); }
			switch (alt27)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:763:8: mod= UPPER DOT
				{
				DebugLocation(763, 11);
				mod=(IToken)Match(input,UPPER,Follow._UPPER_in_defined_type3290); if (state.failed) return retval;
				if (state.backtracking == 0) {
				mod_tree = (CommonTree)adaptor.Create(mod);
				adaptor.AddChild(root_0, mod_tree);
				}
				DebugLocation(763, 18);
				DOT73=(IToken)Match(input,DOT,Follow._DOT_in_defined_type3292); if (state.failed) return retval;
				if (state.backtracking == 0) {
				DOT73_tree = (CommonTree)adaptor.Create(DOT73);
				adaptor.AddChild(root_0, DOT73_tree);
				}
				DebugLocation(763, 22);
				if (state.backtracking == 0)
				{
					 retval.result.Module = (mod!=null?mod.Text:null); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(27); }

			DebugLocation(764, 6);
			name=(IToken)Match(input,UPPER,Follow._UPPER_in_defined_type3302); if (state.failed) return retval;
			if (state.backtracking == 0) {
			name_tree = (CommonTree)adaptor.Create(name);
			adaptor.AddChild(root_0, name_tree);
			}
			DebugLocation(764, 13);
			if (state.backtracking == 0)
			{
				 retval.result.Name = (name!=null?name.Text:null); 
			}
			DebugLocation(765, 2);
			// Smi.g:765:2: (c= constraint )?
			int alt28=2;
			try { DebugEnterSubRule(28);
			try { DebugEnterDecision(28, false);
			int LA28_1 = input.LA(1);

			if ((LA28_1==L_PAREN))
			{
				alt28 = 1;
			}
			} finally { DebugExitDecision(28); }
			switch (alt28)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:765:3: c= constraint
				{
				DebugLocation(765, 4);
				PushFollow(Follow._constraint_in_defined_type3310);
				c=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, c.Tree);
				DebugLocation(765, 16);
				if (state.backtracking == 0)
				{
					 retval.result.Constraint = (c!=null?c.result:default(Constraint)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(28); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("defined_type", 19);
			LeaveRule("defined_type", 19);
			LeaveRule_defined_type();
		}
		DebugLocation(765, 53);
		} finally { DebugExitRule(GrammarFileName, "defined_type"); }
		return retval;

	}
	// $ANTLR end "defined_type"

	private sealed partial class selection_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public SelectionType result;
		public selection_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_selection_type();
	partial void LeaveRule_selection_type();
	// $ANTLR start "selection_type"
	// Smi.g:767:1: selection_type returns [SelectionType result] : name= LOWER LESS t= type ;
	[GrammarRule("selection_type")]
	private SmiParser.selection_type_return selection_type()
	{
		EnterRule_selection_type();
		EnterRule("selection_type", 20);
		TraceIn("selection_type", 20);
		SmiParser.selection_type_return retval = new SmiParser.selection_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken name = default(IToken);
		IToken LESS74 = default(IToken);
		SmiParser.type_return t = default(SmiParser.type_return);

		CommonTree name_tree = default(CommonTree);
		CommonTree LESS74_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "selection_type");
		DebugLocation(767, 1);
		try
		{
			// Smi.g:768:5: (name= LOWER LESS t= type )
			DebugEnterAlt(1);
			// Smi.g:768:7: name= LOWER LESS t= type
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(768, 11);
			name=(IToken)Match(input,LOWER,Follow._LOWER_in_selection_type3333); if (state.failed) return retval;
			if (state.backtracking == 0) {
			name_tree = (CommonTree)adaptor.Create(name);
			adaptor.AddChild(root_0, name_tree);
			}
			DebugLocation(768, 18);
			LESS74=(IToken)Match(input,LESS,Follow._LESS_in_selection_type3335); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LESS74_tree = (CommonTree)adaptor.Create(LESS74);
			adaptor.AddChild(root_0, LESS74_tree);
			}
			DebugLocation(768, 24);
			PushFollow(Follow._type_in_selection_type3339);
			t=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, t.Tree);
			DebugLocation(768, 30);
			if (state.backtracking == 0)
			{
				 retval.result = new SelectionType((name!=null?name.Text:null), (t!=null?t.result:default(ISmiType))); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("selection_type", 20);
			LeaveRule("selection_type", 20);
			LeaveRule_selection_type();
		}
		DebugLocation(769, 1);
		} finally { DebugExitRule(GrammarFileName, "selection_type"); }
		return retval;

	}
	// $ANTLR end "selection_type"

	private sealed partial class any_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public AnyType result = new AnyType();
		public any_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_any_type();
	partial void LeaveRule_any_type();
	// $ANTLR start "any_type"
	// Smi.g:771:1: any_type returns [AnyType result = new AnyType()] : ANY_KW ( DEFINED_KW BY_KW def= LOWER )? ;
	[GrammarRule("any_type")]
	private SmiParser.any_type_return any_type()
	{
		EnterRule_any_type();
		EnterRule("any_type", 21);
		TraceIn("any_type", 21);
		SmiParser.any_type_return retval = new SmiParser.any_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken def = default(IToken);
		IToken ANY_KW75 = default(IToken);
		IToken DEFINED_KW76 = default(IToken);
		IToken BY_KW77 = default(IToken);

		CommonTree def_tree = default(CommonTree);
		CommonTree ANY_KW75_tree = default(CommonTree);
		CommonTree DEFINED_KW76_tree = default(CommonTree);
		CommonTree BY_KW77_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "any_type");
		DebugLocation(771, 1);
		try
		{
			// Smi.g:772:5: ( ANY_KW ( DEFINED_KW BY_KW def= LOWER )? )
			DebugEnterAlt(1);
			// Smi.g:772:7: ANY_KW ( DEFINED_KW BY_KW def= LOWER )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(772, 7);
			ANY_KW75=(IToken)Match(input,ANY_KW,Follow._ANY_KW_in_any_type3359); if (state.failed) return retval;
			if (state.backtracking == 0) {
			ANY_KW75_tree = (CommonTree)adaptor.Create(ANY_KW75);
			adaptor.AddChild(root_0, ANY_KW75_tree);
			}
			DebugLocation(772, 14);
			// Smi.g:772:14: ( DEFINED_KW BY_KW def= LOWER )?
			int alt29=2;
			try { DebugEnterSubRule(29);
			try { DebugEnterDecision(29, false);
			int LA29_1 = input.LA(1);

			if ((LA29_1==DEFINED_KW))
			{
				alt29 = 1;
			}
			} finally { DebugExitDecision(29); }
			switch (alt29)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:772:15: DEFINED_KW BY_KW def= LOWER
				{
				DebugLocation(772, 15);
				DEFINED_KW76=(IToken)Match(input,DEFINED_KW,Follow._DEFINED_KW_in_any_type3362); if (state.failed) return retval;
				if (state.backtracking == 0) {
				DEFINED_KW76_tree = (CommonTree)adaptor.Create(DEFINED_KW76);
				adaptor.AddChild(root_0, DEFINED_KW76_tree);
				}
				DebugLocation(772, 26);
				BY_KW77=(IToken)Match(input,BY_KW,Follow._BY_KW_in_any_type3364); if (state.failed) return retval;
				if (state.backtracking == 0) {
				BY_KW77_tree = (CommonTree)adaptor.Create(BY_KW77);
				adaptor.AddChild(root_0, BY_KW77_tree);
				}
				DebugLocation(772, 35);
				def=(IToken)Match(input,LOWER,Follow._LOWER_in_any_type3368); if (state.failed) return retval;
				if (state.backtracking == 0) {
				def_tree = (CommonTree)adaptor.Create(def);
				adaptor.AddChild(root_0, def_tree);
				}
				DebugLocation(772, 42);
				if (state.backtracking == 0)
				{
					 retval.result.DefinedById = (def!=null?def.Text:null); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(29); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("any_type", 21);
			LeaveRule("any_type", 21);
			LeaveRule_any_type();
		}
		DebugLocation(773, 1);
		} finally { DebugExitRule(GrammarFileName, "any_type"); }
		return retval;

	}
	// $ANTLR end "any_type"

	private sealed partial class bit_string_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public BitStringType result = new BitStringType();
		public bit_string_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_bit_string_type();
	partial void LeaveRule_bit_string_type();
	// $ANTLR start "bit_string_type"
	// Smi.g:776:1: bit_string_type returns [BitStringType result = new BitStringType()] : BIT_KW STRING_KW ( ( L_BRACE namedNumber )=>n= namedNumber_list )? (c= constraint )? ;
	[GrammarRule("bit_string_type")]
	private SmiParser.bit_string_type_return bit_string_type()
	{
		EnterRule_bit_string_type();
		EnterRule("bit_string_type", 22);
		TraceIn("bit_string_type", 22);
		SmiParser.bit_string_type_return retval = new SmiParser.bit_string_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken BIT_KW78 = default(IToken);
		IToken STRING_KW79 = default(IToken);
		SmiParser.namedNumber_list_return n = default(SmiParser.namedNumber_list_return);
		SmiParser.constraint_return c = default(SmiParser.constraint_return);

		CommonTree BIT_KW78_tree = default(CommonTree);
		CommonTree STRING_KW79_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "bit_string_type");
		DebugLocation(776, 1);
		try
		{
			// Smi.g:777:5: ( BIT_KW STRING_KW ( ( L_BRACE namedNumber )=>n= namedNumber_list )? (c= constraint )? )
			DebugEnterAlt(1);
			// Smi.g:777:7: BIT_KW STRING_KW ( ( L_BRACE namedNumber )=>n= namedNumber_list )? (c= constraint )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(777, 7);
			BIT_KW78=(IToken)Match(input,BIT_KW,Follow._BIT_KW_in_bit_string_type3393); if (state.failed) return retval;
			if (state.backtracking == 0) {
			BIT_KW78_tree = (CommonTree)adaptor.Create(BIT_KW78);
			adaptor.AddChild(root_0, BIT_KW78_tree);
			}
			DebugLocation(777, 14);
			STRING_KW79=(IToken)Match(input,STRING_KW,Follow._STRING_KW_in_bit_string_type3395); if (state.failed) return retval;
			if (state.backtracking == 0) {
			STRING_KW79_tree = (CommonTree)adaptor.Create(STRING_KW79);
			adaptor.AddChild(root_0, STRING_KW79_tree);
			}
			DebugLocation(777, 24);
			// Smi.g:777:24: ( ( L_BRACE namedNumber )=>n= namedNumber_list )?
			int alt30=2;
			try { DebugEnterSubRule(30);
			try { DebugEnterDecision(30, false);
			int LA30_1 = input.LA(1);

			if ((LA30_1==L_BRACE) && (EvaluatePredicate(synpred17_Smi_fragment)))
			{
				alt30 = 1;
			}
			} finally { DebugExitDecision(30); }
			switch (alt30)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:777:25: ( L_BRACE namedNumber )=>n= namedNumber_list
				{
				DebugLocation(777, 51);
				PushFollow(Follow._namedNumber_list_in_bit_string_type3408);
				n=namedNumber_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, n.Tree);
				DebugLocation(777, 69);
				if (state.backtracking == 0)
				{
					 retval.result.NamedNumberList = (n!=null?n.result:default(IList<ISmiValue>)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(30); }

			DebugLocation(778, 2);
			// Smi.g:778:2: (c= constraint )?
			int alt31=2;
			try { DebugEnterSubRule(31);
			try { DebugEnterDecision(31, false);
			int LA31_1 = input.LA(1);

			if ((LA31_1==L_PAREN))
			{
				alt31 = 1;
			}
			} finally { DebugExitDecision(31); }
			switch (alt31)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:778:3: c= constraint
				{
				DebugLocation(778, 4);
				PushFollow(Follow._constraint_in_bit_string_type3419);
				c=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, c.Tree);
				DebugLocation(778, 16);
				if (state.backtracking == 0)
				{
					 retval.result.Constraint = (c!=null?c.result:default(Constraint)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(31); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("bit_string_type", 22);
			LeaveRule("bit_string_type", 22);
			LeaveRule_bit_string_type();
		}
		DebugLocation(779, 1);
		} finally { DebugExitRule(GrammarFileName, "bit_string_type"); }
		return retval;

	}
	// $ANTLR end "bit_string_type"

	private sealed partial class boolean_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public BooleanType result = new BooleanType();
		public boolean_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_boolean_type();
	partial void LeaveRule_boolean_type();
	// $ANTLR start "boolean_type"
	// Smi.g:783:1: boolean_type returns [BooleanType result = new BooleanType()] : BOOLEAN_KW ;
	[GrammarRule("boolean_type")]
	private SmiParser.boolean_type_return boolean_type()
	{
		EnterRule_boolean_type();
		EnterRule("boolean_type", 23);
		TraceIn("boolean_type", 23);
		SmiParser.boolean_type_return retval = new SmiParser.boolean_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken BOOLEAN_KW80 = default(IToken);

		CommonTree BOOLEAN_KW80_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "boolean_type");
		DebugLocation(783, 1);
		try
		{
			// Smi.g:784:5: ( BOOLEAN_KW )
			DebugEnterAlt(1);
			// Smi.g:784:7: BOOLEAN_KW
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(784, 7);
			BOOLEAN_KW80=(IToken)Match(input,BOOLEAN_KW,Follow._BOOLEAN_KW_in_boolean_type3444); if (state.failed) return retval;
			if (state.backtracking == 0) {
			BOOLEAN_KW80_tree = (CommonTree)adaptor.Create(BOOLEAN_KW80);
			adaptor.AddChild(root_0, BOOLEAN_KW80_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("boolean_type", 23);
			LeaveRule("boolean_type", 23);
			LeaveRule_boolean_type();
		}
		DebugLocation(785, 1);
		} finally { DebugExitRule(GrammarFileName, "boolean_type"); }
		return retval;

	}
	// $ANTLR end "boolean_type"

	private sealed partial class character_str_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public CharacterStringType result = new CharacterStringType();
		public character_str_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_character_str_type();
	partial void LeaveRule_character_str_type();
	// $ANTLR start "character_str_type"
	// Smi.g:787:1: character_str_type returns [CharacterStringType result = new CharacterStringType()] : ( CHARACTER_KW STRING_KW |cs= character_set (c= constraint )? );
	[GrammarRule("character_str_type")]
	private SmiParser.character_str_type_return character_str_type()
	{
		EnterRule_character_str_type();
		EnterRule("character_str_type", 24);
		TraceIn("character_str_type", 24);
		SmiParser.character_str_type_return retval = new SmiParser.character_str_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken CHARACTER_KW81 = default(IToken);
		IToken STRING_KW82 = default(IToken);
		SmiParser.character_set_return cs = default(SmiParser.character_set_return);
		SmiParser.constraint_return c = default(SmiParser.constraint_return);

		CommonTree CHARACTER_KW81_tree = default(CommonTree);
		CommonTree STRING_KW82_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "character_str_type");
		DebugLocation(787, 2);
		try
		{
			// Smi.g:788:5: ( CHARACTER_KW STRING_KW |cs= character_set (c= constraint )? )
			int alt33=2;
			try { DebugEnterDecision(33, false);
			int LA33_1 = input.LA(1);

			if ((LA33_1==CHARACTER_KW))
			{
				alt33 = 1;
			}
			else if ((LA33_1==BMP_STR_KW||(LA33_1>=GENERALIZED_TIME_KW && LA33_1<=GRAPHIC_STR_KW)||LA33_1==IA5_STRING_KW||LA33_1==ISO646_STR_KW||LA33_1==NUMERIC_STR_KW||LA33_1==PRINTABLE_STR_KW||LA33_1==T61_STR_KW||LA33_1==TELETEX_STR_KW||LA33_1==UNIVERSAL_STR_KW||(LA33_1>=UTC_TIME_KW && LA33_1<=VISIBLE_STR_KW)))
			{
				alt33 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 33, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(33); }
			switch (alt33)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:788:7: CHARACTER_KW STRING_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(788, 7);
				CHARACTER_KW81=(IToken)Match(input,CHARACTER_KW,Follow._CHARACTER_KW_in_character_str_type3463); if (state.failed) return retval;
				if (state.backtracking == 0) {
				CHARACTER_KW81_tree = (CommonTree)adaptor.Create(CHARACTER_KW81);
				adaptor.AddChild(root_0, CHARACTER_KW81_tree);
				}
				DebugLocation(788, 20);
				STRING_KW82=(IToken)Match(input,STRING_KW,Follow._STRING_KW_in_character_str_type3465); if (state.failed) return retval;
				if (state.backtracking == 0) {
				STRING_KW82_tree = (CommonTree)adaptor.Create(STRING_KW82);
				adaptor.AddChild(root_0, STRING_KW82_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:789:5: cs= character_set (c= constraint )?
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(789, 7);
				PushFollow(Follow._character_set_in_character_str_type3474);
				cs=character_set();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, cs.Tree);
				DebugLocation(789, 22);
				if (state.backtracking == 0)
				{
					 retval.result.CharacterSet = (cs!=null?cs.result:default(CharacterSet)); 
				}
				DebugLocation(790, 3);
				// Smi.g:790:3: (c= constraint )?
				int alt32=2;
				try { DebugEnterSubRule(32);
				try { DebugEnterDecision(32, false);
				int LA32_1 = input.LA(1);

				if ((LA32_1==L_PAREN))
				{
					alt32 = 1;
				}
				} finally { DebugExitDecision(32); }
				switch (alt32)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:790:4: c= constraint
					{
					DebugLocation(790, 5);
					PushFollow(Follow._constraint_in_character_str_type3483);
					c=constraint();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, c.Tree);
					DebugLocation(790, 17);
					if (state.backtracking == 0)
					{
						 retval.result.Constraint = (c!=null?c.result:default(Constraint)); 
					}

					}
					break;

				}
				} finally { DebugExitSubRule(32); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("character_str_type", 24);
			LeaveRule("character_str_type", 24);
			LeaveRule_character_str_type();
		}
		DebugLocation(791, 2);
		} finally { DebugExitRule(GrammarFileName, "character_str_type"); }
		return retval;

	}
	// $ANTLR end "character_str_type"

	private sealed partial class choice_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ChoiceType result;
		public choice_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_choice_type();
	partial void LeaveRule_choice_type();
	// $ANTLR start "choice_type"
	// Smi.g:793:1: choice_type returns [ChoiceType result] : CHOICE_KW L_BRACE e= elementType_list R_BRACE ;
	[GrammarRule("choice_type")]
	private SmiParser.choice_type_return choice_type()
	{
		EnterRule_choice_type();
		EnterRule("choice_type", 25);
		TraceIn("choice_type", 25);
		SmiParser.choice_type_return retval = new SmiParser.choice_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken CHOICE_KW83 = default(IToken);
		IToken L_BRACE84 = default(IToken);
		IToken R_BRACE85 = default(IToken);
		SmiParser.elementType_list_return e = default(SmiParser.elementType_list_return);

		CommonTree CHOICE_KW83_tree = default(CommonTree);
		CommonTree L_BRACE84_tree = default(CommonTree);
		CommonTree R_BRACE85_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "choice_type");
		DebugLocation(793, 1);
		try
		{
			// Smi.g:794:5: ( CHOICE_KW L_BRACE e= elementType_list R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:794:7: CHOICE_KW L_BRACE e= elementType_list R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(794, 7);
			CHOICE_KW83=(IToken)Match(input,CHOICE_KW,Follow._CHOICE_KW_in_choice_type3507); if (state.failed) return retval;
			if (state.backtracking == 0) {
			CHOICE_KW83_tree = (CommonTree)adaptor.Create(CHOICE_KW83);
			adaptor.AddChild(root_0, CHOICE_KW83_tree);
			}
			DebugLocation(794, 17);
			L_BRACE84=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_choice_type3509); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE84_tree = (CommonTree)adaptor.Create(L_BRACE84);
			adaptor.AddChild(root_0, L_BRACE84_tree);
			}
			DebugLocation(794, 26);
			PushFollow(Follow._elementType_list_in_choice_type3513);
			e=elementType_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, e.Tree);
			DebugLocation(794, 44);
			R_BRACE85=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_choice_type3515); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE85_tree = (CommonTree)adaptor.Create(R_BRACE85);
			adaptor.AddChild(root_0, R_BRACE85_tree);
			}
			DebugLocation(794, 52);
			if (state.backtracking == 0)
			{
				 retval.result = new ChoiceType((e!=null?e.result:default(IList<ISmiType>))); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("choice_type", 25);
			LeaveRule("choice_type", 25);
			LeaveRule_choice_type();
		}
		DebugLocation(795, 1);
		} finally { DebugExitRule(GrammarFileName, "choice_type"); }
		return retval;

	}
	// $ANTLR end "choice_type"

	private sealed partial class embedded_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public EmbeddedType result = new EmbeddedType();
		public embedded_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_embedded_type();
	partial void LeaveRule_embedded_type();
	// $ANTLR start "embedded_type"
	// Smi.g:797:1: embedded_type returns [EmbeddedType result = new EmbeddedType()] : EMBEDDED_KW PDV_KW ;
	[GrammarRule("embedded_type")]
	private SmiParser.embedded_type_return embedded_type()
	{
		EnterRule_embedded_type();
		EnterRule("embedded_type", 26);
		TraceIn("embedded_type", 26);
		SmiParser.embedded_type_return retval = new SmiParser.embedded_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken EMBEDDED_KW86 = default(IToken);
		IToken PDV_KW87 = default(IToken);

		CommonTree EMBEDDED_KW86_tree = default(CommonTree);
		CommonTree PDV_KW87_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "embedded_type");
		DebugLocation(797, 1);
		try
		{
			// Smi.g:798:5: ( EMBEDDED_KW PDV_KW )
			DebugEnterAlt(1);
			// Smi.g:798:7: EMBEDDED_KW PDV_KW
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(798, 7);
			EMBEDDED_KW86=(IToken)Match(input,EMBEDDED_KW,Follow._EMBEDDED_KW_in_embedded_type3535); if (state.failed) return retval;
			if (state.backtracking == 0) {
			EMBEDDED_KW86_tree = (CommonTree)adaptor.Create(EMBEDDED_KW86);
			adaptor.AddChild(root_0, EMBEDDED_KW86_tree);
			}
			DebugLocation(798, 19);
			PDV_KW87=(IToken)Match(input,PDV_KW,Follow._PDV_KW_in_embedded_type3537); if (state.failed) return retval;
			if (state.backtracking == 0) {
			PDV_KW87_tree = (CommonTree)adaptor.Create(PDV_KW87);
			adaptor.AddChild(root_0, PDV_KW87_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("embedded_type", 26);
			LeaveRule("embedded_type", 26);
			LeaveRule_embedded_type();
		}
		DebugLocation(799, 1);
		} finally { DebugExitRule(GrammarFileName, "embedded_type"); }
		return retval;

	}
	// $ANTLR end "embedded_type"

	private sealed partial class enum_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public EnumType result;
		public enum_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_enum_type();
	partial void LeaveRule_enum_type();
	// $ANTLR start "enum_type"
	// Smi.g:801:1: enum_type returns [EnumType result] : ENUMERATED_KW n= namedNumber_list ;
	[GrammarRule("enum_type")]
	private SmiParser.enum_type_return enum_type()
	{
		EnterRule_enum_type();
		EnterRule("enum_type", 27);
		TraceIn("enum_type", 27);
		SmiParser.enum_type_return retval = new SmiParser.enum_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken ENUMERATED_KW88 = default(IToken);
		SmiParser.namedNumber_list_return n = default(SmiParser.namedNumber_list_return);

		CommonTree ENUMERATED_KW88_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "enum_type");
		DebugLocation(801, 1);
		try
		{
			// Smi.g:802:5: ( ENUMERATED_KW n= namedNumber_list )
			DebugEnterAlt(1);
			// Smi.g:802:7: ENUMERATED_KW n= namedNumber_list
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(802, 7);
			ENUMERATED_KW88=(IToken)Match(input,ENUMERATED_KW,Follow._ENUMERATED_KW_in_enum_type3556); if (state.failed) return retval;
			if (state.backtracking == 0) {
			ENUMERATED_KW88_tree = (CommonTree)adaptor.Create(ENUMERATED_KW88);
			adaptor.AddChild(root_0, ENUMERATED_KW88_tree);
			}
			DebugLocation(802, 22);
			PushFollow(Follow._namedNumber_list_in_enum_type3560);
			n=namedNumber_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, n.Tree);
			DebugLocation(802, 40);
			if (state.backtracking == 0)
			{
				 retval.result = new EnumType((n!=null?n.result:default(IList<ISmiValue>))); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("enum_type", 27);
			LeaveRule("enum_type", 27);
			LeaveRule_enum_type();
		}
		DebugLocation(803, 1);
		} finally { DebugExitRule(GrammarFileName, "enum_type"); }
		return retval;

	}
	// $ANTLR end "enum_type"

	private sealed partial class external_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ExternalType result = new ExternalType();
		public external_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_external_type();
	partial void LeaveRule_external_type();
	// $ANTLR start "external_type"
	// Smi.g:805:1: external_type returns [ExternalType result = new ExternalType()] : EXTERNAL_KW ;
	[GrammarRule("external_type")]
	private SmiParser.external_type_return external_type()
	{
		EnterRule_external_type();
		EnterRule("external_type", 28);
		TraceIn("external_type", 28);
		SmiParser.external_type_return retval = new SmiParser.external_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken EXTERNAL_KW89 = default(IToken);

		CommonTree EXTERNAL_KW89_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "external_type");
		DebugLocation(805, 1);
		try
		{
			// Smi.g:806:5: ( EXTERNAL_KW )
			DebugEnterAlt(1);
			// Smi.g:806:7: EXTERNAL_KW
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(806, 7);
			EXTERNAL_KW89=(IToken)Match(input,EXTERNAL_KW,Follow._EXTERNAL_KW_in_external_type3580); if (state.failed) return retval;
			if (state.backtracking == 0) {
			EXTERNAL_KW89_tree = (CommonTree)adaptor.Create(EXTERNAL_KW89);
			adaptor.AddChild(root_0, EXTERNAL_KW89_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("external_type", 28);
			LeaveRule("external_type", 28);
			LeaveRule_external_type();
		}
		DebugLocation(807, 1);
		} finally { DebugExitRule(GrammarFileName, "external_type"); }
		return retval;

	}
	// $ANTLR end "external_type"

	private sealed partial class integer_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public IntegerType result = new IntegerType();
		public integer_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_integer_type();
	partial void LeaveRule_integer_type();
	// $ANTLR start "integer_type"
	// Smi.g:810:1: integer_type returns [IntegerType result = new IntegerType()] : INTEGER_KW ( ( L_BRACE namedNumber )=>n= namedNumber_list |c= constraint )? ;
	[GrammarRule("integer_type")]
	private SmiParser.integer_type_return integer_type()
	{
		EnterRule_integer_type();
		EnterRule("integer_type", 29);
		TraceIn("integer_type", 29);
		SmiParser.integer_type_return retval = new SmiParser.integer_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken INTEGER_KW90 = default(IToken);
		SmiParser.namedNumber_list_return n = default(SmiParser.namedNumber_list_return);
		SmiParser.constraint_return c = default(SmiParser.constraint_return);

		CommonTree INTEGER_KW90_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "integer_type");
		DebugLocation(810, 1);
		try
		{
			// Smi.g:811:5: ( INTEGER_KW ( ( L_BRACE namedNumber )=>n= namedNumber_list |c= constraint )? )
			DebugEnterAlt(1);
			// Smi.g:811:7: INTEGER_KW ( ( L_BRACE namedNumber )=>n= namedNumber_list |c= constraint )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(811, 7);
			INTEGER_KW90=(IToken)Match(input,INTEGER_KW,Follow._INTEGER_KW_in_integer_type3601); if (state.failed) return retval;
			if (state.backtracking == 0) {
			INTEGER_KW90_tree = (CommonTree)adaptor.Create(INTEGER_KW90);
			adaptor.AddChild(root_0, INTEGER_KW90_tree);
			}
			DebugLocation(811, 18);
			// Smi.g:811:18: ( ( L_BRACE namedNumber )=>n= namedNumber_list |c= constraint )?
			int alt34=3;
			try { DebugEnterSubRule(34);
			try { DebugEnterDecision(34, false);
			int LA34_1 = input.LA(1);

			if ((LA34_1==L_BRACE) && (EvaluatePredicate(synpred18_Smi_fragment)))
			{
				alt34 = 1;
			}
			else if ((LA34_1==L_PAREN))
			{
				alt34 = 2;
			}
			} finally { DebugExitDecision(34); }
			switch (alt34)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:811:19: ( L_BRACE namedNumber )=>n= namedNumber_list
				{
				DebugLocation(811, 45);
				PushFollow(Follow._namedNumber_list_in_integer_type3614);
				n=namedNumber_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, n.Tree);
				DebugLocation(811, 63);
				if (state.backtracking == 0)
				{
					 retval.result.NamedNumberList = (n!=null?n.result:default(IList<ISmiValue>)); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:812:4: c= constraint
				{
				DebugLocation(812, 5);
				PushFollow(Follow._constraint_in_integer_type3623);
				c=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, c.Tree);
				DebugLocation(812, 17);
				if (state.backtracking == 0)
				{
					 retval.result.Constraint = (c!=null?c.result:default(Constraint)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(34); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("integer_type", 29);
			LeaveRule("integer_type", 29);
			LeaveRule_integer_type();
		}
		DebugLocation(813, 1);
		} finally { DebugExitRule(GrammarFileName, "integer_type"); }
		return retval;

	}
	// $ANTLR end "integer_type"

	private sealed partial class null_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public NullType result = new NullType();
		public null_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_null_type();
	partial void LeaveRule_null_type();
	// $ANTLR start "null_type"
	// Smi.g:817:1: null_type returns [NullType result = new NullType()] : NULL_KW ;
	[GrammarRule("null_type")]
	private SmiParser.null_type_return null_type()
	{
		EnterRule_null_type();
		EnterRule("null_type", 30);
		TraceIn("null_type", 30);
		SmiParser.null_type_return retval = new SmiParser.null_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken NULL_KW91 = default(IToken);

		CommonTree NULL_KW91_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "null_type");
		DebugLocation(817, 1);
		try
		{
			// Smi.g:818:5: ( NULL_KW )
			DebugEnterAlt(1);
			// Smi.g:818:7: NULL_KW
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(818, 7);
			NULL_KW91=(IToken)Match(input,NULL_KW,Follow._NULL_KW_in_null_type3648); if (state.failed) return retval;
			if (state.backtracking == 0) {
			NULL_KW91_tree = (CommonTree)adaptor.Create(NULL_KW91);
			adaptor.AddChild(root_0, NULL_KW91_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("null_type", 30);
			LeaveRule("null_type", 30);
			LeaveRule_null_type();
		}
		DebugLocation(819, 1);
		} finally { DebugExitRule(GrammarFileName, "null_type"); }
		return retval;

	}
	// $ANTLR end "null_type"

	private sealed partial class object_identifier_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ObjectIdentifierType result = new ObjectIdentifierType();
		public object_identifier_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_object_identifier_type();
	partial void LeaveRule_object_identifier_type();
	// $ANTLR start "object_identifier_type"
	// Smi.g:821:1: object_identifier_type returns [ObjectIdentifierType result = new ObjectIdentifierType()] : OBJECT_KW IDENTIFIER_KW ;
	[GrammarRule("object_identifier_type")]
	private SmiParser.object_identifier_type_return object_identifier_type()
	{
		EnterRule_object_identifier_type();
		EnterRule("object_identifier_type", 31);
		TraceIn("object_identifier_type", 31);
		SmiParser.object_identifier_type_return retval = new SmiParser.object_identifier_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken OBJECT_KW92 = default(IToken);
		IToken IDENTIFIER_KW93 = default(IToken);

		CommonTree OBJECT_KW92_tree = default(CommonTree);
		CommonTree IDENTIFIER_KW93_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "object_identifier_type");
		DebugLocation(821, 1);
		try
		{
			// Smi.g:822:5: ( OBJECT_KW IDENTIFIER_KW )
			DebugEnterAlt(1);
			// Smi.g:822:7: OBJECT_KW IDENTIFIER_KW
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(822, 7);
			OBJECT_KW92=(IToken)Match(input,OBJECT_KW,Follow._OBJECT_KW_in_object_identifier_type3667); if (state.failed) return retval;
			if (state.backtracking == 0) {
			OBJECT_KW92_tree = (CommonTree)adaptor.Create(OBJECT_KW92);
			adaptor.AddChild(root_0, OBJECT_KW92_tree);
			}
			DebugLocation(822, 17);
			IDENTIFIER_KW93=(IToken)Match(input,IDENTIFIER_KW,Follow._IDENTIFIER_KW_in_object_identifier_type3669); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER_KW93_tree = (CommonTree)adaptor.Create(IDENTIFIER_KW93);
			adaptor.AddChild(root_0, IDENTIFIER_KW93_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("object_identifier_type", 31);
			LeaveRule("object_identifier_type", 31);
			LeaveRule_object_identifier_type();
		}
		DebugLocation(823, 1);
		} finally { DebugExitRule(GrammarFileName, "object_identifier_type"); }
		return retval;

	}
	// $ANTLR end "object_identifier_type"

	private sealed partial class octetString_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public OctetStringType result = new OctetStringType();
		public octetString_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_octetString_type();
	partial void LeaveRule_octetString_type();
	// $ANTLR start "octetString_type"
	// Smi.g:825:1: octetString_type returns [OctetStringType result = new OctetStringType()] : OCTET_KW STRING_KW (c= constraint )? ;
	[GrammarRule("octetString_type")]
	private SmiParser.octetString_type_return octetString_type()
	{
		EnterRule_octetString_type();
		EnterRule("octetString_type", 32);
		TraceIn("octetString_type", 32);
		SmiParser.octetString_type_return retval = new SmiParser.octetString_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken OCTET_KW94 = default(IToken);
		IToken STRING_KW95 = default(IToken);
		SmiParser.constraint_return c = default(SmiParser.constraint_return);

		CommonTree OCTET_KW94_tree = default(CommonTree);
		CommonTree STRING_KW95_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "octetString_type");
		DebugLocation(825, 1);
		try
		{
			// Smi.g:826:5: ( OCTET_KW STRING_KW (c= constraint )? )
			DebugEnterAlt(1);
			// Smi.g:826:7: OCTET_KW STRING_KW (c= constraint )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(826, 7);
			OCTET_KW94=(IToken)Match(input,OCTET_KW,Follow._OCTET_KW_in_octetString_type3688); if (state.failed) return retval;
			if (state.backtracking == 0) {
			OCTET_KW94_tree = (CommonTree)adaptor.Create(OCTET_KW94);
			adaptor.AddChild(root_0, OCTET_KW94_tree);
			}
			DebugLocation(826, 16);
			STRING_KW95=(IToken)Match(input,STRING_KW,Follow._STRING_KW_in_octetString_type3690); if (state.failed) return retval;
			if (state.backtracking == 0) {
			STRING_KW95_tree = (CommonTree)adaptor.Create(STRING_KW95);
			adaptor.AddChild(root_0, STRING_KW95_tree);
			}
			DebugLocation(826, 26);
			// Smi.g:826:26: (c= constraint )?
			int alt35=2;
			try { DebugEnterSubRule(35);
			try { DebugEnterDecision(35, false);
			int LA35_1 = input.LA(1);

			if ((LA35_1==L_PAREN))
			{
				alt35 = 1;
			}
			} finally { DebugExitDecision(35); }
			switch (alt35)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:826:27: c= constraint
				{
				DebugLocation(826, 28);
				PushFollow(Follow._constraint_in_octetString_type3695);
				c=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, c.Tree);
				DebugLocation(826, 40);
				if (state.backtracking == 0)
				{
					 retval.result.Constraint = (c!=null?c.result:default(Constraint)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(35); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("octetString_type", 32);
			LeaveRule("octetString_type", 32);
			LeaveRule_octetString_type();
		}
		DebugLocation(827, 1);
		} finally { DebugExitRule(GrammarFileName, "octetString_type"); }
		return retval;

	}
	// $ANTLR end "octetString_type"

	private sealed partial class real_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public RealType result = new RealType();
		public real_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_real_type();
	partial void LeaveRule_real_type();
	// $ANTLR start "real_type"
	// Smi.g:829:1: real_type returns [RealType result = new RealType()] : REAL_KW ;
	[GrammarRule("real_type")]
	private SmiParser.real_type_return real_type()
	{
		EnterRule_real_type();
		EnterRule("real_type", 33);
		TraceIn("real_type", 33);
		SmiParser.real_type_return retval = new SmiParser.real_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken REAL_KW96 = default(IToken);

		CommonTree REAL_KW96_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "real_type");
		DebugLocation(829, 1);
		try
		{
			// Smi.g:830:5: ( REAL_KW )
			DebugEnterAlt(1);
			// Smi.g:830:7: REAL_KW
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(830, 7);
			REAL_KW96=(IToken)Match(input,REAL_KW,Follow._REAL_KW_in_real_type3718); if (state.failed) return retval;
			if (state.backtracking == 0) {
			REAL_KW96_tree = (CommonTree)adaptor.Create(REAL_KW96);
			adaptor.AddChild(root_0, REAL_KW96_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("real_type", 33);
			LeaveRule("real_type", 33);
			LeaveRule_real_type();
		}
		DebugLocation(831, 1);
		} finally { DebugExitRule(GrammarFileName, "real_type"); }
		return retval;

	}
	// $ANTLR end "real_type"

	private sealed partial class relativeOid_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public RelativeIdType result = new RelativeIdType();
		public relativeOid_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_relativeOid_type();
	partial void LeaveRule_relativeOid_type();
	// $ANTLR start "relativeOid_type"
	// Smi.g:834:1: relativeOid_type returns [RelativeIdType result = new RelativeIdType()] : 'RELATIVE-OID' ;
	[GrammarRule("relativeOid_type")]
	private SmiParser.relativeOid_type_return relativeOid_type()
	{
		EnterRule_relativeOid_type();
		EnterRule("relativeOid_type", 34);
		TraceIn("relativeOid_type", 34);
		SmiParser.relativeOid_type_return retval = new SmiParser.relativeOid_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal97 = default(IToken);

		CommonTree string_literal97_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "relativeOid_type");
		DebugLocation(834, 1);
		try
		{
			// Smi.g:835:5: ( 'RELATIVE-OID' )
			DebugEnterAlt(1);
			// Smi.g:835:7: 'RELATIVE-OID'
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(835, 7);
			string_literal97=(IToken)Match(input,178,Follow._178_in_relativeOid_type3740); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal97_tree = (CommonTree)adaptor.Create(string_literal97);
			adaptor.AddChild(root_0, string_literal97_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("relativeOid_type", 34);
			LeaveRule("relativeOid_type", 34);
			LeaveRule_relativeOid_type();
		}
		DebugLocation(836, 1);
		} finally { DebugExitRule(GrammarFileName, "relativeOid_type"); }
		return retval;

	}
	// $ANTLR end "relativeOid_type"

	private sealed partial class sequence_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public SequenceType result = new SequenceType();
		public sequence_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_sequence_type();
	partial void LeaveRule_sequence_type();
	// $ANTLR start "sequence_type"
	// Smi.g:840:1: sequence_type returns [SequenceType result = new SequenceType()] : SEQUENCE_KW L_BRACE (e= elementType_list )? R_BRACE ;
	[GrammarRule("sequence_type")]
	private SmiParser.sequence_type_return sequence_type()
	{
		EnterRule_sequence_type();
		EnterRule("sequence_type", 35);
		TraceIn("sequence_type", 35);
		SmiParser.sequence_type_return retval = new SmiParser.sequence_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken SEQUENCE_KW98 = default(IToken);
		IToken L_BRACE99 = default(IToken);
		IToken R_BRACE100 = default(IToken);
		SmiParser.elementType_list_return e = default(SmiParser.elementType_list_return);

		CommonTree SEQUENCE_KW98_tree = default(CommonTree);
		CommonTree L_BRACE99_tree = default(CommonTree);
		CommonTree R_BRACE100_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "sequence_type");
		DebugLocation(840, 1);
		try
		{
			// Smi.g:841:5: ( SEQUENCE_KW L_BRACE (e= elementType_list )? R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:841:7: SEQUENCE_KW L_BRACE (e= elementType_list )? R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(841, 7);
			SEQUENCE_KW98=(IToken)Match(input,SEQUENCE_KW,Follow._SEQUENCE_KW_in_sequence_type3761); if (state.failed) return retval;
			if (state.backtracking == 0) {
			SEQUENCE_KW98_tree = (CommonTree)adaptor.Create(SEQUENCE_KW98);
			adaptor.AddChild(root_0, SEQUENCE_KW98_tree);
			}
			DebugLocation(841, 19);
			L_BRACE99=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_sequence_type3763); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE99_tree = (CommonTree)adaptor.Create(L_BRACE99);
			adaptor.AddChild(root_0, L_BRACE99_tree);
			}
			DebugLocation(841, 27);
			// Smi.g:841:27: (e= elementType_list )?
			int alt36=2;
			try { DebugEnterSubRule(36);
			try { DebugEnterDecision(36, false);
			int LA36_1 = input.LA(1);

			if ((LA36_1==COMPONENTS_KW||LA36_1==LOWER))
			{
				alt36 = 1;
			}
			} finally { DebugExitDecision(36); }
			switch (alt36)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:841:28: e= elementType_list
				{
				DebugLocation(841, 29);
				PushFollow(Follow._elementType_list_in_sequence_type3768);
				e=elementType_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, e.Tree);
				DebugLocation(841, 47);
				if (state.backtracking == 0)
				{
					 retval.result.ElementTypeList = (e!=null?e.result:default(IList<ISmiType>)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(36); }

			DebugLocation(841, 90);
			R_BRACE100=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_sequence_type3774); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE100_tree = (CommonTree)adaptor.Create(R_BRACE100);
			adaptor.AddChild(root_0, R_BRACE100_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("sequence_type", 35);
			LeaveRule("sequence_type", 35);
			LeaveRule_sequence_type();
		}
		DebugLocation(842, 1);
		} finally { DebugExitRule(GrammarFileName, "sequence_type"); }
		return retval;

	}
	// $ANTLR end "sequence_type"

	private sealed partial class sequenceof_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public SequenceOfType result = new SequenceOfType();
		public sequenceof_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_sequenceof_type();
	partial void LeaveRule_sequenceof_type();
	// $ANTLR start "sequenceof_type"
	// Smi.g:844:1: sequenceof_type returns [SequenceOfType result = new SequenceOfType()] : SEQUENCE_KW ( L_PAREN SIZE_KW c= constraint R_PAREN )? OF_KW t= type ;
	[GrammarRule("sequenceof_type")]
	private SmiParser.sequenceof_type_return sequenceof_type()
	{
		EnterRule_sequenceof_type();
		EnterRule("sequenceof_type", 36);
		TraceIn("sequenceof_type", 36);
		SmiParser.sequenceof_type_return retval = new SmiParser.sequenceof_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken SEQUENCE_KW101 = default(IToken);
		IToken L_PAREN102 = default(IToken);
		IToken SIZE_KW103 = default(IToken);
		IToken R_PAREN104 = default(IToken);
		IToken OF_KW105 = default(IToken);
		SmiParser.constraint_return c = default(SmiParser.constraint_return);
		SmiParser.type_return t = default(SmiParser.type_return);

		CommonTree SEQUENCE_KW101_tree = default(CommonTree);
		CommonTree L_PAREN102_tree = default(CommonTree);
		CommonTree SIZE_KW103_tree = default(CommonTree);
		CommonTree R_PAREN104_tree = default(CommonTree);
		CommonTree OF_KW105_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "sequenceof_type");
		DebugLocation(844, 1);
		try
		{
			// Smi.g:845:5: ( SEQUENCE_KW ( L_PAREN SIZE_KW c= constraint R_PAREN )? OF_KW t= type )
			DebugEnterAlt(1);
			// Smi.g:845:7: SEQUENCE_KW ( L_PAREN SIZE_KW c= constraint R_PAREN )? OF_KW t= type
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(845, 7);
			SEQUENCE_KW101=(IToken)Match(input,SEQUENCE_KW,Follow._SEQUENCE_KW_in_sequenceof_type3793); if (state.failed) return retval;
			if (state.backtracking == 0) {
			SEQUENCE_KW101_tree = (CommonTree)adaptor.Create(SEQUENCE_KW101);
			adaptor.AddChild(root_0, SEQUENCE_KW101_tree);
			}
			DebugLocation(845, 19);
			// Smi.g:845:19: ( L_PAREN SIZE_KW c= constraint R_PAREN )?
			int alt37=2;
			try { DebugEnterSubRule(37);
			try { DebugEnterDecision(37, false);
			int LA37_1 = input.LA(1);

			if ((LA37_1==L_PAREN))
			{
				alt37 = 1;
			}
			} finally { DebugExitDecision(37); }
			switch (alt37)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:845:20: L_PAREN SIZE_KW c= constraint R_PAREN
				{
				DebugLocation(845, 20);
				L_PAREN102=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_sequenceof_type3796); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_PAREN102_tree = (CommonTree)adaptor.Create(L_PAREN102);
				adaptor.AddChild(root_0, L_PAREN102_tree);
				}
				DebugLocation(845, 28);
				SIZE_KW103=(IToken)Match(input,SIZE_KW,Follow._SIZE_KW_in_sequenceof_type3798); if (state.failed) return retval;
				if (state.backtracking == 0) {
				SIZE_KW103_tree = (CommonTree)adaptor.Create(SIZE_KW103);
				adaptor.AddChild(root_0, SIZE_KW103_tree);
				}
				DebugLocation(845, 37);
				PushFollow(Follow._constraint_in_sequenceof_type3802);
				c=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, c.Tree);
				DebugLocation(845, 49);
				if (state.backtracking == 0)
				{
					 retval.result.Constraint = (c!=null?c.result:default(Constraint)); 
				}
				DebugLocation(845, 85);
				R_PAREN104=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_sequenceof_type3806); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_PAREN104_tree = (CommonTree)adaptor.Create(R_PAREN104);
				adaptor.AddChild(root_0, R_PAREN104_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(37); }

			DebugLocation(846, 2);
			OF_KW105=(IToken)Match(input,OF_KW,Follow._OF_KW_in_sequenceof_type3811); if (state.failed) return retval;
			if (state.backtracking == 0) {
			OF_KW105_tree = (CommonTree)adaptor.Create(OF_KW105);
			adaptor.AddChild(root_0, OF_KW105_tree);
			}
			DebugLocation(846, 9);
			PushFollow(Follow._type_in_sequenceof_type3815);
			t=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, t.Tree);
			DebugLocation(846, 15);
			if (state.backtracking == 0)
			{
				 retval.result.Subtype = (t!=null?t.result:default(ISmiType)); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("sequenceof_type", 36);
			LeaveRule("sequenceof_type", 36);
			LeaveRule_sequenceof_type();
		}
		DebugLocation(847, 1);
		} finally { DebugExitRule(GrammarFileName, "sequenceof_type"); }
		return retval;

	}
	// $ANTLR end "sequenceof_type"

	private sealed partial class set_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public SetType result = new SetType();
		public set_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_set_type();
	partial void LeaveRule_set_type();
	// $ANTLR start "set_type"
	// Smi.g:849:1: set_type returns [SetType result = new SetType()] : SET_KW L_BRACE (e= elementType_list )? R_BRACE ;
	[GrammarRule("set_type")]
	private SmiParser.set_type_return set_type()
	{
		EnterRule_set_type();
		EnterRule("set_type", 37);
		TraceIn("set_type", 37);
		SmiParser.set_type_return retval = new SmiParser.set_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken SET_KW106 = default(IToken);
		IToken L_BRACE107 = default(IToken);
		IToken R_BRACE108 = default(IToken);
		SmiParser.elementType_list_return e = default(SmiParser.elementType_list_return);

		CommonTree SET_KW106_tree = default(CommonTree);
		CommonTree L_BRACE107_tree = default(CommonTree);
		CommonTree R_BRACE108_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "set_type");
		DebugLocation(849, 1);
		try
		{
			// Smi.g:850:5: ( SET_KW L_BRACE (e= elementType_list )? R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:850:7: SET_KW L_BRACE (e= elementType_list )? R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(850, 7);
			SET_KW106=(IToken)Match(input,SET_KW,Follow._SET_KW_in_set_type3835); if (state.failed) return retval;
			if (state.backtracking == 0) {
			SET_KW106_tree = (CommonTree)adaptor.Create(SET_KW106);
			adaptor.AddChild(root_0, SET_KW106_tree);
			}
			DebugLocation(850, 14);
			L_BRACE107=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_set_type3837); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE107_tree = (CommonTree)adaptor.Create(L_BRACE107);
			adaptor.AddChild(root_0, L_BRACE107_tree);
			}
			DebugLocation(850, 22);
			// Smi.g:850:22: (e= elementType_list )?
			int alt38=2;
			try { DebugEnterSubRule(38);
			try { DebugEnterDecision(38, false);
			int LA38_1 = input.LA(1);

			if ((LA38_1==COMPONENTS_KW||LA38_1==LOWER))
			{
				alt38 = 1;
			}
			} finally { DebugExitDecision(38); }
			switch (alt38)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:850:23: e= elementType_list
				{
				DebugLocation(850, 24);
				PushFollow(Follow._elementType_list_in_set_type3842);
				e=elementType_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, e.Tree);
				DebugLocation(850, 42);
				if (state.backtracking == 0)
				{
					 retval.result.ElementTypeList = (e!=null?e.result:default(IList<ISmiType>)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(38); }

			DebugLocation(850, 85);
			R_BRACE108=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_set_type3848); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE108_tree = (CommonTree)adaptor.Create(R_BRACE108);
			adaptor.AddChild(root_0, R_BRACE108_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("set_type", 37);
			LeaveRule("set_type", 37);
			LeaveRule_set_type();
		}
		DebugLocation(851, 1);
		} finally { DebugExitRule(GrammarFileName, "set_type"); }
		return retval;

	}
	// $ANTLR end "set_type"

	private sealed partial class setof_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public SetOfType result = new SetOfType();
		public setof_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_setof_type();
	partial void LeaveRule_setof_type();
	// $ANTLR start "setof_type"
	// Smi.g:853:1: setof_type returns [SetOfType result = new SetOfType()] : SET_KW ( SIZE_KW c= constraint )? OF_KW t= type ;
	[GrammarRule("setof_type")]
	private SmiParser.setof_type_return setof_type()
	{
		EnterRule_setof_type();
		EnterRule("setof_type", 38);
		TraceIn("setof_type", 38);
		SmiParser.setof_type_return retval = new SmiParser.setof_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken SET_KW109 = default(IToken);
		IToken SIZE_KW110 = default(IToken);
		IToken OF_KW111 = default(IToken);
		SmiParser.constraint_return c = default(SmiParser.constraint_return);
		SmiParser.type_return t = default(SmiParser.type_return);

		CommonTree SET_KW109_tree = default(CommonTree);
		CommonTree SIZE_KW110_tree = default(CommonTree);
		CommonTree OF_KW111_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "setof_type");
		DebugLocation(853, 1);
		try
		{
			// Smi.g:854:5: ( SET_KW ( SIZE_KW c= constraint )? OF_KW t= type )
			DebugEnterAlt(1);
			// Smi.g:854:7: SET_KW ( SIZE_KW c= constraint )? OF_KW t= type
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(854, 7);
			SET_KW109=(IToken)Match(input,SET_KW,Follow._SET_KW_in_setof_type3866); if (state.failed) return retval;
			if (state.backtracking == 0) {
			SET_KW109_tree = (CommonTree)adaptor.Create(SET_KW109);
			adaptor.AddChild(root_0, SET_KW109_tree);
			}
			DebugLocation(854, 14);
			// Smi.g:854:14: ( SIZE_KW c= constraint )?
			int alt39=2;
			try { DebugEnterSubRule(39);
			try { DebugEnterDecision(39, false);
			int LA39_1 = input.LA(1);

			if ((LA39_1==SIZE_KW))
			{
				alt39 = 1;
			}
			} finally { DebugExitDecision(39); }
			switch (alt39)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:854:15: SIZE_KW c= constraint
				{
				DebugLocation(854, 15);
				SIZE_KW110=(IToken)Match(input,SIZE_KW,Follow._SIZE_KW_in_setof_type3869); if (state.failed) return retval;
				if (state.backtracking == 0) {
				SIZE_KW110_tree = (CommonTree)adaptor.Create(SIZE_KW110);
				adaptor.AddChild(root_0, SIZE_KW110_tree);
				}
				DebugLocation(854, 24);
				PushFollow(Follow._constraint_in_setof_type3873);
				c=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, c.Tree);
				DebugLocation(854, 36);
				if (state.backtracking == 0)
				{
					 retval.result.Constraint = (c!=null?c.result:default(Constraint)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(39); }

			DebugLocation(855, 2);
			OF_KW111=(IToken)Match(input,OF_KW,Follow._OF_KW_in_setof_type3880); if (state.failed) return retval;
			if (state.backtracking == 0) {
			OF_KW111_tree = (CommonTree)adaptor.Create(OF_KW111);
			adaptor.AddChild(root_0, OF_KW111_tree);
			}
			DebugLocation(855, 9);
			PushFollow(Follow._type_in_setof_type3884);
			t=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, t.Tree);
			DebugLocation(855, 15);
			if (state.backtracking == 0)
			{
				 retval.result.Subtype = (t!=null?t.result:default(ISmiType)); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("setof_type", 38);
			LeaveRule("setof_type", 38);
			LeaveRule_setof_type();
		}
		DebugLocation(856, 1);
		} finally { DebugExitRule(GrammarFileName, "setof_type"); }
		return retval;

	}
	// $ANTLR end "setof_type"

	private sealed partial class tagged_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public TaggedType result = new TaggedType();
		public tagged_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_tagged_type();
	partial void LeaveRule_tagged_type();
	// $ANTLR start "tagged_type"
	// Smi.g:858:1: tagged_type returns [TaggedType result = new TaggedType()] : t= tag (td= tag_default )? ty= type ;
	[GrammarRule("tagged_type")]
	private SmiParser.tagged_type_return tagged_type()
	{
		EnterRule_tagged_type();
		EnterRule("tagged_type", 39);
		TraceIn("tagged_type", 39);
		SmiParser.tagged_type_return retval = new SmiParser.tagged_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		SmiParser.tag_return t = default(SmiParser.tag_return);
		SmiParser.tag_default_return td = default(SmiParser.tag_default_return);
		SmiParser.type_return ty = default(SmiParser.type_return);

		try { DebugEnterRule(GrammarFileName, "tagged_type");
		DebugLocation(858, 1);
		try
		{
			// Smi.g:859:5: (t= tag (td= tag_default )? ty= type )
			DebugEnterAlt(1);
			// Smi.g:859:7: t= tag (td= tag_default )? ty= type
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(859, 8);
			PushFollow(Follow._tag_in_tagged_type3906);
			t=tag();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, t.Tree);
			DebugLocation(859, 13);
			if (state.backtracking == 0)
			{
				 retval.result.Tag = (t!=null?t.result:default(Tag)); 
			}
			DebugLocation(860, 2);
			// Smi.g:860:2: (td= tag_default )?
			int alt40=2;
			try { DebugEnterSubRule(40);
			try { DebugEnterDecision(40, false);
			int LA40_1 = input.LA(1);

			if ((LA40_1==AUTOMATIC_KW||LA40_1==EXPLICIT_KW||LA40_1==IMPLICIT_KW))
			{
				alt40 = 1;
			}
			} finally { DebugExitDecision(40); }
			switch (alt40)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:860:3: td= tag_default
				{
				DebugLocation(860, 5);
				PushFollow(Follow._tag_default_in_tagged_type3914);
				td=tag_default();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, td.Tree);
				DebugLocation(860, 18);
				if (state.backtracking == 0)
				{
					 retval.result.TagDefault = (td!=null?td.result:default(TagDefault)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(40); }

			DebugLocation(861, 4);
			PushFollow(Follow._type_in_tagged_type3924);
			ty=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, ty.Tree);
			DebugLocation(861, 10);
			if (state.backtracking == 0)
			{
				 retval.result.Subtype = (ty!=null?ty.result:default(ISmiType)); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("tagged_type", 39);
			LeaveRule("tagged_type", 39);
			LeaveRule_tagged_type();
		}
		DebugLocation(862, 1);
		} finally { DebugExitRule(GrammarFileName, "tagged_type"); }
		return retval;

	}
	// $ANTLR end "tagged_type"

	private sealed partial class namedNumber_list_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public IList<ISmiValue> result = new List<ISmiValue>();
		public namedNumber_list_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_namedNumber_list();
	partial void LeaveRule_namedNumber_list();
	// $ANTLR start "namedNumber_list"
	// Smi.g:864:1: namedNumber_list returns [IList<ISmiValue> result = new List<ISmiValue>()] : L_BRACE num1= namedNumber ( COMMA num2= namedNumber )* R_BRACE ;
	[GrammarRule("namedNumber_list")]
	private SmiParser.namedNumber_list_return namedNumber_list()
	{
		EnterRule_namedNumber_list();
		EnterRule("namedNumber_list", 40);
		TraceIn("namedNumber_list", 40);
		SmiParser.namedNumber_list_return retval = new SmiParser.namedNumber_list_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE112 = default(IToken);
		IToken COMMA113 = default(IToken);
		IToken R_BRACE114 = default(IToken);
		SmiParser.namedNumber_return num1 = default(SmiParser.namedNumber_return);
		SmiParser.namedNumber_return num2 = default(SmiParser.namedNumber_return);

		CommonTree L_BRACE112_tree = default(CommonTree);
		CommonTree COMMA113_tree = default(CommonTree);
		CommonTree R_BRACE114_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "namedNumber_list");
		DebugLocation(864, 1);
		try
		{
			// Smi.g:865:5: ( L_BRACE num1= namedNumber ( COMMA num2= namedNumber )* R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:865:7: L_BRACE num1= namedNumber ( COMMA num2= namedNumber )* R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(865, 7);
			L_BRACE112=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_namedNumber_list3944); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE112_tree = (CommonTree)adaptor.Create(L_BRACE112);
			adaptor.AddChild(root_0, L_BRACE112_tree);
			}
			DebugLocation(865, 19);
			PushFollow(Follow._namedNumber_in_namedNumber_list3948);
			num1=namedNumber();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, num1.Tree);
			DebugLocation(865, 32);
			if (state.backtracking == 0)
			{
				 retval.result.Add((num1!=null?num1.result:default(NamedNumber))); 
			}
			DebugLocation(866, 2);
			// Smi.g:866:2: ( COMMA num2= namedNumber )*
			try { DebugEnterSubRule(41);
			while (true)
			{
				int alt41=2;
				try { DebugEnterDecision(41, false);
				int LA41_1 = input.LA(1);

				if ((LA41_1==COMMA))
				{
					alt41 = 1;
				}


				} finally { DebugExitDecision(41); }
				switch ( alt41 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:866:3: COMMA num2= namedNumber
					{
					DebugLocation(866, 3);
					COMMA113=(IToken)Match(input,COMMA,Follow._COMMA_in_namedNumber_list3954); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA113_tree = (CommonTree)adaptor.Create(COMMA113);
					adaptor.AddChild(root_0, COMMA113_tree);
					}
					DebugLocation(866, 13);
					PushFollow(Follow._namedNumber_in_namedNumber_list3958);
					num2=namedNumber();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, num2.Tree);
					DebugLocation(866, 26);
					if (state.backtracking == 0)
					{
						 retval.result.Add((num2!=null?num2.result:default(NamedNumber))); 
					}

					}
					break;

				default:
					goto loop41;
				}
			}

			loop41:
				;

			} finally { DebugExitSubRule(41); }

			DebugLocation(866, 59);
			R_BRACE114=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_namedNumber_list3964); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE114_tree = (CommonTree)adaptor.Create(R_BRACE114);
			adaptor.AddChild(root_0, R_BRACE114_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("namedNumber_list", 40);
			LeaveRule("namedNumber_list", 40);
			LeaveRule_namedNumber_list();
		}
		DebugLocation(867, 1);
		} finally { DebugExitRule(GrammarFileName, "namedNumber_list"); }
		return retval;

	}
	// $ANTLR end "namedNumber_list"

	private sealed partial class constraint_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public Constraint result = new Constraint();
		public constraint_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_constraint();
	partial void LeaveRule_constraint();
	// $ANTLR start "constraint"
	// Smi.g:869:1: constraint returns [Constraint result = new Constraint()] : L_PAREN (es= element_set_specs )? (ex= exception_spec )? R_PAREN ;
	[GrammarRule("constraint")]
	private SmiParser.constraint_return constraint()
	{
		EnterRule_constraint();
		EnterRule("constraint", 41);
		TraceIn("constraint", 41);
		SmiParser.constraint_return retval = new SmiParser.constraint_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_PAREN115 = default(IToken);
		IToken R_PAREN116 = default(IToken);
		SmiParser.element_set_specs_return es = default(SmiParser.element_set_specs_return);
		SmiParser.exception_spec_return ex = default(SmiParser.exception_spec_return);

		CommonTree L_PAREN115_tree = default(CommonTree);
		CommonTree R_PAREN116_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "constraint");
		DebugLocation(869, 1);
		try
		{
			// Smi.g:870:5: ( L_PAREN (es= element_set_specs )? (ex= exception_spec )? R_PAREN )
			DebugEnterAlt(1);
			// Smi.g:870:7: L_PAREN (es= element_set_specs )? (ex= exception_spec )? R_PAREN
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(870, 7);
			L_PAREN115=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_constraint3982); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_PAREN115_tree = (CommonTree)adaptor.Create(L_PAREN115);
			adaptor.AddChild(root_0, L_PAREN115_tree);
			}
			DebugLocation(870, 15);
			// Smi.g:870:15: (es= element_set_specs )?
			int alt42=2;
			try { DebugEnterSubRule(42);
			try { DebugEnterDecision(42, false);
			int LA42_1 = input.LA(1);

			if (((LA42_1>=ALL_KW && LA42_1<=ANY_KW)||LA42_1==BIT_KW||(LA42_1>=BMP_STR_KW && LA42_1<=BOOLEAN_KW)||(LA42_1>=B_STRING && LA42_1<=CHARACTER_KW)||LA42_1==CHOICE_KW||LA42_1==C_STRING||LA42_1==EMBEDDED_KW||LA42_1==ENUMERATED_KW||LA42_1==ERROR_KW||(LA42_1>=EXTERNAL_KW && LA42_1<=GRAPHIC_STR_KW)||(LA42_1>=H_STRING && LA42_1<=IA5_STRING_KW)||LA42_1==INCLUDES_KW||LA42_1==INTEGER_KW||LA42_1==ISO646_STR_KW||(LA42_1>=LOWER && LA42_1<=L_PAREN)||(LA42_1>=MINUS && LA42_1<=NUMERIC_STR_KW)||(LA42_1>=OBJECT_KW && LA42_1<=OCTET_KW)||LA42_1==OPERATION_KW||LA42_1==PATTERN_KW||LA42_1==PLUS_INFINITY_KW||LA42_1==PRINTABLE_STR_KW||LA42_1==REAL_KW||(LA42_1>=SEQUENCE_KW && LA42_1<=SET_KW)||LA42_1==SIZE_KW||LA42_1==T61_STR_KW||(LA42_1>=TELETEX_STR_KW && LA42_1<=TRUE_KW)||(LA42_1>=UNIVERSAL_STR_KW && LA42_1<=WITH_KW)||(LA42_1>=125 && LA42_1<=128)||(LA42_1>=130 && LA42_1<=133)||(LA42_1>=135 && LA42_1<=136)||LA42_1==142||(LA42_1>=145 && LA42_1<=147)||(LA42_1>=157 && LA42_1<=160)||(LA42_1>=162 && LA42_1<=164)||LA42_1==173||LA42_1==175||(LA42_1>=177 && LA42_1<=178)||(LA42_1>=180 && LA42_1<=182)||(LA42_1>=187 && LA42_1<=191)))
			{
				alt42 = 1;
			}
			} finally { DebugExitDecision(42); }
			switch (alt42)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:870:16: es= element_set_specs
				{
				DebugLocation(870, 18);
				PushFollow(Follow._element_set_specs_in_constraint3987);
				es=element_set_specs();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, es.Tree);
				DebugLocation(870, 37);
				if (state.backtracking == 0)
				{
					 retval.result.ElementSetSpecs = (es!=null?es.result:default(ElementSetRange)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(42); }

			DebugLocation(871, 2);
			// Smi.g:871:2: (ex= exception_spec )?
			int alt43=2;
			try { DebugEnterSubRule(43);
			try { DebugEnterDecision(43, false);
			int LA43_1 = input.LA(1);

			if ((LA43_1==EXCLAMATION))
			{
				alt43 = 1;
			}
			} finally { DebugExitDecision(43); }
			switch (alt43)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:871:3: ex= exception_spec
				{
				DebugLocation(871, 5);
				PushFollow(Follow._exception_spec_in_constraint3998);
				ex=exception_spec();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, ex.Tree);
				DebugLocation(871, 21);
				if (state.backtracking == 0)
				{
					 retval.result.ExceptionSpec = (ex!=null?ex.result:default(ExceptionSpec)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(43); }

			DebugLocation(871, 63);
			R_PAREN116=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_constraint4004); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_PAREN116_tree = (CommonTree)adaptor.Create(R_PAREN116);
			adaptor.AddChild(root_0, R_PAREN116_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("constraint", 41);
			LeaveRule("constraint", 41);
			LeaveRule_constraint();
		}
		DebugLocation(872, 1);
		} finally { DebugExitRule(GrammarFileName, "constraint"); }
		return retval;

	}
	// $ANTLR end "constraint"

	private sealed partial class character_set_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public CharacterSet result;
		public character_set_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_character_set();
	partial void LeaveRule_character_set();
	// $ANTLR start "character_set"
	// Smi.g:874:1: character_set returns [CharacterSet result] : ( BMP_STR_KW | GENERALIZED_TIME_KW | GENERAL_STR_KW | GRAPHIC_STR_KW | IA5_STRING_KW | ISO646_STR_KW | NUMERIC_STR_KW | PRINTABLE_STR_KW | TELETEX_STR_KW | T61_STR_KW | UNIVERSAL_STR_KW | UTF8_STR_KW | UTC_TIME_KW | VIDEOTEX_STR_KW | VISIBLE_STR_KW );
	[GrammarRule("character_set")]
	private SmiParser.character_set_return character_set()
	{
		EnterRule_character_set();
		EnterRule("character_set", 42);
		TraceIn("character_set", 42);
		SmiParser.character_set_return retval = new SmiParser.character_set_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken BMP_STR_KW117 = default(IToken);
		IToken GENERALIZED_TIME_KW118 = default(IToken);
		IToken GENERAL_STR_KW119 = default(IToken);
		IToken GRAPHIC_STR_KW120 = default(IToken);
		IToken IA5_STRING_KW121 = default(IToken);
		IToken ISO646_STR_KW122 = default(IToken);
		IToken NUMERIC_STR_KW123 = default(IToken);
		IToken PRINTABLE_STR_KW124 = default(IToken);
		IToken TELETEX_STR_KW125 = default(IToken);
		IToken T61_STR_KW126 = default(IToken);
		IToken UNIVERSAL_STR_KW127 = default(IToken);
		IToken UTF8_STR_KW128 = default(IToken);
		IToken UTC_TIME_KW129 = default(IToken);
		IToken VIDEOTEX_STR_KW130 = default(IToken);
		IToken VISIBLE_STR_KW131 = default(IToken);

		CommonTree BMP_STR_KW117_tree = default(CommonTree);
		CommonTree GENERALIZED_TIME_KW118_tree = default(CommonTree);
		CommonTree GENERAL_STR_KW119_tree = default(CommonTree);
		CommonTree GRAPHIC_STR_KW120_tree = default(CommonTree);
		CommonTree IA5_STRING_KW121_tree = default(CommonTree);
		CommonTree ISO646_STR_KW122_tree = default(CommonTree);
		CommonTree NUMERIC_STR_KW123_tree = default(CommonTree);
		CommonTree PRINTABLE_STR_KW124_tree = default(CommonTree);
		CommonTree TELETEX_STR_KW125_tree = default(CommonTree);
		CommonTree T61_STR_KW126_tree = default(CommonTree);
		CommonTree UNIVERSAL_STR_KW127_tree = default(CommonTree);
		CommonTree UTF8_STR_KW128_tree = default(CommonTree);
		CommonTree UTC_TIME_KW129_tree = default(CommonTree);
		CommonTree VIDEOTEX_STR_KW130_tree = default(CommonTree);
		CommonTree VISIBLE_STR_KW131_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "character_set");
		DebugLocation(874, 1);
		try
		{
			// Smi.g:875:5: ( BMP_STR_KW | GENERALIZED_TIME_KW | GENERAL_STR_KW | GRAPHIC_STR_KW | IA5_STRING_KW | ISO646_STR_KW | NUMERIC_STR_KW | PRINTABLE_STR_KW | TELETEX_STR_KW | T61_STR_KW | UNIVERSAL_STR_KW | UTF8_STR_KW | UTC_TIME_KW | VIDEOTEX_STR_KW | VISIBLE_STR_KW )
			int alt44=15;
			try { DebugEnterDecision(44, false);
			switch (input.LA(1))
			{
			case BMP_STR_KW:
				{
				alt44 = 1;
				}
				break;
			case GENERALIZED_TIME_KW:
				{
				alt44 = 2;
				}
				break;
			case GENERAL_STR_KW:
				{
				alt44 = 3;
				}
				break;
			case GRAPHIC_STR_KW:
				{
				alt44 = 4;
				}
				break;
			case IA5_STRING_KW:
				{
				alt44 = 5;
				}
				break;
			case ISO646_STR_KW:
				{
				alt44 = 6;
				}
				break;
			case NUMERIC_STR_KW:
				{
				alt44 = 7;
				}
				break;
			case PRINTABLE_STR_KW:
				{
				alt44 = 8;
				}
				break;
			case TELETEX_STR_KW:
				{
				alt44 = 9;
				}
				break;
			case T61_STR_KW:
				{
				alt44 = 10;
				}
				break;
			case UNIVERSAL_STR_KW:
				{
				alt44 = 11;
				}
				break;
			case UTF8_STR_KW:
				{
				alt44 = 12;
				}
				break;
			case UTC_TIME_KW:
				{
				alt44 = 13;
				}
				break;
			case VIDEOTEX_STR_KW:
				{
				alt44 = 14;
				}
				break;
			case VISIBLE_STR_KW:
				{
				alt44 = 15;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 44, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(44); }
			switch (alt44)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:875:7: BMP_STR_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(875, 7);
				BMP_STR_KW117=(IToken)Match(input,BMP_STR_KW,Follow._BMP_STR_KW_in_character_set4022); if (state.failed) return retval;
				if (state.backtracking == 0) {
				BMP_STR_KW117_tree = (CommonTree)adaptor.Create(BMP_STR_KW117);
				adaptor.AddChild(root_0, BMP_STR_KW117_tree);
				}
				DebugLocation(875, 18);
				if (state.backtracking == 0)
				{
					 retval.result = CharacterSet.Bmp; 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:876:4: GENERALIZED_TIME_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(876, 4);
				GENERALIZED_TIME_KW118=(IToken)Match(input,GENERALIZED_TIME_KW,Follow._GENERALIZED_TIME_KW_in_character_set4029); if (state.failed) return retval;
				if (state.backtracking == 0) {
				GENERALIZED_TIME_KW118_tree = (CommonTree)adaptor.Create(GENERALIZED_TIME_KW118);
				adaptor.AddChild(root_0, GENERALIZED_TIME_KW118_tree);
				}
				DebugLocation(876, 24);
				if (state.backtracking == 0)
				{
					 retval.result = CharacterSet.GeneralizedTime; 
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:877:4: GENERAL_STR_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(877, 4);
				GENERAL_STR_KW119=(IToken)Match(input,GENERAL_STR_KW,Follow._GENERAL_STR_KW_in_character_set4036); if (state.failed) return retval;
				if (state.backtracking == 0) {
				GENERAL_STR_KW119_tree = (CommonTree)adaptor.Create(GENERAL_STR_KW119);
				adaptor.AddChild(root_0, GENERAL_STR_KW119_tree);
				}
				DebugLocation(877, 19);
				if (state.backtracking == 0)
				{
					 retval.result = CharacterSet.General; 
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Smi.g:878:4: GRAPHIC_STR_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(878, 4);
				GRAPHIC_STR_KW120=(IToken)Match(input,GRAPHIC_STR_KW,Follow._GRAPHIC_STR_KW_in_character_set4043); if (state.failed) return retval;
				if (state.backtracking == 0) {
				GRAPHIC_STR_KW120_tree = (CommonTree)adaptor.Create(GRAPHIC_STR_KW120);
				adaptor.AddChild(root_0, GRAPHIC_STR_KW120_tree);
				}
				DebugLocation(878, 19);
				if (state.backtracking == 0)
				{
					 retval.result = CharacterSet.Graphic; 
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Smi.g:879:7: IA5_STRING_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(879, 7);
				IA5_STRING_KW121=(IToken)Match(input,IA5_STRING_KW,Follow._IA5_STRING_KW_in_character_set4053); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IA5_STRING_KW121_tree = (CommonTree)adaptor.Create(IA5_STRING_KW121);
				adaptor.AddChild(root_0, IA5_STRING_KW121_tree);
				}
				DebugLocation(879, 21);
				if (state.backtracking == 0)
				{
					 retval.result = CharacterSet.IA5; 
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// Smi.g:880:4: ISO646_STR_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(880, 4);
				ISO646_STR_KW122=(IToken)Match(input,ISO646_STR_KW,Follow._ISO646_STR_KW_in_character_set4060); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ISO646_STR_KW122_tree = (CommonTree)adaptor.Create(ISO646_STR_KW122);
				adaptor.AddChild(root_0, ISO646_STR_KW122_tree);
				}
				DebugLocation(880, 18);
				if (state.backtracking == 0)
				{
					 retval.result = CharacterSet.ISO646; 
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// Smi.g:881:4: NUMERIC_STR_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(881, 4);
				NUMERIC_STR_KW123=(IToken)Match(input,NUMERIC_STR_KW,Follow._NUMERIC_STR_KW_in_character_set4067); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NUMERIC_STR_KW123_tree = (CommonTree)adaptor.Create(NUMERIC_STR_KW123);
				adaptor.AddChild(root_0, NUMERIC_STR_KW123_tree);
				}
				DebugLocation(881, 19);
				if (state.backtracking == 0)
				{
					 retval.result = CharacterSet.Numeric; 
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// Smi.g:882:4: PRINTABLE_STR_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(882, 4);
				PRINTABLE_STR_KW124=(IToken)Match(input,PRINTABLE_STR_KW,Follow._PRINTABLE_STR_KW_in_character_set4074); if (state.failed) return retval;
				if (state.backtracking == 0) {
				PRINTABLE_STR_KW124_tree = (CommonTree)adaptor.Create(PRINTABLE_STR_KW124);
				adaptor.AddChild(root_0, PRINTABLE_STR_KW124_tree);
				}
				DebugLocation(882, 21);
				if (state.backtracking == 0)
				{
					 retval.result = CharacterSet.Printable; 
				}

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// Smi.g:883:7: TELETEX_STR_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(883, 7);
				TELETEX_STR_KW125=(IToken)Match(input,TELETEX_STR_KW,Follow._TELETEX_STR_KW_in_character_set4084); if (state.failed) return retval;
				if (state.backtracking == 0) {
				TELETEX_STR_KW125_tree = (CommonTree)adaptor.Create(TELETEX_STR_KW125);
				adaptor.AddChild(root_0, TELETEX_STR_KW125_tree);
				}
				DebugLocation(883, 22);
				if (state.backtracking == 0)
				{
					 retval.result = CharacterSet.TeleTex; 
				}

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// Smi.g:884:4: T61_STR_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(884, 4);
				T61_STR_KW126=(IToken)Match(input,T61_STR_KW,Follow._T61_STR_KW_in_character_set4091); if (state.failed) return retval;
				if (state.backtracking == 0) {
				T61_STR_KW126_tree = (CommonTree)adaptor.Create(T61_STR_KW126);
				adaptor.AddChild(root_0, T61_STR_KW126_tree);
				}
				DebugLocation(884, 15);
				if (state.backtracking == 0)
				{
					 retval.result = CharacterSet.T61; 
				}

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// Smi.g:885:4: UNIVERSAL_STR_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(885, 4);
				UNIVERSAL_STR_KW127=(IToken)Match(input,UNIVERSAL_STR_KW,Follow._UNIVERSAL_STR_KW_in_character_set4098); if (state.failed) return retval;
				if (state.backtracking == 0) {
				UNIVERSAL_STR_KW127_tree = (CommonTree)adaptor.Create(UNIVERSAL_STR_KW127);
				adaptor.AddChild(root_0, UNIVERSAL_STR_KW127_tree);
				}
				DebugLocation(885, 21);
				if (state.backtracking == 0)
				{
					 retval.result = CharacterSet.Universal; 
				}

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// Smi.g:886:4: UTF8_STR_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(886, 4);
				UTF8_STR_KW128=(IToken)Match(input,UTF8_STR_KW,Follow._UTF8_STR_KW_in_character_set4105); if (state.failed) return retval;
				if (state.backtracking == 0) {
				UTF8_STR_KW128_tree = (CommonTree)adaptor.Create(UTF8_STR_KW128);
				adaptor.AddChild(root_0, UTF8_STR_KW128_tree);
				}
				DebugLocation(886, 16);
				if (state.backtracking == 0)
				{
					 retval.result = CharacterSet.UTF8; 
				}

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// Smi.g:887:7: UTC_TIME_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(887, 7);
				UTC_TIME_KW129=(IToken)Match(input,UTC_TIME_KW,Follow._UTC_TIME_KW_in_character_set4115); if (state.failed) return retval;
				if (state.backtracking == 0) {
				UTC_TIME_KW129_tree = (CommonTree)adaptor.Create(UTC_TIME_KW129);
				adaptor.AddChild(root_0, UTC_TIME_KW129_tree);
				}
				DebugLocation(887, 19);
				if (state.backtracking == 0)
				{
					 retval.result = CharacterSet.UTCTime; 
				}

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// Smi.g:888:4: VIDEOTEX_STR_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(888, 4);
				VIDEOTEX_STR_KW130=(IToken)Match(input,VIDEOTEX_STR_KW,Follow._VIDEOTEX_STR_KW_in_character_set4122); if (state.failed) return retval;
				if (state.backtracking == 0) {
				VIDEOTEX_STR_KW130_tree = (CommonTree)adaptor.Create(VIDEOTEX_STR_KW130);
				adaptor.AddChild(root_0, VIDEOTEX_STR_KW130_tree);
				}
				DebugLocation(888, 20);
				if (state.backtracking == 0)
				{
					 retval.result = CharacterSet.VideoTex; 
				}

				}
				break;
			case 15:
				DebugEnterAlt(15);
				// Smi.g:889:4: VISIBLE_STR_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(889, 4);
				VISIBLE_STR_KW131=(IToken)Match(input,VISIBLE_STR_KW,Follow._VISIBLE_STR_KW_in_character_set4129); if (state.failed) return retval;
				if (state.backtracking == 0) {
				VISIBLE_STR_KW131_tree = (CommonTree)adaptor.Create(VISIBLE_STR_KW131);
				adaptor.AddChild(root_0, VISIBLE_STR_KW131_tree);
				}
				DebugLocation(889, 19);
				if (state.backtracking == 0)
				{
					 retval.result = CharacterSet.Visible; 
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("character_set", 42);
			LeaveRule("character_set", 42);
			LeaveRule_character_set();
		}
		DebugLocation(890, 1);
		} finally { DebugExitRule(GrammarFileName, "character_set"); }
		return retval;

	}
	// $ANTLR end "character_set"

	private sealed partial class elementType_list_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public IList<ISmiType> result = new List<ISmiType>();
		public elementType_list_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_elementType_list();
	partial void LeaveRule_elementType_list();
	// $ANTLR start "elementType_list"
	// Smi.g:892:1: elementType_list returns [IList<ISmiType> result = new List<ISmiType>()] : t1= elementType ( COMMA ( ( CHOICE_KW )=>c= choice_type |t2= elementType ) )* ;
	[GrammarRule("elementType_list")]
	private SmiParser.elementType_list_return elementType_list()
	{
		EnterRule_elementType_list();
		EnterRule("elementType_list", 43);
		TraceIn("elementType_list", 43);
		SmiParser.elementType_list_return retval = new SmiParser.elementType_list_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMMA132 = default(IToken);
		SmiParser.elementType_return t1 = default(SmiParser.elementType_return);
		SmiParser.choice_type_return c = default(SmiParser.choice_type_return);
		SmiParser.elementType_return t2 = default(SmiParser.elementType_return);

		CommonTree COMMA132_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "elementType_list");
		DebugLocation(892, 1);
		try
		{
			// Smi.g:893:5: (t1= elementType ( COMMA ( ( CHOICE_KW )=>c= choice_type |t2= elementType ) )* )
			DebugEnterAlt(1);
			// Smi.g:893:7: t1= elementType ( COMMA ( ( CHOICE_KW )=>c= choice_type |t2= elementType ) )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(893, 9);
			PushFollow(Follow._elementType_in_elementType_list4151);
			t1=elementType();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, t1.Tree);
			DebugLocation(893, 22);
			if (state.backtracking == 0)
			{
				 retval.result.Add((t1!=null?t1.result:default(ElementType))); 
			}
			DebugLocation(894, 2);
			// Smi.g:894:2: ( COMMA ( ( CHOICE_KW )=>c= choice_type |t2= elementType ) )*
			try { DebugEnterSubRule(46);
			while (true)
			{
				int alt46=2;
				try { DebugEnterDecision(46, false);
				int LA46_1 = input.LA(1);

				if ((LA46_1==COMMA))
				{
					alt46 = 1;
				}


				} finally { DebugExitDecision(46); }
				switch ( alt46 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:894:3: COMMA ( ( CHOICE_KW )=>c= choice_type |t2= elementType )
					{
					DebugLocation(894, 3);
					COMMA132=(IToken)Match(input,COMMA,Follow._COMMA_in_elementType_list4158); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA132_tree = (CommonTree)adaptor.Create(COMMA132);
					adaptor.AddChild(root_0, COMMA132_tree);
					}
					DebugLocation(894, 9);
					// Smi.g:894:9: ( ( CHOICE_KW )=>c= choice_type |t2= elementType )
					int alt45=2;
					try { DebugEnterSubRule(45);
					try { DebugEnterDecision(45, false);
					int LA45_1 = input.LA(1);

					if ((LA45_1==CHOICE_KW) && (EvaluatePredicate(synpred19_Smi_fragment)))
					{
						alt45 = 1;
					}
					else if ((LA45_1==COMPONENTS_KW||LA45_1==LOWER))
					{
						alt45 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 45, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					} finally { DebugExitDecision(45); }
					switch (alt45)
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:894:10: ( CHOICE_KW )=>c= choice_type
						{
						DebugLocation(894, 26);
						PushFollow(Follow._choice_type_in_elementType_list4169);
						c=choice_type();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, c.Tree);
						DebugLocation(894, 39);
						if (state.backtracking == 0)
						{
							 retval.result.Add((c!=null?c.result:default(ChoiceType))); 
						}

						}
						break;
					case 2:
						DebugEnterAlt(2);
						// Smi.g:895:4: t2= elementType
						{
						DebugLocation(895, 6);
						PushFollow(Follow._elementType_in_elementType_list4178);
						t2=elementType();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, t2.Tree);
						DebugLocation(895, 19);
						if (state.backtracking == 0)
						{
							 retval.result.Add((t2!=null?t2.result:default(ElementType))); 
						}

						}
						break;

					}
					} finally { DebugExitSubRule(45); }


					}
					break;

				default:
					goto loop46;
				}
			}

			loop46:
				;

			} finally { DebugExitSubRule(46); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("elementType_list", 43);
			LeaveRule("elementType_list", 43);
			LeaveRule_elementType_list();
		}
		DebugLocation(896, 1);
		} finally { DebugExitRule(GrammarFileName, "elementType_list"); }
		return retval;

	}
	// $ANTLR end "elementType_list"

	private sealed partial class tag_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public Tag result = new Tag();
		public tag_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_tag();
	partial void LeaveRule_tag();
	// $ANTLR start "tag"
	// Smi.g:898:1: tag returns [Tag result = new Tag()] : L_BRACKET (c= clazz )? cl= class_NUMBER R_BRACKET ;
	[GrammarRule("tag")]
	private SmiParser.tag_return tag()
	{
		EnterRule_tag();
		EnterRule("tag", 44);
		TraceIn("tag", 44);
		SmiParser.tag_return retval = new SmiParser.tag_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACKET133 = default(IToken);
		IToken R_BRACKET134 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> c = default(AstParserRuleReturnScope<CommonTree, IToken>);
		SmiParser.class_NUMBER_return cl = default(SmiParser.class_NUMBER_return);

		CommonTree L_BRACKET133_tree = default(CommonTree);
		CommonTree R_BRACKET134_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "tag");
		DebugLocation(898, 1);
		try
		{
			// Smi.g:899:5: ( L_BRACKET (c= clazz )? cl= class_NUMBER R_BRACKET )
			DebugEnterAlt(1);
			// Smi.g:899:7: L_BRACKET (c= clazz )? cl= class_NUMBER R_BRACKET
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(899, 7);
			L_BRACKET133=(IToken)Match(input,L_BRACKET,Follow._L_BRACKET_in_tag4201); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACKET133_tree = (CommonTree)adaptor.Create(L_BRACKET133);
			adaptor.AddChild(root_0, L_BRACKET133_tree);
			}
			DebugLocation(899, 17);
			// Smi.g:899:17: (c= clazz )?
			int alt47=2;
			try { DebugEnterSubRule(47);
			try { DebugEnterDecision(47, false);
			int LA47_1 = input.LA(1);

			if ((LA47_1==APPLICATION_KW||LA47_1==PRIVATE_KW||LA47_1==UNIVERSAL_KW))
			{
				alt47 = 1;
			}
			} finally { DebugExitDecision(47); }
			switch (alt47)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:899:18: c= clazz
				{
				DebugLocation(899, 19);
				PushFollow(Follow._clazz_in_tag4206);
				c=clazz();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, c.Tree);
				DebugLocation(899, 26);
				if (state.backtracking == 0)
				{
					 retval.result.TagType = (c!=null?input.ToString(c.Start,c.Stop):null); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(47); }

			DebugLocation(900, 4);
			PushFollow(Follow._class_NUMBER_in_tag4216);
			cl=class_NUMBER();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, cl.Tree);
			DebugLocation(900, 18);
			R_BRACKET134=(IToken)Match(input,R_BRACKET,Follow._R_BRACKET_in_tag4218); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACKET134_tree = (CommonTree)adaptor.Create(R_BRACKET134);
			adaptor.AddChild(root_0, R_BRACKET134_tree);
			}
			DebugLocation(900, 28);
			if (state.backtracking == 0)
			{
				 retval.result.TagNumber = (cl!=null?cl.result:default(ClassNumber)); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("tag", 44);
			LeaveRule("tag", 44);
			LeaveRule_tag();
		}
		DebugLocation(901, 1);
		} finally { DebugExitRule(GrammarFileName, "tag"); }
		return retval;

	}
	// $ANTLR end "tag"

	partial void EnterRule_clazz();
	partial void LeaveRule_clazz();
	// $ANTLR start "clazz"
	// Smi.g:903:1: clazz : ( UNIVERSAL_KW | APPLICATION_KW | PRIVATE_KW );
	[GrammarRule("clazz")]
	private AstParserRuleReturnScope<CommonTree, IToken> clazz()
	{
		EnterRule_clazz();
		EnterRule("clazz", 45);
		TraceIn("clazz", 45);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken set135 = default(IToken);

		CommonTree set135_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "clazz");
		DebugLocation(903, 49);
		try
		{
			// Smi.g:903:6: ( UNIVERSAL_KW | APPLICATION_KW | PRIVATE_KW )
			DebugEnterAlt(1);
			// Smi.g:
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(903, 6);

			set135=(IToken)input.LT(1);
			if (input.LA(1)==APPLICATION_KW||input.LA(1)==PRIVATE_KW||input.LA(1)==UNIVERSAL_KW)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set135));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("clazz", 45);
			LeaveRule("clazz", 45);
			LeaveRule_clazz();
		}
		DebugLocation(903, 49);
		} finally { DebugExitRule(GrammarFileName, "clazz"); }
		return retval;

	}
	// $ANTLR end "clazz"

	private sealed partial class class_NUMBER_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ClassNumber result;
		public class_NUMBER_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_class_NUMBER();
	partial void LeaveRule_class_NUMBER();
	// $ANTLR start "class_NUMBER"
	// Smi.g:906:1: class_NUMBER returns [ClassNumber result] : (num= NUMBER |dv= defined_value );
	[GrammarRule("class_NUMBER")]
	private SmiParser.class_NUMBER_return class_NUMBER()
	{
		EnterRule_class_NUMBER();
		EnterRule("class_NUMBER", 46);
		TraceIn("class_NUMBER", 46);
		SmiParser.class_NUMBER_return retval = new SmiParser.class_NUMBER_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken num = default(IToken);
		SmiParser.defined_value_return dv = default(SmiParser.defined_value_return);

		CommonTree num_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "class_NUMBER");
		DebugLocation(906, 1);
		try
		{
			// Smi.g:907:5: (num= NUMBER |dv= defined_value )
			int alt48=2;
			try { DebugEnterDecision(48, false);
			int LA48_1 = input.LA(1);

			if ((LA48_1==NUMBER))
			{
				alt48 = 1;
			}
			else if ((LA48_1==LOWER||LA48_1==UPPER))
			{
				alt48 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 48, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(48); }
			switch (alt48)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:907:7: num= NUMBER
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(907, 10);
				num=(IToken)Match(input,NUMBER,Follow._NUMBER_in_class_NUMBER4257); if (state.failed) return retval;
				if (state.backtracking == 0) {
				num_tree = (CommonTree)adaptor.Create(num);
				adaptor.AddChild(root_0, num_tree);
				}
				DebugLocation(907, 18);
				if (state.backtracking == 0)
				{
					 retval.result = new ClassNumber((num!=null?num.Text:null)); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:908:4: dv= defined_value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(908, 6);
				PushFollow(Follow._defined_value_in_class_NUMBER4266);
				dv=defined_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, dv.Tree);
				DebugLocation(908, 21);
				if (state.backtracking == 0)
				{
					 retval.result = new ClassNumber((dv!=null?dv.result:default(DefinedValue))); 
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("class_NUMBER", 46);
			LeaveRule("class_NUMBER", 46);
			LeaveRule_class_NUMBER();
		}
		DebugLocation(909, 1);
		} finally { DebugExitRule(GrammarFileName, "class_NUMBER"); }
		return retval;

	}
	// $ANTLR end "class_NUMBER"

	private sealed partial class operation_macro_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public OperationMacro result = new OperationMacro();
		public operation_macro_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_operation_macro();
	partial void LeaveRule_operation_macro();
	// $ANTLR start "operation_macro"
	// Smi.g:912:1: operation_macro returns [OperationMacro result = new OperationMacro()] : 'OPERATION' ( ARGUMENT_KW ( ( LOWER )=>l1= LOWER )? t1= type )? ( ( RESULT_KW )=> RESULT_KW ( ( LOWER )=> ( ( LOWER )=>l2= LOWER )? t2= type )? )? ( ( ERRORS_KW )=> ERRORS_KW L_BRACE (o= operation_errorlist )? R_BRACE )? ( ( LINKED_KW )=> LINKED_KW L_BRACE (l= linkedOp_list )? R_BRACE )? ;
	[GrammarRule("operation_macro")]
	private SmiParser.operation_macro_return operation_macro()
	{
		EnterRule_operation_macro();
		EnterRule("operation_macro", 47);
		TraceIn("operation_macro", 47);
		SmiParser.operation_macro_return retval = new SmiParser.operation_macro_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l1 = default(IToken);
		IToken l2 = default(IToken);
		IToken string_literal136 = default(IToken);
		IToken ARGUMENT_KW137 = default(IToken);
		IToken RESULT_KW138 = default(IToken);
		IToken ERRORS_KW139 = default(IToken);
		IToken L_BRACE140 = default(IToken);
		IToken R_BRACE141 = default(IToken);
		IToken LINKED_KW142 = default(IToken);
		IToken L_BRACE143 = default(IToken);
		IToken R_BRACE144 = default(IToken);
		SmiParser.type_return t1 = default(SmiParser.type_return);
		SmiParser.type_return t2 = default(SmiParser.type_return);
		SmiParser.operation_errorlist_return o = default(SmiParser.operation_errorlist_return);
		SmiParser.linkedOp_list_return l = default(SmiParser.linkedOp_list_return);

		CommonTree l1_tree = default(CommonTree);
		CommonTree l2_tree = default(CommonTree);
		CommonTree string_literal136_tree = default(CommonTree);
		CommonTree ARGUMENT_KW137_tree = default(CommonTree);
		CommonTree RESULT_KW138_tree = default(CommonTree);
		CommonTree ERRORS_KW139_tree = default(CommonTree);
		CommonTree L_BRACE140_tree = default(CommonTree);
		CommonTree R_BRACE141_tree = default(CommonTree);
		CommonTree LINKED_KW142_tree = default(CommonTree);
		CommonTree L_BRACE143_tree = default(CommonTree);
		CommonTree R_BRACE144_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "operation_macro");
		DebugLocation(912, 1);
		try
		{
			// Smi.g:913:5: ( 'OPERATION' ( ARGUMENT_KW ( ( LOWER )=>l1= LOWER )? t1= type )? ( ( RESULT_KW )=> RESULT_KW ( ( LOWER )=> ( ( LOWER )=>l2= LOWER )? t2= type )? )? ( ( ERRORS_KW )=> ERRORS_KW L_BRACE (o= operation_errorlist )? R_BRACE )? ( ( LINKED_KW )=> LINKED_KW L_BRACE (l= linkedOp_list )? R_BRACE )? )
			DebugEnterAlt(1);
			// Smi.g:913:7: 'OPERATION' ( ARGUMENT_KW ( ( LOWER )=>l1= LOWER )? t1= type )? ( ( RESULT_KW )=> RESULT_KW ( ( LOWER )=> ( ( LOWER )=>l2= LOWER )? t2= type )? )? ( ( ERRORS_KW )=> ERRORS_KW L_BRACE (o= operation_errorlist )? R_BRACE )? ( ( LINKED_KW )=> LINKED_KW L_BRACE (l= linkedOp_list )? R_BRACE )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(913, 7);
			string_literal136=(IToken)Match(input,OPERATION_KW,Follow._OPERATION_KW_in_operation_macro4288); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal136_tree = (CommonTree)adaptor.Create(string_literal136);
			adaptor.AddChild(root_0, string_literal136_tree);
			}
			DebugLocation(914, 2);
			// Smi.g:914:2: ( ARGUMENT_KW ( ( LOWER )=>l1= LOWER )? t1= type )?
			int alt50=2;
			try { DebugEnterSubRule(50);
			try { DebugEnterDecision(50, false);
			int LA50_1 = input.LA(1);

			if ((LA50_1==ARGUMENT_KW))
			{
				alt50 = 1;
			}
			} finally { DebugExitDecision(50); }
			switch (alt50)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:914:3: ARGUMENT_KW ( ( LOWER )=>l1= LOWER )? t1= type
				{
				DebugLocation(914, 3);
				ARGUMENT_KW137=(IToken)Match(input,ARGUMENT_KW,Follow._ARGUMENT_KW_in_operation_macro4293); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ARGUMENT_KW137_tree = (CommonTree)adaptor.Create(ARGUMENT_KW137);
				adaptor.AddChild(root_0, ARGUMENT_KW137_tree);
				}
				DebugLocation(914, 15);
				// Smi.g:914:15: ( ( LOWER )=>l1= LOWER )?
				int alt49=2;
				try { DebugEnterSubRule(49);
				try { DebugEnterDecision(49, false);
				int LA49_1 = input.LA(1);

				if ((LA49_1==LOWER))
				{
					int LA49_2 = input.LA(2);

					if ((LA49_2==ANY_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==BIT_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==BOOLEAN_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==CHARACTER_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==BMP_STR_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==GENERALIZED_TIME_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==GENERAL_STR_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==GRAPHIC_STR_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==IA5_STRING_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==ISO646_STR_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==NUMERIC_STR_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==PRINTABLE_STR_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==TELETEX_STR_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==T61_STR_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==UNIVERSAL_STR_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==UTF8_STR_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==UTC_TIME_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==VIDEOTEX_STR_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==VISIBLE_STR_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==CHOICE_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==EMBEDDED_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==ENUMERATED_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==EXTERNAL_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==INTEGER_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==NULL_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==OBJECT_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==OCTET_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==REAL_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==178) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==SEQUENCE_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==SET_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==L_BRACKET) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==UPPER) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==LOWER) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==OPERATION_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==ERROR_KW) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==164) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==158) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==163) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==160) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==187) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==162) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==159) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==157) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==130) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==190) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
					else if ((LA49_2==136) && (EvaluatePredicate(synpred20_Smi_fragment)))
					{
						alt49 = 1;
					}
				}
				} finally { DebugExitDecision(49); }
				switch (alt49)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:914:16: ( LOWER )=>l1= LOWER
					{
					DebugLocation(914, 29);
					l1=(IToken)Match(input,LOWER,Follow._LOWER_in_operation_macro4304); if (state.failed) return retval;
					if (state.backtracking == 0) {
					l1_tree = (CommonTree)adaptor.Create(l1);
					adaptor.AddChild(root_0, l1_tree);
					}
					DebugLocation(914, 36);
					if (state.backtracking == 0)
					{
						 retval.result.ArgumentIdentifier = (l1!=null?l1.Text:null); 
					}

					}
					break;

				}
				} finally { DebugExitSubRule(49); }

				DebugLocation(915, 4);
				PushFollow(Follow._type_in_operation_macro4314);
				t1=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, t1.Tree);
				DebugLocation(915, 10);
				if (state.backtracking == 0)
				{
					 retval.result.ArgumentType = (t1!=null?t1.result:default(ISmiType)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(50); }

			DebugLocation(916, 5);
			// Smi.g:916:5: ( ( RESULT_KW )=> RESULT_KW ( ( LOWER )=> ( ( LOWER )=>l2= LOWER )? t2= type )? )?
			int alt53=2;
			try { DebugEnterSubRule(53);
			try { DebugEnterDecision(53, false);
			int LA53_1 = input.LA(1);

			if ((LA53_1==RESULT_KW))
			{
				int LA53_2 = input.LA(2);

				if ((EvaluatePredicate(synpred21_Smi_fragment)))
				{
					alt53 = 1;
				}
			}
			} finally { DebugExitDecision(53); }
			switch (alt53)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:916:7: ( RESULT_KW )=> RESULT_KW ( ( LOWER )=> ( ( LOWER )=>l2= LOWER )? t2= type )?
				{
				DebugLocation(916, 22);
				RESULT_KW138=(IToken)Match(input,RESULT_KW,Follow._RESULT_KW_in_operation_macro4333); if (state.failed) return retval;
				if (state.backtracking == 0) {
				RESULT_KW138_tree = (CommonTree)adaptor.Create(RESULT_KW138);
				adaptor.AddChild(root_0, RESULT_KW138_tree);
				}
				DebugLocation(917, 9);
				// Smi.g:917:9: ( ( LOWER )=> ( ( LOWER )=>l2= LOWER )? t2= type )?
				int alt52=2;
				try { DebugEnterSubRule(52);
				try { DebugEnterDecision(52, false);
				try
				{
					alt52 = dfa52.Predict(input);
				}
				catch (NoViableAltException nvae)
				{
					DebugRecognitionException(nvae);
					throw;
				}
				} finally { DebugExitDecision(52); }
				switch (alt52)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:917:10: ( LOWER )=> ( ( LOWER )=>l2= LOWER )? t2= type
					{
					DebugLocation(917, 21);
					// Smi.g:917:21: ( ( LOWER )=>l2= LOWER )?
					int alt51=2;
					try { DebugEnterSubRule(51);
					try { DebugEnterDecision(51, false);
					int LA51_1 = input.LA(1);

					if ((LA51_1==LOWER))
					{
						int LA51_2 = input.LA(2);

						if ((LA51_2==ANY_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==BIT_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==BOOLEAN_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==CHARACTER_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==BMP_STR_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==GENERALIZED_TIME_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==GENERAL_STR_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==GRAPHIC_STR_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==IA5_STRING_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==ISO646_STR_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==NUMERIC_STR_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==PRINTABLE_STR_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==TELETEX_STR_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==T61_STR_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==UNIVERSAL_STR_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==UTF8_STR_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==UTC_TIME_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==VIDEOTEX_STR_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==VISIBLE_STR_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==CHOICE_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==EMBEDDED_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==ENUMERATED_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==EXTERNAL_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==INTEGER_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==NULL_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==OBJECT_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==OCTET_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==REAL_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==178) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==SEQUENCE_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==SET_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==L_BRACKET) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==UPPER) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==LOWER) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==OPERATION_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==ERROR_KW) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==164) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==158) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==163) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==160) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==187) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==162) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==159) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==157) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==130) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==190) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
						else if ((LA51_2==136) && (EvaluatePredicate(synpred23_Smi_fragment)))
						{
							alt51 = 1;
						}
					}
					} finally { DebugExitDecision(51); }
					switch (alt51)
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:917:22: ( LOWER )=>l2= LOWER
						{
						DebugLocation(917, 35);
						l2=(IToken)Match(input,LOWER,Follow._LOWER_in_operation_macro4360); if (state.failed) return retval;
						if (state.backtracking == 0) {
						l2_tree = (CommonTree)adaptor.Create(l2);
						adaptor.AddChild(root_0, l2_tree);
						}
						DebugLocation(917, 42);
						if (state.backtracking == 0)
						{
							 retval.result.ResultIdentifier = (l2!=null?l2.Text:null); 
						}

						}
						break;

					}
					} finally { DebugExitSubRule(51); }

					DebugLocation(918, 5);
					PushFollow(Follow._type_in_operation_macro4371);
					t2=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, t2.Tree);
					DebugLocation(918, 11);
					if (state.backtracking == 0)
					{
						 retval.result.ResultType = (t2!=null?t2.result:default(ISmiType)); 
					}

					}
					break;

				}
				} finally { DebugExitSubRule(52); }


				}
				break;

			}
			} finally { DebugExitSubRule(53); }

			DebugLocation(920, 5);
			// Smi.g:920:5: ( ( ERRORS_KW )=> ERRORS_KW L_BRACE (o= operation_errorlist )? R_BRACE )?
			int alt55=2;
			try { DebugEnterSubRule(55);
			try { DebugEnterDecision(55, false);
			int LA55_1 = input.LA(1);

			if ((LA55_1==ERRORS_KW))
			{
				int LA55_2 = input.LA(2);

				if ((EvaluatePredicate(synpred24_Smi_fragment)))
				{
					alt55 = 1;
				}
			}
			} finally { DebugExitDecision(55); }
			switch (alt55)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:920:7: ( ERRORS_KW )=> ERRORS_KW L_BRACE (o= operation_errorlist )? R_BRACE
				{
				DebugLocation(920, 22);
				ERRORS_KW139=(IToken)Match(input,ERRORS_KW,Follow._ERRORS_KW_in_operation_macro4394); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ERRORS_KW139_tree = (CommonTree)adaptor.Create(ERRORS_KW139);
				adaptor.AddChild(root_0, ERRORS_KW139_tree);
				}
				DebugLocation(920, 32);
				L_BRACE140=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_operation_macro4396); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE140_tree = (CommonTree)adaptor.Create(L_BRACE140);
				adaptor.AddChild(root_0, L_BRACE140_tree);
				}
				DebugLocation(920, 40);
				// Smi.g:920:40: (o= operation_errorlist )?
				int alt54=2;
				try { DebugEnterSubRule(54);
				try { DebugEnterDecision(54, false);
				int LA54_1 = input.LA(1);

				if ((LA54_1==ANY_KW||LA54_1==BIT_KW||(LA54_1>=BMP_STR_KW && LA54_1<=BOOLEAN_KW)||(LA54_1>=B_STRING && LA54_1<=CHARACTER_KW)||LA54_1==CHOICE_KW||LA54_1==C_STRING||LA54_1==EMBEDDED_KW||LA54_1==ENUMERATED_KW||LA54_1==ERROR_KW||(LA54_1>=EXTERNAL_KW && LA54_1<=FALSE_KW)||(LA54_1>=GENERALIZED_TIME_KW && LA54_1<=GRAPHIC_STR_KW)||(LA54_1>=H_STRING && LA54_1<=IA5_STRING_KW)||LA54_1==INTEGER_KW||LA54_1==ISO646_STR_KW||(LA54_1>=LOWER && LA54_1<=L_BRACKET)||(LA54_1>=MINUS && LA54_1<=MINUS_INFINITY_KW)||(LA54_1>=NULL_KW && LA54_1<=NUMERIC_STR_KW)||(LA54_1>=OBJECT_KW && LA54_1<=OCTET_KW)||LA54_1==OPERATION_KW||LA54_1==PLUS_INFINITY_KW||LA54_1==PRINTABLE_STR_KW||LA54_1==REAL_KW||(LA54_1>=SEQUENCE_KW && LA54_1<=SET_KW)||LA54_1==T61_STR_KW||(LA54_1>=TELETEX_STR_KW && LA54_1<=TRUE_KW)||(LA54_1>=UNIVERSAL_STR_KW && LA54_1<=VISIBLE_STR_KW)||(LA54_1>=125 && LA54_1<=128)||(LA54_1>=130 && LA54_1<=133)||(LA54_1>=135 && LA54_1<=136)||LA54_1==142||(LA54_1>=145 && LA54_1<=147)||(LA54_1>=157 && LA54_1<=160)||(LA54_1>=162 && LA54_1<=164)||LA54_1==173||LA54_1==175||(LA54_1>=177 && LA54_1<=178)||(LA54_1>=180 && LA54_1<=182)||(LA54_1>=187 && LA54_1<=191)))
				{
					alt54 = 1;
				}
				} finally { DebugExitDecision(54); }
				switch (alt54)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:920:41: o= operation_errorlist
					{
					DebugLocation(920, 42);
					PushFollow(Follow._operation_errorlist_in_operation_macro4401);
					o=operation_errorlist();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, o.Tree);
					DebugLocation(920, 63);
					if (state.backtracking == 0)
					{
						 retval.result.ErrorList = (o!=null?o.result:default(IList<TypeOrValue>)); 
					}

					}
					break;

				}
				} finally { DebugExitSubRule(54); }

				DebugLocation(920, 100);
				R_BRACE141=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_operation_macro4407); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE141_tree = (CommonTree)adaptor.Create(R_BRACE141);
				adaptor.AddChild(root_0, R_BRACE141_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(55); }

			DebugLocation(921, 5);
			// Smi.g:921:5: ( ( LINKED_KW )=> LINKED_KW L_BRACE (l= linkedOp_list )? R_BRACE )?
			int alt57=2;
			try { DebugEnterSubRule(57);
			try { DebugEnterDecision(57, false);
			int LA57_1 = input.LA(1);

			if ((LA57_1==LINKED_KW))
			{
				int LA57_2 = input.LA(2);

				if ((EvaluatePredicate(synpred25_Smi_fragment)))
				{
					alt57 = 1;
				}
			}
			} finally { DebugExitDecision(57); }
			switch (alt57)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:921:7: ( LINKED_KW )=> LINKED_KW L_BRACE (l= linkedOp_list )? R_BRACE
				{
				DebugLocation(921, 22);
				LINKED_KW142=(IToken)Match(input,LINKED_KW,Follow._LINKED_KW_in_operation_macro4425); if (state.failed) return retval;
				if (state.backtracking == 0) {
				LINKED_KW142_tree = (CommonTree)adaptor.Create(LINKED_KW142);
				adaptor.AddChild(root_0, LINKED_KW142_tree);
				}
				DebugLocation(921, 32);
				L_BRACE143=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_operation_macro4427); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE143_tree = (CommonTree)adaptor.Create(L_BRACE143);
				adaptor.AddChild(root_0, L_BRACE143_tree);
				}
				DebugLocation(921, 40);
				// Smi.g:921:40: (l= linkedOp_list )?
				int alt56=2;
				try { DebugEnterSubRule(56);
				try { DebugEnterDecision(56, false);
				int LA56_1 = input.LA(1);

				if ((LA56_1==ANY_KW||LA56_1==BIT_KW||(LA56_1>=BMP_STR_KW && LA56_1<=BOOLEAN_KW)||(LA56_1>=B_STRING && LA56_1<=CHARACTER_KW)||LA56_1==CHOICE_KW||LA56_1==C_STRING||LA56_1==EMBEDDED_KW||LA56_1==ENUMERATED_KW||LA56_1==ERROR_KW||(LA56_1>=EXTERNAL_KW && LA56_1<=FALSE_KW)||(LA56_1>=GENERALIZED_TIME_KW && LA56_1<=GRAPHIC_STR_KW)||(LA56_1>=H_STRING && LA56_1<=IA5_STRING_KW)||LA56_1==INTEGER_KW||LA56_1==ISO646_STR_KW||(LA56_1>=LOWER && LA56_1<=L_BRACKET)||(LA56_1>=MINUS && LA56_1<=MINUS_INFINITY_KW)||(LA56_1>=NULL_KW && LA56_1<=NUMERIC_STR_KW)||(LA56_1>=OBJECT_KW && LA56_1<=OCTET_KW)||LA56_1==OPERATION_KW||LA56_1==PLUS_INFINITY_KW||LA56_1==PRINTABLE_STR_KW||LA56_1==REAL_KW||(LA56_1>=SEQUENCE_KW && LA56_1<=SET_KW)||LA56_1==T61_STR_KW||(LA56_1>=TELETEX_STR_KW && LA56_1<=TRUE_KW)||(LA56_1>=UNIVERSAL_STR_KW && LA56_1<=VISIBLE_STR_KW)||(LA56_1>=125 && LA56_1<=128)||(LA56_1>=130 && LA56_1<=133)||(LA56_1>=135 && LA56_1<=136)||LA56_1==142||(LA56_1>=145 && LA56_1<=147)||(LA56_1>=157 && LA56_1<=160)||(LA56_1>=162 && LA56_1<=164)||LA56_1==173||LA56_1==175||(LA56_1>=177 && LA56_1<=178)||(LA56_1>=180 && LA56_1<=182)||(LA56_1>=187 && LA56_1<=191)))
				{
					alt56 = 1;
				}
				} finally { DebugExitDecision(56); }
				switch (alt56)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:921:41: l= linkedOp_list
					{
					DebugLocation(921, 42);
					PushFollow(Follow._linkedOp_list_in_operation_macro4432);
					l=linkedOp_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, l.Tree);
					DebugLocation(921, 57);
					if (state.backtracking == 0)
					{
						 retval.result.LinkedOperationList = (l!=null?l.result:default(IList<TypeOrValue>)); 
					}

					}
					break;

				}
				} finally { DebugExitSubRule(56); }

				DebugLocation(921, 104);
				R_BRACE144=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_operation_macro4438); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE144_tree = (CommonTree)adaptor.Create(R_BRACE144);
				adaptor.AddChild(root_0, R_BRACE144_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(57); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("operation_macro", 47);
			LeaveRule("operation_macro", 47);
			LeaveRule_operation_macro();
		}
		DebugLocation(922, 1);
		} finally { DebugExitRule(GrammarFileName, "operation_macro"); }
		return retval;

	}
	// $ANTLR end "operation_macro"

	private sealed partial class error_macro_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ErrorMacro result = new ErrorMacro();
		public error_macro_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_error_macro();
	partial void LeaveRule_error_macro();
	// $ANTLR start "error_macro"
	// Smi.g:933:1: error_macro returns [ErrorMacro result = new ErrorMacro()] : ERROR_KW ( PARAMETER_KW ( ( LOWER )=>id= LOWER )? t= type )? ;
	[GrammarRule("error_macro")]
	private SmiParser.error_macro_return error_macro()
	{
		EnterRule_error_macro();
		EnterRule("error_macro", 48);
		TraceIn("error_macro", 48);
		SmiParser.error_macro_return retval = new SmiParser.error_macro_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken id = default(IToken);
		IToken ERROR_KW145 = default(IToken);
		IToken PARAMETER_KW146 = default(IToken);
		SmiParser.type_return t = default(SmiParser.type_return);

		CommonTree id_tree = default(CommonTree);
		CommonTree ERROR_KW145_tree = default(CommonTree);
		CommonTree PARAMETER_KW146_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "error_macro");
		DebugLocation(933, 43);
		try
		{
			// Smi.g:934:5: ( ERROR_KW ( PARAMETER_KW ( ( LOWER )=>id= LOWER )? t= type )? )
			DebugEnterAlt(1);
			// Smi.g:934:7: ERROR_KW ( PARAMETER_KW ( ( LOWER )=>id= LOWER )? t= type )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(934, 7);
			ERROR_KW145=(IToken)Match(input,ERROR_KW,Follow._ERROR_KW_in_error_macro4470); if (state.failed) return retval;
			if (state.backtracking == 0) {
			ERROR_KW145_tree = (CommonTree)adaptor.Create(ERROR_KW145);
			adaptor.AddChild(root_0, ERROR_KW145_tree);
			}
			DebugLocation(935, 2);
			// Smi.g:935:2: ( PARAMETER_KW ( ( LOWER )=>id= LOWER )? t= type )?
			int alt59=2;
			try { DebugEnterSubRule(59);
			try { DebugEnterDecision(59, false);
			int LA59_1 = input.LA(1);

			if ((LA59_1==PARAMETER_KW))
			{
				alt59 = 1;
			}
			} finally { DebugExitDecision(59); }
			switch (alt59)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:935:4: PARAMETER_KW ( ( LOWER )=>id= LOWER )? t= type
				{
				DebugLocation(935, 4);
				PARAMETER_KW146=(IToken)Match(input,PARAMETER_KW,Follow._PARAMETER_KW_in_error_macro4476); if (state.failed) return retval;
				if (state.backtracking == 0) {
				PARAMETER_KW146_tree = (CommonTree)adaptor.Create(PARAMETER_KW146);
				adaptor.AddChild(root_0, PARAMETER_KW146_tree);
				}
				DebugLocation(935, 17);
				// Smi.g:935:17: ( ( LOWER )=>id= LOWER )?
				int alt58=2;
				try { DebugEnterSubRule(58);
				try { DebugEnterDecision(58, false);
				int LA58_1 = input.LA(1);

				if ((LA58_1==LOWER))
				{
					int LA58_2 = input.LA(2);

					if ((LA58_2==ANY_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==BIT_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==BOOLEAN_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==CHARACTER_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==BMP_STR_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==GENERALIZED_TIME_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==GENERAL_STR_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==GRAPHIC_STR_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==IA5_STRING_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==ISO646_STR_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==NUMERIC_STR_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==PRINTABLE_STR_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==TELETEX_STR_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==T61_STR_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==UNIVERSAL_STR_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==UTF8_STR_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==UTC_TIME_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==VIDEOTEX_STR_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==VISIBLE_STR_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==CHOICE_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==EMBEDDED_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==ENUMERATED_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==EXTERNAL_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==INTEGER_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==NULL_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==OBJECT_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==OCTET_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==REAL_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==178) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==SEQUENCE_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==SET_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==L_BRACKET) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==UPPER) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==LOWER) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==OPERATION_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==ERROR_KW) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==164) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==158) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==163) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==160) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==187) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==162) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==159) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==157) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==130) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==190) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
					else if ((LA58_2==136) && (EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt58 = 1;
					}
				}
				} finally { DebugExitDecision(58); }
				switch (alt58)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:935:18: ( LOWER )=>id= LOWER
					{
					DebugLocation(935, 31);
					id=(IToken)Match(input,LOWER,Follow._LOWER_in_error_macro4487); if (state.failed) return retval;
					if (state.backtracking == 0) {
					id_tree = (CommonTree)adaptor.Create(id);
					adaptor.AddChild(root_0, id_tree);
					}
					DebugLocation(935, 38);
					if (state.backtracking == 0)
					{
						 retval.result.Identifier = (id!=null?id.Text:null); 
					}

					}
					break;

				}
				} finally { DebugExitSubRule(58); }

				DebugLocation(936, 3);
				PushFollow(Follow._type_in_error_macro4497);
				t=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, t.Tree);
				DebugLocation(936, 9);
				if (state.backtracking == 0)
				{
					 retval.result.Subtype = (t!=null?t.result:default(ISmiType)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(59); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("error_macro", 48);
			LeaveRule("error_macro", 48);
			LeaveRule_error_macro();
		}
		DebugLocation(936, 43);
		} finally { DebugExitRule(GrammarFileName, "error_macro"); }
		return retval;

	}
	// $ANTLR end "error_macro"

	private sealed partial class macros_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ISmiType result;
		public macros_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_macros_type();
	partial void LeaveRule_macros_type();
	// $ANTLR start "macros_type"
	// Smi.g:943:1: macros_type returns [ISmiType result] : (om= operation_macro |em= error_macro |otm= objecttype_macro |mm= moduleidentity_macro |oim= objectidentity_macro |ntm= notificationtype_macro |tcm= textualconvention_macro |ogm= objectgroup_macro |ngm= notificationgroup_macro |mcm= modulecompliance_macro |acm= agentcapabilities_macro |ttm= traptype_macro );
	[GrammarRule("macros_type")]
	private SmiParser.macros_type_return macros_type()
	{
		EnterRule_macros_type();
		EnterRule("macros_type", 49);
		TraceIn("macros_type", 49);
		SmiParser.macros_type_return retval = new SmiParser.macros_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		SmiParser.operation_macro_return om = default(SmiParser.operation_macro_return);
		SmiParser.error_macro_return em = default(SmiParser.error_macro_return);
		SmiParser.objecttype_macro_return otm = default(SmiParser.objecttype_macro_return);
		SmiParser.moduleidentity_macro_return mm = default(SmiParser.moduleidentity_macro_return);
		SmiParser.objectidentity_macro_return oim = default(SmiParser.objectidentity_macro_return);
		SmiParser.notificationtype_macro_return ntm = default(SmiParser.notificationtype_macro_return);
		SmiParser.textualconvention_macro_return tcm = default(SmiParser.textualconvention_macro_return);
		SmiParser.objectgroup_macro_return ogm = default(SmiParser.objectgroup_macro_return);
		SmiParser.notificationgroup_macro_return ngm = default(SmiParser.notificationgroup_macro_return);
		SmiParser.modulecompliance_macro_return mcm = default(SmiParser.modulecompliance_macro_return);
		SmiParser.agentcapabilities_macro_return acm = default(SmiParser.agentcapabilities_macro_return);
		SmiParser.traptype_macro_return ttm = default(SmiParser.traptype_macro_return);

		try { DebugEnterRule(GrammarFileName, "macros_type");
		DebugLocation(943, 48);
		try
		{
			// Smi.g:944:5: (om= operation_macro |em= error_macro |otm= objecttype_macro |mm= moduleidentity_macro |oim= objectidentity_macro |ntm= notificationtype_macro |tcm= textualconvention_macro |ogm= objectgroup_macro |ngm= notificationgroup_macro |mcm= modulecompliance_macro |acm= agentcapabilities_macro |ttm= traptype_macro )
			int alt60=12;
			try { DebugEnterDecision(60, false);
			switch (input.LA(1))
			{
			case OPERATION_KW:
				{
				alt60 = 1;
				}
				break;
			case ERROR_KW:
				{
				alt60 = 2;
				}
				break;
			case 164:
				{
				alt60 = 3;
				}
				break;
			case 158:
				{
				alt60 = 4;
				}
				break;
			case 163:
				{
				alt60 = 5;
				}
				break;
			case 160:
				{
				alt60 = 6;
				}
				break;
			case 187:
				{
				alt60 = 7;
				}
				break;
			case 162:
				{
				alt60 = 8;
				}
				break;
			case 159:
				{
				alt60 = 9;
				}
				break;
			case 157:
				{
				alt60 = 10;
				}
				break;
			case 130:
				{
				alt60 = 11;
				}
				break;
			case 190:
				{
				alt60 = 12;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 60, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(60); }
			switch (alt60)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:944:7: om= operation_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(944, 9);
				PushFollow(Follow._operation_macro_in_macros_type4527);
				om=operation_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, om.Tree);
				DebugLocation(944, 26);
				if (state.backtracking == 0)
				{
					 retval.result = (om!=null?om.result:default(OperationMacro)); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:945:4: em= error_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(945, 6);
				PushFollow(Follow._error_macro_in_macros_type4536);
				em=error_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, em.Tree);
				DebugLocation(945, 19);
				if (state.backtracking == 0)
				{
					 retval.result = (em!=null?em.result:default(ErrorMacro)); 
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:946:4: otm= objecttype_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(946, 7);
				PushFollow(Follow._objecttype_macro_in_macros_type4545);
				otm=objecttype_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, otm.Tree);
				DebugLocation(946, 25);
				if (state.backtracking == 0)
				{
					 retval.result = (otm!=null?otm.result:default(ObjectTypeMacro)); 
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Smi.g:947:4: mm= moduleidentity_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(947, 6);
				PushFollow(Follow._moduleidentity_macro_in_macros_type4554);
				mm=moduleidentity_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, mm.Tree);
				DebugLocation(947, 28);
				if (state.backtracking == 0)
				{
					 retval.result = (mm!=null?mm.result:default(ModuleIdentityMacro)); 
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Smi.g:948:7: oim= objectidentity_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(948, 10);
				PushFollow(Follow._objectidentity_macro_in_macros_type4566);
				oim=objectidentity_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, oim.Tree);
				DebugLocation(948, 32);
				if (state.backtracking == 0)
				{
					 retval.result = (oim!=null?oim.result:default(ObjectIdentityMacro)); 
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// Smi.g:949:4: ntm= notificationtype_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(949, 7);
				PushFollow(Follow._notificationtype_macro_in_macros_type4575);
				ntm=notificationtype_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, ntm.Tree);
				DebugLocation(949, 31);
				if (state.backtracking == 0)
				{
					 retval.result = (ntm!=null?ntm.result:default(NotificationTypeMacro)); 
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// Smi.g:950:4: tcm= textualconvention_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(950, 7);
				PushFollow(Follow._textualconvention_macro_in_macros_type4584);
				tcm=textualconvention_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, tcm.Tree);
				DebugLocation(950, 32);
				if (state.backtracking == 0)
				{
					 retval.result = (tcm!=null?tcm.result:default(TextualConventionMacro)); 
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// Smi.g:951:7: ogm= objectgroup_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(951, 10);
				PushFollow(Follow._objectgroup_macro_in_macros_type4596);
				ogm=objectgroup_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, ogm.Tree);
				DebugLocation(951, 29);
				if (state.backtracking == 0)
				{
					 retval.result = (ogm!=null?ogm.result:default(ObjectGroupMacro)); 
				}

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// Smi.g:952:4: ngm= notificationgroup_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(952, 7);
				PushFollow(Follow._notificationgroup_macro_in_macros_type4605);
				ngm=notificationgroup_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, ngm.Tree);
				DebugLocation(952, 32);
				if (state.backtracking == 0)
				{
					 retval.result = (ngm!=null?ngm.result:default(NotificationGroupMacro)); 
				}

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// Smi.g:953:4: mcm= modulecompliance_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(953, 7);
				PushFollow(Follow._modulecompliance_macro_in_macros_type4614);
				mcm=modulecompliance_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, mcm.Tree);
				DebugLocation(953, 31);
				if (state.backtracking == 0)
				{
					 retval.result = (mcm!=null?mcm.result:default(ModuleComplianceMacro)); 
				}

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// Smi.g:954:7: acm= agentcapabilities_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(954, 10);
				PushFollow(Follow._agentcapabilities_macro_in_macros_type4626);
				acm=agentcapabilities_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, acm.Tree);
				DebugLocation(954, 35);
				if (state.backtracking == 0)
				{
					 retval.result = (acm!=null?acm.result:default(AgentCapabilitiesMacro)); 
				}

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// Smi.g:955:4: ttm= traptype_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(955, 7);
				PushFollow(Follow._traptype_macro_in_macros_type4635);
				ttm=traptype_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, ttm.Tree);
				DebugLocation(955, 23);
				if (state.backtracking == 0)
				{
					 retval.result = (ttm!=null?ttm.result:default(TrapTypeMacro)); 
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("macros_type", 49);
			LeaveRule("macros_type", 49);
			LeaveRule_macros_type();
		}
		DebugLocation(955, 48);
		} finally { DebugExitRule(GrammarFileName, "macros_type"); }
		return retval;

	}
	// $ANTLR end "macros_type"

	partial void EnterRule_smi_macros();
	partial void LeaveRule_smi_macros();
	// $ANTLR start "smi_macros"
	// Smi.g:957:1: smi_macros : ( 'OBJECT-TYPE' | 'MODULE-IDENTITY' | 'OBJECT-IDENTITY' | 'NOTIFICATION-TYPE' | 'TEXTUAL-CONVENTION' | 'OBJECT-GROUP' | 'NOTIFICATION-GROUP' | 'MODULE-COMPLIANCE' | 'AGENT-CAPABILITIES' | 'TRAP-TYPE' );
	[GrammarRule("smi_macros")]
	private AstParserRuleReturnScope<CommonTree, IToken> smi_macros()
	{
		EnterRule_smi_macros();
		EnterRule("smi_macros", 50);
		TraceIn("smi_macros", 50);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken set147 = default(IToken);

		CommonTree set147_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "smi_macros");
		DebugLocation(957, 45);
		try
		{
			// Smi.g:957:11: ( 'OBJECT-TYPE' | 'MODULE-IDENTITY' | 'OBJECT-IDENTITY' | 'NOTIFICATION-TYPE' | 'TEXTUAL-CONVENTION' | 'OBJECT-GROUP' | 'NOTIFICATION-GROUP' | 'MODULE-COMPLIANCE' | 'AGENT-CAPABILITIES' | 'TRAP-TYPE' )
			DebugEnterAlt(1);
			// Smi.g:
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(957, 11);

			set147=(IToken)input.LT(1);
			if (input.LA(1)==130||(input.LA(1)>=157 && input.LA(1)<=160)||(input.LA(1)>=162 && input.LA(1)<=164)||input.LA(1)==187||input.LA(1)==190)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set147));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("smi_macros", 50);
			LeaveRule("smi_macros", 50);
			LeaveRule_smi_macros();
		}
		DebugLocation(959, 45);
		} finally { DebugExitRule(GrammarFileName, "smi_macros"); }
		return retval;

	}
	// $ANTLR end "smi_macros"

	private sealed partial class smi_type_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ISmiType result;
		public smi_type_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_smi_type();
	partial void LeaveRule_smi_type();
	// $ANTLR start "smi_type"
	// Smi.g:963:1: smi_type returns [ISmiType result] : ( 'BITS' | INTEGER_KW | OCTET_KW STRING_KW | OBJECT_KW IDENTIFIER_KW |name= UPPER );
	[GrammarRule("smi_type")]
	private SmiParser.smi_type_return smi_type()
	{
		EnterRule_smi_type();
		EnterRule("smi_type", 51);
		TraceIn("smi_type", 51);
		SmiParser.smi_type_return retval = new SmiParser.smi_type_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken name = default(IToken);
		IToken string_literal148 = default(IToken);
		IToken INTEGER_KW149 = default(IToken);
		IToken OCTET_KW150 = default(IToken);
		IToken STRING_KW151 = default(IToken);
		IToken OBJECT_KW152 = default(IToken);
		IToken IDENTIFIER_KW153 = default(IToken);

		CommonTree name_tree = default(CommonTree);
		CommonTree string_literal148_tree = default(CommonTree);
		CommonTree INTEGER_KW149_tree = default(CommonTree);
		CommonTree OCTET_KW150_tree = default(CommonTree);
		CommonTree STRING_KW151_tree = default(CommonTree);
		CommonTree OBJECT_KW152_tree = default(CommonTree);
		CommonTree IDENTIFIER_KW153_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "smi_type");
		DebugLocation(963, 1);
		try
		{
			// Smi.g:964:5: ( 'BITS' | INTEGER_KW | OCTET_KW STRING_KW | OBJECT_KW IDENTIFIER_KW |name= UPPER )
			int alt61=5;
			try { DebugEnterDecision(61, false);
			switch (input.LA(1))
			{
			case 136:
				{
				alt61 = 1;
				}
				break;
			case INTEGER_KW:
				{
				alt61 = 2;
				}
				break;
			case OCTET_KW:
				{
				alt61 = 3;
				}
				break;
			case OBJECT_KW:
				{
				alt61 = 4;
				}
				break;
			case UPPER:
				{
				alt61 = 5;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 61, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(61); }
			switch (alt61)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:964:7: 'BITS'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(964, 7);
				string_literal148=(IToken)Match(input,136,Follow._136_in_smi_type4720); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal148_tree = (CommonTree)adaptor.Create(string_literal148);
				adaptor.AddChild(root_0, string_literal148_tree);
				}
				DebugLocation(964, 14);
				if (state.backtracking == 0)
				{
					 retval.result = new BitsType(); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:965:4: INTEGER_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(965, 4);
				INTEGER_KW149=(IToken)Match(input,INTEGER_KW,Follow._INTEGER_KW_in_smi_type4727); if (state.failed) return retval;
				if (state.backtracking == 0) {
				INTEGER_KW149_tree = (CommonTree)adaptor.Create(INTEGER_KW149);
				adaptor.AddChild(root_0, INTEGER_KW149_tree);
				}
				DebugLocation(965, 15);
				if (state.backtracking == 0)
				{
					 retval.result = new IntegerType(); 
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:966:4: OCTET_KW STRING_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(966, 4);
				OCTET_KW150=(IToken)Match(input,OCTET_KW,Follow._OCTET_KW_in_smi_type4734); if (state.failed) return retval;
				if (state.backtracking == 0) {
				OCTET_KW150_tree = (CommonTree)adaptor.Create(OCTET_KW150);
				adaptor.AddChild(root_0, OCTET_KW150_tree);
				}
				DebugLocation(966, 13);
				STRING_KW151=(IToken)Match(input,STRING_KW,Follow._STRING_KW_in_smi_type4736); if (state.failed) return retval;
				if (state.backtracking == 0) {
				STRING_KW151_tree = (CommonTree)adaptor.Create(STRING_KW151);
				adaptor.AddChild(root_0, STRING_KW151_tree);
				}
				DebugLocation(966, 23);
				if (state.backtracking == 0)
				{
					 retval.result = new OctetStringType(); 
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Smi.g:967:4: OBJECT_KW IDENTIFIER_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(967, 4);
				OBJECT_KW152=(IToken)Match(input,OBJECT_KW,Follow._OBJECT_KW_in_smi_type4743); if (state.failed) return retval;
				if (state.backtracking == 0) {
				OBJECT_KW152_tree = (CommonTree)adaptor.Create(OBJECT_KW152);
				adaptor.AddChild(root_0, OBJECT_KW152_tree);
				}
				DebugLocation(967, 14);
				IDENTIFIER_KW153=(IToken)Match(input,IDENTIFIER_KW,Follow._IDENTIFIER_KW_in_smi_type4745); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER_KW153_tree = (CommonTree)adaptor.Create(IDENTIFIER_KW153);
				adaptor.AddChild(root_0, IDENTIFIER_KW153_tree);
				}
				DebugLocation(967, 28);
				if (state.backtracking == 0)
				{
					 retval.result = new ObjectIdentifierType(); 
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Smi.g:968:4: name= UPPER
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(968, 8);
				name=(IToken)Match(input,UPPER,Follow._UPPER_in_smi_type4755); if (state.failed) return retval;
				if (state.backtracking == 0) {
				name_tree = (CommonTree)adaptor.Create(name);
				adaptor.AddChild(root_0, name_tree);
				}
				DebugLocation(968, 15);
				if (state.backtracking == 0)
				{
					 retval.result = new UnknownType((name!=null?name.Text:null)); 
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("smi_type", 51);
			LeaveRule("smi_type", 51);
			LeaveRule_smi_type();
		}
		DebugLocation(969, 1);
		} finally { DebugExitRule(GrammarFileName, "smi_type"); }
		return retval;

	}
	// $ANTLR end "smi_type"

	partial void EnterRule_smi_subtyping();
	partial void LeaveRule_smi_subtyping();
	// $ANTLR start "smi_subtyping"
	// Smi.g:975:1: smi_subtyping : ( L_PAREN subtype_range ( BAR subtype_range )* R_PAREN | L_PAREN 'SIZE' L_PAREN subtype_range ( BAR subtype_range )* R_PAREN R_PAREN );
	[GrammarRule("smi_subtyping")]
	private AstParserRuleReturnScope<CommonTree, IToken> smi_subtyping()
	{
		EnterRule_smi_subtyping();
		EnterRule("smi_subtyping", 52);
		TraceIn("smi_subtyping", 52);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_PAREN154 = default(IToken);
		IToken BAR156 = default(IToken);
		IToken R_PAREN158 = default(IToken);
		IToken L_PAREN159 = default(IToken);
		IToken string_literal160 = default(IToken);
		IToken L_PAREN161 = default(IToken);
		IToken BAR163 = default(IToken);
		IToken R_PAREN165 = default(IToken);
		IToken R_PAREN166 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> subtype_range155 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> subtype_range157 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> subtype_range162 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> subtype_range164 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree L_PAREN154_tree = default(CommonTree);
		CommonTree BAR156_tree = default(CommonTree);
		CommonTree R_PAREN158_tree = default(CommonTree);
		CommonTree L_PAREN159_tree = default(CommonTree);
		CommonTree string_literal160_tree = default(CommonTree);
		CommonTree L_PAREN161_tree = default(CommonTree);
		CommonTree BAR163_tree = default(CommonTree);
		CommonTree R_PAREN165_tree = default(CommonTree);
		CommonTree R_PAREN166_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "smi_subtyping");
		DebugLocation(975, 88);
		try
		{
			// Smi.g:975:14: ( L_PAREN subtype_range ( BAR subtype_range )* R_PAREN | L_PAREN 'SIZE' L_PAREN subtype_range ( BAR subtype_range )* R_PAREN R_PAREN )
			int alt64=2;
			try { DebugEnterDecision(64, false);
			int LA64_1 = input.LA(1);

			if ((LA64_1==L_PAREN))
			{
				int LA64_2 = input.LA(2);

				if ((LA64_2==SIZE_KW))
				{
					alt64 = 2;
				}
				else if ((LA64_2==B_STRING||LA64_2==H_STRING||LA64_2==MINUS||LA64_2==NUMBER))
				{
					alt64 = 1;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 64, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 64, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(64); }
			switch (alt64)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:975:16: L_PAREN subtype_range ( BAR subtype_range )* R_PAREN
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(975, 16);
				L_PAREN154=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_smi_subtyping4773); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_PAREN154_tree = (CommonTree)adaptor.Create(L_PAREN154);
				adaptor.AddChild(root_0, L_PAREN154_tree);
				}
				DebugLocation(975, 24);
				PushFollow(Follow._subtype_range_in_smi_subtyping4775);
				subtype_range155=subtype_range();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, subtype_range155.Tree);
				DebugLocation(975, 38);
				// Smi.g:975:38: ( BAR subtype_range )*
				try { DebugEnterSubRule(62);
				while (true)
				{
					int alt62=2;
					try { DebugEnterDecision(62, false);
					int LA62_1 = input.LA(1);

					if ((LA62_1==BAR))
					{
						alt62 = 1;
					}


					} finally { DebugExitDecision(62); }
					switch ( alt62 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:975:39: BAR subtype_range
						{
						DebugLocation(975, 39);
						BAR156=(IToken)Match(input,BAR,Follow._BAR_in_smi_subtyping4778); if (state.failed) return retval;
						if (state.backtracking == 0) {
						BAR156_tree = (CommonTree)adaptor.Create(BAR156);
						adaptor.AddChild(root_0, BAR156_tree);
						}
						DebugLocation(975, 43);
						PushFollow(Follow._subtype_range_in_smi_subtyping4780);
						subtype_range157=subtype_range();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, subtype_range157.Tree);

						}
						break;

					default:
						goto loop62;
					}
				}

				loop62:
					;

				} finally { DebugExitSubRule(62); }

				DebugLocation(975, 59);
				R_PAREN158=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_smi_subtyping4784); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_PAREN158_tree = (CommonTree)adaptor.Create(R_PAREN158);
				adaptor.AddChild(root_0, R_PAREN158_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:976:16: L_PAREN 'SIZE' L_PAREN subtype_range ( BAR subtype_range )* R_PAREN R_PAREN
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(976, 16);
				L_PAREN159=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_smi_subtyping4801); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_PAREN159_tree = (CommonTree)adaptor.Create(L_PAREN159);
				adaptor.AddChild(root_0, L_PAREN159_tree);
				}
				DebugLocation(976, 24);
				string_literal160=(IToken)Match(input,SIZE_KW,Follow._SIZE_KW_in_smi_subtyping4803); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal160_tree = (CommonTree)adaptor.Create(string_literal160);
				adaptor.AddChild(root_0, string_literal160_tree);
				}
				DebugLocation(976, 31);
				L_PAREN161=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_smi_subtyping4805); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_PAREN161_tree = (CommonTree)adaptor.Create(L_PAREN161);
				adaptor.AddChild(root_0, L_PAREN161_tree);
				}
				DebugLocation(976, 39);
				PushFollow(Follow._subtype_range_in_smi_subtyping4807);
				subtype_range162=subtype_range();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, subtype_range162.Tree);
				DebugLocation(976, 53);
				// Smi.g:976:53: ( BAR subtype_range )*
				try { DebugEnterSubRule(63);
				while (true)
				{
					int alt63=2;
					try { DebugEnterDecision(63, false);
					int LA63_1 = input.LA(1);

					if ((LA63_1==BAR))
					{
						alt63 = 1;
					}


					} finally { DebugExitDecision(63); }
					switch ( alt63 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:976:54: BAR subtype_range
						{
						DebugLocation(976, 54);
						BAR163=(IToken)Match(input,BAR,Follow._BAR_in_smi_subtyping4810); if (state.failed) return retval;
						if (state.backtracking == 0) {
						BAR163_tree = (CommonTree)adaptor.Create(BAR163);
						adaptor.AddChild(root_0, BAR163_tree);
						}
						DebugLocation(976, 58);
						PushFollow(Follow._subtype_range_in_smi_subtyping4812);
						subtype_range164=subtype_range();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, subtype_range164.Tree);

						}
						break;

					default:
						goto loop63;
					}
				}

				loop63:
					;

				} finally { DebugExitSubRule(63); }

				DebugLocation(976, 74);
				R_PAREN165=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_smi_subtyping4816); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_PAREN165_tree = (CommonTree)adaptor.Create(R_PAREN165);
				adaptor.AddChild(root_0, R_PAREN165_tree);
				}
				DebugLocation(976, 82);
				R_PAREN166=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_smi_subtyping4818); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_PAREN166_tree = (CommonTree)adaptor.Create(R_PAREN166);
				adaptor.AddChild(root_0, R_PAREN166_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("smi_subtyping", 52);
			LeaveRule("smi_subtyping", 52);
			LeaveRule_smi_subtyping();
		}
		DebugLocation(976, 88);
		} finally { DebugExitRule(GrammarFileName, "smi_subtyping"); }
		return retval;

	}
	// $ANTLR end "smi_subtyping"

	partial void EnterRule_subtype_range();
	partial void LeaveRule_subtype_range();
	// $ANTLR start "subtype_range"
	// Smi.g:977:1: subtype_range : subtype_value ( DOTDOT subtype_value )? ;
	[GrammarRule("subtype_range")]
	private AstParserRuleReturnScope<CommonTree, IToken> subtype_range()
	{
		EnterRule_subtype_range();
		EnterRule("subtype_range", 53);
		TraceIn("subtype_range", 53);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken DOTDOT168 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> subtype_value167 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> subtype_value169 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree DOTDOT168_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "subtype_range");
		DebugLocation(977, 53);
		try
		{
			// Smi.g:977:14: ( subtype_value ( DOTDOT subtype_value )? )
			DebugEnterAlt(1);
			// Smi.g:977:16: subtype_value ( DOTDOT subtype_value )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(977, 16);
			PushFollow(Follow._subtype_value_in_subtype_range4824);
			subtype_value167=subtype_value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, subtype_value167.Tree);
			DebugLocation(977, 30);
			// Smi.g:977:30: ( DOTDOT subtype_value )?
			int alt65=2;
			try { DebugEnterSubRule(65);
			try { DebugEnterDecision(65, false);
			int LA65_1 = input.LA(1);

			if ((LA65_1==DOTDOT))
			{
				alt65 = 1;
			}
			} finally { DebugExitDecision(65); }
			switch (alt65)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:977:31: DOTDOT subtype_value
				{
				DebugLocation(977, 31);
				DOTDOT168=(IToken)Match(input,DOTDOT,Follow._DOTDOT_in_subtype_range4827); if (state.failed) return retval;
				if (state.backtracking == 0) {
				DOTDOT168_tree = (CommonTree)adaptor.Create(DOTDOT168);
				adaptor.AddChild(root_0, DOTDOT168_tree);
				}
				DebugLocation(977, 38);
				PushFollow(Follow._subtype_value_in_subtype_range4829);
				subtype_value169=subtype_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, subtype_value169.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(65); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("subtype_range", 53);
			LeaveRule("subtype_range", 53);
			LeaveRule_subtype_range();
		}
		DebugLocation(977, 53);
		} finally { DebugExitRule(GrammarFileName, "subtype_range"); }
		return retval;

	}
	// $ANTLR end "subtype_range"

	partial void EnterRule_subtype_value();
	partial void LeaveRule_subtype_value();
	// $ANTLR start "subtype_value"
	// Smi.g:978:1: subtype_value : ( ( MINUS )? NUMBER | B_STRING | H_STRING );
	[GrammarRule("subtype_value")]
	private AstParserRuleReturnScope<CommonTree, IToken> subtype_value()
	{
		EnterRule_subtype_value();
		EnterRule("subtype_value", 54);
		TraceIn("subtype_value", 54);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken MINUS170 = default(IToken);
		IToken NUMBER171 = default(IToken);
		IToken B_STRING172 = default(IToken);
		IToken H_STRING173 = default(IToken);

		CommonTree MINUS170_tree = default(CommonTree);
		CommonTree NUMBER171_tree = default(CommonTree);
		CommonTree B_STRING172_tree = default(CommonTree);
		CommonTree H_STRING173_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "subtype_value");
		DebugLocation(978, 52);
		try
		{
			// Smi.g:978:14: ( ( MINUS )? NUMBER | B_STRING | H_STRING )
			int alt67=3;
			try { DebugEnterDecision(67, false);
			switch (input.LA(1))
			{
			case MINUS:
			case NUMBER:
				{
				alt67 = 1;
				}
				break;
			case B_STRING:
				{
				alt67 = 2;
				}
				break;
			case H_STRING:
				{
				alt67 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 67, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(67); }
			switch (alt67)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:978:16: ( MINUS )? NUMBER
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(978, 16);
				// Smi.g:978:16: ( MINUS )?
				int alt66=2;
				try { DebugEnterSubRule(66);
				try { DebugEnterDecision(66, false);
				int LA66_1 = input.LA(1);

				if ((LA66_1==MINUS))
				{
					alt66 = 1;
				}
				} finally { DebugExitDecision(66); }
				switch (alt66)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:978:17: MINUS
					{
					DebugLocation(978, 17);
					MINUS170=(IToken)Match(input,MINUS,Follow._MINUS_in_subtype_value4839); if (state.failed) return retval;
					if (state.backtracking == 0) {
					MINUS170_tree = (CommonTree)adaptor.Create(MINUS170);
					adaptor.AddChild(root_0, MINUS170_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(66); }

				DebugLocation(978, 25);
				NUMBER171=(IToken)Match(input,NUMBER,Follow._NUMBER_in_subtype_value4843); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NUMBER171_tree = (CommonTree)adaptor.Create(NUMBER171);
				adaptor.AddChild(root_0, NUMBER171_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:978:34: B_STRING
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(978, 34);
				B_STRING172=(IToken)Match(input,B_STRING,Follow._B_STRING_in_subtype_value4847); if (state.failed) return retval;
				if (state.backtracking == 0) {
				B_STRING172_tree = (CommonTree)adaptor.Create(B_STRING172);
				adaptor.AddChild(root_0, B_STRING172_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:978:45: H_STRING
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(978, 45);
				H_STRING173=(IToken)Match(input,H_STRING,Follow._H_STRING_in_subtype_value4851); if (state.failed) return retval;
				if (state.backtracking == 0) {
				H_STRING173_tree = (CommonTree)adaptor.Create(H_STRING173);
				adaptor.AddChild(root_0, H_STRING173_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("subtype_value", 54);
			LeaveRule("subtype_value", 54);
			LeaveRule_subtype_value();
		}
		DebugLocation(978, 52);
		} finally { DebugExitRule(GrammarFileName, "subtype_value"); }
		return retval;

	}
	// $ANTLR end "subtype_value"

	private sealed partial class objecttype_macro_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ObjectTypeMacro result = new ObjectTypeMacro();
		public objecttype_macro_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_objecttype_macro();
	partial void LeaveRule_objecttype_macro();
	// $ANTLR start "objecttype_macro"
	// Smi.g:981:1: objecttype_macro returns [ObjectTypeMacro result = new ObjectTypeMacro()] : 'OBJECT-TYPE' 'SYNTAX' ( ( smi_type L_BRACE )=>t1= smi_type nb1= namedbits | ( smi_type )=>t2= smi_type ( smi_subtyping )? |t3= type ) ( 'UNITS' u1= C_STRING )? ( ( 'MAX-ACCESS' | 'ACCESS' ) ma= objecttype_macro_accesstypes | 'PIB-ACCESS' pa= objecttype_macro_pibaccess )? ( 'PIB-REFERENCES' L_BRACE v1= value R_BRACE )? ( 'PIB-TAG' L_BRACE v2= value R_BRACE )? 'STATUS' s= objecttype_macro_statustypes ( ( 'DESCRIPTION' )=> 'DESCRIPTION' c1= C_STRING )? ( 'INSTALL-ERRORS' L_BRACE e1= objecttype_macro_error ( COMMA e2= objecttype_macro_error )* R_BRACE )? ( 'REFERENCE' c2= C_STRING )? ( (~ ( 'PIB-INDEX' ) )=> 'INDEX' i3= objecttype_macro_index | 'AUGMENTS' i4= objecttype_macro_augments | 'PIB-INDEX' L_BRACE v3= value R_BRACE | 'EXTENDS' L_BRACE v4= value R_BRACE )? ( 'INDEX' i5= objecttype_macro_index )? ( 'UNIQUENESS' L_BRACE (v5= value ( COMMA v6= value )* )? R_BRACE )? ( ( 'DEFVAL' )=> 'DEFVAL' L_BRACE ( ( L_BRACE LOWER ( COMMA | R_BRACE ) )=>b= objecttype_macro_bitsvalue |v7= value ) R_BRACE )? ;
	[GrammarRule("objecttype_macro")]
	private SmiParser.objecttype_macro_return objecttype_macro()
	{
		EnterRule_objecttype_macro();
		EnterRule("objecttype_macro", 55);
		TraceIn("objecttype_macro", 55);
		SmiParser.objecttype_macro_return retval = new SmiParser.objecttype_macro_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken u1 = default(IToken);
		IToken c1 = default(IToken);
		IToken c2 = default(IToken);
		IToken string_literal174 = default(IToken);
		IToken string_literal175 = default(IToken);
		IToken string_literal177 = default(IToken);
		IToken string_literal178 = default(IToken);
		IToken string_literal179 = default(IToken);
		IToken string_literal180 = default(IToken);
		IToken string_literal181 = default(IToken);
		IToken L_BRACE182 = default(IToken);
		IToken R_BRACE183 = default(IToken);
		IToken string_literal184 = default(IToken);
		IToken L_BRACE185 = default(IToken);
		IToken R_BRACE186 = default(IToken);
		IToken string_literal187 = default(IToken);
		IToken string_literal188 = default(IToken);
		IToken string_literal189 = default(IToken);
		IToken L_BRACE190 = default(IToken);
		IToken COMMA191 = default(IToken);
		IToken R_BRACE192 = default(IToken);
		IToken string_literal193 = default(IToken);
		IToken string_literal194 = default(IToken);
		IToken string_literal195 = default(IToken);
		IToken string_literal196 = default(IToken);
		IToken L_BRACE197 = default(IToken);
		IToken R_BRACE198 = default(IToken);
		IToken string_literal199 = default(IToken);
		IToken L_BRACE200 = default(IToken);
		IToken R_BRACE201 = default(IToken);
		IToken string_literal202 = default(IToken);
		IToken string_literal203 = default(IToken);
		IToken L_BRACE204 = default(IToken);
		IToken COMMA205 = default(IToken);
		IToken R_BRACE206 = default(IToken);
		IToken string_literal207 = default(IToken);
		IToken L_BRACE208 = default(IToken);
		IToken R_BRACE209 = default(IToken);
		SmiParser.smi_type_return t1 = default(SmiParser.smi_type_return);
		SmiParser.namedbits_return nb1 = default(SmiParser.namedbits_return);
		SmiParser.smi_type_return t2 = default(SmiParser.smi_type_return);
		SmiParser.type_return t3 = default(SmiParser.type_return);
		SmiParser.objecttype_macro_accesstypes_return ma = default(SmiParser.objecttype_macro_accesstypes_return);
		SmiParser.objecttype_macro_pibaccess_return pa = default(SmiParser.objecttype_macro_pibaccess_return);
		SmiParser.value_return v1 = default(SmiParser.value_return);
		SmiParser.value_return v2 = default(SmiParser.value_return);
		SmiParser.objecttype_macro_statustypes_return s = default(SmiParser.objecttype_macro_statustypes_return);
		SmiParser.objecttype_macro_error_return e1 = default(SmiParser.objecttype_macro_error_return);
		SmiParser.objecttype_macro_error_return e2 = default(SmiParser.objecttype_macro_error_return);
		SmiParser.objecttype_macro_index_return i3 = default(SmiParser.objecttype_macro_index_return);
		SmiParser.objecttype_macro_augments_return i4 = default(SmiParser.objecttype_macro_augments_return);
		SmiParser.value_return v3 = default(SmiParser.value_return);
		SmiParser.value_return v4 = default(SmiParser.value_return);
		SmiParser.objecttype_macro_index_return i5 = default(SmiParser.objecttype_macro_index_return);
		SmiParser.value_return v5 = default(SmiParser.value_return);
		SmiParser.value_return v6 = default(SmiParser.value_return);
		SmiParser.objecttype_macro_bitsvalue_return b = default(SmiParser.objecttype_macro_bitsvalue_return);
		SmiParser.value_return v7 = default(SmiParser.value_return);
		AstParserRuleReturnScope<CommonTree, IToken> smi_subtyping176 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree u1_tree = default(CommonTree);
		CommonTree c1_tree = default(CommonTree);
		CommonTree c2_tree = default(CommonTree);
		CommonTree string_literal174_tree = default(CommonTree);
		CommonTree string_literal175_tree = default(CommonTree);
		CommonTree string_literal177_tree = default(CommonTree);
		CommonTree string_literal178_tree = default(CommonTree);
		CommonTree string_literal179_tree = default(CommonTree);
		CommonTree string_literal180_tree = default(CommonTree);
		CommonTree string_literal181_tree = default(CommonTree);
		CommonTree L_BRACE182_tree = default(CommonTree);
		CommonTree R_BRACE183_tree = default(CommonTree);
		CommonTree string_literal184_tree = default(CommonTree);
		CommonTree L_BRACE185_tree = default(CommonTree);
		CommonTree R_BRACE186_tree = default(CommonTree);
		CommonTree string_literal187_tree = default(CommonTree);
		CommonTree string_literal188_tree = default(CommonTree);
		CommonTree string_literal189_tree = default(CommonTree);
		CommonTree L_BRACE190_tree = default(CommonTree);
		CommonTree COMMA191_tree = default(CommonTree);
		CommonTree R_BRACE192_tree = default(CommonTree);
		CommonTree string_literal193_tree = default(CommonTree);
		CommonTree string_literal194_tree = default(CommonTree);
		CommonTree string_literal195_tree = default(CommonTree);
		CommonTree string_literal196_tree = default(CommonTree);
		CommonTree L_BRACE197_tree = default(CommonTree);
		CommonTree R_BRACE198_tree = default(CommonTree);
		CommonTree string_literal199_tree = default(CommonTree);
		CommonTree L_BRACE200_tree = default(CommonTree);
		CommonTree R_BRACE201_tree = default(CommonTree);
		CommonTree string_literal202_tree = default(CommonTree);
		CommonTree string_literal203_tree = default(CommonTree);
		CommonTree L_BRACE204_tree = default(CommonTree);
		CommonTree COMMA205_tree = default(CommonTree);
		CommonTree R_BRACE206_tree = default(CommonTree);
		CommonTree string_literal207_tree = default(CommonTree);
		CommonTree L_BRACE208_tree = default(CommonTree);
		CommonTree R_BRACE209_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro");
		DebugLocation(981, 31);
		try
		{
			// Smi.g:982:5: ( 'OBJECT-TYPE' 'SYNTAX' ( ( smi_type L_BRACE )=>t1= smi_type nb1= namedbits | ( smi_type )=>t2= smi_type ( smi_subtyping )? |t3= type ) ( 'UNITS' u1= C_STRING )? ( ( 'MAX-ACCESS' | 'ACCESS' ) ma= objecttype_macro_accesstypes | 'PIB-ACCESS' pa= objecttype_macro_pibaccess )? ( 'PIB-REFERENCES' L_BRACE v1= value R_BRACE )? ( 'PIB-TAG' L_BRACE v2= value R_BRACE )? 'STATUS' s= objecttype_macro_statustypes ( ( 'DESCRIPTION' )=> 'DESCRIPTION' c1= C_STRING )? ( 'INSTALL-ERRORS' L_BRACE e1= objecttype_macro_error ( COMMA e2= objecttype_macro_error )* R_BRACE )? ( 'REFERENCE' c2= C_STRING )? ( (~ ( 'PIB-INDEX' ) )=> 'INDEX' i3= objecttype_macro_index | 'AUGMENTS' i4= objecttype_macro_augments | 'PIB-INDEX' L_BRACE v3= value R_BRACE | 'EXTENDS' L_BRACE v4= value R_BRACE )? ( 'INDEX' i5= objecttype_macro_index )? ( 'UNIQUENESS' L_BRACE (v5= value ( COMMA v6= value )* )? R_BRACE )? ( ( 'DEFVAL' )=> 'DEFVAL' L_BRACE ( ( L_BRACE LOWER ( COMMA | R_BRACE ) )=>b= objecttype_macro_bitsvalue |v7= value ) R_BRACE )? )
			DebugEnterAlt(1);
			// Smi.g:982:7: 'OBJECT-TYPE' 'SYNTAX' ( ( smi_type L_BRACE )=>t1= smi_type nb1= namedbits | ( smi_type )=>t2= smi_type ( smi_subtyping )? |t3= type ) ( 'UNITS' u1= C_STRING )? ( ( 'MAX-ACCESS' | 'ACCESS' ) ma= objecttype_macro_accesstypes | 'PIB-ACCESS' pa= objecttype_macro_pibaccess )? ( 'PIB-REFERENCES' L_BRACE v1= value R_BRACE )? ( 'PIB-TAG' L_BRACE v2= value R_BRACE )? 'STATUS' s= objecttype_macro_statustypes ( ( 'DESCRIPTION' )=> 'DESCRIPTION' c1= C_STRING )? ( 'INSTALL-ERRORS' L_BRACE e1= objecttype_macro_error ( COMMA e2= objecttype_macro_error )* R_BRACE )? ( 'REFERENCE' c2= C_STRING )? ( (~ ( 'PIB-INDEX' ) )=> 'INDEX' i3= objecttype_macro_index | 'AUGMENTS' i4= objecttype_macro_augments | 'PIB-INDEX' L_BRACE v3= value R_BRACE | 'EXTENDS' L_BRACE v4= value R_BRACE )? ( 'INDEX' i5= objecttype_macro_index )? ( 'UNIQUENESS' L_BRACE (v5= value ( COMMA v6= value )* )? R_BRACE )? ( ( 'DEFVAL' )=> 'DEFVAL' L_BRACE ( ( L_BRACE LOWER ( COMMA | R_BRACE ) )=>b= objecttype_macro_bitsvalue |v7= value ) R_BRACE )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(982, 7);
			string_literal174=(IToken)Match(input,164,Follow._164_in_objecttype_macro4869); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal174_tree = (CommonTree)adaptor.Create(string_literal174);
			adaptor.AddChild(root_0, string_literal174_tree);
			}
			DebugLocation(982, 21);
			string_literal175=(IToken)Match(input,186,Follow._186_in_objecttype_macro4871); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal175_tree = (CommonTree)adaptor.Create(string_literal175);
			adaptor.AddChild(root_0, string_literal175_tree);
			}
			DebugLocation(983, 21);
			// Smi.g:983:21: ( ( smi_type L_BRACE )=>t1= smi_type nb1= namedbits | ( smi_type )=>t2= smi_type ( smi_subtyping )? |t3= type )
			int alt69=3;
			try { DebugEnterSubRule(69);
			try { DebugEnterDecision(69, false);
			switch (input.LA(1))
			{
			case 136:
				{
				int LA69_2 = input.LA(2);

				if ((LA69_2==L_BRACE) && (EvaluatePredicate(synpred27_Smi_fragment)))
				{
					alt69 = 1;
				}
				else if ((EvaluatePredicate(synpred28_Smi_fragment)))
				{
					alt69 = 2;
				}
				else if ((true))
				{
					alt69 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 69, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case INTEGER_KW:
				{
				int LA69_2 = input.LA(2);

				if ((LA69_2==L_BRACE) && (EvaluatePredicate(synpred27_Smi_fragment)))
				{
					alt69 = 1;
				}
				else if ((EvaluatePredicate(synpred28_Smi_fragment)))
				{
					alt69 = 2;
				}
				else if ((true))
				{
					alt69 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 69, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case OCTET_KW:
				{
				int LA69_2 = input.LA(2);

				if ((LA69_2==STRING_KW))
				{
					int LA69_3 = input.LA(3);

					if ((LA69_3==L_BRACE) && (EvaluatePredicate(synpred27_Smi_fragment)))
					{
						alt69 = 1;
					}
					else if ((EvaluatePredicate(synpred28_Smi_fragment)))
					{
						alt69 = 2;
					}
					else if ((true))
					{
						alt69 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 69, 9, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 69, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case OBJECT_KW:
				{
				int LA69_2 = input.LA(2);

				if ((LA69_2==IDENTIFIER_KW))
				{
					int LA69_3 = input.LA(3);

					if ((LA69_3==L_BRACE) && (EvaluatePredicate(synpred27_Smi_fragment)))
					{
						alt69 = 1;
					}
					else if ((EvaluatePredicate(synpred28_Smi_fragment)))
					{
						alt69 = 2;
					}
					else if ((true))
					{
						alt69 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 69, 10, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 69, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case UPPER:
				{
				int LA69_2 = input.LA(2);

				if ((LA69_2==L_BRACE) && (EvaluatePredicate(synpred27_Smi_fragment)))
				{
					alt69 = 1;
				}
				else if ((EvaluatePredicate(synpred28_Smi_fragment)))
				{
					alt69 = 2;
				}
				else if ((true))
				{
					alt69 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 69, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ANY_KW:
			case BIT_KW:
			case BMP_STR_KW:
			case BOOLEAN_KW:
			case CHARACTER_KW:
			case CHOICE_KW:
			case EMBEDDED_KW:
			case ENUMERATED_KW:
			case ERROR_KW:
			case EXTERNAL_KW:
			case GENERALIZED_TIME_KW:
			case GENERAL_STR_KW:
			case GRAPHIC_STR_KW:
			case IA5_STRING_KW:
			case ISO646_STR_KW:
			case LOWER:
			case L_BRACKET:
			case NULL_KW:
			case NUMERIC_STR_KW:
			case OPERATION_KW:
			case PRINTABLE_STR_KW:
			case REAL_KW:
			case SEQUENCE_KW:
			case SET_KW:
			case T61_STR_KW:
			case TELETEX_STR_KW:
			case UNIVERSAL_STR_KW:
			case UTC_TIME_KW:
			case UTF8_STR_KW:
			case VIDEOTEX_STR_KW:
			case VISIBLE_STR_KW:
			case 130:
			case 157:
			case 158:
			case 159:
			case 160:
			case 162:
			case 163:
			case 164:
			case 178:
			case 187:
			case 190:
				{
				alt69 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 69, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(69); }
			switch (alt69)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:983:23: ( smi_type L_BRACE )=>t1= smi_type nb1= namedbits
				{
				DebugLocation(983, 47);
				PushFollow(Follow._smi_type_in_objecttype_macro4906);
				t1=smi_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, t1.Tree);
				DebugLocation(983, 60);
				PushFollow(Follow._namedbits_in_objecttype_macro4910);
				nb1=namedbits();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, nb1.Tree);
				DebugLocation(984, 6);
				if (state.backtracking == 0)
				{
					  
										    retval.result.Syntax = (t1!=null?t1.result:default(ISmiType));
											retval.result.NamedBits = (nb1!=null?nb1.result:default(IList<NamedBit>));
										
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:988:24: ( smi_type )=>t2= smi_type ( smi_subtyping )?
				{
				DebugLocation(988, 40);
				PushFollow(Follow._smi_type_in_objecttype_macro4951);
				t2=smi_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, t2.Tree);
				DebugLocation(988, 50);
				// Smi.g:988:50: ( smi_subtyping )?
				int alt68=2;
				try { DebugEnterSubRule(68);
				try { DebugEnterDecision(68, false);
				int LA68_1 = input.LA(1);

				if ((LA68_1==L_PAREN))
				{
					alt68 = 1;
				}
				} finally { DebugExitDecision(68); }
				switch (alt68)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:988:51: smi_subtyping
					{
					DebugLocation(988, 51);
					PushFollow(Follow._smi_subtyping_in_objecttype_macro4954);
					smi_subtyping176=smi_subtyping();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, smi_subtyping176.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(68); }

				DebugLocation(988, 67);
				if (state.backtracking == 0)
				{
					 retval.result.Syntax = (t2!=null?t2.result:default(ISmiType)); 
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:989:24: t3= type
				{
				DebugLocation(989, 26);
				PushFollow(Follow._type_in_objecttype_macro4985);
				t3=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, t3.Tree);
				DebugLocation(989, 32);
				if (state.backtracking == 0)
				{
					 retval.result.Syntax = (t3!=null?t3.result:default(ISmiType)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(69); }

			DebugLocation(991, 19);
			// Smi.g:991:19: ( 'UNITS' u1= C_STRING )?
			int alt70=2;
			try { DebugEnterSubRule(70);
			try { DebugEnterDecision(70, false);
			int LA70_1 = input.LA(1);

			if ((LA70_1==193))
			{
				alt70 = 1;
			}
			} finally { DebugExitDecision(70); }
			switch (alt70)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:991:20: 'UNITS' u1= C_STRING
				{
				DebugLocation(991, 20);
				string_literal177=(IToken)Match(input,193,Follow._193_in_objecttype_macro5031); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal177_tree = (CommonTree)adaptor.Create(string_literal177);
				adaptor.AddChild(root_0, string_literal177_tree);
				}
				DebugLocation(991, 30);
				u1=(IToken)Match(input,C_STRING,Follow._C_STRING_in_objecttype_macro5035); if (state.failed) return retval;
				if (state.backtracking == 0) {
				u1_tree = (CommonTree)adaptor.Create(u1);
				adaptor.AddChild(root_0, u1_tree);
				}
				DebugLocation(991, 40);
				if (state.backtracking == 0)
				{
					 retval.result.Units = (u1!=null?u1.Text:null); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(70); }

			DebugLocation(992, 19);
			// Smi.g:992:19: ( ( 'MAX-ACCESS' | 'ACCESS' ) ma= objecttype_macro_accesstypes | 'PIB-ACCESS' pa= objecttype_macro_pibaccess )?
			int alt72=3;
			try { DebugEnterSubRule(72);
			try { DebugEnterDecision(72, false);
			int LA72_1 = input.LA(1);

			if ((LA72_1==129||LA72_1==154))
			{
				alt72 = 1;
			}
			else if ((LA72_1==167))
			{
				alt72 = 2;
			}
			} finally { DebugExitDecision(72); }
			switch (alt72)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:992:21: ( 'MAX-ACCESS' | 'ACCESS' ) ma= objecttype_macro_accesstypes
				{
				DebugLocation(992, 21);
				// Smi.g:992:21: ( 'MAX-ACCESS' | 'ACCESS' )
				int alt71=2;
				try { DebugEnterSubRule(71);
				try { DebugEnterDecision(71, false);
				int LA71_1 = input.LA(1);

				if ((LA71_1==154))
				{
					alt71 = 1;
				}
				else if ((LA71_1==129))
				{
					alt71 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 71, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(71); }
				switch (alt71)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:992:22: 'MAX-ACCESS'
					{
					DebugLocation(992, 22);
					string_literal178=(IToken)Match(input,154,Follow._154_in_objecttype_macro5063); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal178_tree = (CommonTree)adaptor.Create(string_literal178);
					adaptor.AddChild(root_0, string_literal178_tree);
					}
					DebugLocation(992, 35);
					if (state.backtracking == 0)
					{
						 retval.result.AccessType = AccessType.MaxAccess; 
					}

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// Smi.g:993:10: 'ACCESS'
					{
					DebugLocation(993, 10);
					string_literal179=(IToken)Match(input,129,Follow._129_in_objecttype_macro5076); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal179_tree = (CommonTree)adaptor.Create(string_literal179);
					adaptor.AddChild(root_0, string_literal179_tree);
					}
					DebugLocation(993, 19);
					if (state.backtracking == 0)
					{
						 retval.result.AccessType = AccessType.Access; 
					}

					}
					break;

				}
				} finally { DebugExitSubRule(71); }

				DebugLocation(994, 10);
				PushFollow(Follow._objecttype_macro_accesstypes_in_objecttype_macro5091);
				ma=objecttype_macro_accesstypes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, ma.Tree);
				DebugLocation(994, 40);
				if (state.backtracking == 0)
				{
					 retval.result.MibAccess = (ma!=null?ma.result:default(Access)); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:995:22: 'PIB-ACCESS' pa= objecttype_macro_pibaccess
				{
				DebugLocation(995, 22);
				string_literal180=(IToken)Match(input,167,Follow._167_in_objecttype_macro5116); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal180_tree = (CommonTree)adaptor.Create(string_literal180);
				adaptor.AddChild(root_0, string_literal180_tree);
				}
				DebugLocation(995, 37);
				PushFollow(Follow._objecttype_macro_pibaccess_in_objecttype_macro5120);
				pa=objecttype_macro_pibaccess();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, pa.Tree);
				DebugLocation(995, 65);
				if (state.backtracking == 0)
				{
					 retval.result.PibAccess = (pa!=null?pa.result:default(PibAccess)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(72); }

			DebugLocation(996, 19);
			// Smi.g:996:19: ( 'PIB-REFERENCES' L_BRACE v1= value R_BRACE )?
			int alt73=2;
			try { DebugEnterSubRule(73);
			try { DebugEnterDecision(73, false);
			int LA73_1 = input.LA(1);

			if ((LA73_1==171))
			{
				alt73 = 1;
			}
			} finally { DebugExitDecision(73); }
			switch (alt73)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:996:20: 'PIB-REFERENCES' L_BRACE v1= value R_BRACE
				{
				DebugLocation(996, 20);
				string_literal181=(IToken)Match(input,171,Follow._171_in_objecttype_macro5160); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal181_tree = (CommonTree)adaptor.Create(string_literal181);
				adaptor.AddChild(root_0, string_literal181_tree);
				}
				DebugLocation(996, 37);
				L_BRACE182=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro5162); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE182_tree = (CommonTree)adaptor.Create(L_BRACE182);
				adaptor.AddChild(root_0, L_BRACE182_tree);
				}
				DebugLocation(996, 47);
				PushFollow(Follow._value_in_objecttype_macro5166);
				v1=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v1.Tree);
				DebugLocation(996, 54);
				R_BRACE183=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro5168); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE183_tree = (CommonTree)adaptor.Create(R_BRACE183);
				adaptor.AddChild(root_0, R_BRACE183_tree);
				}
				DebugLocation(996, 62);
				if (state.backtracking == 0)
				{
					 retval.result.PibReference = (v1!=null?v1.result:default(ISmiValue)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(73); }

			DebugLocation(997, 19);
			// Smi.g:997:19: ( 'PIB-TAG' L_BRACE v2= value R_BRACE )?
			int alt74=2;
			try { DebugEnterSubRule(74);
			try { DebugEnterDecision(74, false);
			int LA74_1 = input.LA(1);

			if ((LA74_1==172))
			{
				alt74 = 1;
			}
			} finally { DebugExitDecision(74); }
			switch (alt74)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:997:20: 'PIB-TAG' L_BRACE v2= value R_BRACE
				{
				DebugLocation(997, 20);
				string_literal184=(IToken)Match(input,172,Follow._172_in_objecttype_macro5211); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal184_tree = (CommonTree)adaptor.Create(string_literal184);
				adaptor.AddChild(root_0, string_literal184_tree);
				}
				DebugLocation(997, 30);
				L_BRACE185=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro5213); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE185_tree = (CommonTree)adaptor.Create(L_BRACE185);
				adaptor.AddChild(root_0, L_BRACE185_tree);
				}
				DebugLocation(997, 40);
				PushFollow(Follow._value_in_objecttype_macro5217);
				v2=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v2.Tree);
				DebugLocation(997, 47);
				R_BRACE186=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro5219); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE186_tree = (CommonTree)adaptor.Create(R_BRACE186);
				adaptor.AddChild(root_0, R_BRACE186_tree);
				}
				DebugLocation(997, 55);
				if (state.backtracking == 0)
				{
					 retval.result.PibTag = (v2!=null?v2.result:default(ISmiValue)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(74); }

			DebugLocation(998, 19);
			string_literal187=(IToken)Match(input,183,Follow._183_in_objecttype_macro5268); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal187_tree = (CommonTree)adaptor.Create(string_literal187);
			adaptor.AddChild(root_0, string_literal187_tree);
			}
			DebugLocation(998, 29);
			PushFollow(Follow._objecttype_macro_statustypes_in_objecttype_macro5272);
			s=objecttype_macro_statustypes();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, s.Tree);
			DebugLocation(998, 59);
			if (state.backtracking == 0)
			{
				 retval.result.Status = (s!=null?s.result:default(EntityStatus)); 
			}
			DebugLocation(999, 19);
			// Smi.g:999:19: ( ( 'DESCRIPTION' )=> 'DESCRIPTION' c1= C_STRING )?
			int alt75=2;
			try { DebugEnterSubRule(75);
			try { DebugEnterDecision(75, false);
			int LA75_1 = input.LA(1);

			if ((LA75_1==140))
			{
				int LA75_2 = input.LA(2);

				if ((LA75_2==C_STRING))
				{
					int LA75_3 = input.LA(3);

					if ((EvaluatePredicate(synpred29_Smi_fragment)))
					{
						alt75 = 1;
					}
				}
			}
			} finally { DebugExitDecision(75); }
			switch (alt75)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:999:21: ( 'DESCRIPTION' )=> 'DESCRIPTION' c1= C_STRING
				{
				DebugLocation(999, 40);
				string_literal188=(IToken)Match(input,140,Follow._140_in_objecttype_macro5302); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal188_tree = (CommonTree)adaptor.Create(string_literal188);
				adaptor.AddChild(root_0, string_literal188_tree);
				}
				DebugLocation(999, 56);
				c1=(IToken)Match(input,C_STRING,Follow._C_STRING_in_objecttype_macro5306); if (state.failed) return retval;
				if (state.backtracking == 0) {
				c1_tree = (CommonTree)adaptor.Create(c1);
				adaptor.AddChild(root_0, c1_tree);
				}
				DebugLocation(999, 66);
				if (state.backtracking == 0)
				{
					 retval.result.Description = (c1!=null?c1.Text:null); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(75); }

			DebugLocation(1000, 19);
			// Smi.g:1000:19: ( 'INSTALL-ERRORS' L_BRACE e1= objecttype_macro_error ( COMMA e2= objecttype_macro_error )* R_BRACE )?
			int alt77=2;
			try { DebugEnterSubRule(77);
			try { DebugEnterDecision(77, false);
			int LA77_1 = input.LA(1);

			if ((LA77_1==150))
			{
				alt77 = 1;
			}
			} finally { DebugExitDecision(77); }
			switch (alt77)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1000:20: 'INSTALL-ERRORS' L_BRACE e1= objecttype_macro_error ( COMMA e2= objecttype_macro_error )* R_BRACE
				{
				DebugLocation(1000, 20);
				string_literal189=(IToken)Match(input,150,Follow._150_in_objecttype_macro5363); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal189_tree = (CommonTree)adaptor.Create(string_literal189);
				adaptor.AddChild(root_0, string_literal189_tree);
				}
				DebugLocation(1000, 37);
				L_BRACE190=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro5365); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE190_tree = (CommonTree)adaptor.Create(L_BRACE190);
				adaptor.AddChild(root_0, L_BRACE190_tree);
				}
				DebugLocation(1000, 47);
				PushFollow(Follow._objecttype_macro_error_in_objecttype_macro5369);
				e1=objecttype_macro_error();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, e1.Tree);
				DebugLocation(1000, 71);
				if (state.backtracking == 0)
				{
					 retval.result.InstallErrors.Add((e1!=null?e1.result:default(NamedBit))); 
				}
				DebugLocation(1001, 7);
				// Smi.g:1001:7: ( COMMA e2= objecttype_macro_error )*
				try { DebugEnterSubRule(76);
				while (true)
				{
					int alt76=2;
					try { DebugEnterDecision(76, false);
					int LA76_1 = input.LA(1);

					if ((LA76_1==COMMA))
					{
						alt76 = 1;
					}


					} finally { DebugExitDecision(76); }
					switch ( alt76 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:1001:8: COMMA e2= objecttype_macro_error
						{
						DebugLocation(1001, 8);
						COMMA191=(IToken)Match(input,COMMA,Follow._COMMA_in_objecttype_macro5380); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA191_tree = (CommonTree)adaptor.Create(COMMA191);
						adaptor.AddChild(root_0, COMMA191_tree);
						}
						DebugLocation(1001, 16);
						PushFollow(Follow._objecttype_macro_error_in_objecttype_macro5384);
						e2=objecttype_macro_error();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, e2.Tree);
						DebugLocation(1001, 40);
						if (state.backtracking == 0)
						{
							 retval.result.InstallErrors.Add((e2!=null?e2.result:default(NamedBit))); 
						}

						}
						break;

					default:
						goto loop76;
					}
				}

				loop76:
					;

				} finally { DebugExitSubRule(76); }

				DebugLocation(1001, 85);
				R_BRACE192=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro5390); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE192_tree = (CommonTree)adaptor.Create(R_BRACE192);
				adaptor.AddChild(root_0, R_BRACE192_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(77); }

			DebugLocation(1002, 5);
			// Smi.g:1002:5: ( 'REFERENCE' c2= C_STRING )?
			int alt78=2;
			try { DebugEnterSubRule(78);
			try { DebugEnterDecision(78, false);
			int LA78_1 = input.LA(1);

			if ((LA78_1==176))
			{
				alt78 = 1;
			}
			} finally { DebugExitDecision(78); }
			switch (alt78)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1002:7: 'REFERENCE' c2= C_STRING
				{
				DebugLocation(1002, 7);
				string_literal193=(IToken)Match(input,176,Follow._176_in_objecttype_macro5405); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal193_tree = (CommonTree)adaptor.Create(string_literal193);
				adaptor.AddChild(root_0, string_literal193_tree);
				}
				DebugLocation(1002, 21);
				c2=(IToken)Match(input,C_STRING,Follow._C_STRING_in_objecttype_macro5409); if (state.failed) return retval;
				if (state.backtracking == 0) {
				c2_tree = (CommonTree)adaptor.Create(c2);
				adaptor.AddChild(root_0, c2_tree);
				}
				DebugLocation(1002, 31);
				if (state.backtracking == 0)
				{
					 retval.result.Reference = (c2!=null?c2.Text:null); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(78); }

			DebugLocation(1003, 5);
			// Smi.g:1003:5: ( (~ ( 'PIB-INDEX' ) )=> 'INDEX' i3= objecttype_macro_index | 'AUGMENTS' i4= objecttype_macro_augments | 'PIB-INDEX' L_BRACE v3= value R_BRACE | 'EXTENDS' L_BRACE v4= value R_BRACE )?
			int alt79=5;
			try { DebugEnterSubRule(79);
			try { DebugEnterDecision(79, false);
			try
			{
				alt79 = dfa79.Predict(input);
			}
			catch (NoViableAltException nvae)
			{
				DebugRecognitionException(nvae);
				throw;
			}
			} finally { DebugExitDecision(79); }
			switch (alt79)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1003:7: (~ ( 'PIB-INDEX' ) )=> 'INDEX' i3= objecttype_macro_index
				{
				DebugLocation(1003, 27);
				string_literal194=(IToken)Match(input,149,Follow._149_in_objecttype_macro5431); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal194_tree = (CommonTree)adaptor.Create(string_literal194);
				adaptor.AddChild(root_0, string_literal194_tree);
				}
				DebugLocation(1003, 37);
				PushFollow(Follow._objecttype_macro_index_in_objecttype_macro5435);
				i3=objecttype_macro_index();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, i3.Tree);
				DebugLocation(1003, 61);
				if (state.backtracking == 0)
				{
					 retval.result.MibIndex = (i3!=null?i3.result:default(IList<ISmiValue>)); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1004:23: 'AUGMENTS' i4= objecttype_macro_augments
				{
				DebugLocation(1004, 23);
				string_literal195=(IToken)Match(input,134,Follow._134_in_objecttype_macro5461); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal195_tree = (CommonTree)adaptor.Create(string_literal195);
				adaptor.AddChild(root_0, string_literal195_tree);
				}
				DebugLocation(1004, 36);
				PushFollow(Follow._objecttype_macro_augments_in_objecttype_macro5465);
				i4=objecttype_macro_augments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, i4.Tree);
				DebugLocation(1004, 63);
				if (state.backtracking == 0)
				{
					 retval.result.MibArguments = (i4!=null?i4.result:default(ISmiValue)); 
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:1005:23: 'PIB-INDEX' L_BRACE v3= value R_BRACE
				{
				DebugLocation(1005, 23);
				string_literal196=(IToken)Match(input,169,Follow._169_in_objecttype_macro5491); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal196_tree = (CommonTree)adaptor.Create(string_literal196);
				adaptor.AddChild(root_0, string_literal196_tree);
				}
				DebugLocation(1005, 35);
				L_BRACE197=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro5493); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE197_tree = (CommonTree)adaptor.Create(L_BRACE197);
				adaptor.AddChild(root_0, L_BRACE197_tree);
				}
				DebugLocation(1005, 45);
				PushFollow(Follow._value_in_objecttype_macro5497);
				v3=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v3.Tree);
				DebugLocation(1005, 52);
				R_BRACE198=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro5499); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE198_tree = (CommonTree)adaptor.Create(R_BRACE198);
				adaptor.AddChild(root_0, R_BRACE198_tree);
				}
				DebugLocation(1005, 60);
				if (state.backtracking == 0)
				{
					 retval.result.PibIndex = (v3!=null?v3.result:default(ISmiValue)); 
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Smi.g:1006:23: 'EXTENDS' L_BRACE v4= value R_BRACE
				{
				DebugLocation(1006, 23);
				string_literal199=(IToken)Match(input,144,Follow._144_in_objecttype_macro5546); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal199_tree = (CommonTree)adaptor.Create(string_literal199);
				adaptor.AddChild(root_0, string_literal199_tree);
				}
				DebugLocation(1006, 33);
				L_BRACE200=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro5548); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE200_tree = (CommonTree)adaptor.Create(L_BRACE200);
				adaptor.AddChild(root_0, L_BRACE200_tree);
				}
				DebugLocation(1006, 43);
				PushFollow(Follow._value_in_objecttype_macro5552);
				v4=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v4.Tree);
				DebugLocation(1006, 50);
				R_BRACE201=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro5554); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE201_tree = (CommonTree)adaptor.Create(R_BRACE201);
				adaptor.AddChild(root_0, R_BRACE201_tree);
				}
				DebugLocation(1006, 58);
				if (state.backtracking == 0)
				{
					 retval.result.PibExtends = (v4!=null?v4.result:default(ISmiValue)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(79); }

			DebugLocation(1008, 19);
			// Smi.g:1008:19: ( 'INDEX' i5= objecttype_macro_index )?
			int alt80=2;
			try { DebugEnterSubRule(80);
			try { DebugEnterDecision(80, false);
			int LA80_1 = input.LA(1);

			if ((LA80_1==149))
			{
				alt80 = 1;
			}
			} finally { DebugExitDecision(80); }
			switch (alt80)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1008:21: 'INDEX' i5= objecttype_macro_index
				{
				DebugLocation(1008, 21);
				string_literal202=(IToken)Match(input,149,Follow._149_in_objecttype_macro5624); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal202_tree = (CommonTree)adaptor.Create(string_literal202);
				adaptor.AddChild(root_0, string_literal202_tree);
				}
				DebugLocation(1008, 31);
				PushFollow(Follow._objecttype_macro_index_in_objecttype_macro5628);
				i5=objecttype_macro_index();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, i5.Tree);
				DebugLocation(1008, 55);
				if (state.backtracking == 0)
				{
					 retval.result.MibIndex = (i5!=null?i5.result:default(IList<ISmiValue>)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(80); }

			DebugLocation(1009, 19);
			// Smi.g:1009:19: ( 'UNIQUENESS' L_BRACE (v5= value ( COMMA v6= value )* )? R_BRACE )?
			int alt83=2;
			try { DebugEnterSubRule(83);
			try { DebugEnterDecision(83, false);
			int LA83_1 = input.LA(1);

			if ((LA83_1==192))
			{
				alt83 = 1;
			}
			} finally { DebugExitDecision(83); }
			switch (alt83)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1009:21: 'UNIQUENESS' L_BRACE (v5= value ( COMMA v6= value )* )? R_BRACE
				{
				DebugLocation(1009, 21);
				string_literal203=(IToken)Match(input,192,Follow._192_in_objecttype_macro5678); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal203_tree = (CommonTree)adaptor.Create(string_literal203);
				adaptor.AddChild(root_0, string_literal203_tree);
				}
				DebugLocation(1009, 34);
				L_BRACE204=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro5680); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE204_tree = (CommonTree)adaptor.Create(L_BRACE204);
				adaptor.AddChild(root_0, L_BRACE204_tree);
				}
				DebugLocation(1009, 42);
				// Smi.g:1009:42: (v5= value ( COMMA v6= value )* )?
				int alt82=2;
				try { DebugEnterSubRule(82);
				try { DebugEnterDecision(82, false);
				int LA82_1 = input.LA(1);

				if ((LA82_1==B_STRING||LA82_1==C_STRING||LA82_1==ERROR_KW||LA82_1==FALSE_KW||LA82_1==H_STRING||(LA82_1>=LOWER && LA82_1<=L_BRACE)||(LA82_1>=MINUS && LA82_1<=MINUS_INFINITY_KW)||(LA82_1>=NULL_KW && LA82_1<=NUMBER)||LA82_1==OBJECT_KW||LA82_1==OPERATION_KW||LA82_1==PLUS_INFINITY_KW||LA82_1==TRUE_KW||LA82_1==UPPER||(LA82_1>=125 && LA82_1<=128)||(LA82_1>=130 && LA82_1<=133)||LA82_1==135||LA82_1==142||(LA82_1>=145 && LA82_1<=147)||(LA82_1>=157 && LA82_1<=160)||(LA82_1>=162 && LA82_1<=164)||LA82_1==173||LA82_1==175||LA82_1==177||(LA82_1>=180 && LA82_1<=182)||(LA82_1>=187 && LA82_1<=191)))
				{
					alt82 = 1;
				}
				} finally { DebugExitDecision(82); }
				switch (alt82)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1009:43: v5= value ( COMMA v6= value )*
					{
					DebugLocation(1009, 45);
					PushFollow(Follow._value_in_objecttype_macro5685);
					v5=value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, v5.Tree);
					DebugLocation(1009, 52);
					if (state.backtracking == 0)
					{
						 retval.result.UniquenessValues.Add((v5!=null?v5.result:default(ISmiValue))); 
					}
					DebugLocation(1010, 7);
					// Smi.g:1010:7: ( COMMA v6= value )*
					try { DebugEnterSubRule(81);
					while (true)
					{
						int alt81=2;
						try { DebugEnterDecision(81, false);
						int LA81_1 = input.LA(1);

						if ((LA81_1==COMMA))
						{
							alt81 = 1;
						}


						} finally { DebugExitDecision(81); }
						switch ( alt81 )
						{
						case 1:
							DebugEnterAlt(1);
							// Smi.g:1010:8: COMMA v6= value
							{
							DebugLocation(1010, 8);
							COMMA205=(IToken)Match(input,COMMA,Follow._COMMA_in_objecttype_macro5696); if (state.failed) return retval;
							if (state.backtracking == 0) {
							COMMA205_tree = (CommonTree)adaptor.Create(COMMA205);
							adaptor.AddChild(root_0, COMMA205_tree);
							}
							DebugLocation(1010, 16);
							PushFollow(Follow._value_in_objecttype_macro5700);
							v6=value();
							PopFollow();
							if (state.failed) return retval;
							if (state.backtracking == 0) adaptor.AddChild(root_0, v6.Tree);
							DebugLocation(1010, 23);
							if (state.backtracking == 0)
							{
								 retval.result.UniquenessValues.Add((v6!=null?v6.result:default(ISmiValue))); 
							}

							}
							break;

						default:
							goto loop81;
						}
					}

					loop81:
						;

					} finally { DebugExitSubRule(81); }


					}
					break;

				}
				} finally { DebugExitSubRule(82); }

				DebugLocation(1010, 74);
				R_BRACE206=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro5709); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE206_tree = (CommonTree)adaptor.Create(R_BRACE206);
				adaptor.AddChild(root_0, R_BRACE206_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(83); }

			DebugLocation(1011, 5);
			// Smi.g:1011:5: ( ( 'DEFVAL' )=> 'DEFVAL' L_BRACE ( ( L_BRACE LOWER ( COMMA | R_BRACE ) )=>b= objecttype_macro_bitsvalue |v7= value ) R_BRACE )?
			int alt85=2;
			try { DebugEnterSubRule(85);
			try { DebugEnterDecision(85, false);
			int LA85_1 = input.LA(1);

			if ((LA85_1==139))
			{
				int LA85_2 = input.LA(2);

				if ((EvaluatePredicate(synpred31_Smi_fragment)))
				{
					alt85 = 1;
				}
			}
			} finally { DebugExitDecision(85); }
			switch (alt85)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1011:7: ( 'DEFVAL' )=> 'DEFVAL' L_BRACE ( ( L_BRACE LOWER ( COMMA | R_BRACE ) )=>b= objecttype_macro_bitsvalue |v7= value ) R_BRACE
				{
				DebugLocation(1011, 21);
				string_literal207=(IToken)Match(input,139,Follow._139_in_objecttype_macro5748); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal207_tree = (CommonTree)adaptor.Create(string_literal207);
				adaptor.AddChild(root_0, string_literal207_tree);
				}
				DebugLocation(1011, 30);
				L_BRACE208=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro5750); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE208_tree = (CommonTree)adaptor.Create(L_BRACE208);
				adaptor.AddChild(root_0, L_BRACE208_tree);
				}
				DebugLocation(1012, 21);
				// Smi.g:1012:21: ( ( L_BRACE LOWER ( COMMA | R_BRACE ) )=>b= objecttype_macro_bitsvalue |v7= value )
				int alt84=2;
				try { DebugEnterSubRule(84);
				try { DebugEnterDecision(84, false);
				try
				{
					alt84 = dfa84.Predict(input);
				}
				catch (NoViableAltException nvae)
				{
					DebugRecognitionException(nvae);
					throw;
				}
				} finally { DebugExitDecision(84); }
				switch (alt84)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1012:23: ( L_BRACE LOWER ( COMMA | R_BRACE ) )=>b= objecttype_macro_bitsvalue
					{
					DebugLocation(1012, 61);
					PushFollow(Follow._objecttype_macro_bitsvalue_in_objecttype_macro5793);
					b=objecttype_macro_bitsvalue();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, b.Tree);
					DebugLocation(1012, 89);
					if (state.backtracking == 0)
					{
						 retval.result.DefaultValueBits = (b!=null?b.result:default(IList<string>)); 
					}

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// Smi.g:1013:26: v7= value
					{
					DebugLocation(1013, 28);
					PushFollow(Follow._value_in_objecttype_macro5824);
					v7=value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, v7.Tree);
					DebugLocation(1013, 35);
					if (state.backtracking == 0)
					{
						 retval.result.DefaultValue = (v7!=null?v7.result:default(ISmiValue)); 
					}

					}
					break;

				}
				} finally { DebugExitSubRule(84); }

				DebugLocation(1014, 21);
				R_BRACE209=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro5850); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE209_tree = (CommonTree)adaptor.Create(R_BRACE209);
				adaptor.AddChild(root_0, R_BRACE209_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(85); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("objecttype_macro", 55);
			LeaveRule("objecttype_macro", 55);
			LeaveRule_objecttype_macro();
		}
		DebugLocation(1014, 31);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro"

	protected sealed partial class objecttype_macro_accesstypes_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public Access result;
		public objecttype_macro_accesstypes_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_objecttype_macro_accesstypes();
	partial void LeaveRule_objecttype_macro_accesstypes();
	// $ANTLR start "objecttype_macro_accesstypes"
	// Smi.g:1016:11: protected objecttype_macro_accesstypes returns [Access result] : l= LOWER ;
	[GrammarRule("objecttype_macro_accesstypes")]
	protected SmiParser.objecttype_macro_accesstypes_return objecttype_macro_accesstypes()
	{
		EnterRule_objecttype_macro_accesstypes();
		EnterRule("objecttype_macro_accesstypes", 56);
		TraceIn("objecttype_macro_accesstypes", 56);
		SmiParser.objecttype_macro_accesstypes_return retval = new SmiParser.objecttype_macro_accesstypes_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro_accesstypes");
		DebugLocation(1016, 4);
		try
		{
			// Smi.g:1017:5: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:1017:7: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1017, 8);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_objecttype_macro_accesstypes5874); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(1017, 15);
			if (state.backtracking == 0)
			{
				if (l.Text == ("read-only")) retval.result = Access.ReadOnly;
					           else if (l.Text == ("read-write")) retval.result = Access.ReadWrite;
				               else if (l.Text == ("write-only")) retval.result = Access.WriteOnly;
							   else if (l.Text == ("read-create")) retval.result = Access.ReadCreate; 
				               else if (l.Text == ("not-accessible")) retval.result = Access.NotAccessible;
							   else if (l.Text == ("accessible-for-notify")) retval.result = Access.AccessibleForNotify;
				               else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("objecttype_macro_accesstypes", 56);
			LeaveRule("objecttype_macro_accesstypes", 56);
			LeaveRule_objecttype_macro_accesstypes();
		}
		DebugLocation(1024, 4);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro_accesstypes"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro_accesstypes"

	protected sealed partial class objecttype_macro_pibaccess_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public PibAccess result;
		public objecttype_macro_pibaccess_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_objecttype_macro_pibaccess();
	partial void LeaveRule_objecttype_macro_pibaccess();
	// $ANTLR start "objecttype_macro_pibaccess"
	// Smi.g:1026:11: protected objecttype_macro_pibaccess returns [PibAccess result] : l= LOWER ;
	[GrammarRule("objecttype_macro_pibaccess")]
	protected SmiParser.objecttype_macro_pibaccess_return objecttype_macro_pibaccess()
	{
		EnterRule_objecttype_macro_pibaccess();
		EnterRule("objecttype_macro_pibaccess", 57);
		TraceIn("objecttype_macro_pibaccess", 57);
		SmiParser.objecttype_macro_pibaccess_return retval = new SmiParser.objecttype_macro_pibaccess_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro_pibaccess");
		DebugLocation(1026, 1);
		try
		{
			// Smi.g:1027:5: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:1027:7: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1027, 8);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_objecttype_macro_pibaccess5901); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(1027, 15);
			if (state.backtracking == 0)
			{
				if (l.Text == ("install")) retval.result = PibAccess.Install; 
				               else if (l.Text == ("notify")) retval.result = PibAccess.Notify;
				               else if (l.Text == ("install-notify")) retval.result = PibAccess.InstallNotify;
				               else if (l.Text == ("report-only")) retval.result = PibAccess.ReportOnly;
				               else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("objecttype_macro_pibaccess", 57);
			LeaveRule("objecttype_macro_pibaccess", 57);
			LeaveRule_objecttype_macro_pibaccess();
		}
		DebugLocation(1032, 1);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro_pibaccess"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro_pibaccess"

	protected sealed partial class objecttype_macro_statustypes_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public EntityStatus result;
		public objecttype_macro_statustypes_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_objecttype_macro_statustypes();
	partial void LeaveRule_objecttype_macro_statustypes();
	// $ANTLR start "objecttype_macro_statustypes"
	// Smi.g:1034:11: protected objecttype_macro_statustypes returns [EntityStatus result] : l= LOWER ;
	[GrammarRule("objecttype_macro_statustypes")]
	protected SmiParser.objecttype_macro_statustypes_return objecttype_macro_statustypes()
	{
		EnterRule_objecttype_macro_statustypes();
		EnterRule("objecttype_macro_statustypes", 58);
		TraceIn("objecttype_macro_statustypes", 58);
		SmiParser.objecttype_macro_statustypes_return retval = new SmiParser.objecttype_macro_statustypes_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro_statustypes");
		DebugLocation(1034, 1);
		try
		{
			// Smi.g:1035:5: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:1035:7: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1035, 8);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_objecttype_macro_statustypes5925); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(1035, 15);
			if (state.backtracking == 0)
			{
				if (l.Text == ("mandatory")) retval.result = EntityStatus.Mandatory; 
				               else if (l.Text == ("optional")) retval.result = EntityStatus.Optional; 
				               else if (l.Text == ("obsolete")) retval.result = EntityStatus.Obsolete;
				               else if (l.Text == ("current")) retval.result = EntityStatus.Current;
				               else if (l.Text == ("deprecated")) retval.result = EntityStatus.Deprecated;
				               else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("objecttype_macro_statustypes", 58);
			LeaveRule("objecttype_macro_statustypes", 58);
			LeaveRule_objecttype_macro_statustypes();
		}
		DebugLocation(1041, 1);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro_statustypes"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro_statustypes"

	private sealed partial class objecttype_macro_index_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public IList<ISmiValue> result = new List<ISmiValue>();
		public objecttype_macro_index_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_objecttype_macro_index();
	partial void LeaveRule_objecttype_macro_index();
	// $ANTLR start "objecttype_macro_index"
	// Smi.g:1045:1: objecttype_macro_index returns [IList<ISmiValue> result = new List<ISmiValue>()] : L_BRACE t= objecttype_macro_indextype ( COMMA t2= objecttype_macro_indextype )* R_BRACE ;
	[GrammarRule("objecttype_macro_index")]
	private SmiParser.objecttype_macro_index_return objecttype_macro_index()
	{
		EnterRule_objecttype_macro_index();
		EnterRule("objecttype_macro_index", 59);
		TraceIn("objecttype_macro_index", 59);
		SmiParser.objecttype_macro_index_return retval = new SmiParser.objecttype_macro_index_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE210 = default(IToken);
		IToken COMMA211 = default(IToken);
		IToken R_BRACE212 = default(IToken);
		SmiParser.objecttype_macro_indextype_return t = default(SmiParser.objecttype_macro_indextype_return);
		SmiParser.objecttype_macro_indextype_return t2 = default(SmiParser.objecttype_macro_indextype_return);

		CommonTree L_BRACE210_tree = default(CommonTree);
		CommonTree COMMA211_tree = default(CommonTree);
		CommonTree R_BRACE212_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro_index");
		DebugLocation(1045, 1);
		try
		{
			// Smi.g:1046:5: ( L_BRACE t= objecttype_macro_indextype ( COMMA t2= objecttype_macro_indextype )* R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:1046:7: L_BRACE t= objecttype_macro_indextype ( COMMA t2= objecttype_macro_indextype )* R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1046, 7);
			L_BRACE210=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro_index5947); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE210_tree = (CommonTree)adaptor.Create(L_BRACE210);
			adaptor.AddChild(root_0, L_BRACE210_tree);
			}
			DebugLocation(1046, 16);
			PushFollow(Follow._objecttype_macro_indextype_in_objecttype_macro_index5951);
			t=objecttype_macro_indextype();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, t.Tree);
			DebugLocation(1046, 44);
			if (state.backtracking == 0)
			{
				 retval.result.Add((t!=null?t.result:default(ISmiValue))); 
			}
			DebugLocation(1047, 2);
			// Smi.g:1047:2: ( COMMA t2= objecttype_macro_indextype )*
			try { DebugEnterSubRule(86);
			while (true)
			{
				int alt86=2;
				try { DebugEnterDecision(86, false);
				int LA86_1 = input.LA(1);

				if ((LA86_1==COMMA))
				{
					alt86 = 1;
				}


				} finally { DebugExitDecision(86); }
				switch ( alt86 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1047:3: COMMA t2= objecttype_macro_indextype
					{
					DebugLocation(1047, 3);
					COMMA211=(IToken)Match(input,COMMA,Follow._COMMA_in_objecttype_macro_index5958); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA211_tree = (CommonTree)adaptor.Create(COMMA211);
					adaptor.AddChild(root_0, COMMA211_tree);
					}
					DebugLocation(1047, 11);
					PushFollow(Follow._objecttype_macro_indextype_in_objecttype_macro_index5962);
					t2=objecttype_macro_indextype();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, t2.Tree);
					DebugLocation(1047, 39);
					if (state.backtracking == 0)
					{
						 retval.result.Add((t2!=null?t2.result:default(ISmiValue))); 
					}

					}
					break;

				default:
					goto loop86;
				}
			}

			loop86:
				;

			} finally { DebugExitSubRule(86); }

			DebugLocation(1047, 70);
			R_BRACE212=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro_index5968); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE212_tree = (CommonTree)adaptor.Create(R_BRACE212);
			adaptor.AddChild(root_0, R_BRACE212_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("objecttype_macro_index", 59);
			LeaveRule("objecttype_macro_index", 59);
			LeaveRule_objecttype_macro_index();
		}
		DebugLocation(1048, 1);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro_index"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro_index"

	private sealed partial class objecttype_macro_indextype_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ISmiValue result;
		public objecttype_macro_indextype_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_objecttype_macro_indextype();
	partial void LeaveRule_objecttype_macro_indextype();
	// $ANTLR start "objecttype_macro_indextype"
	// Smi.g:1050:1: objecttype_macro_indextype returns [ISmiValue result] : ( 'IMPLIED' )? v= value ;
	[GrammarRule("objecttype_macro_indextype")]
	private SmiParser.objecttype_macro_indextype_return objecttype_macro_indextype()
	{
		EnterRule_objecttype_macro_indextype();
		EnterRule("objecttype_macro_indextype", 60);
		TraceIn("objecttype_macro_indextype", 60);
		SmiParser.objecttype_macro_indextype_return retval = new SmiParser.objecttype_macro_indextype_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal213 = default(IToken);
		SmiParser.value_return v = default(SmiParser.value_return);

		CommonTree string_literal213_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro_indextype");
		DebugLocation(1050, 1);
		try
		{
			// Smi.g:1051:5: ( ( 'IMPLIED' )? v= value )
			DebugEnterAlt(1);
			// Smi.g:1051:7: ( 'IMPLIED' )? v= value
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1051, 7);
			// Smi.g:1051:7: ( 'IMPLIED' )?
			int alt87=2;
			try { DebugEnterSubRule(87);
			try { DebugEnterDecision(87, false);
			int LA87_1 = input.LA(1);

			if ((LA87_1==IMPLIED_KW))
			{
				alt87 = 1;
			}
			} finally { DebugExitDecision(87); }
			switch (alt87)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1051:8: 'IMPLIED'
				{
				DebugLocation(1051, 8);
				string_literal213=(IToken)Match(input,IMPLIED_KW,Follow._IMPLIED_KW_in_objecttype_macro_indextype5994); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal213_tree = (CommonTree)adaptor.Create(string_literal213);
				adaptor.AddChild(root_0, string_literal213_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(87); }

			DebugLocation(1051, 21);
			PushFollow(Follow._value_in_objecttype_macro_indextype6000);
			v=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, v.Tree);
			DebugLocation(1051, 28);
			if (state.backtracking == 0)
			{
				 retval.result = (v!=null?v.result:default(ISmiValue)); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("objecttype_macro_indextype", 60);
			LeaveRule("objecttype_macro_indextype", 60);
			LeaveRule_objecttype_macro_indextype();
		}
		DebugLocation(1052, 1);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro_indextype"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro_indextype"

	private sealed partial class objecttype_macro_augments_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ISmiValue result;
		public objecttype_macro_augments_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_objecttype_macro_augments();
	partial void LeaveRule_objecttype_macro_augments();
	// $ANTLR start "objecttype_macro_augments"
	// Smi.g:1054:1: objecttype_macro_augments returns [ISmiValue result] : L_BRACE v= value R_BRACE ;
	[GrammarRule("objecttype_macro_augments")]
	private SmiParser.objecttype_macro_augments_return objecttype_macro_augments()
	{
		EnterRule_objecttype_macro_augments();
		EnterRule("objecttype_macro_augments", 61);
		TraceIn("objecttype_macro_augments", 61);
		SmiParser.objecttype_macro_augments_return retval = new SmiParser.objecttype_macro_augments_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE214 = default(IToken);
		IToken R_BRACE215 = default(IToken);
		SmiParser.value_return v = default(SmiParser.value_return);

		CommonTree L_BRACE214_tree = default(CommonTree);
		CommonTree R_BRACE215_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro_augments");
		DebugLocation(1054, 1);
		try
		{
			// Smi.g:1055:5: ( L_BRACE v= value R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:1055:7: L_BRACE v= value R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1055, 7);
			L_BRACE214=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro_augments6020); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE214_tree = (CommonTree)adaptor.Create(L_BRACE214);
			adaptor.AddChild(root_0, L_BRACE214_tree);
			}
			DebugLocation(1055, 16);
			PushFollow(Follow._value_in_objecttype_macro_augments6024);
			v=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, v.Tree);
			DebugLocation(1055, 23);
			R_BRACE215=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro_augments6026); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE215_tree = (CommonTree)adaptor.Create(R_BRACE215);
			adaptor.AddChild(root_0, R_BRACE215_tree);
			}
			DebugLocation(1055, 31);
			if (state.backtracking == 0)
			{
				 retval.result = (v!=null?v.result:default(ISmiValue)); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("objecttype_macro_augments", 61);
			LeaveRule("objecttype_macro_augments", 61);
			LeaveRule_objecttype_macro_augments();
		}
		DebugLocation(1056, 1);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro_augments"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro_augments"

	private sealed partial class namedbits_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public IList<NamedBit> result = new List<NamedBit>();
		public namedbits_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_namedbits();
	partial void LeaveRule_namedbits();
	// $ANTLR start "namedbits"
	// Smi.g:1059:1: namedbits returns [IList<NamedBit> result = new List<NamedBit>()] : L_BRACE n= namedbit ( COMMA n2= namedbit )* R_BRACE ;
	[GrammarRule("namedbits")]
	private SmiParser.namedbits_return namedbits()
	{
		EnterRule_namedbits();
		EnterRule("namedbits", 62);
		TraceIn("namedbits", 62);
		SmiParser.namedbits_return retval = new SmiParser.namedbits_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE216 = default(IToken);
		IToken COMMA217 = default(IToken);
		IToken R_BRACE218 = default(IToken);
		SmiParser.namedbit_return n = default(SmiParser.namedbit_return);
		SmiParser.namedbit_return n2 = default(SmiParser.namedbit_return);

		CommonTree L_BRACE216_tree = default(CommonTree);
		CommonTree COMMA217_tree = default(CommonTree);
		CommonTree R_BRACE218_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "namedbits");
		DebugLocation(1059, 1);
		try
		{
			// Smi.g:1060:5: ( L_BRACE n= namedbit ( COMMA n2= namedbit )* R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:1060:7: L_BRACE n= namedbit ( COMMA n2= namedbit )* R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1060, 7);
			L_BRACE216=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_namedbits6050); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE216_tree = (CommonTree)adaptor.Create(L_BRACE216);
			adaptor.AddChild(root_0, L_BRACE216_tree);
			}
			DebugLocation(1060, 16);
			PushFollow(Follow._namedbit_in_namedbits6054);
			n=namedbit();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, n.Tree);
			DebugLocation(1060, 26);
			if (state.backtracking == 0)
			{
				 retval.result.Add((n!=null?n.result:default(NamedBit))); 
			}
			DebugLocation(1061, 2);
			// Smi.g:1061:2: ( COMMA n2= namedbit )*
			try { DebugEnterSubRule(88);
			while (true)
			{
				int alt88=2;
				try { DebugEnterDecision(88, false);
				int LA88_1 = input.LA(1);

				if ((LA88_1==COMMA))
				{
					alt88 = 1;
				}


				} finally { DebugExitDecision(88); }
				switch ( alt88 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1061:3: COMMA n2= namedbit
					{
					DebugLocation(1061, 3);
					COMMA217=(IToken)Match(input,COMMA,Follow._COMMA_in_namedbits6061); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA217_tree = (CommonTree)adaptor.Create(COMMA217);
					adaptor.AddChild(root_0, COMMA217_tree);
					}
					DebugLocation(1061, 11);
					PushFollow(Follow._namedbit_in_namedbits6065);
					n2=namedbit();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, n2.Tree);
					DebugLocation(1061, 21);
					if (state.backtracking == 0)
					{
						 retval.result.Add((n2!=null?n2.result:default(NamedBit))); 
					}

					}
					break;

				default:
					goto loop88;
				}
			}

			loop88:
				;

			} finally { DebugExitSubRule(88); }

			DebugLocation(1061, 52);
			R_BRACE218=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_namedbits6071); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE218_tree = (CommonTree)adaptor.Create(R_BRACE218);
			adaptor.AddChild(root_0, R_BRACE218_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("namedbits", 62);
			LeaveRule("namedbits", 62);
			LeaveRule_namedbits();
		}
		DebugLocation(1062, 1);
		} finally { DebugExitRule(GrammarFileName, "namedbits"); }
		return retval;

	}
	// $ANTLR end "namedbits"

	private sealed partial class objecttype_macro_bitsvalue_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public IList<string> result = new List<string>();
		public objecttype_macro_bitsvalue_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_objecttype_macro_bitsvalue();
	partial void LeaveRule_objecttype_macro_bitsvalue();
	// $ANTLR start "objecttype_macro_bitsvalue"
	// Smi.g:1064:1: objecttype_macro_bitsvalue returns [IList<string> result = new List<string>()] : L_BRACE l= LOWER ( COMMA l2= LOWER )* R_BRACE ;
	[GrammarRule("objecttype_macro_bitsvalue")]
	private SmiParser.objecttype_macro_bitsvalue_return objecttype_macro_bitsvalue()
	{
		EnterRule_objecttype_macro_bitsvalue();
		EnterRule("objecttype_macro_bitsvalue", 63);
		TraceIn("objecttype_macro_bitsvalue", 63);
		SmiParser.objecttype_macro_bitsvalue_return retval = new SmiParser.objecttype_macro_bitsvalue_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);
		IToken l2 = default(IToken);
		IToken L_BRACE219 = default(IToken);
		IToken COMMA220 = default(IToken);
		IToken R_BRACE221 = default(IToken);

		CommonTree l_tree = default(CommonTree);
		CommonTree l2_tree = default(CommonTree);
		CommonTree L_BRACE219_tree = default(CommonTree);
		CommonTree COMMA220_tree = default(CommonTree);
		CommonTree R_BRACE221_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro_bitsvalue");
		DebugLocation(1064, 1);
		try
		{
			// Smi.g:1065:5: ( L_BRACE l= LOWER ( COMMA l2= LOWER )* R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:1065:7: L_BRACE l= LOWER ( COMMA l2= LOWER )* R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1065, 7);
			L_BRACE219=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro_bitsvalue6094); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE219_tree = (CommonTree)adaptor.Create(L_BRACE219);
			adaptor.AddChild(root_0, L_BRACE219_tree);
			}
			DebugLocation(1065, 16);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_objecttype_macro_bitsvalue6098); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(1065, 23);
			if (state.backtracking == 0)
			{
				 retval.result.Add((l!=null?l.Text:null)); 
			}
			DebugLocation(1066, 2);
			// Smi.g:1066:2: ( COMMA l2= LOWER )*
			try { DebugEnterSubRule(89);
			while (true)
			{
				int alt89=2;
				try { DebugEnterDecision(89, false);
				int LA89_1 = input.LA(1);

				if ((LA89_1==COMMA))
				{
					alt89 = 1;
				}


				} finally { DebugExitDecision(89); }
				switch ( alt89 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1066:3: COMMA l2= LOWER
					{
					DebugLocation(1066, 3);
					COMMA220=(IToken)Match(input,COMMA,Follow._COMMA_in_objecttype_macro_bitsvalue6105); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA220_tree = (CommonTree)adaptor.Create(COMMA220);
					adaptor.AddChild(root_0, COMMA220_tree);
					}
					DebugLocation(1066, 11);
					l2=(IToken)Match(input,LOWER,Follow._LOWER_in_objecttype_macro_bitsvalue6109); if (state.failed) return retval;
					if (state.backtracking == 0) {
					l2_tree = (CommonTree)adaptor.Create(l2);
					adaptor.AddChild(root_0, l2_tree);
					}
					DebugLocation(1066, 18);
					if (state.backtracking == 0)
					{
						 retval.result.Add((l2!=null?l2.Text:null)); 
					}

					}
					break;

				default:
					goto loop89;
				}
			}

			loop89:
				;

			} finally { DebugExitSubRule(89); }

			DebugLocation(1066, 47);
			R_BRACE221=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro_bitsvalue6115); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE221_tree = (CommonTree)adaptor.Create(R_BRACE221);
			adaptor.AddChild(root_0, R_BRACE221_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("objecttype_macro_bitsvalue", 63);
			LeaveRule("objecttype_macro_bitsvalue", 63);
			LeaveRule_objecttype_macro_bitsvalue();
		}
		DebugLocation(1067, 1);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro_bitsvalue"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro_bitsvalue"

	private sealed partial class objecttype_macro_error_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public NamedBit result;
		public objecttype_macro_error_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_objecttype_macro_error();
	partial void LeaveRule_objecttype_macro_error();
	// $ANTLR start "objecttype_macro_error"
	// Smi.g:1069:1: objecttype_macro_error returns [NamedBit result] : n= namedbit ;
	[GrammarRule("objecttype_macro_error")]
	private SmiParser.objecttype_macro_error_return objecttype_macro_error()
	{
		EnterRule_objecttype_macro_error();
		EnterRule("objecttype_macro_error", 64);
		TraceIn("objecttype_macro_error", 64);
		SmiParser.objecttype_macro_error_return retval = new SmiParser.objecttype_macro_error_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		SmiParser.namedbit_return n = default(SmiParser.namedbit_return);

		try { DebugEnterRule(GrammarFileName, "objecttype_macro_error");
		DebugLocation(1069, 1);
		try
		{
			// Smi.g:1070:5: (n= namedbit )
			DebugEnterAlt(1);
			// Smi.g:1070:7: n= namedbit
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1070, 8);
			PushFollow(Follow._namedbit_in_objecttype_macro_error6141);
			n=namedbit();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, n.Tree);
			DebugLocation(1070, 18);
			if (state.backtracking == 0)
			{
				 retval.result = (n!=null?n.result:default(NamedBit)); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("objecttype_macro_error", 64);
			LeaveRule("objecttype_macro_error", 64);
			LeaveRule_objecttype_macro_error();
		}
		DebugLocation(1071, 1);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro_error"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro_error"

	private sealed partial class moduleidentity_macro_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ModuleIdentityMacro result = new ModuleIdentityMacro();
		public moduleidentity_macro_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_moduleidentity_macro();
	partial void LeaveRule_moduleidentity_macro();
	// $ANTLR start "moduleidentity_macro"
	// Smi.g:1074:1: moduleidentity_macro returns [ModuleIdentityMacro result = new ModuleIdentityMacro()] : 'MODULE-IDENTITY' ( 'SUBJECT-CATEGORIES' L_BRACE c= moduleidentity_macro_categories R_BRACE )? 'LAST-UPDATED' c1= C_STRING 'ORGANIZATION' c2= C_STRING 'CONTACT-INFO' c3= C_STRING 'DESCRIPTION' c4= C_STRING (m= moduleidentity_macro_revision )* ;
	[GrammarRule("moduleidentity_macro")]
	private SmiParser.moduleidentity_macro_return moduleidentity_macro()
	{
		EnterRule_moduleidentity_macro();
		EnterRule("moduleidentity_macro", 65);
		TraceIn("moduleidentity_macro", 65);
		SmiParser.moduleidentity_macro_return retval = new SmiParser.moduleidentity_macro_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken c1 = default(IToken);
		IToken c2 = default(IToken);
		IToken c3 = default(IToken);
		IToken c4 = default(IToken);
		IToken string_literal222 = default(IToken);
		IToken string_literal223 = default(IToken);
		IToken L_BRACE224 = default(IToken);
		IToken R_BRACE225 = default(IToken);
		IToken string_literal226 = default(IToken);
		IToken string_literal227 = default(IToken);
		IToken string_literal228 = default(IToken);
		IToken string_literal229 = default(IToken);
		SmiParser.moduleidentity_macro_categories_return c = default(SmiParser.moduleidentity_macro_categories_return);
		SmiParser.moduleidentity_macro_revision_return m = default(SmiParser.moduleidentity_macro_revision_return);

		CommonTree c1_tree = default(CommonTree);
		CommonTree c2_tree = default(CommonTree);
		CommonTree c3_tree = default(CommonTree);
		CommonTree c4_tree = default(CommonTree);
		CommonTree string_literal222_tree = default(CommonTree);
		CommonTree string_literal223_tree = default(CommonTree);
		CommonTree L_BRACE224_tree = default(CommonTree);
		CommonTree R_BRACE225_tree = default(CommonTree);
		CommonTree string_literal226_tree = default(CommonTree);
		CommonTree string_literal227_tree = default(CommonTree);
		CommonTree string_literal228_tree = default(CommonTree);
		CommonTree string_literal229_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "moduleidentity_macro");
		DebugLocation(1074, 74);
		try
		{
			// Smi.g:1075:5: ( 'MODULE-IDENTITY' ( 'SUBJECT-CATEGORIES' L_BRACE c= moduleidentity_macro_categories R_BRACE )? 'LAST-UPDATED' c1= C_STRING 'ORGANIZATION' c2= C_STRING 'CONTACT-INFO' c3= C_STRING 'DESCRIPTION' c4= C_STRING (m= moduleidentity_macro_revision )* )
			DebugEnterAlt(1);
			// Smi.g:1075:7: 'MODULE-IDENTITY' ( 'SUBJECT-CATEGORIES' L_BRACE c= moduleidentity_macro_categories R_BRACE )? 'LAST-UPDATED' c1= C_STRING 'ORGANIZATION' c2= C_STRING 'CONTACT-INFO' c3= C_STRING 'DESCRIPTION' c4= C_STRING (m= moduleidentity_macro_revision )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1075, 7);
			string_literal222=(IToken)Match(input,158,Follow._158_in_moduleidentity_macro6163); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal222_tree = (CommonTree)adaptor.Create(string_literal222);
			adaptor.AddChild(root_0, string_literal222_tree);
			}
			DebugLocation(1075, 25);
			// Smi.g:1075:25: ( 'SUBJECT-CATEGORIES' L_BRACE c= moduleidentity_macro_categories R_BRACE )?
			int alt90=2;
			try { DebugEnterSubRule(90);
			try { DebugEnterDecision(90, false);
			int LA90_1 = input.LA(1);

			if ((LA90_1==184))
			{
				alt90 = 1;
			}
			} finally { DebugExitDecision(90); }
			switch (alt90)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1075:26: 'SUBJECT-CATEGORIES' L_BRACE c= moduleidentity_macro_categories R_BRACE
				{
				DebugLocation(1075, 26);
				string_literal223=(IToken)Match(input,184,Follow._184_in_moduleidentity_macro6166); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal223_tree = (CommonTree)adaptor.Create(string_literal223);
				adaptor.AddChild(root_0, string_literal223_tree);
				}
				DebugLocation(1075, 47);
				L_BRACE224=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_moduleidentity_macro6168); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE224_tree = (CommonTree)adaptor.Create(L_BRACE224);
				adaptor.AddChild(root_0, L_BRACE224_tree);
				}
				DebugLocation(1075, 56);
				PushFollow(Follow._moduleidentity_macro_categories_in_moduleidentity_macro6172);
				c=moduleidentity_macro_categories();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, c.Tree);
				DebugLocation(1075, 89);
				R_BRACE225=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_moduleidentity_macro6174); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE225_tree = (CommonTree)adaptor.Create(R_BRACE225);
				adaptor.AddChild(root_0, R_BRACE225_tree);
				}
				DebugLocation(1075, 97);
				if (state.backtracking == 0)
				{
					 retval.result.Categories = (c!=null?c.result:default(Categories)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(90); }

			DebugLocation(1076, 5);
			string_literal226=(IToken)Match(input,151,Follow._151_in_moduleidentity_macro6186); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal226_tree = (CommonTree)adaptor.Create(string_literal226);
			adaptor.AddChild(root_0, string_literal226_tree);
			}
			DebugLocation(1076, 22);
			c1=(IToken)Match(input,C_STRING,Follow._C_STRING_in_moduleidentity_macro6190); if (state.failed) return retval;
			if (state.backtracking == 0) {
			c1_tree = (CommonTree)adaptor.Create(c1);
			adaptor.AddChild(root_0, c1_tree);
			}
			DebugLocation(1076, 32);
			if (state.backtracking == 0)
			{
				 retval.result.LastUpdate = (c1!=null?c1.Text:null); 
			}
			DebugLocation(1077, 2);
			string_literal227=(IToken)Match(input,166,Follow._166_in_moduleidentity_macro6195); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal227_tree = (CommonTree)adaptor.Create(string_literal227);
			adaptor.AddChild(root_0, string_literal227_tree);
			}
			DebugLocation(1077, 19);
			c2=(IToken)Match(input,C_STRING,Follow._C_STRING_in_moduleidentity_macro6199); if (state.failed) return retval;
			if (state.backtracking == 0) {
			c2_tree = (CommonTree)adaptor.Create(c2);
			adaptor.AddChild(root_0, c2_tree);
			}
			DebugLocation(1077, 29);
			if (state.backtracking == 0)
			{
				 retval.result.Organization = (c2!=null?c2.Text:null); 
			}
			DebugLocation(1078, 2);
			string_literal228=(IToken)Match(input,137,Follow._137_in_moduleidentity_macro6204); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal228_tree = (CommonTree)adaptor.Create(string_literal228);
			adaptor.AddChild(root_0, string_literal228_tree);
			}
			DebugLocation(1078, 19);
			c3=(IToken)Match(input,C_STRING,Follow._C_STRING_in_moduleidentity_macro6208); if (state.failed) return retval;
			if (state.backtracking == 0) {
			c3_tree = (CommonTree)adaptor.Create(c3);
			adaptor.AddChild(root_0, c3_tree);
			}
			DebugLocation(1078, 29);
			if (state.backtracking == 0)
			{
				 retval.result.ContactInfo = (c3!=null?c3.Text:null); 
			}
			DebugLocation(1079, 5);
			string_literal229=(IToken)Match(input,140,Follow._140_in_moduleidentity_macro6216); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal229_tree = (CommonTree)adaptor.Create(string_literal229);
			adaptor.AddChild(root_0, string_literal229_tree);
			}
			DebugLocation(1079, 21);
			c4=(IToken)Match(input,C_STRING,Follow._C_STRING_in_moduleidentity_macro6220); if (state.failed) return retval;
			if (state.backtracking == 0) {
			c4_tree = (CommonTree)adaptor.Create(c4);
			adaptor.AddChild(root_0, c4_tree);
			}
			DebugLocation(1079, 31);
			if (state.backtracking == 0)
			{
				 retval.result.Description = (c4!=null?c4.Text:null); 
			}
			DebugLocation(1080, 2);
			// Smi.g:1080:2: (m= moduleidentity_macro_revision )*
			try { DebugEnterSubRule(91);
			while (true)
			{
				int alt91=2;
				try { DebugEnterDecision(91, false);
				int LA91_1 = input.LA(1);

				if ((LA91_1==179))
				{
					alt91 = 1;
				}


				} finally { DebugExitDecision(91); }
				switch ( alt91 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1080:3: m= moduleidentity_macro_revision
					{
					DebugLocation(1080, 4);
					PushFollow(Follow._moduleidentity_macro_revision_in_moduleidentity_macro6228);
					m=moduleidentity_macro_revision();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, m.Tree);
					DebugLocation(1080, 35);
					if (state.backtracking == 0)
					{
						 retval.result.Revisions.Add((m!=null?m.result:default(Revision))); 
					}

					}
					break;

				default:
					goto loop91;
				}
			}

			loop91:
				;

			} finally { DebugExitSubRule(91); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("moduleidentity_macro", 65);
			LeaveRule("moduleidentity_macro", 65);
			LeaveRule_moduleidentity_macro();
		}
		DebugLocation(1080, 74);
		} finally { DebugExitRule(GrammarFileName, "moduleidentity_macro"); }
		return retval;

	}
	// $ANTLR end "moduleidentity_macro"

	private sealed partial class moduleidentity_macro_revision_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public Revision result;
		public moduleidentity_macro_revision_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_moduleidentity_macro_revision();
	partial void LeaveRule_moduleidentity_macro_revision();
	// $ANTLR start "moduleidentity_macro_revision"
	// Smi.g:1082:1: moduleidentity_macro_revision returns [Revision result] : 'REVISION' c1= C_STRING 'DESCRIPTION' c2= C_STRING ;
	[GrammarRule("moduleidentity_macro_revision")]
	private SmiParser.moduleidentity_macro_revision_return moduleidentity_macro_revision()
	{
		EnterRule_moduleidentity_macro_revision();
		EnterRule("moduleidentity_macro_revision", 66);
		TraceIn("moduleidentity_macro_revision", 66);
		SmiParser.moduleidentity_macro_revision_return retval = new SmiParser.moduleidentity_macro_revision_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken c1 = default(IToken);
		IToken c2 = default(IToken);
		IToken string_literal230 = default(IToken);
		IToken string_literal231 = default(IToken);

		CommonTree c1_tree = default(CommonTree);
		CommonTree c2_tree = default(CommonTree);
		CommonTree string_literal230_tree = default(CommonTree);
		CommonTree string_literal231_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "moduleidentity_macro_revision");
		DebugLocation(1082, 1);
		try
		{
			// Smi.g:1083:5: ( 'REVISION' c1= C_STRING 'DESCRIPTION' c2= C_STRING )
			DebugEnterAlt(1);
			// Smi.g:1083:7: 'REVISION' c1= C_STRING 'DESCRIPTION' c2= C_STRING
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1083, 7);
			string_literal230=(IToken)Match(input,179,Follow._179_in_moduleidentity_macro_revision6249); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal230_tree = (CommonTree)adaptor.Create(string_literal230);
			adaptor.AddChild(root_0, string_literal230_tree);
			}
			DebugLocation(1083, 20);
			c1=(IToken)Match(input,C_STRING,Follow._C_STRING_in_moduleidentity_macro_revision6253); if (state.failed) return retval;
			if (state.backtracking == 0) {
			c1_tree = (CommonTree)adaptor.Create(c1);
			adaptor.AddChild(root_0, c1_tree);
			}
			DebugLocation(1083, 30);
			string_literal231=(IToken)Match(input,140,Follow._140_in_moduleidentity_macro_revision6255); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal231_tree = (CommonTree)adaptor.Create(string_literal231);
			adaptor.AddChild(root_0, string_literal231_tree);
			}
			DebugLocation(1083, 46);
			c2=(IToken)Match(input,C_STRING,Follow._C_STRING_in_moduleidentity_macro_revision6259); if (state.failed) return retval;
			if (state.backtracking == 0) {
			c2_tree = (CommonTree)adaptor.Create(c2);
			adaptor.AddChild(root_0, c2_tree);
			}
			DebugLocation(1083, 56);
			if (state.backtracking == 0)
			{
				 retval.result = new Revision((c1!=null?c1.Text:null), (c2!=null?c2.Text:null)); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("moduleidentity_macro_revision", 66);
			LeaveRule("moduleidentity_macro_revision", 66);
			LeaveRule_moduleidentity_macro_revision();
		}
		DebugLocation(1084, 1);
		} finally { DebugExitRule(GrammarFileName, "moduleidentity_macro_revision"); }
		return retval;

	}
	// $ANTLR end "moduleidentity_macro_revision"

	private sealed partial class moduleidentity_macro_categories_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public Categories result = new Categories();
		public moduleidentity_macro_categories_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_moduleidentity_macro_categories();
	partial void LeaveRule_moduleidentity_macro_categories();
	// $ANTLR start "moduleidentity_macro_categories"
	// Smi.g:1086:1: moduleidentity_macro_categories returns [Categories result = new Categories()] : (l= LOWER |m1= moduleidentity_macro_categoryid ( COMMA m2= moduleidentity_macro_categoryid )* );
	[GrammarRule("moduleidentity_macro_categories")]
	private SmiParser.moduleidentity_macro_categories_return moduleidentity_macro_categories()
	{
		EnterRule_moduleidentity_macro_categories();
		EnterRule("moduleidentity_macro_categories", 67);
		TraceIn("moduleidentity_macro_categories", 67);
		SmiParser.moduleidentity_macro_categories_return retval = new SmiParser.moduleidentity_macro_categories_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);
		IToken COMMA232 = default(IToken);
		SmiParser.moduleidentity_macro_categoryid_return m1 = default(SmiParser.moduleidentity_macro_categoryid_return);
		SmiParser.moduleidentity_macro_categoryid_return m2 = default(SmiParser.moduleidentity_macro_categoryid_return);

		CommonTree l_tree = default(CommonTree);
		CommonTree COMMA232_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "moduleidentity_macro_categories");
		DebugLocation(1086, 1);
		try
		{
			// Smi.g:1087:5: (l= LOWER |m1= moduleidentity_macro_categoryid ( COMMA m2= moduleidentity_macro_categoryid )* )
			int alt93=2;
			try { DebugEnterDecision(93, false);
			int LA93_1 = input.LA(1);

			if ((LA93_1==LOWER))
			{
				int LA93_2 = input.LA(2);

				if ((LA93_2==R_BRACE))
				{
					alt93 = 1;
				}
				else if ((LA93_2==L_PAREN))
				{
					alt93 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 93, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 93, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(93); }
			switch (alt93)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1087:7: l= LOWER
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1087, 8);
				l=(IToken)Match(input,LOWER,Follow._LOWER_in_moduleidentity_macro_categories6282); if (state.failed) return retval;
				if (state.backtracking == 0) {
				l_tree = (CommonTree)adaptor.Create(l);
				adaptor.AddChild(root_0, l_tree);
				}
				DebugLocation(1087, 15);
				if (state.backtracking == 0)
				{
					if (l.Text ==  ("all")) retval.result.AllCategories = true;
						         else { throw new SemanticException ("(invalid)"); }
								
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1090:7: m1= moduleidentity_macro_categoryid ( COMMA m2= moduleidentity_macro_categoryid )*
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1090, 9);
				PushFollow(Follow._moduleidentity_macro_categoryid_in_moduleidentity_macro_categories6295);
				m1=moduleidentity_macro_categoryid();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, m1.Tree);
				DebugLocation(1090, 42);
				if (state.backtracking == 0)
				{
					 retval.result.CategoryIds.Add((m1!=null?m1.result:default(NamedBit))); 
				}
				DebugLocation(1091, 2);
				// Smi.g:1091:2: ( COMMA m2= moduleidentity_macro_categoryid )*
				try { DebugEnterSubRule(92);
				while (true)
				{
					int alt92=2;
					try { DebugEnterDecision(92, false);
					int LA92_1 = input.LA(1);

					if ((LA92_1==COMMA))
					{
						alt92 = 1;
					}


					} finally { DebugExitDecision(92); }
					switch ( alt92 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:1091:3: COMMA m2= moduleidentity_macro_categoryid
						{
						DebugLocation(1091, 3);
						COMMA232=(IToken)Match(input,COMMA,Follow._COMMA_in_moduleidentity_macro_categories6302); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA232_tree = (CommonTree)adaptor.Create(COMMA232);
						adaptor.AddChild(root_0, COMMA232_tree);
						}
						DebugLocation(1091, 11);
						PushFollow(Follow._moduleidentity_macro_categoryid_in_moduleidentity_macro_categories6306);
						m2=moduleidentity_macro_categoryid();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, m2.Tree);
						DebugLocation(1091, 44);
						if (state.backtracking == 0)
						{
							 retval.result.CategoryIds.Add((m2!=null?m2.result:default(NamedBit))); 
						}

						}
						break;

					default:
						goto loop92;
					}
				}

				loop92:
					;

				} finally { DebugExitSubRule(92); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("moduleidentity_macro_categories", 67);
			LeaveRule("moduleidentity_macro_categories", 67);
			LeaveRule_moduleidentity_macro_categories();
		}
		DebugLocation(1092, 1);
		} finally { DebugExitRule(GrammarFileName, "moduleidentity_macro_categories"); }
		return retval;

	}
	// $ANTLR end "moduleidentity_macro_categories"

	private sealed partial class moduleidentity_macro_categoryid_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public NamedBit result;
		public moduleidentity_macro_categoryid_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_moduleidentity_macro_categoryid();
	partial void LeaveRule_moduleidentity_macro_categoryid();
	// $ANTLR start "moduleidentity_macro_categoryid"
	// Smi.g:1094:1: moduleidentity_macro_categoryid returns [NamedBit result] : n= namedbit ;
	[GrammarRule("moduleidentity_macro_categoryid")]
	private SmiParser.moduleidentity_macro_categoryid_return moduleidentity_macro_categoryid()
	{
		EnterRule_moduleidentity_macro_categoryid();
		EnterRule("moduleidentity_macro_categoryid", 68);
		TraceIn("moduleidentity_macro_categoryid", 68);
		SmiParser.moduleidentity_macro_categoryid_return retval = new SmiParser.moduleidentity_macro_categoryid_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		SmiParser.namedbit_return n = default(SmiParser.namedbit_return);

		try { DebugEnterRule(GrammarFileName, "moduleidentity_macro_categoryid");
		DebugLocation(1094, 1);
		try
		{
			// Smi.g:1095:5: (n= namedbit )
			DebugEnterAlt(1);
			// Smi.g:1095:7: n= namedbit
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1095, 8);
			PushFollow(Follow._namedbit_in_moduleidentity_macro_categoryid6330);
			n=namedbit();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, n.Tree);
			DebugLocation(1095, 18);
			if (state.backtracking == 0)
			{
				 retval.result = (n!=null?n.result:default(NamedBit)); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("moduleidentity_macro_categoryid", 68);
			LeaveRule("moduleidentity_macro_categoryid", 68);
			LeaveRule_moduleidentity_macro_categoryid();
		}
		DebugLocation(1096, 1);
		} finally { DebugExitRule(GrammarFileName, "moduleidentity_macro_categoryid"); }
		return retval;

	}
	// $ANTLR end "moduleidentity_macro_categoryid"

	private sealed partial class objectidentity_macro_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ObjectIdentityMacro result;
		public objectidentity_macro_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_objectidentity_macro();
	partial void LeaveRule_objectidentity_macro();
	// $ANTLR start "objectidentity_macro"
	// Smi.g:1099:1: objectidentity_macro returns [ObjectIdentityMacro result] : 'OBJECT-IDENTITY' 'STATUS' s= status 'DESCRIPTION' c1= C_STRING ( 'REFERENCE' c2= C_STRING )? ;
	[GrammarRule("objectidentity_macro")]
	private SmiParser.objectidentity_macro_return objectidentity_macro()
	{
		EnterRule_objectidentity_macro();
		EnterRule("objectidentity_macro", 69);
		TraceIn("objectidentity_macro", 69);
		SmiParser.objectidentity_macro_return retval = new SmiParser.objectidentity_macro_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken c1 = default(IToken);
		IToken c2 = default(IToken);
		IToken string_literal233 = default(IToken);
		IToken string_literal234 = default(IToken);
		IToken string_literal235 = default(IToken);
		IToken string_literal236 = default(IToken);
		SmiParser.status_return s = default(SmiParser.status_return);

		CommonTree c1_tree = default(CommonTree);
		CommonTree c2_tree = default(CommonTree);
		CommonTree string_literal233_tree = default(CommonTree);
		CommonTree string_literal234_tree = default(CommonTree);
		CommonTree string_literal235_tree = default(CommonTree);
		CommonTree string_literal236_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objectidentity_macro");
		DebugLocation(1099, 62);
		try
		{
			// Smi.g:1100:5: ( 'OBJECT-IDENTITY' 'STATUS' s= status 'DESCRIPTION' c1= C_STRING ( 'REFERENCE' c2= C_STRING )? )
			DebugEnterAlt(1);
			// Smi.g:1100:7: 'OBJECT-IDENTITY' 'STATUS' s= status 'DESCRIPTION' c1= C_STRING ( 'REFERENCE' c2= C_STRING )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1100, 7);
			string_literal233=(IToken)Match(input,163,Follow._163_in_objectidentity_macro6353); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal233_tree = (CommonTree)adaptor.Create(string_literal233);
			adaptor.AddChild(root_0, string_literal233_tree);
			}
			DebugLocation(1100, 25);
			string_literal234=(IToken)Match(input,183,Follow._183_in_objectidentity_macro6355); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal234_tree = (CommonTree)adaptor.Create(string_literal234);
			adaptor.AddChild(root_0, string_literal234_tree);
			}
			DebugLocation(1100, 35);
			PushFollow(Follow._status_in_objectidentity_macro6359);
			s=status();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, s.Tree);
			DebugLocation(1101, 2);
			string_literal235=(IToken)Match(input,140,Follow._140_in_objectidentity_macro6363); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal235_tree = (CommonTree)adaptor.Create(string_literal235);
			adaptor.AddChild(root_0, string_literal235_tree);
			}
			DebugLocation(1101, 18);
			c1=(IToken)Match(input,C_STRING,Follow._C_STRING_in_objectidentity_macro6367); if (state.failed) return retval;
			if (state.backtracking == 0) {
			c1_tree = (CommonTree)adaptor.Create(c1);
			adaptor.AddChild(root_0, c1_tree);
			}
			DebugLocation(1101, 28);
			if (state.backtracking == 0)
			{
				 retval.result = new ObjectIdentityMacro((s!=null?s.result:default(EntityStatus)), (c1!=null?c1.Text:null)); 
			}
			DebugLocation(1102, 2);
			// Smi.g:1102:2: ( 'REFERENCE' c2= C_STRING )?
			int alt94=2;
			try { DebugEnterSubRule(94);
			try { DebugEnterDecision(94, false);
			int LA94_1 = input.LA(1);

			if ((LA94_1==176))
			{
				alt94 = 1;
			}
			} finally { DebugExitDecision(94); }
			switch (alt94)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1102:3: 'REFERENCE' c2= C_STRING
				{
				DebugLocation(1102, 3);
				string_literal236=(IToken)Match(input,176,Follow._176_in_objectidentity_macro6374); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal236_tree = (CommonTree)adaptor.Create(string_literal236);
				adaptor.AddChild(root_0, string_literal236_tree);
				}
				DebugLocation(1102, 17);
				c2=(IToken)Match(input,C_STRING,Follow._C_STRING_in_objectidentity_macro6378); if (state.failed) return retval;
				if (state.backtracking == 0) {
				c2_tree = (CommonTree)adaptor.Create(c2);
				adaptor.AddChild(root_0, c2_tree);
				}
				DebugLocation(1102, 27);
				if (state.backtracking == 0)
				{
					 retval.result.Reference = (c2!=null?c2.Text:null); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(94); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("objectidentity_macro", 69);
			LeaveRule("objectidentity_macro", 69);
			LeaveRule_objectidentity_macro();
		}
		DebugLocation(1102, 62);
		} finally { DebugExitRule(GrammarFileName, "objectidentity_macro"); }
		return retval;

	}
	// $ANTLR end "objectidentity_macro"

	private sealed partial class notificationtype_macro_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public NotificationTypeMacro result = new NotificationTypeMacro();
		public notificationtype_macro_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_notificationtype_macro();
	partial void LeaveRule_notificationtype_macro();
	// $ANTLR start "notificationtype_macro"
	// Smi.g:1105:1: notificationtype_macro returns [NotificationTypeMacro result = new NotificationTypeMacro()] : 'NOTIFICATION-TYPE' ( 'OBJECTS' L_BRACE v1= value ( COMMA v2= value )* R_BRACE )? 'STATUS' s= status 'DESCRIPTION' c1= C_STRING ( 'REFERENCE' c2= C_STRING )? ;
	[GrammarRule("notificationtype_macro")]
	private SmiParser.notificationtype_macro_return notificationtype_macro()
	{
		EnterRule_notificationtype_macro();
		EnterRule("notificationtype_macro", 70);
		TraceIn("notificationtype_macro", 70);
		SmiParser.notificationtype_macro_return retval = new SmiParser.notificationtype_macro_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken c1 = default(IToken);
		IToken c2 = default(IToken);
		IToken string_literal237 = default(IToken);
		IToken string_literal238 = default(IToken);
		IToken L_BRACE239 = default(IToken);
		IToken COMMA240 = default(IToken);
		IToken R_BRACE241 = default(IToken);
		IToken string_literal242 = default(IToken);
		IToken string_literal243 = default(IToken);
		IToken string_literal244 = default(IToken);
		SmiParser.value_return v1 = default(SmiParser.value_return);
		SmiParser.value_return v2 = default(SmiParser.value_return);
		SmiParser.status_return s = default(SmiParser.status_return);

		CommonTree c1_tree = default(CommonTree);
		CommonTree c2_tree = default(CommonTree);
		CommonTree string_literal237_tree = default(CommonTree);
		CommonTree string_literal238_tree = default(CommonTree);
		CommonTree L_BRACE239_tree = default(CommonTree);
		CommonTree COMMA240_tree = default(CommonTree);
		CommonTree R_BRACE241_tree = default(CommonTree);
		CommonTree string_literal242_tree = default(CommonTree);
		CommonTree string_literal243_tree = default(CommonTree);
		CommonTree string_literal244_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "notificationtype_macro");
		DebugLocation(1105, 4);
		try
		{
			// Smi.g:1106:5: ( 'NOTIFICATION-TYPE' ( 'OBJECTS' L_BRACE v1= value ( COMMA v2= value )* R_BRACE )? 'STATUS' s= status 'DESCRIPTION' c1= C_STRING ( 'REFERENCE' c2= C_STRING )? )
			DebugEnterAlt(1);
			// Smi.g:1106:7: 'NOTIFICATION-TYPE' ( 'OBJECTS' L_BRACE v1= value ( COMMA v2= value )* R_BRACE )? 'STATUS' s= status 'DESCRIPTION' c1= C_STRING ( 'REFERENCE' c2= C_STRING )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1106, 7);
			string_literal237=(IToken)Match(input,160,Follow._160_in_notificationtype_macro6401); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal237_tree = (CommonTree)adaptor.Create(string_literal237);
			adaptor.AddChild(root_0, string_literal237_tree);
			}
			DebugLocation(1106, 27);
			// Smi.g:1106:27: ( 'OBJECTS' L_BRACE v1= value ( COMMA v2= value )* R_BRACE )?
			int alt96=2;
			try { DebugEnterSubRule(96);
			try { DebugEnterDecision(96, false);
			int LA96_1 = input.LA(1);

			if ((LA96_1==165))
			{
				alt96 = 1;
			}
			} finally { DebugExitDecision(96); }
			switch (alt96)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1106:28: 'OBJECTS' L_BRACE v1= value ( COMMA v2= value )* R_BRACE
				{
				DebugLocation(1106, 28);
				string_literal238=(IToken)Match(input,165,Follow._165_in_notificationtype_macro6404); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal238_tree = (CommonTree)adaptor.Create(string_literal238);
				adaptor.AddChild(root_0, string_literal238_tree);
				}
				DebugLocation(1106, 38);
				L_BRACE239=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_notificationtype_macro6406); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE239_tree = (CommonTree)adaptor.Create(L_BRACE239);
				adaptor.AddChild(root_0, L_BRACE239_tree);
				}
				DebugLocation(1106, 48);
				PushFollow(Follow._value_in_notificationtype_macro6410);
				v1=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v1.Tree);
				DebugLocation(1106, 55);
				if (state.backtracking == 0)
				{
					 retval.result.Objects.Add((v1!=null?v1.result:default(ISmiValue))); 
				}
				DebugLocation(1107, 5);
				// Smi.g:1107:5: ( COMMA v2= value )*
				try { DebugEnterSubRule(95);
				while (true)
				{
					int alt95=2;
					try { DebugEnterDecision(95, false);
					int LA95_1 = input.LA(1);

					if ((LA95_1==COMMA))
					{
						alt95 = 1;
					}


					} finally { DebugExitDecision(95); }
					switch ( alt95 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:1107:6: COMMA v2= value
						{
						DebugLocation(1107, 6);
						COMMA240=(IToken)Match(input,COMMA,Follow._COMMA_in_notificationtype_macro6420); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA240_tree = (CommonTree)adaptor.Create(COMMA240);
						adaptor.AddChild(root_0, COMMA240_tree);
						}
						DebugLocation(1107, 14);
						PushFollow(Follow._value_in_notificationtype_macro6424);
						v2=value();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, v2.Tree);
						DebugLocation(1107, 21);
						if (state.backtracking == 0)
						{
							 retval.result.Objects.Add((v2!=null?v2.result:default(ISmiValue))); 
						}

						}
						break;

					default:
						goto loop95;
					}
				}

				loop95:
					;

				} finally { DebugExitSubRule(95); }

				DebugLocation(1107, 60);
				R_BRACE241=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_notificationtype_macro6430); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE241_tree = (CommonTree)adaptor.Create(R_BRACE241);
				adaptor.AddChild(root_0, R_BRACE241_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(96); }

			DebugLocation(1108, 5);
			string_literal242=(IToken)Match(input,183,Follow._183_in_notificationtype_macro6439); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal242_tree = (CommonTree)adaptor.Create(string_literal242);
			adaptor.AddChild(root_0, string_literal242_tree);
			}
			DebugLocation(1108, 15);
			PushFollow(Follow._status_in_notificationtype_macro6443);
			s=status();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, s.Tree);
			DebugLocation(1108, 23);
			if (state.backtracking == 0)
			{
				 retval.result.Status = (s!=null?s.result:default(EntityStatus)); 
			}
			DebugLocation(1109, 5);
			string_literal243=(IToken)Match(input,140,Follow._140_in_notificationtype_macro6451); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal243_tree = (CommonTree)adaptor.Create(string_literal243);
			adaptor.AddChild(root_0, string_literal243_tree);
			}
			DebugLocation(1109, 21);
			c1=(IToken)Match(input,C_STRING,Follow._C_STRING_in_notificationtype_macro6455); if (state.failed) return retval;
			if (state.backtracking == 0) {
			c1_tree = (CommonTree)adaptor.Create(c1);
			adaptor.AddChild(root_0, c1_tree);
			}
			DebugLocation(1109, 31);
			if (state.backtracking == 0)
			{
				 retval.result.Description = (c1!=null?c1.Text:null); 
			}
			DebugLocation(1110, 5);
			// Smi.g:1110:5: ( 'REFERENCE' c2= C_STRING )?
			int alt97=2;
			try { DebugEnterSubRule(97);
			try { DebugEnterDecision(97, false);
			int LA97_1 = input.LA(1);

			if ((LA97_1==176))
			{
				alt97 = 1;
			}
			} finally { DebugExitDecision(97); }
			switch (alt97)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1110:6: 'REFERENCE' c2= C_STRING
				{
				DebugLocation(1110, 6);
				string_literal244=(IToken)Match(input,176,Follow._176_in_notificationtype_macro6464); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal244_tree = (CommonTree)adaptor.Create(string_literal244);
				adaptor.AddChild(root_0, string_literal244_tree);
				}
				DebugLocation(1110, 20);
				c2=(IToken)Match(input,C_STRING,Follow._C_STRING_in_notificationtype_macro6468); if (state.failed) return retval;
				if (state.backtracking == 0) {
				c2_tree = (CommonTree)adaptor.Create(c2);
				adaptor.AddChild(root_0, c2_tree);
				}
				DebugLocation(1110, 30);
				if (state.backtracking == 0)
				{
					 retval.result.Reference = (c2!=null?c2.Text:null); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(97); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("notificationtype_macro", 70);
			LeaveRule("notificationtype_macro", 70);
			LeaveRule_notificationtype_macro();
		}
		DebugLocation(1111, 4);
		} finally { DebugExitRule(GrammarFileName, "notificationtype_macro"); }
		return retval;

	}
	// $ANTLR end "notificationtype_macro"

	private sealed partial class textualconvention_macro_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public TextualConventionMacro result = new TextualConventionMacro();
		public textualconvention_macro_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_textualconvention_macro();
	partial void LeaveRule_textualconvention_macro();
	// $ANTLR start "textualconvention_macro"
	// Smi.g:1114:1: textualconvention_macro returns [TextualConventionMacro result = new TextualConventionMacro()] : 'TEXTUAL-CONVENTION' ( 'DISPLAY-HINT' c1= C_STRING )? 'STATUS' s= status 'DESCRIPTION' c2= C_STRING ( 'REFERENCE' c3= C_STRING )? 'SYNTAX' ( ( smi_type L_BRACE )=>s2= smi_type L_BRACE nb1= namedbit ( COMMA nb2= namedbit )* R_BRACE |t= type ) ;
	[GrammarRule("textualconvention_macro")]
	private SmiParser.textualconvention_macro_return textualconvention_macro()
	{
		EnterRule_textualconvention_macro();
		EnterRule("textualconvention_macro", 71);
		TraceIn("textualconvention_macro", 71);
		SmiParser.textualconvention_macro_return retval = new SmiParser.textualconvention_macro_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken c1 = default(IToken);
		IToken c2 = default(IToken);
		IToken c3 = default(IToken);
		IToken string_literal245 = default(IToken);
		IToken string_literal246 = default(IToken);
		IToken string_literal247 = default(IToken);
		IToken string_literal248 = default(IToken);
		IToken string_literal249 = default(IToken);
		IToken string_literal250 = default(IToken);
		IToken L_BRACE251 = default(IToken);
		IToken COMMA252 = default(IToken);
		IToken R_BRACE253 = default(IToken);
		SmiParser.status_return s = default(SmiParser.status_return);
		SmiParser.smi_type_return s2 = default(SmiParser.smi_type_return);
		SmiParser.namedbit_return nb1 = default(SmiParser.namedbit_return);
		SmiParser.namedbit_return nb2 = default(SmiParser.namedbit_return);
		SmiParser.type_return t = default(SmiParser.type_return);

		CommonTree c1_tree = default(CommonTree);
		CommonTree c2_tree = default(CommonTree);
		CommonTree c3_tree = default(CommonTree);
		CommonTree string_literal245_tree = default(CommonTree);
		CommonTree string_literal246_tree = default(CommonTree);
		CommonTree string_literal247_tree = default(CommonTree);
		CommonTree string_literal248_tree = default(CommonTree);
		CommonTree string_literal249_tree = default(CommonTree);
		CommonTree string_literal250_tree = default(CommonTree);
		CommonTree L_BRACE251_tree = default(CommonTree);
		CommonTree COMMA252_tree = default(CommonTree);
		CommonTree R_BRACE253_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "textualconvention_macro");
		DebugLocation(1114, 1);
		try
		{
			// Smi.g:1115:5: ( 'TEXTUAL-CONVENTION' ( 'DISPLAY-HINT' c1= C_STRING )? 'STATUS' s= status 'DESCRIPTION' c2= C_STRING ( 'REFERENCE' c3= C_STRING )? 'SYNTAX' ( ( smi_type L_BRACE )=>s2= smi_type L_BRACE nb1= namedbit ( COMMA nb2= namedbit )* R_BRACE |t= type ) )
			DebugEnterAlt(1);
			// Smi.g:1115:7: 'TEXTUAL-CONVENTION' ( 'DISPLAY-HINT' c1= C_STRING )? 'STATUS' s= status 'DESCRIPTION' c2= C_STRING ( 'REFERENCE' c3= C_STRING )? 'SYNTAX' ( ( smi_type L_BRACE )=>s2= smi_type L_BRACE nb1= namedbit ( COMMA nb2= namedbit )* R_BRACE |t= type )
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1115, 7);
			string_literal245=(IToken)Match(input,187,Follow._187_in_textualconvention_macro6496); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal245_tree = (CommonTree)adaptor.Create(string_literal245);
			adaptor.AddChild(root_0, string_literal245_tree);
			}
			DebugLocation(1115, 28);
			// Smi.g:1115:28: ( 'DISPLAY-HINT' c1= C_STRING )?
			int alt98=2;
			try { DebugEnterSubRule(98);
			try { DebugEnterDecision(98, false);
			int LA98_1 = input.LA(1);

			if ((LA98_1==141))
			{
				alt98 = 1;
			}
			} finally { DebugExitDecision(98); }
			switch (alt98)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1115:29: 'DISPLAY-HINT' c1= C_STRING
				{
				DebugLocation(1115, 29);
				string_literal246=(IToken)Match(input,141,Follow._141_in_textualconvention_macro6499); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal246_tree = (CommonTree)adaptor.Create(string_literal246);
				adaptor.AddChild(root_0, string_literal246_tree);
				}
				DebugLocation(1115, 46);
				c1=(IToken)Match(input,C_STRING,Follow._C_STRING_in_textualconvention_macro6503); if (state.failed) return retval;
				if (state.backtracking == 0) {
				c1_tree = (CommonTree)adaptor.Create(c1);
				adaptor.AddChild(root_0, c1_tree);
				}
				DebugLocation(1115, 56);
				if (state.backtracking == 0)
				{
					 retval.result.DisplayHint = (c1!=null?c1.Text:null); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(98); }

			DebugLocation(1116, 5);
			string_literal247=(IToken)Match(input,183,Follow._183_in_textualconvention_macro6513); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal247_tree = (CommonTree)adaptor.Create(string_literal247);
			adaptor.AddChild(root_0, string_literal247_tree);
			}
			DebugLocation(1116, 15);
			PushFollow(Follow._status_in_textualconvention_macro6517);
			s=status();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, s.Tree);
			DebugLocation(1116, 23);
			if (state.backtracking == 0)
			{
				 retval.result.Status = (s!=null?s.result:default(EntityStatus)); 
			}
			DebugLocation(1117, 5);
			string_literal248=(IToken)Match(input,140,Follow._140_in_textualconvention_macro6525); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal248_tree = (CommonTree)adaptor.Create(string_literal248);
			adaptor.AddChild(root_0, string_literal248_tree);
			}
			DebugLocation(1117, 21);
			c2=(IToken)Match(input,C_STRING,Follow._C_STRING_in_textualconvention_macro6529); if (state.failed) return retval;
			if (state.backtracking == 0) {
			c2_tree = (CommonTree)adaptor.Create(c2);
			adaptor.AddChild(root_0, c2_tree);
			}
			DebugLocation(1117, 31);
			if (state.backtracking == 0)
			{
				 retval.result.Description = (c2!=null?c2.Text:null); 
			}
			DebugLocation(1118, 5);
			// Smi.g:1118:5: ( 'REFERENCE' c3= C_STRING )?
			int alt99=2;
			try { DebugEnterSubRule(99);
			try { DebugEnterDecision(99, false);
			int LA99_1 = input.LA(1);

			if ((LA99_1==176))
			{
				alt99 = 1;
			}
			} finally { DebugExitDecision(99); }
			switch (alt99)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1118:6: 'REFERENCE' c3= C_STRING
				{
				DebugLocation(1118, 6);
				string_literal249=(IToken)Match(input,176,Follow._176_in_textualconvention_macro6538); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal249_tree = (CommonTree)adaptor.Create(string_literal249);
				adaptor.AddChild(root_0, string_literal249_tree);
				}
				DebugLocation(1118, 20);
				c3=(IToken)Match(input,C_STRING,Follow._C_STRING_in_textualconvention_macro6542); if (state.failed) return retval;
				if (state.backtracking == 0) {
				c3_tree = (CommonTree)adaptor.Create(c3);
				adaptor.AddChild(root_0, c3_tree);
				}
				DebugLocation(1118, 30);
				if (state.backtracking == 0)
				{
					 retval.result.Reference = (c3!=null?c3.Text:null); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(99); }

			DebugLocation(1119, 5);
			string_literal250=(IToken)Match(input,186,Follow._186_in_textualconvention_macro6553); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal250_tree = (CommonTree)adaptor.Create(string_literal250);
			adaptor.AddChild(root_0, string_literal250_tree);
			}
			DebugLocation(1119, 14);
			// Smi.g:1119:14: ( ( smi_type L_BRACE )=>s2= smi_type L_BRACE nb1= namedbit ( COMMA nb2= namedbit )* R_BRACE |t= type )
			int alt101=2;
			try { DebugEnterSubRule(101);
			try { DebugEnterDecision(101, false);
			try
			{
				alt101 = dfa101.Predict(input);
			}
			catch (NoViableAltException nvae)
			{
				DebugRecognitionException(nvae);
				throw;
			}
			} finally { DebugExitDecision(101); }
			switch (alt101)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1119:16: ( smi_type L_BRACE )=>s2= smi_type L_BRACE nb1= namedbit ( COMMA nb2= namedbit )* R_BRACE
				{
				DebugLocation(1119, 40);
				PushFollow(Follow._smi_type_in_textualconvention_macro6567);
				s2=smi_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, s2.Tree);
				DebugLocation(1119, 50);
				if (state.backtracking == 0)
				{
					 retval.result.Syntax = (s2!=null?s2.result:default(ISmiType)); 
				}
				DebugLocation(1120, 2);
				L_BRACE251=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_textualconvention_macro6572); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE251_tree = (CommonTree)adaptor.Create(L_BRACE251);
				adaptor.AddChild(root_0, L_BRACE251_tree);
				}
				DebugLocation(1120, 13);
				PushFollow(Follow._namedbit_in_textualconvention_macro6576);
				nb1=namedbit();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, nb1.Tree);
				DebugLocation(1120, 23);
				if (state.backtracking == 0)
				{
					 retval.result.SyntaxNamedBits.Add((nb1!=null?nb1.result:default(NamedBit))); 
				}
				DebugLocation(1121, 13);
				// Smi.g:1121:13: ( COMMA nb2= namedbit )*
				try { DebugEnterSubRule(100);
				while (true)
				{
					int alt100=2;
					try { DebugEnterDecision(100, false);
					int LA100_1 = input.LA(1);

					if ((LA100_1==COMMA))
					{
						alt100 = 1;
					}


					} finally { DebugExitDecision(100); }
					switch ( alt100 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:1121:14: COMMA nb2= namedbit
						{
						DebugLocation(1121, 14);
						COMMA252=(IToken)Match(input,COMMA,Follow._COMMA_in_textualconvention_macro6593); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA252_tree = (CommonTree)adaptor.Create(COMMA252);
						adaptor.AddChild(root_0, COMMA252_tree);
						}
						DebugLocation(1121, 23);
						PushFollow(Follow._namedbit_in_textualconvention_macro6597);
						nb2=namedbit();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, nb2.Tree);
						DebugLocation(1121, 33);
						if (state.backtracking == 0)
						{
							 retval.result.SyntaxNamedBits.Add((nb2!=null?nb2.result:default(NamedBit))); 
						}

						}
						break;

					default:
						goto loop100;
					}
				}

				loop100:
					;

				} finally { DebugExitSubRule(100); }

				DebugLocation(1121, 81);
				R_BRACE253=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_textualconvention_macro6603); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE253_tree = (CommonTree)adaptor.Create(R_BRACE253);
				adaptor.AddChild(root_0, R_BRACE253_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1122:6: t= type
				{
				DebugLocation(1122, 7);
				PushFollow(Follow._type_in_textualconvention_macro6613);
				t=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, t.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(101); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("textualconvention_macro", 71);
			LeaveRule("textualconvention_macro", 71);
			LeaveRule_textualconvention_macro();
		}
		DebugLocation(1123, 1);
		} finally { DebugExitRule(GrammarFileName, "textualconvention_macro"); }
		return retval;

	}
	// $ANTLR end "textualconvention_macro"

	private sealed partial class namedbit_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public NamedBit result;
		public namedbit_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_namedbit();
	partial void LeaveRule_namedbit();
	// $ANTLR start "namedbit"
	// Smi.g:1125:1: namedbit returns [NamedBit result] : name= LOWER L_PAREN ( MINUS )? num= NUMBER R_PAREN ;
	[GrammarRule("namedbit")]
	private SmiParser.namedbit_return namedbit()
	{
		EnterRule_namedbit();
		EnterRule("namedbit", 72);
		TraceIn("namedbit", 72);
		SmiParser.namedbit_return retval = new SmiParser.namedbit_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken name = default(IToken);
		IToken num = default(IToken);
		IToken L_PAREN254 = default(IToken);
		IToken MINUS255 = default(IToken);
		IToken R_PAREN256 = default(IToken);

		CommonTree name_tree = default(CommonTree);
		CommonTree num_tree = default(CommonTree);
		CommonTree L_PAREN254_tree = default(CommonTree);
		CommonTree MINUS255_tree = default(CommonTree);
		CommonTree R_PAREN256_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "namedbit");
		DebugLocation(1125, 1);
		try
		{
			// Smi.g:1126:5: (name= LOWER L_PAREN ( MINUS )? num= NUMBER R_PAREN )
			DebugEnterAlt(1);
			// Smi.g:1126:7: name= LOWER L_PAREN ( MINUS )? num= NUMBER R_PAREN
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1126, 11);
			name=(IToken)Match(input,LOWER,Follow._LOWER_in_namedbit6634); if (state.failed) return retval;
			if (state.backtracking == 0) {
			name_tree = (CommonTree)adaptor.Create(name);
			adaptor.AddChild(root_0, name_tree);
			}
			DebugLocation(1126, 18);
			if (state.backtracking == 0)
			{
				 retval.result = new NamedBit((name!=null?name.Text:null)); 
			}
			DebugLocation(1127, 2);
			L_PAREN254=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_namedbit6639); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_PAREN254_tree = (CommonTree)adaptor.Create(L_PAREN254);
			adaptor.AddChild(root_0, L_PAREN254_tree);
			}
			DebugLocation(1127, 10);
			// Smi.g:1127:10: ( MINUS )?
			int alt102=2;
			try { DebugEnterSubRule(102);
			try { DebugEnterDecision(102, false);
			int LA102_1 = input.LA(1);

			if ((LA102_1==MINUS))
			{
				alt102 = 1;
			}
			} finally { DebugExitDecision(102); }
			switch (alt102)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1127:11: MINUS
				{
				DebugLocation(1127, 11);
				MINUS255=(IToken)Match(input,MINUS,Follow._MINUS_in_namedbit6642); if (state.failed) return retval;
				if (state.backtracking == 0) {
				MINUS255_tree = (CommonTree)adaptor.Create(MINUS255);
				adaptor.AddChild(root_0, MINUS255_tree);
				}
				DebugLocation(1127, 17);
				if (state.backtracking == 0)
				{
					 retval.result.Minus = true; 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(102); }

			DebugLocation(1128, 5);
			num=(IToken)Match(input,NUMBER,Follow._NUMBER_in_namedbit6652); if (state.failed) return retval;
			if (state.backtracking == 0) {
			num_tree = (CommonTree)adaptor.Create(num);
			adaptor.AddChild(root_0, num_tree);
			}
			DebugLocation(1128, 13);
			R_PAREN256=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_namedbit6654); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_PAREN256_tree = (CommonTree)adaptor.Create(R_PAREN256);
			adaptor.AddChild(root_0, R_PAREN256_tree);
			}
			DebugLocation(1128, 21);
			if (state.backtracking == 0)
			{
				 retval.result.Number = long.Parse((num!=null?num.Text:null)); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("namedbit", 72);
			LeaveRule("namedbit", 72);
			LeaveRule_namedbit();
		}
		DebugLocation(1129, 1);
		} finally { DebugExitRule(GrammarFileName, "namedbit"); }
		return retval;

	}
	// $ANTLR end "namedbit"

	private sealed partial class objectgroup_macro_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ObjectGroupMacro result;
		public objectgroup_macro_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_objectgroup_macro();
	partial void LeaveRule_objectgroup_macro();
	// $ANTLR start "objectgroup_macro"
	// Smi.g:1132:1: objectgroup_macro returns [ObjectGroupMacro result] : 'OBJECT-GROUP' 'OBJECTS' L_BRACE v1= value ( COMMA v2= value )* R_BRACE 'STATUS' s= status 'DESCRIPTION' c1= C_STRING ( 'REFERENCE' c2= C_STRING )? ;
	[GrammarRule("objectgroup_macro")]
	private SmiParser.objectgroup_macro_return objectgroup_macro()
	{
		EnterRule_objectgroup_macro();
		EnterRule("objectgroup_macro", 73);
		TraceIn("objectgroup_macro", 73);
		SmiParser.objectgroup_macro_return retval = new SmiParser.objectgroup_macro_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken c1 = default(IToken);
		IToken c2 = default(IToken);
		IToken string_literal257 = default(IToken);
		IToken string_literal258 = default(IToken);
		IToken L_BRACE259 = default(IToken);
		IToken COMMA260 = default(IToken);
		IToken R_BRACE261 = default(IToken);
		IToken string_literal262 = default(IToken);
		IToken string_literal263 = default(IToken);
		IToken string_literal264 = default(IToken);
		SmiParser.value_return v1 = default(SmiParser.value_return);
		SmiParser.value_return v2 = default(SmiParser.value_return);
		SmiParser.status_return s = default(SmiParser.status_return);

		CommonTree c1_tree = default(CommonTree);
		CommonTree c2_tree = default(CommonTree);
		CommonTree string_literal257_tree = default(CommonTree);
		CommonTree string_literal258_tree = default(CommonTree);
		CommonTree L_BRACE259_tree = default(CommonTree);
		CommonTree COMMA260_tree = default(CommonTree);
		CommonTree R_BRACE261_tree = default(CommonTree);
		CommonTree string_literal262_tree = default(CommonTree);
		CommonTree string_literal263_tree = default(CommonTree);
		CommonTree string_literal264_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objectgroup_macro");
		DebugLocation(1132, 1);
		try
		{
			// Smi.g:1133:5: ( 'OBJECT-GROUP' 'OBJECTS' L_BRACE v1= value ( COMMA v2= value )* R_BRACE 'STATUS' s= status 'DESCRIPTION' c1= C_STRING ( 'REFERENCE' c2= C_STRING )? )
			DebugEnterAlt(1);
			// Smi.g:1133:7: 'OBJECT-GROUP' 'OBJECTS' L_BRACE v1= value ( COMMA v2= value )* R_BRACE 'STATUS' s= status 'DESCRIPTION' c1= C_STRING ( 'REFERENCE' c2= C_STRING )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1133, 7);
			string_literal257=(IToken)Match(input,162,Follow._162_in_objectgroup_macro6676); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal257_tree = (CommonTree)adaptor.Create(string_literal257);
			adaptor.AddChild(root_0, string_literal257_tree);
			}
			DebugLocation(1133, 22);
			string_literal258=(IToken)Match(input,165,Follow._165_in_objectgroup_macro6678); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal258_tree = (CommonTree)adaptor.Create(string_literal258);
			adaptor.AddChild(root_0, string_literal258_tree);
			}
			DebugLocation(1133, 32);
			L_BRACE259=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objectgroup_macro6680); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE259_tree = (CommonTree)adaptor.Create(L_BRACE259);
			adaptor.AddChild(root_0, L_BRACE259_tree);
			}
			DebugLocation(1133, 42);
			PushFollow(Follow._value_in_objectgroup_macro6684);
			v1=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, v1.Tree);
			DebugLocation(1133, 49);
			if (state.backtracking == 0)
			{
				 retval.result = new ObjectGroupMacro((v1!=null?v1.result:default(ISmiValue))); 
			}
			DebugLocation(1134, 2);
			// Smi.g:1134:2: ( COMMA v2= value )*
			try { DebugEnterSubRule(103);
			while (true)
			{
				int alt103=2;
				try { DebugEnterDecision(103, false);
				int LA103_1 = input.LA(1);

				if ((LA103_1==COMMA))
				{
					alt103 = 1;
				}


				} finally { DebugExitDecision(103); }
				switch ( alt103 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1134:3: COMMA v2= value
					{
					DebugLocation(1134, 3);
					COMMA260=(IToken)Match(input,COMMA,Follow._COMMA_in_objectgroup_macro6690); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA260_tree = (CommonTree)adaptor.Create(COMMA260);
					adaptor.AddChild(root_0, COMMA260_tree);
					}
					DebugLocation(1134, 11);
					PushFollow(Follow._value_in_objectgroup_macro6694);
					v2=value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, v2.Tree);
					DebugLocation(1134, 18);
					if (state.backtracking == 0)
					{
						 retval.result.Objects.Add((v2!=null?v2.result:default(ISmiValue))); 
					}

					}
					break;

				default:
					goto loop103;
				}
			}

			loop103:
				;

			} finally { DebugExitSubRule(103); }

			DebugLocation(1134, 57);
			R_BRACE261=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objectgroup_macro6700); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE261_tree = (CommonTree)adaptor.Create(R_BRACE261);
			adaptor.AddChild(root_0, R_BRACE261_tree);
			}
			DebugLocation(1135, 5);
			string_literal262=(IToken)Match(input,183,Follow._183_in_objectgroup_macro6707); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal262_tree = (CommonTree)adaptor.Create(string_literal262);
			adaptor.AddChild(root_0, string_literal262_tree);
			}
			DebugLocation(1135, 15);
			PushFollow(Follow._status_in_objectgroup_macro6711);
			s=status();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, s.Tree);
			DebugLocation(1135, 23);
			if (state.backtracking == 0)
			{
				 retval.result.Status = (s!=null?s.result:default(EntityStatus)); 
			}
			DebugLocation(1136, 2);
			string_literal263=(IToken)Match(input,140,Follow._140_in_objectgroup_macro6716); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal263_tree = (CommonTree)adaptor.Create(string_literal263);
			adaptor.AddChild(root_0, string_literal263_tree);
			}
			DebugLocation(1136, 18);
			c1=(IToken)Match(input,C_STRING,Follow._C_STRING_in_objectgroup_macro6720); if (state.failed) return retval;
			if (state.backtracking == 0) {
			c1_tree = (CommonTree)adaptor.Create(c1);
			adaptor.AddChild(root_0, c1_tree);
			}
			DebugLocation(1136, 28);
			if (state.backtracking == 0)
			{
				 retval.result.Description = (c1!=null?c1.Text:null); 
			}
			DebugLocation(1137, 2);
			// Smi.g:1137:2: ( 'REFERENCE' c2= C_STRING )?
			int alt104=2;
			try { DebugEnterSubRule(104);
			try { DebugEnterDecision(104, false);
			int LA104_1 = input.LA(1);

			if ((LA104_1==176))
			{
				alt104 = 1;
			}
			} finally { DebugExitDecision(104); }
			switch (alt104)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1137:3: 'REFERENCE' c2= C_STRING
				{
				DebugLocation(1137, 3);
				string_literal264=(IToken)Match(input,176,Follow._176_in_objectgroup_macro6726); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal264_tree = (CommonTree)adaptor.Create(string_literal264);
				adaptor.AddChild(root_0, string_literal264_tree);
				}
				DebugLocation(1137, 17);
				c2=(IToken)Match(input,C_STRING,Follow._C_STRING_in_objectgroup_macro6730); if (state.failed) return retval;
				if (state.backtracking == 0) {
				c2_tree = (CommonTree)adaptor.Create(c2);
				adaptor.AddChild(root_0, c2_tree);
				}
				DebugLocation(1137, 27);
				if (state.backtracking == 0)
				{
					 retval.result.Reference = (c2!=null?c2.Text:null); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(104); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("objectgroup_macro", 73);
			LeaveRule("objectgroup_macro", 73);
			LeaveRule_objectgroup_macro();
		}
		DebugLocation(1138, 1);
		} finally { DebugExitRule(GrammarFileName, "objectgroup_macro"); }
		return retval;

	}
	// $ANTLR end "objectgroup_macro"

	private sealed partial class notificationgroup_macro_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public NotificationGroupMacro result;
		public notificationgroup_macro_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_notificationgroup_macro();
	partial void LeaveRule_notificationgroup_macro();
	// $ANTLR start "notificationgroup_macro"
	// Smi.g:1141:1: notificationgroup_macro returns [NotificationGroupMacro result] : 'NOTIFICATION-GROUP' 'NOTIFICATIONS' L_BRACE v1= value ( COMMA v2= value )* R_BRACE 'STATUS' s= status 'DESCRIPTION' c1= C_STRING ( 'REFERENCE' c2= C_STRING )? ;
	[GrammarRule("notificationgroup_macro")]
	private SmiParser.notificationgroup_macro_return notificationgroup_macro()
	{
		EnterRule_notificationgroup_macro();
		EnterRule("notificationgroup_macro", 74);
		TraceIn("notificationgroup_macro", 74);
		SmiParser.notificationgroup_macro_return retval = new SmiParser.notificationgroup_macro_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken c1 = default(IToken);
		IToken c2 = default(IToken);
		IToken string_literal265 = default(IToken);
		IToken string_literal266 = default(IToken);
		IToken L_BRACE267 = default(IToken);
		IToken COMMA268 = default(IToken);
		IToken R_BRACE269 = default(IToken);
		IToken string_literal270 = default(IToken);
		IToken string_literal271 = default(IToken);
		IToken string_literal272 = default(IToken);
		SmiParser.value_return v1 = default(SmiParser.value_return);
		SmiParser.value_return v2 = default(SmiParser.value_return);
		SmiParser.status_return s = default(SmiParser.status_return);

		CommonTree c1_tree = default(CommonTree);
		CommonTree c2_tree = default(CommonTree);
		CommonTree string_literal265_tree = default(CommonTree);
		CommonTree string_literal266_tree = default(CommonTree);
		CommonTree L_BRACE267_tree = default(CommonTree);
		CommonTree COMMA268_tree = default(CommonTree);
		CommonTree R_BRACE269_tree = default(CommonTree);
		CommonTree string_literal270_tree = default(CommonTree);
		CommonTree string_literal271_tree = default(CommonTree);
		CommonTree string_literal272_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "notificationgroup_macro");
		DebugLocation(1141, 1);
		try
		{
			// Smi.g:1142:5: ( 'NOTIFICATION-GROUP' 'NOTIFICATIONS' L_BRACE v1= value ( COMMA v2= value )* R_BRACE 'STATUS' s= status 'DESCRIPTION' c1= C_STRING ( 'REFERENCE' c2= C_STRING )? )
			DebugEnterAlt(1);
			// Smi.g:1142:7: 'NOTIFICATION-GROUP' 'NOTIFICATIONS' L_BRACE v1= value ( COMMA v2= value )* R_BRACE 'STATUS' s= status 'DESCRIPTION' c1= C_STRING ( 'REFERENCE' c2= C_STRING )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1142, 7);
			string_literal265=(IToken)Match(input,159,Follow._159_in_notificationgroup_macro6755); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal265_tree = (CommonTree)adaptor.Create(string_literal265);
			adaptor.AddChild(root_0, string_literal265_tree);
			}
			DebugLocation(1142, 28);
			string_literal266=(IToken)Match(input,161,Follow._161_in_notificationgroup_macro6757); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal266_tree = (CommonTree)adaptor.Create(string_literal266);
			adaptor.AddChild(root_0, string_literal266_tree);
			}
			DebugLocation(1142, 44);
			L_BRACE267=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_notificationgroup_macro6759); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE267_tree = (CommonTree)adaptor.Create(L_BRACE267);
			adaptor.AddChild(root_0, L_BRACE267_tree);
			}
			DebugLocation(1142, 54);
			PushFollow(Follow._value_in_notificationgroup_macro6763);
			v1=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, v1.Tree);
			DebugLocation(1142, 61);
			if (state.backtracking == 0)
			{
				 retval.result = new NotificationGroupMacro((v1!=null?v1.result:default(ISmiValue)));
			}
			DebugLocation(1143, 2);
			// Smi.g:1143:2: ( COMMA v2= value )*
			try { DebugEnterSubRule(105);
			while (true)
			{
				int alt105=2;
				try { DebugEnterDecision(105, false);
				int LA105_1 = input.LA(1);

				if ((LA105_1==COMMA))
				{
					alt105 = 1;
				}


				} finally { DebugExitDecision(105); }
				switch ( alt105 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1143:3: COMMA v2= value
					{
					DebugLocation(1143, 3);
					COMMA268=(IToken)Match(input,COMMA,Follow._COMMA_in_notificationgroup_macro6769); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA268_tree = (CommonTree)adaptor.Create(COMMA268);
					adaptor.AddChild(root_0, COMMA268_tree);
					}
					DebugLocation(1143, 11);
					PushFollow(Follow._value_in_notificationgroup_macro6773);
					v2=value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, v2.Tree);
					DebugLocation(1143, 18);
					if (state.backtracking == 0)
					{
						 retval.result.Notifications.Add((v2!=null?v2.result:default(ISmiValue))); 
					}

					}
					break;

				default:
					goto loop105;
				}
			}

			loop105:
				;

			} finally { DebugExitSubRule(105); }

			DebugLocation(1143, 63);
			R_BRACE269=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_notificationgroup_macro6779); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE269_tree = (CommonTree)adaptor.Create(R_BRACE269);
			adaptor.AddChild(root_0, R_BRACE269_tree);
			}
			DebugLocation(1144, 5);
			string_literal270=(IToken)Match(input,183,Follow._183_in_notificationgroup_macro6786); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal270_tree = (CommonTree)adaptor.Create(string_literal270);
			adaptor.AddChild(root_0, string_literal270_tree);
			}
			DebugLocation(1144, 15);
			PushFollow(Follow._status_in_notificationgroup_macro6790);
			s=status();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, s.Tree);
			DebugLocation(1144, 23);
			if (state.backtracking == 0)
			{
				 retval.result.Status = (s!=null?s.result:default(EntityStatus)); 
			}
			DebugLocation(1145, 2);
			string_literal271=(IToken)Match(input,140,Follow._140_in_notificationgroup_macro6795); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal271_tree = (CommonTree)adaptor.Create(string_literal271);
			adaptor.AddChild(root_0, string_literal271_tree);
			}
			DebugLocation(1145, 18);
			c1=(IToken)Match(input,C_STRING,Follow._C_STRING_in_notificationgroup_macro6799); if (state.failed) return retval;
			if (state.backtracking == 0) {
			c1_tree = (CommonTree)adaptor.Create(c1);
			adaptor.AddChild(root_0, c1_tree);
			}
			DebugLocation(1145, 28);
			if (state.backtracking == 0)
			{
				 retval.result.Description = (c1!=null?c1.Text:null); 
			}
			DebugLocation(1146, 2);
			// Smi.g:1146:2: ( 'REFERENCE' c2= C_STRING )?
			int alt106=2;
			try { DebugEnterSubRule(106);
			try { DebugEnterDecision(106, false);
			int LA106_1 = input.LA(1);

			if ((LA106_1==176))
			{
				alt106 = 1;
			}
			} finally { DebugExitDecision(106); }
			switch (alt106)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1146:3: 'REFERENCE' c2= C_STRING
				{
				DebugLocation(1146, 3);
				string_literal272=(IToken)Match(input,176,Follow._176_in_notificationgroup_macro6805); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal272_tree = (CommonTree)adaptor.Create(string_literal272);
				adaptor.AddChild(root_0, string_literal272_tree);
				}
				DebugLocation(1146, 17);
				c2=(IToken)Match(input,C_STRING,Follow._C_STRING_in_notificationgroup_macro6809); if (state.failed) return retval;
				if (state.backtracking == 0) {
				c2_tree = (CommonTree)adaptor.Create(c2);
				adaptor.AddChild(root_0, c2_tree);
				}
				DebugLocation(1146, 27);
				if (state.backtracking == 0)
				{
					 retval.result.Reference = (c2!=null?c2.Text:null); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(106); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("notificationgroup_macro", 74);
			LeaveRule("notificationgroup_macro", 74);
			LeaveRule_notificationgroup_macro();
		}
		DebugLocation(1147, 1);
		} finally { DebugExitRule(GrammarFileName, "notificationgroup_macro"); }
		return retval;

	}
	// $ANTLR end "notificationgroup_macro"

	private sealed partial class modulecompliance_macro_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ModuleComplianceMacro result;
		public modulecompliance_macro_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_modulecompliance_macro();
	partial void LeaveRule_modulecompliance_macro();
	// $ANTLR start "modulecompliance_macro"
	// Smi.g:1150:1: modulecompliance_macro returns [ModuleComplianceMacro result] : 'MODULE-COMPLIANCE' 'STATUS' s= status 'DESCRIPTION' c1= C_STRING ( 'REFERENCE' c2= C_STRING )? (m= modulecompliance_macro_module )+ ;
	[GrammarRule("modulecompliance_macro")]
	private SmiParser.modulecompliance_macro_return modulecompliance_macro()
	{
		EnterRule_modulecompliance_macro();
		EnterRule("modulecompliance_macro", 75);
		TraceIn("modulecompliance_macro", 75);
		SmiParser.modulecompliance_macro_return retval = new SmiParser.modulecompliance_macro_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken c1 = default(IToken);
		IToken c2 = default(IToken);
		IToken string_literal273 = default(IToken);
		IToken string_literal274 = default(IToken);
		IToken string_literal275 = default(IToken);
		IToken string_literal276 = default(IToken);
		SmiParser.status_return s = default(SmiParser.status_return);
		SmiParser.modulecompliance_macro_module_return m = default(SmiParser.modulecompliance_macro_module_return);

		CommonTree c1_tree = default(CommonTree);
		CommonTree c2_tree = default(CommonTree);
		CommonTree string_literal273_tree = default(CommonTree);
		CommonTree string_literal274_tree = default(CommonTree);
		CommonTree string_literal275_tree = default(CommonTree);
		CommonTree string_literal276_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "modulecompliance_macro");
		DebugLocation(1150, 1);
		try
		{
			// Smi.g:1151:5: ( 'MODULE-COMPLIANCE' 'STATUS' s= status 'DESCRIPTION' c1= C_STRING ( 'REFERENCE' c2= C_STRING )? (m= modulecompliance_macro_module )+ )
			DebugEnterAlt(1);
			// Smi.g:1151:7: 'MODULE-COMPLIANCE' 'STATUS' s= status 'DESCRIPTION' c1= C_STRING ( 'REFERENCE' c2= C_STRING )? (m= modulecompliance_macro_module )+
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1151, 7);
			string_literal273=(IToken)Match(input,157,Follow._157_in_modulecompliance_macro6834); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal273_tree = (CommonTree)adaptor.Create(string_literal273);
			adaptor.AddChild(root_0, string_literal273_tree);
			}
			DebugLocation(1151, 27);
			string_literal274=(IToken)Match(input,183,Follow._183_in_modulecompliance_macro6836); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal274_tree = (CommonTree)adaptor.Create(string_literal274);
			adaptor.AddChild(root_0, string_literal274_tree);
			}
			DebugLocation(1151, 37);
			PushFollow(Follow._status_in_modulecompliance_macro6840);
			s=status();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, s.Tree);
			DebugLocation(1152, 5);
			string_literal275=(IToken)Match(input,140,Follow._140_in_modulecompliance_macro6846); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal275_tree = (CommonTree)adaptor.Create(string_literal275);
			adaptor.AddChild(root_0, string_literal275_tree);
			}
			DebugLocation(1152, 21);
			c1=(IToken)Match(input,C_STRING,Follow._C_STRING_in_modulecompliance_macro6850); if (state.failed) return retval;
			if (state.backtracking == 0) {
			c1_tree = (CommonTree)adaptor.Create(c1);
			adaptor.AddChild(root_0, c1_tree);
			}
			DebugLocation(1152, 31);
			if (state.backtracking == 0)
			{
				 retval.result = new ModuleComplianceMacro((s!=null?s.result:default(EntityStatus)), (c1!=null?c1.Text:null)); 
			}
			DebugLocation(1153, 2);
			// Smi.g:1153:2: ( 'REFERENCE' c2= C_STRING )?
			int alt107=2;
			try { DebugEnterSubRule(107);
			try { DebugEnterDecision(107, false);
			int LA107_1 = input.LA(1);

			if ((LA107_1==176))
			{
				alt107 = 1;
			}
			} finally { DebugExitDecision(107); }
			switch (alt107)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1153:3: 'REFERENCE' c2= C_STRING
				{
				DebugLocation(1153, 3);
				string_literal276=(IToken)Match(input,176,Follow._176_in_modulecompliance_macro6856); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal276_tree = (CommonTree)adaptor.Create(string_literal276);
				adaptor.AddChild(root_0, string_literal276_tree);
				}
				DebugLocation(1153, 17);
				c2=(IToken)Match(input,C_STRING,Follow._C_STRING_in_modulecompliance_macro6860); if (state.failed) return retval;
				if (state.backtracking == 0) {
				c2_tree = (CommonTree)adaptor.Create(c2);
				adaptor.AddChild(root_0, c2_tree);
				}
				DebugLocation(1153, 27);
				if (state.backtracking == 0)
				{
					 retval.result.Reference = (c2!=null?c2.Text:null); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(107); }

			DebugLocation(1154, 2);
			// Smi.g:1154:2: (m= modulecompliance_macro_module )+
			int cnt108=0;
			try { DebugEnterSubRule(108);
			while (true)
			{
				int alt108=2;
				try { DebugEnterDecision(108, false);
				int LA108_1 = input.LA(1);

				if ((LA108_1==156))
				{
					alt108 = 1;
				}


				} finally { DebugExitDecision(108); }
				switch (alt108)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1154:3: m= modulecompliance_macro_module
					{
					DebugLocation(1154, 4);
					PushFollow(Follow._modulecompliance_macro_module_in_modulecompliance_macro6871);
					m=modulecompliance_macro_module();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, m.Tree);
					DebugLocation(1154, 35);
					if (state.backtracking == 0)
					{
						 retval.result.Modules.Add((m!=null?m.result:default(ModuleCompliance))); 
					}

					}
					break;

				default:
					if (cnt108 >= 1)
						goto loop108;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee108 = new EarlyExitException( 108, input );
					DebugRecognitionException(eee108);
					throw eee108;
				}
				cnt108++;
			}
			loop108:
				;

			} finally { DebugExitSubRule(108); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("modulecompliance_macro", 75);
			LeaveRule("modulecompliance_macro", 75);
			LeaveRule_modulecompliance_macro();
		}
		DebugLocation(1155, 1);
		} finally { DebugExitRule(GrammarFileName, "modulecompliance_macro"); }
		return retval;

	}
	// $ANTLR end "modulecompliance_macro"

	private sealed partial class status_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public EntityStatus result;
		public status_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_status();
	partial void LeaveRule_status();
	// $ANTLR start "status"
	// Smi.g:1157:1: status returns [EntityStatus result] : l= LOWER ;
	[GrammarRule("status")]
	private SmiParser.status_return status()
	{
		EnterRule_status();
		EnterRule("status", 76);
		TraceIn("status", 76);
		SmiParser.status_return retval = new SmiParser.status_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "status");
		DebugLocation(1157, 4);
		try
		{
			// Smi.g:1158:5: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:1158:7: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1158, 8);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_status6896); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(1158, 15);
			if (state.backtracking == 0)
			{
				if (l.Text == ("current")) retval.result = EntityStatus.Current;
				               else if (l.Text == ("deprecated")) retval.result = EntityStatus.Deprecated;
				               else if (l.Text == ("obsolete")) retval.result = EntityStatus.Obsolete;
				               else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("status", 76);
			LeaveRule("status", 76);
			LeaveRule_status();
		}
		DebugLocation(1162, 4);
		} finally { DebugExitRule(GrammarFileName, "status"); }
		return retval;

	}
	// $ANTLR end "status"

	private sealed partial class modulecompliance_macro_module_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ModuleCompliance result = new ModuleCompliance();
		public modulecompliance_macro_module_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_modulecompliance_macro_module();
	partial void LeaveRule_modulecompliance_macro_module();
	// $ANTLR start "modulecompliance_macro_module"
	// Smi.g:1164:1: modulecompliance_macro_module returns [ModuleCompliance result = new ModuleCompliance()] : 'MODULE' ( ( UPPER )=>name= UPPER ( ( value )=>v1= value )? )? ( 'MANDATORY-GROUPS' L_BRACE v2= value ( COMMA v3= value )* R_BRACE )? (c= modulecompliance_macro_compliance )* ;
	[GrammarRule("modulecompliance_macro_module")]
	private SmiParser.modulecompliance_macro_module_return modulecompliance_macro_module()
	{
		EnterRule_modulecompliance_macro_module();
		EnterRule("modulecompliance_macro_module", 77);
		TraceIn("modulecompliance_macro_module", 77);
		SmiParser.modulecompliance_macro_module_return retval = new SmiParser.modulecompliance_macro_module_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken name = default(IToken);
		IToken string_literal277 = default(IToken);
		IToken string_literal278 = default(IToken);
		IToken L_BRACE279 = default(IToken);
		IToken COMMA280 = default(IToken);
		IToken R_BRACE281 = default(IToken);
		SmiParser.value_return v1 = default(SmiParser.value_return);
		SmiParser.value_return v2 = default(SmiParser.value_return);
		SmiParser.value_return v3 = default(SmiParser.value_return);
		SmiParser.modulecompliance_macro_compliance_return c = default(SmiParser.modulecompliance_macro_compliance_return);

		CommonTree name_tree = default(CommonTree);
		CommonTree string_literal277_tree = default(CommonTree);
		CommonTree string_literal278_tree = default(CommonTree);
		CommonTree L_BRACE279_tree = default(CommonTree);
		CommonTree COMMA280_tree = default(CommonTree);
		CommonTree R_BRACE281_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "modulecompliance_macro_module");
		DebugLocation(1164, 1);
		try
		{
			// Smi.g:1165:5: ( 'MODULE' ( ( UPPER )=>name= UPPER ( ( value )=>v1= value )? )? ( 'MANDATORY-GROUPS' L_BRACE v2= value ( COMMA v3= value )* R_BRACE )? (c= modulecompliance_macro_compliance )* )
			DebugEnterAlt(1);
			// Smi.g:1165:7: 'MODULE' ( ( UPPER )=>name= UPPER ( ( value )=>v1= value )? )? ( 'MANDATORY-GROUPS' L_BRACE v2= value ( COMMA v3= value )* R_BRACE )? (c= modulecompliance_macro_compliance )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1165, 7);
			string_literal277=(IToken)Match(input,156,Follow._156_in_modulecompliance_macro_module6919); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal277_tree = (CommonTree)adaptor.Create(string_literal277);
			adaptor.AddChild(root_0, string_literal277_tree);
			}
			DebugLocation(1165, 16);
			// Smi.g:1165:16: ( ( UPPER )=>name= UPPER ( ( value )=>v1= value )? )?
			int alt110=2;
			try { DebugEnterSubRule(110);
			try { DebugEnterDecision(110, false);
			try
			{
				alt110 = dfa110.Predict(input);
			}
			catch (NoViableAltException nvae)
			{
				DebugRecognitionException(nvae);
				throw;
			}
			} finally { DebugExitDecision(110); }
			switch (alt110)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1165:17: ( UPPER )=>name= UPPER ( ( value )=>v1= value )?
				{
				DebugLocation(1165, 32);
				name=(IToken)Match(input,UPPER,Follow._UPPER_in_modulecompliance_macro_module6930); if (state.failed) return retval;
				if (state.backtracking == 0) {
				name_tree = (CommonTree)adaptor.Create(name);
				adaptor.AddChild(root_0, name_tree);
				}
				DebugLocation(1165, 39);
				if (state.backtracking == 0)
				{
					 retval.result.Name = (name!=null?name.Text:null); 
				}
				DebugLocation(1166, 2);
				// Smi.g:1166:2: ( ( value )=>v1= value )?
				int alt109=2;
				try { DebugEnterSubRule(109);
				try { DebugEnterDecision(109, false);
				try
				{
					alt109 = dfa109.Predict(input);
				}
				catch (NoViableAltException nvae)
				{
					DebugRecognitionException(nvae);
					throw;
				}
				} finally { DebugExitDecision(109); }
				switch (alt109)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1166:3: ( value )=>v1= value
					{
					DebugLocation(1166, 16);
					PushFollow(Follow._value_in_modulecompliance_macro_module6944);
					v1=value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, v1.Tree);
					DebugLocation(1166, 23);
					if (state.backtracking == 0)
					{
						 retval.result.Value = (v1!=null?v1.result:default(ISmiValue)); 
					}

					}
					break;

				}
				} finally { DebugExitSubRule(109); }


				}
				break;

			}
			} finally { DebugExitSubRule(110); }

			DebugLocation(1167, 5);
			// Smi.g:1167:5: ( 'MANDATORY-GROUPS' L_BRACE v2= value ( COMMA v3= value )* R_BRACE )?
			int alt112=2;
			try { DebugEnterSubRule(112);
			try { DebugEnterDecision(112, false);
			int LA112_1 = input.LA(1);

			if ((LA112_1==153))
			{
				alt112 = 1;
			}
			} finally { DebugExitDecision(112); }
			switch (alt112)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1167:6: 'MANDATORY-GROUPS' L_BRACE v2= value ( COMMA v3= value )* R_BRACE
				{
				DebugLocation(1167, 6);
				string_literal278=(IToken)Match(input,153,Follow._153_in_modulecompliance_macro_module6959); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal278_tree = (CommonTree)adaptor.Create(string_literal278);
				adaptor.AddChild(root_0, string_literal278_tree);
				}
				DebugLocation(1167, 25);
				L_BRACE279=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_modulecompliance_macro_module6961); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE279_tree = (CommonTree)adaptor.Create(L_BRACE279);
				adaptor.AddChild(root_0, L_BRACE279_tree);
				}
				DebugLocation(1167, 35);
				PushFollow(Follow._value_in_modulecompliance_macro_module6965);
				v2=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v2.Tree);
				DebugLocation(1167, 42);
				if (state.backtracking == 0)
				{
					 retval.result.MandatoryGroups.Add((v2!=null?v2.result:default(ISmiValue))); 
				}
				DebugLocation(1168, 2);
				// Smi.g:1168:2: ( COMMA v3= value )*
				try { DebugEnterSubRule(111);
				while (true)
				{
					int alt111=2;
					try { DebugEnterDecision(111, false);
					int LA111_1 = input.LA(1);

					if ((LA111_1==COMMA))
					{
						alt111 = 1;
					}


					} finally { DebugExitDecision(111); }
					switch ( alt111 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:1168:3: COMMA v3= value
						{
						DebugLocation(1168, 3);
						COMMA280=(IToken)Match(input,COMMA,Follow._COMMA_in_modulecompliance_macro_module6971); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA280_tree = (CommonTree)adaptor.Create(COMMA280);
						adaptor.AddChild(root_0, COMMA280_tree);
						}
						DebugLocation(1168, 11);
						PushFollow(Follow._value_in_modulecompliance_macro_module6975);
						v3=value();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, v3.Tree);
						DebugLocation(1168, 18);
						if (state.backtracking == 0)
						{
							 retval.result.MandarotyGroups.Add((v3!=null?v3.result:default(ISmiValue))); 
						}

						}
						break;

					default:
						goto loop111;
					}
				}

				loop111:
					;

				} finally { DebugExitSubRule(111); }

				DebugLocation(1168, 65);
				R_BRACE281=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_modulecompliance_macro_module6981); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE281_tree = (CommonTree)adaptor.Create(R_BRACE281);
				adaptor.AddChild(root_0, R_BRACE281_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(112); }

			DebugLocation(1169, 5);
			// Smi.g:1169:5: (c= modulecompliance_macro_compliance )*
			try { DebugEnterSubRule(113);
			while (true)
			{
				int alt113=2;
				try { DebugEnterDecision(113, false);
				int LA113_1 = input.LA(1);

				if ((LA113_1==OBJECT_KW))
				{
					int LA113_2 = input.LA(2);

					if ((LA113_2==B_STRING||LA113_2==C_STRING||LA113_2==ERROR_KW||LA113_2==FALSE_KW||LA113_2==H_STRING||(LA113_2>=LOWER && LA113_2<=L_BRACE)||(LA113_2>=MINUS && LA113_2<=MINUS_INFINITY_KW)||(LA113_2>=NULL_KW && LA113_2<=NUMBER)||LA113_2==OBJECT_KW||LA113_2==OPERATION_KW||LA113_2==PLUS_INFINITY_KW||LA113_2==TRUE_KW||LA113_2==UPPER||(LA113_2>=125 && LA113_2<=128)||(LA113_2>=130 && LA113_2<=133)||LA113_2==135||LA113_2==142||(LA113_2>=145 && LA113_2<=147)||(LA113_2>=157 && LA113_2<=160)||(LA113_2>=162 && LA113_2<=164)||LA113_2==173||LA113_2==175||LA113_2==177||(LA113_2>=180 && LA113_2<=182)||(LA113_2>=187 && LA113_2<=191)))
					{
						alt113 = 1;
					}


				}
				else if ((LA113_1==148))
				{
					alt113 = 1;
				}


				} finally { DebugExitDecision(113); }
				switch ( alt113 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1169:6: c= modulecompliance_macro_compliance
					{
					DebugLocation(1169, 7);
					PushFollow(Follow._modulecompliance_macro_compliance_in_modulecompliance_macro_module6992);
					c=modulecompliance_macro_compliance();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, c.Tree);
					DebugLocation(1169, 42);
					if (state.backtracking == 0)
					{
						 retval.result.Compliances.Add((c!=null?c.result:default(Compliance))); 
					}

					}
					break;

				default:
					goto loop113;
				}
			}

			loop113:
				;

			} finally { DebugExitSubRule(113); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("modulecompliance_macro_module", 77);
			LeaveRule("modulecompliance_macro_module", 77);
			LeaveRule_modulecompliance_macro_module();
		}
		DebugLocation(1170, 1);
		} finally { DebugExitRule(GrammarFileName, "modulecompliance_macro_module"); }
		return retval;

	}
	// $ANTLR end "modulecompliance_macro_module"

	private sealed partial class modulecompliance_macro_compliance_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public Compliance result;
		public modulecompliance_macro_compliance_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_modulecompliance_macro_compliance();
	partial void LeaveRule_modulecompliance_macro_compliance();
	// $ANTLR start "modulecompliance_macro_compliance"
	// Smi.g:1172:1: modulecompliance_macro_compliance returns [Compliance result] : ( 'GROUP' v1= value 'DESCRIPTION' c1= C_STRING | 'OBJECT' v2= value ( 'SYNTAX' s= syntax )? ( 'WRITE-SYNTAX' s2= syntax )? ( 'MIN-ACCESS' a= modulecompliance_macro_access )? ( 'PIB-MIN-ACCESS' a2= modulecompliance_macro_pibaccess )? 'DESCRIPTION' c2= C_STRING );
	[GrammarRule("modulecompliance_macro_compliance")]
	private SmiParser.modulecompliance_macro_compliance_return modulecompliance_macro_compliance()
	{
		EnterRule_modulecompliance_macro_compliance();
		EnterRule("modulecompliance_macro_compliance", 78);
		TraceIn("modulecompliance_macro_compliance", 78);
		SmiParser.modulecompliance_macro_compliance_return retval = new SmiParser.modulecompliance_macro_compliance_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken c1 = default(IToken);
		IToken c2 = default(IToken);
		IToken string_literal282 = default(IToken);
		IToken string_literal283 = default(IToken);
		IToken string_literal284 = default(IToken);
		IToken string_literal285 = default(IToken);
		IToken string_literal286 = default(IToken);
		IToken string_literal287 = default(IToken);
		IToken string_literal288 = default(IToken);
		IToken string_literal289 = default(IToken);
		SmiParser.value_return v1 = default(SmiParser.value_return);
		SmiParser.value_return v2 = default(SmiParser.value_return);
		SmiParser.syntax_return s = default(SmiParser.syntax_return);
		SmiParser.syntax_return s2 = default(SmiParser.syntax_return);
		SmiParser.modulecompliance_macro_access_return a = default(SmiParser.modulecompliance_macro_access_return);
		SmiParser.modulecompliance_macro_pibaccess_return a2 = default(SmiParser.modulecompliance_macro_pibaccess_return);

		CommonTree c1_tree = default(CommonTree);
		CommonTree c2_tree = default(CommonTree);
		CommonTree string_literal282_tree = default(CommonTree);
		CommonTree string_literal283_tree = default(CommonTree);
		CommonTree string_literal284_tree = default(CommonTree);
		CommonTree string_literal285_tree = default(CommonTree);
		CommonTree string_literal286_tree = default(CommonTree);
		CommonTree string_literal287_tree = default(CommonTree);
		CommonTree string_literal288_tree = default(CommonTree);
		CommonTree string_literal289_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "modulecompliance_macro_compliance");
		DebugLocation(1172, 1);
		try
		{
			// Smi.g:1173:5: ( 'GROUP' v1= value 'DESCRIPTION' c1= C_STRING | 'OBJECT' v2= value ( 'SYNTAX' s= syntax )? ( 'WRITE-SYNTAX' s2= syntax )? ( 'MIN-ACCESS' a= modulecompliance_macro_access )? ( 'PIB-MIN-ACCESS' a2= modulecompliance_macro_pibaccess )? 'DESCRIPTION' c2= C_STRING )
			int alt118=2;
			try { DebugEnterDecision(118, false);
			int LA118_1 = input.LA(1);

			if ((LA118_1==148))
			{
				alt118 = 1;
			}
			else if ((LA118_1==OBJECT_KW))
			{
				alt118 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 118, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(118); }
			switch (alt118)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1173:7: 'GROUP' v1= value 'DESCRIPTION' c1= C_STRING
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1173, 7);
				string_literal282=(IToken)Match(input,148,Follow._148_in_modulecompliance_macro_compliance7015); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal282_tree = (CommonTree)adaptor.Create(string_literal282);
				adaptor.AddChild(root_0, string_literal282_tree);
				}
				DebugLocation(1173, 17);
				PushFollow(Follow._value_in_modulecompliance_macro_compliance7019);
				v1=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v1.Tree);
				DebugLocation(1173, 24);
				string_literal283=(IToken)Match(input,140,Follow._140_in_modulecompliance_macro_compliance7021); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal283_tree = (CommonTree)adaptor.Create(string_literal283);
				adaptor.AddChild(root_0, string_literal283_tree);
				}
				DebugLocation(1173, 40);
				c1=(IToken)Match(input,C_STRING,Follow._C_STRING_in_modulecompliance_macro_compliance7025); if (state.failed) return retval;
				if (state.backtracking == 0) {
				c1_tree = (CommonTree)adaptor.Create(c1);
				adaptor.AddChild(root_0, c1_tree);
				}
				DebugLocation(1173, 50);
				if (state.backtracking == 0)
				{
					 retval.result = new GroupCompliance((v1!=null?v1.result:default(ISmiValue)), (c1!=null?c1.Text:null)); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1174:7: 'OBJECT' v2= value ( 'SYNTAX' s= syntax )? ( 'WRITE-SYNTAX' s2= syntax )? ( 'MIN-ACCESS' a= modulecompliance_macro_access )? ( 'PIB-MIN-ACCESS' a2= modulecompliance_macro_pibaccess )? 'DESCRIPTION' c2= C_STRING
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1174, 7);
				string_literal284=(IToken)Match(input,OBJECT_KW,Follow._OBJECT_KW_in_modulecompliance_macro_compliance7035); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal284_tree = (CommonTree)adaptor.Create(string_literal284);
				adaptor.AddChild(root_0, string_literal284_tree);
				}
				DebugLocation(1174, 18);
				PushFollow(Follow._value_in_modulecompliance_macro_compliance7039);
				v2=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v2.Tree);
				DebugLocation(1174, 25);
				if (state.backtracking == 0)
				{
					 retval.result = new ObjectCompliance((v2!=null?v2.result:default(ISmiValue))); 
				}
				DebugLocation(1175, 5);
				// Smi.g:1175:5: ( 'SYNTAX' s= syntax )?
				int alt114=2;
				try { DebugEnterSubRule(114);
				try { DebugEnterDecision(114, false);
				int LA114_1 = input.LA(1);

				if ((LA114_1==186))
				{
					alt114 = 1;
				}
				} finally { DebugExitDecision(114); }
				switch (alt114)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1175:6: 'SYNTAX' s= syntax
					{
					DebugLocation(1175, 6);
					string_literal285=(IToken)Match(input,186,Follow._186_in_modulecompliance_macro_compliance7049); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal285_tree = (CommonTree)adaptor.Create(string_literal285);
					adaptor.AddChild(root_0, string_literal285_tree);
					}
					DebugLocation(1175, 16);
					PushFollow(Follow._syntax_in_modulecompliance_macro_compliance7053);
					s=syntax();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, s.Tree);
					DebugLocation(1175, 24);
					if (state.backtracking == 0)
					{
						 retval.result.Syntax = (s!=null?s.result:default(Syntax)); 
					}

					}
					break;

				}
				} finally { DebugExitSubRule(114); }

				DebugLocation(1176, 5);
				// Smi.g:1176:5: ( 'WRITE-SYNTAX' s2= syntax )?
				int alt115=2;
				try { DebugEnterSubRule(115);
				try { DebugEnterDecision(115, false);
				int LA115_1 = input.LA(1);

				if ((LA115_1==196))
				{
					alt115 = 1;
				}
				} finally { DebugExitDecision(115); }
				switch (alt115)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1176:6: 'WRITE-SYNTAX' s2= syntax
					{
					DebugLocation(1176, 6);
					string_literal286=(IToken)Match(input,196,Follow._196_in_modulecompliance_macro_compliance7064); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal286_tree = (CommonTree)adaptor.Create(string_literal286);
					adaptor.AddChild(root_0, string_literal286_tree);
					}
					DebugLocation(1176, 23);
					PushFollow(Follow._syntax_in_modulecompliance_macro_compliance7068);
					s2=syntax();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, s2.Tree);
					DebugLocation(1176, 31);
					if (state.backtracking == 0)
					{
						 retval.result.WriteSyntax = (s2!=null?s2.result:default(Syntax)); 
					}

					}
					break;

				}
				} finally { DebugExitSubRule(115); }

				DebugLocation(1177, 5);
				// Smi.g:1177:5: ( 'MIN-ACCESS' a= modulecompliance_macro_access )?
				int alt116=2;
				try { DebugEnterSubRule(116);
				try { DebugEnterDecision(116, false);
				int LA116_1 = input.LA(1);

				if ((LA116_1==155))
				{
					alt116 = 1;
				}
				} finally { DebugExitDecision(116); }
				switch (alt116)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1177:6: 'MIN-ACCESS' a= modulecompliance_macro_access
					{
					DebugLocation(1177, 6);
					string_literal287=(IToken)Match(input,155,Follow._155_in_modulecompliance_macro_compliance7085); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal287_tree = (CommonTree)adaptor.Create(string_literal287);
					adaptor.AddChild(root_0, string_literal287_tree);
					}
					DebugLocation(1177, 20);
					PushFollow(Follow._modulecompliance_macro_access_in_modulecompliance_macro_compliance7089);
					a=modulecompliance_macro_access();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, a.Tree);
					DebugLocation(1177, 51);
					if (state.backtracking == 0)
					{
						 retval.result.MinAccess = (a!=null?a.result:default(Access)); 
					}

					}
					break;

				}
				} finally { DebugExitSubRule(116); }

				DebugLocation(1178, 5);
				// Smi.g:1178:5: ( 'PIB-MIN-ACCESS' a2= modulecompliance_macro_pibaccess )?
				int alt117=2;
				try { DebugEnterSubRule(117);
				try { DebugEnterDecision(117, false);
				int LA117_1 = input.LA(1);

				if ((LA117_1==170))
				{
					alt117 = 1;
				}
				} finally { DebugExitDecision(117); }
				switch (alt117)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1178:6: 'PIB-MIN-ACCESS' a2= modulecompliance_macro_pibaccess
					{
					DebugLocation(1178, 6);
					string_literal288=(IToken)Match(input,170,Follow._170_in_modulecompliance_macro_compliance7101); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal288_tree = (CommonTree)adaptor.Create(string_literal288);
					adaptor.AddChild(root_0, string_literal288_tree);
					}
					DebugLocation(1178, 25);
					PushFollow(Follow._modulecompliance_macro_pibaccess_in_modulecompliance_macro_compliance7105);
					a2=modulecompliance_macro_pibaccess();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, a2.Tree);
					DebugLocation(1178, 59);
					if (state.backtracking == 0)
					{
						 retval.result.PibMinAccess = (a2!=null?a2.result:default(PibAccess)); 
					}

					}
					break;

				}
				} finally { DebugExitSubRule(117); }

				DebugLocation(1179, 5);
				string_literal289=(IToken)Match(input,140,Follow._140_in_modulecompliance_macro_compliance7120); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal289_tree = (CommonTree)adaptor.Create(string_literal289);
				adaptor.AddChild(root_0, string_literal289_tree);
				}
				DebugLocation(1179, 21);
				c2=(IToken)Match(input,C_STRING,Follow._C_STRING_in_modulecompliance_macro_compliance7124); if (state.failed) return retval;
				if (state.backtracking == 0) {
				c2_tree = (CommonTree)adaptor.Create(c2);
				adaptor.AddChild(root_0, c2_tree);
				}
				DebugLocation(1179, 31);
				if (state.backtracking == 0)
				{
					 retval.result.Description = (c2!=null?c2.Text:null); 
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("modulecompliance_macro_compliance", 78);
			LeaveRule("modulecompliance_macro_compliance", 78);
			LeaveRule_modulecompliance_macro_compliance();
		}
		DebugLocation(1180, 1);
		} finally { DebugExitRule(GrammarFileName, "modulecompliance_macro_compliance"); }
		return retval;

	}
	// $ANTLR end "modulecompliance_macro_compliance"

	private sealed partial class modulecompliance_macro_access_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public Access result;
		public modulecompliance_macro_access_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_modulecompliance_macro_access();
	partial void LeaveRule_modulecompliance_macro_access();
	// $ANTLR start "modulecompliance_macro_access"
	// Smi.g:1182:1: modulecompliance_macro_access returns [Access result] : l= LOWER ;
	[GrammarRule("modulecompliance_macro_access")]
	private SmiParser.modulecompliance_macro_access_return modulecompliance_macro_access()
	{
		EnterRule_modulecompliance_macro_access();
		EnterRule("modulecompliance_macro_access", 79);
		TraceIn("modulecompliance_macro_access", 79);
		SmiParser.modulecompliance_macro_access_return retval = new SmiParser.modulecompliance_macro_access_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "modulecompliance_macro_access");
		DebugLocation(1182, 4);
		try
		{
			// Smi.g:1183:5: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:1183:7: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1183, 8);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_modulecompliance_macro_access7146); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(1183, 15);
			if (state.backtracking == 0)
			{
				if (l.Text == ("not-accessible")) retval.result = Access.NotAccessible;
				               else if (l.Text == ("accessible-for-notify")) retval.result = Access.AccessibleForNotify;
				               else if (l.Text == ("read-only")) retval.result = Access.ReadOnly; 
				               else if (l.Text == ("read-write")) retval.result = Access.ReadWrite;
				               else if (l.Text == ("read-create")) retval.result = Access.ReadCreate;
				               else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("modulecompliance_macro_access", 79);
			LeaveRule("modulecompliance_macro_access", 79);
			LeaveRule_modulecompliance_macro_access();
		}
		DebugLocation(1189, 4);
		} finally { DebugExitRule(GrammarFileName, "modulecompliance_macro_access"); }
		return retval;

	}
	// $ANTLR end "modulecompliance_macro_access"

	private sealed partial class modulecompliance_macro_pibaccess_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public PibAccess result;
		public modulecompliance_macro_pibaccess_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_modulecompliance_macro_pibaccess();
	partial void LeaveRule_modulecompliance_macro_pibaccess();
	// $ANTLR start "modulecompliance_macro_pibaccess"
	// Smi.g:1191:1: modulecompliance_macro_pibaccess returns [PibAccess result] : l= LOWER ;
	[GrammarRule("modulecompliance_macro_pibaccess")]
	private SmiParser.modulecompliance_macro_pibaccess_return modulecompliance_macro_pibaccess()
	{
		EnterRule_modulecompliance_macro_pibaccess();
		EnterRule("modulecompliance_macro_pibaccess", 80);
		TraceIn("modulecompliance_macro_pibaccess", 80);
		SmiParser.modulecompliance_macro_pibaccess_return retval = new SmiParser.modulecompliance_macro_pibaccess_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "modulecompliance_macro_pibaccess");
		DebugLocation(1191, 1);
		try
		{
			// Smi.g:1192:5: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:1192:7: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1192, 8);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_modulecompliance_macro_pibaccess7171); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(1192, 15);
			if (state.backtracking == 0)
			{
				if (l.Text == ("not-accessible")) retval.result = PibAccess.NotAccessible;
				               else if (l.Text == ("install")) retval.result = PibAccess.Install;
				               else if (l.Text == ("notify")) retval.result = PibAccess.Notify;
				               else if (l.Text == ("install-notify")) retval.result = PibAccess.InstallNotify;
				               else if (l.Text == ("report-only")) retval.result = PibAccess.ReportOnly;
				               else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("modulecompliance_macro_pibaccess", 80);
			LeaveRule("modulecompliance_macro_pibaccess", 80);
			LeaveRule_modulecompliance_macro_pibaccess();
		}
		DebugLocation(1198, 1);
		} finally { DebugExitRule(GrammarFileName, "modulecompliance_macro_pibaccess"); }
		return retval;

	}
	// $ANTLR end "modulecompliance_macro_pibaccess"

	private sealed partial class agentcapabilities_macro_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public AgentCapabilitiesMacro result;
		public agentcapabilities_macro_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_agentcapabilities_macro();
	partial void LeaveRule_agentcapabilities_macro();
	// $ANTLR start "agentcapabilities_macro"
	// Smi.g:1201:1: agentcapabilities_macro returns [AgentCapabilitiesMacro result] : 'AGENT-CAPABILITIES' 'PRODUCT-RELEASE' c1= C_STRING 'STATUS' s= agentcapabilities_macro_status 'DESCRIPTION' c2= C_STRING ( 'REFERENCE' c3= C_STRING )? (m= agentcapabilities_macro_module )* ;
	[GrammarRule("agentcapabilities_macro")]
	private SmiParser.agentcapabilities_macro_return agentcapabilities_macro()
	{
		EnterRule_agentcapabilities_macro();
		EnterRule("agentcapabilities_macro", 81);
		TraceIn("agentcapabilities_macro", 81);
		SmiParser.agentcapabilities_macro_return retval = new SmiParser.agentcapabilities_macro_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken c1 = default(IToken);
		IToken c2 = default(IToken);
		IToken c3 = default(IToken);
		IToken string_literal290 = default(IToken);
		IToken string_literal291 = default(IToken);
		IToken string_literal292 = default(IToken);
		IToken string_literal293 = default(IToken);
		IToken string_literal294 = default(IToken);
		SmiParser.agentcapabilities_macro_status_return s = default(SmiParser.agentcapabilities_macro_status_return);
		SmiParser.agentcapabilities_macro_module_return m = default(SmiParser.agentcapabilities_macro_module_return);

		CommonTree c1_tree = default(CommonTree);
		CommonTree c2_tree = default(CommonTree);
		CommonTree c3_tree = default(CommonTree);
		CommonTree string_literal290_tree = default(CommonTree);
		CommonTree string_literal291_tree = default(CommonTree);
		CommonTree string_literal292_tree = default(CommonTree);
		CommonTree string_literal293_tree = default(CommonTree);
		CommonTree string_literal294_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "agentcapabilities_macro");
		DebugLocation(1201, 1);
		try
		{
			// Smi.g:1202:5: ( 'AGENT-CAPABILITIES' 'PRODUCT-RELEASE' c1= C_STRING 'STATUS' s= agentcapabilities_macro_status 'DESCRIPTION' c2= C_STRING ( 'REFERENCE' c3= C_STRING )? (m= agentcapabilities_macro_module )* )
			DebugEnterAlt(1);
			// Smi.g:1202:7: 'AGENT-CAPABILITIES' 'PRODUCT-RELEASE' c1= C_STRING 'STATUS' s= agentcapabilities_macro_status 'DESCRIPTION' c2= C_STRING ( 'REFERENCE' c3= C_STRING )? (m= agentcapabilities_macro_module )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1202, 7);
			string_literal290=(IToken)Match(input,130,Follow._130_in_agentcapabilities_macro7193); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal290_tree = (CommonTree)adaptor.Create(string_literal290);
			adaptor.AddChild(root_0, string_literal290_tree);
			}
			DebugLocation(1202, 28);
			string_literal291=(IToken)Match(input,174,Follow._174_in_agentcapabilities_macro7195); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal291_tree = (CommonTree)adaptor.Create(string_literal291);
			adaptor.AddChild(root_0, string_literal291_tree);
			}
			DebugLocation(1202, 48);
			c1=(IToken)Match(input,C_STRING,Follow._C_STRING_in_agentcapabilities_macro7199); if (state.failed) return retval;
			if (state.backtracking == 0) {
			c1_tree = (CommonTree)adaptor.Create(c1);
			adaptor.AddChild(root_0, c1_tree);
			}
			DebugLocation(1202, 58);
			if (state.backtracking == 0)
			{
				 retval.result = new AgentCapabilitiesMacro((c1!=null?c1.Text:null)); 
			}
			DebugLocation(1203, 2);
			string_literal292=(IToken)Match(input,183,Follow._183_in_agentcapabilities_macro7204); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal292_tree = (CommonTree)adaptor.Create(string_literal292);
			adaptor.AddChild(root_0, string_literal292_tree);
			}
			DebugLocation(1203, 12);
			PushFollow(Follow._agentcapabilities_macro_status_in_agentcapabilities_macro7208);
			s=agentcapabilities_macro_status();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, s.Tree);
			DebugLocation(1203, 44);
			if (state.backtracking == 0)
			{
				 retval.result.Status = (s!=null?s.result:default(EntityStatus)); 
			}
			DebugLocation(1204, 2);
			string_literal293=(IToken)Match(input,140,Follow._140_in_agentcapabilities_macro7213); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal293_tree = (CommonTree)adaptor.Create(string_literal293);
			adaptor.AddChild(root_0, string_literal293_tree);
			}
			DebugLocation(1204, 18);
			c2=(IToken)Match(input,C_STRING,Follow._C_STRING_in_agentcapabilities_macro7217); if (state.failed) return retval;
			if (state.backtracking == 0) {
			c2_tree = (CommonTree)adaptor.Create(c2);
			adaptor.AddChild(root_0, c2_tree);
			}
			DebugLocation(1204, 28);
			if (state.backtracking == 0)
			{
				 retval.result.Description = (c2!=null?c2.Text:null); 
			}
			DebugLocation(1205, 2);
			// Smi.g:1205:2: ( 'REFERENCE' c3= C_STRING )?
			int alt119=2;
			try { DebugEnterSubRule(119);
			try { DebugEnterDecision(119, false);
			int LA119_1 = input.LA(1);

			if ((LA119_1==176))
			{
				alt119 = 1;
			}
			} finally { DebugExitDecision(119); }
			switch (alt119)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1205:3: 'REFERENCE' c3= C_STRING
				{
				DebugLocation(1205, 3);
				string_literal294=(IToken)Match(input,176,Follow._176_in_agentcapabilities_macro7223); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal294_tree = (CommonTree)adaptor.Create(string_literal294);
				adaptor.AddChild(root_0, string_literal294_tree);
				}
				DebugLocation(1205, 17);
				c3=(IToken)Match(input,C_STRING,Follow._C_STRING_in_agentcapabilities_macro7227); if (state.failed) return retval;
				if (state.backtracking == 0) {
				c3_tree = (CommonTree)adaptor.Create(c3);
				adaptor.AddChild(root_0, c3_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(119); }

			DebugLocation(1205, 29);
			if (state.backtracking == 0)
			{
				 retval.result.Reference = (c3!=null?c3.Text:null); 
			}
			DebugLocation(1206, 2);
			// Smi.g:1206:2: (m= agentcapabilities_macro_module )*
			try { DebugEnterSubRule(120);
			while (true)
			{
				int alt120=2;
				try { DebugEnterDecision(120, false);
				int LA120_1 = input.LA(1);

				if ((LA120_1==185))
				{
					alt120 = 1;
				}


				} finally { DebugExitDecision(120); }
				switch ( alt120 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1206:3: m= agentcapabilities_macro_module
					{
					DebugLocation(1206, 4);
					PushFollow(Follow._agentcapabilities_macro_module_in_agentcapabilities_macro7237);
					m=agentcapabilities_macro_module();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, m.Tree);
					DebugLocation(1206, 36);
					if (state.backtracking == 0)
					{
						 retval.result.Modules.Add((m!=null?m.result:default(AgentCapabilitiesModule))); 
					}

					}
					break;

				default:
					goto loop120;
				}
			}

			loop120:
				;

			} finally { DebugExitSubRule(120); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("agentcapabilities_macro", 81);
			LeaveRule("agentcapabilities_macro", 81);
			LeaveRule_agentcapabilities_macro();
		}
		DebugLocation(1207, 1);
		} finally { DebugExitRule(GrammarFileName, "agentcapabilities_macro"); }
		return retval;

	}
	// $ANTLR end "agentcapabilities_macro"

	private sealed partial class agentcapabilities_macro_status_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public EntityStatus result;
		public agentcapabilities_macro_status_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_agentcapabilities_macro_status();
	partial void LeaveRule_agentcapabilities_macro_status();
	// $ANTLR start "agentcapabilities_macro_status"
	// Smi.g:1209:1: agentcapabilities_macro_status returns [EntityStatus result] : l= LOWER ;
	[GrammarRule("agentcapabilities_macro_status")]
	private SmiParser.agentcapabilities_macro_status_return agentcapabilities_macro_status()
	{
		EnterRule_agentcapabilities_macro_status();
		EnterRule("agentcapabilities_macro_status", 82);
		TraceIn("agentcapabilities_macro_status", 82);
		SmiParser.agentcapabilities_macro_status_return retval = new SmiParser.agentcapabilities_macro_status_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "agentcapabilities_macro_status");
		DebugLocation(1209, 64);
		try
		{
			// Smi.g:1210:5: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:1210:7: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1210, 8);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_agentcapabilities_macro_status7261); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(1210, 15);
			if (state.backtracking == 0)
			{
				if (l.Text == ("current")) retval.result = EntityStatus.Current;
				               else if (l.Text == ("obsolete")) retval.result =EntityStatus.Obsolete; 
				               else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("agentcapabilities_macro_status", 82);
			LeaveRule("agentcapabilities_macro_status", 82);
			LeaveRule_agentcapabilities_macro_status();
		}
		DebugLocation(1212, 64);
		} finally { DebugExitRule(GrammarFileName, "agentcapabilities_macro_status"); }
		return retval;

	}
	// $ANTLR end "agentcapabilities_macro_status"

	private sealed partial class agentcapabilities_macro_module_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public AgentCapabilitiesModule result;
		public agentcapabilities_macro_module_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_agentcapabilities_macro_module();
	partial void LeaveRule_agentcapabilities_macro_module();
	// $ANTLR start "agentcapabilities_macro_module"
	// Smi.g:1214:1: agentcapabilities_macro_module returns [AgentCapabilitiesModule result] : 'SUPPORTS' name= LOWER (v1= value )? 'INCLUDES' L_BRACE v2= value ( COMMA v3= value )* R_BRACE (va= agentcapabilities_macro_variation )* ;
	[GrammarRule("agentcapabilities_macro_module")]
	private SmiParser.agentcapabilities_macro_module_return agentcapabilities_macro_module()
	{
		EnterRule_agentcapabilities_macro_module();
		EnterRule("agentcapabilities_macro_module", 83);
		TraceIn("agentcapabilities_macro_module", 83);
		SmiParser.agentcapabilities_macro_module_return retval = new SmiParser.agentcapabilities_macro_module_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken name = default(IToken);
		IToken string_literal295 = default(IToken);
		IToken string_literal296 = default(IToken);
		IToken L_BRACE297 = default(IToken);
		IToken COMMA298 = default(IToken);
		IToken R_BRACE299 = default(IToken);
		SmiParser.value_return v1 = default(SmiParser.value_return);
		SmiParser.value_return v2 = default(SmiParser.value_return);
		SmiParser.value_return v3 = default(SmiParser.value_return);
		SmiParser.agentcapabilities_macro_variation_return va = default(SmiParser.agentcapabilities_macro_variation_return);

		CommonTree name_tree = default(CommonTree);
		CommonTree string_literal295_tree = default(CommonTree);
		CommonTree string_literal296_tree = default(CommonTree);
		CommonTree L_BRACE297_tree = default(CommonTree);
		CommonTree COMMA298_tree = default(CommonTree);
		CommonTree R_BRACE299_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "agentcapabilities_macro_module");
		DebugLocation(1214, 1);
		try
		{
			// Smi.g:1215:5: ( 'SUPPORTS' name= LOWER (v1= value )? 'INCLUDES' L_BRACE v2= value ( COMMA v3= value )* R_BRACE (va= agentcapabilities_macro_variation )* )
			DebugEnterAlt(1);
			// Smi.g:1215:7: 'SUPPORTS' name= LOWER (v1= value )? 'INCLUDES' L_BRACE v2= value ( COMMA v3= value )* R_BRACE (va= agentcapabilities_macro_variation )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1215, 7);
			string_literal295=(IToken)Match(input,185,Follow._185_in_agentcapabilities_macro_module7279); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal295_tree = (CommonTree)adaptor.Create(string_literal295);
			adaptor.AddChild(root_0, string_literal295_tree);
			}
			DebugLocation(1215, 22);
			name=(IToken)Match(input,LOWER,Follow._LOWER_in_agentcapabilities_macro_module7283); if (state.failed) return retval;
			if (state.backtracking == 0) {
			name_tree = (CommonTree)adaptor.Create(name);
			adaptor.AddChild(root_0, name_tree);
			}
			DebugLocation(1215, 29);
			if (state.backtracking == 0)
			{
				 retval.result = new AgentCapabilitiesModule((name!=null?name.Text:null)); 
			}
			DebugLocation(1216, 2);
			// Smi.g:1216:2: (v1= value )?
			int alt121=2;
			try { DebugEnterSubRule(121);
			try { DebugEnterDecision(121, false);
			int LA121_1 = input.LA(1);

			if ((LA121_1==B_STRING||LA121_1==C_STRING||LA121_1==ERROR_KW||LA121_1==FALSE_KW||LA121_1==H_STRING||(LA121_1>=LOWER && LA121_1<=L_BRACE)||(LA121_1>=MINUS && LA121_1<=MINUS_INFINITY_KW)||(LA121_1>=NULL_KW && LA121_1<=NUMBER)||LA121_1==OBJECT_KW||LA121_1==OPERATION_KW||LA121_1==PLUS_INFINITY_KW||LA121_1==TRUE_KW||LA121_1==UPPER||(LA121_1>=125 && LA121_1<=128)||(LA121_1>=130 && LA121_1<=133)||LA121_1==135||LA121_1==142||(LA121_1>=145 && LA121_1<=147)||(LA121_1>=157 && LA121_1<=160)||(LA121_1>=162 && LA121_1<=164)||LA121_1==173||LA121_1==175||LA121_1==177||(LA121_1>=180 && LA121_1<=182)||(LA121_1>=187 && LA121_1<=191)))
			{
				alt121 = 1;
			}
			} finally { DebugExitDecision(121); }
			switch (alt121)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1216:3: v1= value
				{
				DebugLocation(1216, 5);
				PushFollow(Follow._value_in_agentcapabilities_macro_module7291);
				v1=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v1.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(121); }

			DebugLocation(1216, 14);
			if (state.backtracking == 0)
			{
				 retval.result.Value = (v1!=null?v1.result:default(ISmiValue)); 
			}
			DebugLocation(1217, 5);
			string_literal296=(IToken)Match(input,INCLUDES_KW,Follow._INCLUDES_KW_in_agentcapabilities_macro_module7301); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal296_tree = (CommonTree)adaptor.Create(string_literal296);
			adaptor.AddChild(root_0, string_literal296_tree);
			}
			DebugLocation(1217, 16);
			L_BRACE297=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_agentcapabilities_macro_module7303); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE297_tree = (CommonTree)adaptor.Create(L_BRACE297);
			adaptor.AddChild(root_0, L_BRACE297_tree);
			}
			DebugLocation(1217, 26);
			PushFollow(Follow._value_in_agentcapabilities_macro_module7307);
			v2=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, v2.Tree);
			DebugLocation(1217, 33);
			if (state.backtracking == 0)
			{
				 retval.result.Includes.Add((v2!=null?v2.result:default(ISmiValue))); 
			}
			DebugLocation(1218, 2);
			// Smi.g:1218:2: ( COMMA v3= value )*
			try { DebugEnterSubRule(122);
			while (true)
			{
				int alt122=2;
				try { DebugEnterDecision(122, false);
				int LA122_1 = input.LA(1);

				if ((LA122_1==COMMA))
				{
					alt122 = 1;
				}


				} finally { DebugExitDecision(122); }
				switch ( alt122 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1218:3: COMMA v3= value
					{
					DebugLocation(1218, 3);
					COMMA298=(IToken)Match(input,COMMA,Follow._COMMA_in_agentcapabilities_macro_module7313); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA298_tree = (CommonTree)adaptor.Create(COMMA298);
					adaptor.AddChild(root_0, COMMA298_tree);
					}
					DebugLocation(1218, 11);
					PushFollow(Follow._value_in_agentcapabilities_macro_module7317);
					v3=value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, v3.Tree);

					}
					break;

				default:
					goto loop122;
				}
			}

			loop122:
				;

			} finally { DebugExitSubRule(122); }

			DebugLocation(1218, 20);
			R_BRACE299=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_agentcapabilities_macro_module7321); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE299_tree = (CommonTree)adaptor.Create(R_BRACE299);
			adaptor.AddChild(root_0, R_BRACE299_tree);
			}
			DebugLocation(1218, 28);
			if (state.backtracking == 0)
			{
				 retval.result.Includes.Add((v3!=null?v3.result:default(ISmiValue))); 
			}
			DebugLocation(1219, 2);
			// Smi.g:1219:2: (va= agentcapabilities_macro_variation )*
			try { DebugEnterSubRule(123);
			while (true)
			{
				int alt123=2;
				try { DebugEnterDecision(123, false);
				int LA123_1 = input.LA(1);

				if ((LA123_1==195))
				{
					alt123 = 1;
				}


				} finally { DebugExitDecision(123); }
				switch ( alt123 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1219:3: va= agentcapabilities_macro_variation
					{
					DebugLocation(1219, 5);
					PushFollow(Follow._agentcapabilities_macro_variation_in_agentcapabilities_macro_module7329);
					va=agentcapabilities_macro_variation();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, va.Tree);
					DebugLocation(1219, 40);
					if (state.backtracking == 0)
					{
						 retval.result.Variations.Add((va!=null?va.result:default(Variantion))); 
					}

					}
					break;

				default:
					goto loop123;
				}
			}

			loop123:
				;

			} finally { DebugExitSubRule(123); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("agentcapabilities_macro_module", 83);
			LeaveRule("agentcapabilities_macro_module", 83);
			LeaveRule_agentcapabilities_macro_module();
		}
		DebugLocation(1220, 1);
		} finally { DebugExitRule(GrammarFileName, "agentcapabilities_macro_module"); }
		return retval;

	}
	// $ANTLR end "agentcapabilities_macro_module"

	private sealed partial class agentcapabilities_macro_variation_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public Variantion result;
		public agentcapabilities_macro_variation_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_agentcapabilities_macro_variation();
	partial void LeaveRule_agentcapabilities_macro_variation();
	// $ANTLR start "agentcapabilities_macro_variation"
	// Smi.g:1222:1: agentcapabilities_macro_variation returns [Variantion result] : 'VARIATION' v1= value ( 'SYNTAX' s1= syntax )? ( 'WRITE-SYNTAX' s2= syntax )? ( 'ACCESS' a1= agentcapabilities_macro_access )? ( 'CREATION-REQUIRES' L_BRACE v2= value ( COMMA v3= value )* R_BRACE )? ( 'DEFVAL' L_BRACE ( ( L_BRACE ( LOWER | COMMA | R_BRACE ) )=> L_BRACE (l1= LOWER )? ( COMMA l2= LOWER )* R_BRACE |v4= value ) )? 'DESCRIPTION' c1= C_STRING ;
	[GrammarRule("agentcapabilities_macro_variation")]
	private SmiParser.agentcapabilities_macro_variation_return agentcapabilities_macro_variation()
	{
		EnterRule_agentcapabilities_macro_variation();
		EnterRule("agentcapabilities_macro_variation", 84);
		TraceIn("agentcapabilities_macro_variation", 84);
		SmiParser.agentcapabilities_macro_variation_return retval = new SmiParser.agentcapabilities_macro_variation_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l1 = default(IToken);
		IToken l2 = default(IToken);
		IToken c1 = default(IToken);
		IToken string_literal300 = default(IToken);
		IToken string_literal301 = default(IToken);
		IToken string_literal302 = default(IToken);
		IToken string_literal303 = default(IToken);
		IToken string_literal304 = default(IToken);
		IToken L_BRACE305 = default(IToken);
		IToken COMMA306 = default(IToken);
		IToken R_BRACE307 = default(IToken);
		IToken string_literal308 = default(IToken);
		IToken L_BRACE309 = default(IToken);
		IToken L_BRACE310 = default(IToken);
		IToken COMMA311 = default(IToken);
		IToken R_BRACE312 = default(IToken);
		IToken string_literal313 = default(IToken);
		SmiParser.value_return v1 = default(SmiParser.value_return);
		SmiParser.syntax_return s1 = default(SmiParser.syntax_return);
		SmiParser.syntax_return s2 = default(SmiParser.syntax_return);
		SmiParser.agentcapabilities_macro_access_return a1 = default(SmiParser.agentcapabilities_macro_access_return);
		SmiParser.value_return v2 = default(SmiParser.value_return);
		SmiParser.value_return v3 = default(SmiParser.value_return);
		SmiParser.value_return v4 = default(SmiParser.value_return);

		CommonTree l1_tree = default(CommonTree);
		CommonTree l2_tree = default(CommonTree);
		CommonTree c1_tree = default(CommonTree);
		CommonTree string_literal300_tree = default(CommonTree);
		CommonTree string_literal301_tree = default(CommonTree);
		CommonTree string_literal302_tree = default(CommonTree);
		CommonTree string_literal303_tree = default(CommonTree);
		CommonTree string_literal304_tree = default(CommonTree);
		CommonTree L_BRACE305_tree = default(CommonTree);
		CommonTree COMMA306_tree = default(CommonTree);
		CommonTree R_BRACE307_tree = default(CommonTree);
		CommonTree string_literal308_tree = default(CommonTree);
		CommonTree L_BRACE309_tree = default(CommonTree);
		CommonTree L_BRACE310_tree = default(CommonTree);
		CommonTree COMMA311_tree = default(CommonTree);
		CommonTree R_BRACE312_tree = default(CommonTree);
		CommonTree string_literal313_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "agentcapabilities_macro_variation");
		DebugLocation(1222, 1);
		try
		{
			// Smi.g:1223:5: ( 'VARIATION' v1= value ( 'SYNTAX' s1= syntax )? ( 'WRITE-SYNTAX' s2= syntax )? ( 'ACCESS' a1= agentcapabilities_macro_access )? ( 'CREATION-REQUIRES' L_BRACE v2= value ( COMMA v3= value )* R_BRACE )? ( 'DEFVAL' L_BRACE ( ( L_BRACE ( LOWER | COMMA | R_BRACE ) )=> L_BRACE (l1= LOWER )? ( COMMA l2= LOWER )* R_BRACE |v4= value ) )? 'DESCRIPTION' c1= C_STRING )
			DebugEnterAlt(1);
			// Smi.g:1223:7: 'VARIATION' v1= value ( 'SYNTAX' s1= syntax )? ( 'WRITE-SYNTAX' s2= syntax )? ( 'ACCESS' a1= agentcapabilities_macro_access )? ( 'CREATION-REQUIRES' L_BRACE v2= value ( COMMA v3= value )* R_BRACE )? ( 'DEFVAL' L_BRACE ( ( L_BRACE ( LOWER | COMMA | R_BRACE ) )=> L_BRACE (l1= LOWER )? ( COMMA l2= LOWER )* R_BRACE |v4= value ) )? 'DESCRIPTION' c1= C_STRING
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1223, 7);
			string_literal300=(IToken)Match(input,195,Follow._195_in_agentcapabilities_macro_variation7351); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal300_tree = (CommonTree)adaptor.Create(string_literal300);
			adaptor.AddChild(root_0, string_literal300_tree);
			}
			DebugLocation(1223, 21);
			PushFollow(Follow._value_in_agentcapabilities_macro_variation7355);
			v1=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, v1.Tree);
			DebugLocation(1223, 28);
			if (state.backtracking == 0)
			{
				 retval.result = new Variantion((v1!=null?v1.result:default(ISmiValue))); 
			}
			DebugLocation(1224, 2);
			// Smi.g:1224:2: ( 'SYNTAX' s1= syntax )?
			int alt124=2;
			try { DebugEnterSubRule(124);
			try { DebugEnterDecision(124, false);
			int LA124_1 = input.LA(1);

			if ((LA124_1==186))
			{
				alt124 = 1;
			}
			} finally { DebugExitDecision(124); }
			switch (alt124)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1224:3: 'SYNTAX' s1= syntax
				{
				DebugLocation(1224, 3);
				string_literal301=(IToken)Match(input,186,Follow._186_in_agentcapabilities_macro_variation7361); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal301_tree = (CommonTree)adaptor.Create(string_literal301);
				adaptor.AddChild(root_0, string_literal301_tree);
				}
				DebugLocation(1224, 14);
				PushFollow(Follow._syntax_in_agentcapabilities_macro_variation7365);
				s1=syntax();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, s1.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(124); }

			DebugLocation(1224, 24);
			if (state.backtracking == 0)
			{
				 retval.result.Syntax = (s1!=null?s1.result:default(Syntax)); 
			}
			DebugLocation(1225, 2);
			// Smi.g:1225:2: ( 'WRITE-SYNTAX' s2= syntax )?
			int alt125=2;
			try { DebugEnterSubRule(125);
			try { DebugEnterDecision(125, false);
			int LA125_1 = input.LA(1);

			if ((LA125_1==196))
			{
				alt125 = 1;
			}
			} finally { DebugExitDecision(125); }
			switch (alt125)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1225:3: 'WRITE-SYNTAX' s2= syntax
				{
				DebugLocation(1225, 3);
				string_literal302=(IToken)Match(input,196,Follow._196_in_agentcapabilities_macro_variation7373); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal302_tree = (CommonTree)adaptor.Create(string_literal302);
				adaptor.AddChild(root_0, string_literal302_tree);
				}
				DebugLocation(1225, 20);
				PushFollow(Follow._syntax_in_agentcapabilities_macro_variation7377);
				s2=syntax();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, s2.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(125); }

			DebugLocation(1225, 30);
			if (state.backtracking == 0)
			{
				 retval.result.WriteSyntax = (s2!=null?s2.result:default(Syntax)); 
			}
			DebugLocation(1226, 2);
			// Smi.g:1226:2: ( 'ACCESS' a1= agentcapabilities_macro_access )?
			int alt126=2;
			try { DebugEnterSubRule(126);
			try { DebugEnterDecision(126, false);
			int LA126_1 = input.LA(1);

			if ((LA126_1==129))
			{
				alt126 = 1;
			}
			} finally { DebugExitDecision(126); }
			switch (alt126)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1226:3: 'ACCESS' a1= agentcapabilities_macro_access
				{
				DebugLocation(1226, 3);
				string_literal303=(IToken)Match(input,129,Follow._129_in_agentcapabilities_macro_variation7385); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal303_tree = (CommonTree)adaptor.Create(string_literal303);
				adaptor.AddChild(root_0, string_literal303_tree);
				}
				DebugLocation(1226, 14);
				PushFollow(Follow._agentcapabilities_macro_access_in_agentcapabilities_macro_variation7389);
				a1=agentcapabilities_macro_access();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, a1.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(126); }

			DebugLocation(1226, 48);
			if (state.backtracking == 0)
			{
				 retval.result.Access = (a1!=null?a1.result:default(Access)); 
			}
			DebugLocation(1227, 5);
			// Smi.g:1227:5: ( 'CREATION-REQUIRES' L_BRACE v2= value ( COMMA v3= value )* R_BRACE )?
			int alt128=2;
			try { DebugEnterSubRule(128);
			try { DebugEnterDecision(128, false);
			int LA128_1 = input.LA(1);

			if ((LA128_1==138))
			{
				alt128 = 1;
			}
			} finally { DebugExitDecision(128); }
			switch (alt128)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1227:6: 'CREATION-REQUIRES' L_BRACE v2= value ( COMMA v3= value )* R_BRACE
				{
				DebugLocation(1227, 6);
				string_literal304=(IToken)Match(input,138,Follow._138_in_agentcapabilities_macro_variation7400); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal304_tree = (CommonTree)adaptor.Create(string_literal304);
				adaptor.AddChild(root_0, string_literal304_tree);
				}
				DebugLocation(1227, 26);
				L_BRACE305=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_agentcapabilities_macro_variation7402); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE305_tree = (CommonTree)adaptor.Create(L_BRACE305);
				adaptor.AddChild(root_0, L_BRACE305_tree);
				}
				DebugLocation(1227, 36);
				PushFollow(Follow._value_in_agentcapabilities_macro_variation7406);
				v2=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v2.Tree);
				DebugLocation(1227, 43);
				if (state.backtracking == 0)
				{
					 retval.result.CreationRequires.Add((v2!=null?v2.result:default(ISmiValue))); 
				}
				DebugLocation(1228, 2);
				// Smi.g:1228:2: ( COMMA v3= value )*
				try { DebugEnterSubRule(127);
				while (true)
				{
					int alt127=2;
					try { DebugEnterDecision(127, false);
					int LA127_1 = input.LA(1);

					if ((LA127_1==COMMA))
					{
						alt127 = 1;
					}


					} finally { DebugExitDecision(127); }
					switch ( alt127 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:1228:3: COMMA v3= value
						{
						DebugLocation(1228, 3);
						COMMA306=(IToken)Match(input,COMMA,Follow._COMMA_in_agentcapabilities_macro_variation7412); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA306_tree = (CommonTree)adaptor.Create(COMMA306);
						adaptor.AddChild(root_0, COMMA306_tree);
						}
						DebugLocation(1228, 11);
						PushFollow(Follow._value_in_agentcapabilities_macro_variation7416);
						v3=value();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, v3.Tree);

						}
						break;

					default:
						goto loop127;
					}
				}

				loop127:
					;

				} finally { DebugExitSubRule(127); }

				DebugLocation(1228, 20);
				R_BRACE307=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_agentcapabilities_macro_variation7420); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE307_tree = (CommonTree)adaptor.Create(R_BRACE307);
				adaptor.AddChild(root_0, R_BRACE307_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(128); }

			DebugLocation(1228, 30);
			if (state.backtracking == 0)
			{
				 retval.result.CreationRequires.Add((v3!=null?v3.result:default(ISmiValue))); 
			}
			DebugLocation(1229, 5);
			// Smi.g:1229:5: ( 'DEFVAL' L_BRACE ( ( L_BRACE ( LOWER | COMMA | R_BRACE ) )=> L_BRACE (l1= LOWER )? ( COMMA l2= LOWER )* R_BRACE |v4= value ) )?
			int alt132=2;
			try { DebugEnterSubRule(132);
			try { DebugEnterDecision(132, false);
			int LA132_1 = input.LA(1);

			if ((LA132_1==139))
			{
				alt132 = 1;
			}
			} finally { DebugExitDecision(132); }
			switch (alt132)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1229:6: 'DEFVAL' L_BRACE ( ( L_BRACE ( LOWER | COMMA | R_BRACE ) )=> L_BRACE (l1= LOWER )? ( COMMA l2= LOWER )* R_BRACE |v4= value )
				{
				DebugLocation(1229, 6);
				string_literal308=(IToken)Match(input,139,Follow._139_in_agentcapabilities_macro_variation7431); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal308_tree = (CommonTree)adaptor.Create(string_literal308);
				adaptor.AddChild(root_0, string_literal308_tree);
				}
				DebugLocation(1229, 15);
				L_BRACE309=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_agentcapabilities_macro_variation7433); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE309_tree = (CommonTree)adaptor.Create(L_BRACE309);
				adaptor.AddChild(root_0, L_BRACE309_tree);
				}
				DebugLocation(1229, 23);
				// Smi.g:1229:23: ( ( L_BRACE ( LOWER | COMMA | R_BRACE ) )=> L_BRACE (l1= LOWER )? ( COMMA l2= LOWER )* R_BRACE |v4= value )
				int alt131=2;
				try { DebugEnterSubRule(131);
				try { DebugEnterDecision(131, false);
				try
				{
					alt131 = dfa131.Predict(input);
				}
				catch (NoViableAltException nvae)
				{
					DebugRecognitionException(nvae);
					throw;
				}
				} finally { DebugExitDecision(131); }
				switch (alt131)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1229:24: ( L_BRACE ( LOWER | COMMA | R_BRACE ) )=> L_BRACE (l1= LOWER )? ( COMMA l2= LOWER )* R_BRACE
					{
					DebugLocation(1229, 63);
					L_BRACE310=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_agentcapabilities_macro_variation7454); if (state.failed) return retval;
					if (state.backtracking == 0) {
					L_BRACE310_tree = (CommonTree)adaptor.Create(L_BRACE310);
					adaptor.AddChild(root_0, L_BRACE310_tree);
					}
					DebugLocation(1229, 71);
					// Smi.g:1229:71: (l1= LOWER )?
					int alt129=2;
					try { DebugEnterSubRule(129);
					try { DebugEnterDecision(129, false);
					int LA129_1 = input.LA(1);

					if ((LA129_1==LOWER))
					{
						alt129 = 1;
					}
					} finally { DebugExitDecision(129); }
					switch (alt129)
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:1229:72: l1= LOWER
						{
						DebugLocation(1229, 74);
						l1=(IToken)Match(input,LOWER,Follow._LOWER_in_agentcapabilities_macro_variation7459); if (state.failed) return retval;
						if (state.backtracking == 0) {
						l1_tree = (CommonTree)adaptor.Create(l1);
						adaptor.AddChild(root_0, l1_tree);
						}

						}
						break;

					}
					} finally { DebugExitSubRule(129); }

					DebugLocation(1229, 83);
					if (state.backtracking == 0)
					{
						 retval.result.DefaultValueIdentifiers.Add((l1!=null?l1.Text:null)); 
					}
					DebugLocation(1230, 2);
					// Smi.g:1230:2: ( COMMA l2= LOWER )*
					try { DebugEnterSubRule(130);
					while (true)
					{
						int alt130=2;
						try { DebugEnterDecision(130, false);
						int LA130_1 = input.LA(1);

						if ((LA130_1==COMMA))
						{
							alt130 = 1;
						}


						} finally { DebugExitDecision(130); }
						switch ( alt130 )
						{
						case 1:
							DebugEnterAlt(1);
							// Smi.g:1230:3: COMMA l2= LOWER
							{
							DebugLocation(1230, 3);
							COMMA311=(IToken)Match(input,COMMA,Follow._COMMA_in_agentcapabilities_macro_variation7468); if (state.failed) return retval;
							if (state.backtracking == 0) {
							COMMA311_tree = (CommonTree)adaptor.Create(COMMA311);
							adaptor.AddChild(root_0, COMMA311_tree);
							}
							DebugLocation(1230, 11);
							l2=(IToken)Match(input,LOWER,Follow._LOWER_in_agentcapabilities_macro_variation7472); if (state.failed) return retval;
							if (state.backtracking == 0) {
							l2_tree = (CommonTree)adaptor.Create(l2);
							adaptor.AddChild(root_0, l2_tree);
							}

							}
							break;

						default:
							goto loop130;
						}
					}

					loop130:
						;

					} finally { DebugExitSubRule(130); }

					DebugLocation(1230, 20);
					R_BRACE312=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_agentcapabilities_macro_variation7476); if (state.failed) return retval;
					if (state.backtracking == 0) {
					R_BRACE312_tree = (CommonTree)adaptor.Create(R_BRACE312);
					adaptor.AddChild(root_0, R_BRACE312_tree);
					}
					DebugLocation(1230, 28);
					if (state.backtracking == 0)
					{
						 retval.result.DefaultValueIdentifiers.Add((l2!=null?l2.Text:null)); 
					}

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// Smi.g:1231:4: v4= value
					{
					DebugLocation(1231, 6);
					PushFollow(Follow._value_in_agentcapabilities_macro_variation7485);
					v4=value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, v4.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(131); }


				}
				break;

			}
			} finally { DebugExitSubRule(132); }

			DebugLocation(1231, 17);
			if (state.backtracking == 0)
			{
				 retval.result.DefaultValue = (v4!=null?v4.result:default(ISmiValue)); 
			}
			DebugLocation(1232, 5);
			string_literal313=(IToken)Match(input,140,Follow._140_in_agentcapabilities_macro_variation7497); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal313_tree = (CommonTree)adaptor.Create(string_literal313);
			adaptor.AddChild(root_0, string_literal313_tree);
			}
			DebugLocation(1232, 21);
			c1=(IToken)Match(input,C_STRING,Follow._C_STRING_in_agentcapabilities_macro_variation7501); if (state.failed) return retval;
			if (state.backtracking == 0) {
			c1_tree = (CommonTree)adaptor.Create(c1);
			adaptor.AddChild(root_0, c1_tree);
			}
			DebugLocation(1232, 31);
			if (state.backtracking == 0)
			{
				 retval.result.Description = (c1!=null?c1.Text:null); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("agentcapabilities_macro_variation", 84);
			LeaveRule("agentcapabilities_macro_variation", 84);
			LeaveRule_agentcapabilities_macro_variation();
		}
		DebugLocation(1233, 1);
		} finally { DebugExitRule(GrammarFileName, "agentcapabilities_macro_variation"); }
		return retval;

	}
	// $ANTLR end "agentcapabilities_macro_variation"

	private sealed partial class syntax_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public Syntax result = new Syntax();
		public syntax_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_syntax();
	partial void LeaveRule_syntax();
	// $ANTLR start "syntax"
	// Smi.g:1235:1: syntax returns [Syntax result = new Syntax()] : ( ( smi_type L_BRACE )=>st= smi_type L_BRACE nb1= namedbit ( COMMA nb2= namedbit )* R_BRACE | ( smi_type )=>st2= smi_type ( smi_subtyping )? |t= type );
	[GrammarRule("syntax")]
	private SmiParser.syntax_return syntax()
	{
		EnterRule_syntax();
		EnterRule("syntax", 85);
		TraceIn("syntax", 85);
		SmiParser.syntax_return retval = new SmiParser.syntax_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE314 = default(IToken);
		IToken COMMA315 = default(IToken);
		IToken R_BRACE316 = default(IToken);
		SmiParser.smi_type_return st = default(SmiParser.smi_type_return);
		SmiParser.namedbit_return nb1 = default(SmiParser.namedbit_return);
		SmiParser.namedbit_return nb2 = default(SmiParser.namedbit_return);
		SmiParser.smi_type_return st2 = default(SmiParser.smi_type_return);
		SmiParser.type_return t = default(SmiParser.type_return);
		AstParserRuleReturnScope<CommonTree, IToken> smi_subtyping317 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree L_BRACE314_tree = default(CommonTree);
		CommonTree COMMA315_tree = default(CommonTree);
		CommonTree R_BRACE316_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "syntax");
		DebugLocation(1235, 1);
		try
		{
			// Smi.g:1236:5: ( ( smi_type L_BRACE )=>st= smi_type L_BRACE nb1= namedbit ( COMMA nb2= namedbit )* R_BRACE | ( smi_type )=>st2= smi_type ( smi_subtyping )? |t= type )
			int alt135=3;
			try { DebugEnterDecision(135, false);
			switch (input.LA(1))
			{
			case 136:
				{
				int LA135_2 = input.LA(2);

				if ((LA135_2==L_BRACE) && (EvaluatePredicate(synpred37_Smi_fragment)))
				{
					alt135 = 1;
				}
				else if ((EvaluatePredicate(synpred38_Smi_fragment)))
				{
					alt135 = 2;
				}
				else if ((true))
				{
					alt135 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 135, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case INTEGER_KW:
				{
				int LA135_2 = input.LA(2);

				if ((LA135_2==L_BRACE) && (EvaluatePredicate(synpred37_Smi_fragment)))
				{
					alt135 = 1;
				}
				else if ((EvaluatePredicate(synpred38_Smi_fragment)))
				{
					alt135 = 2;
				}
				else if ((true))
				{
					alt135 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 135, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case OCTET_KW:
				{
				int LA135_2 = input.LA(2);

				if ((LA135_2==STRING_KW))
				{
					int LA135_3 = input.LA(3);

					if ((LA135_3==L_BRACE) && (EvaluatePredicate(synpred37_Smi_fragment)))
					{
						alt135 = 1;
					}
					else if ((EvaluatePredicate(synpred38_Smi_fragment)))
					{
						alt135 = 2;
					}
					else if ((true))
					{
						alt135 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 135, 9, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 135, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case OBJECT_KW:
				{
				int LA135_2 = input.LA(2);

				if ((LA135_2==IDENTIFIER_KW))
				{
					int LA135_3 = input.LA(3);

					if ((LA135_3==L_BRACE) && (EvaluatePredicate(synpred37_Smi_fragment)))
					{
						alt135 = 1;
					}
					else if ((EvaluatePredicate(synpred38_Smi_fragment)))
					{
						alt135 = 2;
					}
					else if ((true))
					{
						alt135 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 135, 10, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 135, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case UPPER:
				{
				int LA135_2 = input.LA(2);

				if ((LA135_2==L_BRACE) && (EvaluatePredicate(synpred37_Smi_fragment)))
				{
					alt135 = 1;
				}
				else if ((EvaluatePredicate(synpred38_Smi_fragment)))
				{
					alt135 = 2;
				}
				else if ((true))
				{
					alt135 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 135, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ANY_KW:
			case BIT_KW:
			case BMP_STR_KW:
			case BOOLEAN_KW:
			case CHARACTER_KW:
			case CHOICE_KW:
			case EMBEDDED_KW:
			case ENUMERATED_KW:
			case ERROR_KW:
			case EXTERNAL_KW:
			case GENERALIZED_TIME_KW:
			case GENERAL_STR_KW:
			case GRAPHIC_STR_KW:
			case IA5_STRING_KW:
			case ISO646_STR_KW:
			case LOWER:
			case L_BRACKET:
			case NULL_KW:
			case NUMERIC_STR_KW:
			case OPERATION_KW:
			case PRINTABLE_STR_KW:
			case REAL_KW:
			case SEQUENCE_KW:
			case SET_KW:
			case T61_STR_KW:
			case TELETEX_STR_KW:
			case UNIVERSAL_STR_KW:
			case UTC_TIME_KW:
			case UTF8_STR_KW:
			case VIDEOTEX_STR_KW:
			case VISIBLE_STR_KW:
			case 130:
			case 157:
			case 158:
			case 159:
			case 160:
			case 162:
			case 163:
			case 164:
			case 178:
			case 187:
			case 190:
				{
				alt135 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 135, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(135); }
			switch (alt135)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1236:7: ( smi_type L_BRACE )=>st= smi_type L_BRACE nb1= namedbit ( COMMA nb2= namedbit )* R_BRACE
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1236, 31);
				PushFollow(Follow._smi_type_in_syntax7531);
				st=smi_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, st.Tree);
				DebugLocation(1236, 41);
				if (state.backtracking == 0)
				{
					 retval.result.Subtype = (st!=null?st.result:default(ISmiType)); 
				}
				DebugLocation(1237, 2);
				L_BRACE314=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_syntax7536); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE314_tree = (CommonTree)adaptor.Create(L_BRACE314);
				adaptor.AddChild(root_0, L_BRACE314_tree);
				}
				DebugLocation(1237, 13);
				PushFollow(Follow._namedbit_in_syntax7540);
				nb1=namedbit();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, nb1.Tree);
				DebugLocation(1237, 23);
				if (state.backtracking == 0)
				{
					 retval.result.SubtypeNamedBits.Add((nb1!=null?nb1.result:default(NamedBit))); 
				}
				DebugLocation(1238, 2);
				// Smi.g:1238:2: ( COMMA nb2= namedbit )*
				try { DebugEnterSubRule(133);
				while (true)
				{
					int alt133=2;
					try { DebugEnterDecision(133, false);
					int LA133_1 = input.LA(1);

					if ((LA133_1==COMMA))
					{
						alt133 = 1;
					}


					} finally { DebugExitDecision(133); }
					switch ( alt133 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:1238:3: COMMA nb2= namedbit
						{
						DebugLocation(1238, 3);
						COMMA315=(IToken)Match(input,COMMA,Follow._COMMA_in_syntax7546); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA315_tree = (CommonTree)adaptor.Create(COMMA315);
						adaptor.AddChild(root_0, COMMA315_tree);
						}
						DebugLocation(1238, 12);
						PushFollow(Follow._namedbit_in_syntax7550);
						nb2=namedbit();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, nb2.Tree);
						DebugLocation(1238, 22);
						if (state.backtracking == 0)
						{
							 retval.result.SubtypeNamedBits.Add((nb2!=null?nb2.result:default(NamedBit))); 
						}

						}
						break;

					default:
						goto loop133;
					}
				}

				loop133:
					;

				} finally { DebugExitSubRule(133); }

				DebugLocation(1238, 71);
				R_BRACE316=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_syntax7556); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE316_tree = (CommonTree)adaptor.Create(R_BRACE316);
				adaptor.AddChild(root_0, R_BRACE316_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1239:7: ( smi_type )=>st2= smi_type ( smi_subtyping )?
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1239, 24);
				PushFollow(Follow._smi_type_in_syntax7572);
				st2=smi_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, st2.Tree);
				DebugLocation(1239, 34);
				// Smi.g:1239:34: ( smi_subtyping )?
				int alt134=2;
				try { DebugEnterSubRule(134);
				try { DebugEnterDecision(134, false);
				int LA134_1 = input.LA(1);

				if ((LA134_1==L_PAREN))
				{
					alt134 = 1;
				}
				} finally { DebugExitDecision(134); }
				switch (alt134)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1239:35: smi_subtyping
					{
					DebugLocation(1239, 35);
					PushFollow(Follow._smi_subtyping_in_syntax7575);
					smi_subtyping317=smi_subtyping();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, smi_subtyping317.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(134); }

				DebugLocation(1239, 51);
				if (state.backtracking == 0)
				{
					 retval.result.Subtype = (st2!=null?st2.result:default(ISmiType)); 
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:1240:7: t= type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1240, 8);
				PushFollow(Follow._type_in_syntax7589);
				t=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, t.Tree);
				DebugLocation(1240, 14);
				if (state.backtracking == 0)
				{
					 retval.result.Subtype=(t!=null?t.result:default(ISmiType)); 
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("syntax", 85);
			LeaveRule("syntax", 85);
			LeaveRule_syntax();
		}
		DebugLocation(1241, 1);
		} finally { DebugExitRule(GrammarFileName, "syntax"); }
		return retval;

	}
	// $ANTLR end "syntax"

	private sealed partial class agentcapabilities_macro_access_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public Access result;
		public agentcapabilities_macro_access_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_agentcapabilities_macro_access();
	partial void LeaveRule_agentcapabilities_macro_access();
	// $ANTLR start "agentcapabilities_macro_access"
	// Smi.g:1243:1: agentcapabilities_macro_access returns [Access result] : l= LOWER ;
	[GrammarRule("agentcapabilities_macro_access")]
	private SmiParser.agentcapabilities_macro_access_return agentcapabilities_macro_access()
	{
		EnterRule_agentcapabilities_macro_access();
		EnterRule("agentcapabilities_macro_access", 86);
		TraceIn("agentcapabilities_macro_access", 86);
		SmiParser.agentcapabilities_macro_access_return retval = new SmiParser.agentcapabilities_macro_access_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "agentcapabilities_macro_access");
		DebugLocation(1243, 1);
		try
		{
			// Smi.g:1244:5: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:1244:7: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1244, 8);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_agentcapabilities_macro_access7611); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(1245, 5);
			if (state.backtracking == 0)
			{
				if (l.Text == ("not-implemented")) retval.result = Access.NotImplemented;
				     else if (l.Text == ("accessible-for-notify")) retval.result = Access.AccessibleForNotify;
				     else if (l.Text == ("read-only")) retval.result = Access.ReadOnly;
				     else if (l.Text == ("read-write")) retval.result = Access.ReadWrite;
				     else if (l.Text == ("read-create")) retval.result = Access.ReadCreate;
				     else if (l.Text == ("write-only")) retval.result = Access.WriteOnly;
				     else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("agentcapabilities_macro_access", 86);
			LeaveRule("agentcapabilities_macro_access", 86);
			LeaveRule_agentcapabilities_macro_access();
		}
		DebugLocation(1252, 1);
		} finally { DebugExitRule(GrammarFileName, "agentcapabilities_macro_access"); }
		return retval;

	}
	// $ANTLR end "agentcapabilities_macro_access"

	private sealed partial class traptype_macro_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public TrapTypeMacro result = new TrapTypeMacro();
		public traptype_macro_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_traptype_macro();
	partial void LeaveRule_traptype_macro();
	// $ANTLR start "traptype_macro"
	// Smi.g:1255:1: traptype_macro returns [TrapTypeMacro result = new TrapTypeMacro()] : 'TRAP-TYPE' 'ENTERPRISE' v= value ( 'VARIABLES' L_BRACE v2= value ( COMMA v3= value )* R_BRACE )? ( ( 'DESCRIPTION' )=> 'DESCRIPTION' v4= value )? ( 'REFERENCE' v5= value )? ;
	[GrammarRule("traptype_macro")]
	private SmiParser.traptype_macro_return traptype_macro()
	{
		EnterRule_traptype_macro();
		EnterRule("traptype_macro", 87);
		TraceIn("traptype_macro", 87);
		SmiParser.traptype_macro_return retval = new SmiParser.traptype_macro_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal318 = default(IToken);
		IToken string_literal319 = default(IToken);
		IToken string_literal320 = default(IToken);
		IToken L_BRACE321 = default(IToken);
		IToken COMMA322 = default(IToken);
		IToken R_BRACE323 = default(IToken);
		IToken string_literal324 = default(IToken);
		IToken string_literal325 = default(IToken);
		SmiParser.value_return v = default(SmiParser.value_return);
		SmiParser.value_return v2 = default(SmiParser.value_return);
		SmiParser.value_return v3 = default(SmiParser.value_return);
		SmiParser.value_return v4 = default(SmiParser.value_return);
		SmiParser.value_return v5 = default(SmiParser.value_return);

		CommonTree string_literal318_tree = default(CommonTree);
		CommonTree string_literal319_tree = default(CommonTree);
		CommonTree string_literal320_tree = default(CommonTree);
		CommonTree L_BRACE321_tree = default(CommonTree);
		CommonTree COMMA322_tree = default(CommonTree);
		CommonTree R_BRACE323_tree = default(CommonTree);
		CommonTree string_literal324_tree = default(CommonTree);
		CommonTree string_literal325_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "traptype_macro");
		DebugLocation(1255, 61);
		try
		{
			// Smi.g:1256:5: ( 'TRAP-TYPE' 'ENTERPRISE' v= value ( 'VARIABLES' L_BRACE v2= value ( COMMA v3= value )* R_BRACE )? ( ( 'DESCRIPTION' )=> 'DESCRIPTION' v4= value )? ( 'REFERENCE' v5= value )? )
			DebugEnterAlt(1);
			// Smi.g:1256:7: 'TRAP-TYPE' 'ENTERPRISE' v= value ( 'VARIABLES' L_BRACE v2= value ( COMMA v3= value )* R_BRACE )? ( ( 'DESCRIPTION' )=> 'DESCRIPTION' v4= value )? ( 'REFERENCE' v5= value )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1256, 7);
			string_literal318=(IToken)Match(input,190,Follow._190_in_traptype_macro7637); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal318_tree = (CommonTree)adaptor.Create(string_literal318);
			adaptor.AddChild(root_0, string_literal318_tree);
			}
			DebugLocation(1256, 19);
			string_literal319=(IToken)Match(input,143,Follow._143_in_traptype_macro7639); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal319_tree = (CommonTree)adaptor.Create(string_literal319);
			adaptor.AddChild(root_0, string_literal319_tree);
			}
			DebugLocation(1256, 33);
			PushFollow(Follow._value_in_traptype_macro7643);
			v=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, v.Tree);
			DebugLocation(1256, 40);
			if (state.backtracking == 0)
			{
				 retval.result.Enterprise = (v!=null?v.result:default(ISmiValue)); 
			}
			DebugLocation(1257, 2);
			// Smi.g:1257:2: ( 'VARIABLES' L_BRACE v2= value ( COMMA v3= value )* R_BRACE )?
			int alt137=2;
			try { DebugEnterSubRule(137);
			try { DebugEnterDecision(137, false);
			int LA137_1 = input.LA(1);

			if ((LA137_1==194))
			{
				alt137 = 1;
			}
			} finally { DebugExitDecision(137); }
			switch (alt137)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1257:3: 'VARIABLES' L_BRACE v2= value ( COMMA v3= value )* R_BRACE
				{
				DebugLocation(1257, 3);
				string_literal320=(IToken)Match(input,194,Follow._194_in_traptype_macro7649); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal320_tree = (CommonTree)adaptor.Create(string_literal320);
				adaptor.AddChild(root_0, string_literal320_tree);
				}
				DebugLocation(1257, 15);
				L_BRACE321=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_traptype_macro7651); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE321_tree = (CommonTree)adaptor.Create(L_BRACE321);
				adaptor.AddChild(root_0, L_BRACE321_tree);
				}
				DebugLocation(1257, 25);
				PushFollow(Follow._value_in_traptype_macro7655);
				v2=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v2.Tree);
				DebugLocation(1257, 32);
				if (state.backtracking == 0)
				{
					 retval.result.Variables.Add((v2!=null?v2.result:default(ISmiValue))); 
				}
				DebugLocation(1258, 2);
				// Smi.g:1258:2: ( COMMA v3= value )*
				try { DebugEnterSubRule(136);
				while (true)
				{
					int alt136=2;
					try { DebugEnterDecision(136, false);
					int LA136_1 = input.LA(1);

					if ((LA136_1==COMMA))
					{
						alt136 = 1;
					}


					} finally { DebugExitDecision(136); }
					switch ( alt136 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:1258:3: COMMA v3= value
						{
						DebugLocation(1258, 3);
						COMMA322=(IToken)Match(input,COMMA,Follow._COMMA_in_traptype_macro7661); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA322_tree = (CommonTree)adaptor.Create(COMMA322);
						adaptor.AddChild(root_0, COMMA322_tree);
						}
						DebugLocation(1258, 11);
						PushFollow(Follow._value_in_traptype_macro7665);
						v3=value();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, v3.Tree);
						DebugLocation(1258, 18);
						if (state.backtracking == 0)
						{
							 retval.result.Variables.Add((v3!=null?v3.result:default(ISmiValue))); 
						}

						}
						break;

					default:
						goto loop136;
					}
				}

				loop136:
					;

				} finally { DebugExitSubRule(136); }

				DebugLocation(1258, 59);
				R_BRACE323=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_traptype_macro7671); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE323_tree = (CommonTree)adaptor.Create(R_BRACE323);
				adaptor.AddChild(root_0, R_BRACE323_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(137); }

			DebugLocation(1259, 5);
			// Smi.g:1259:5: ( ( 'DESCRIPTION' )=> 'DESCRIPTION' v4= value )?
			int alt138=2;
			try { DebugEnterSubRule(138);
			try { DebugEnterDecision(138, false);
			int LA138_1 = input.LA(1);

			if ((LA138_1==140))
			{
				int LA138_2 = input.LA(2);

				if ((LA138_2==C_STRING))
				{
					int LA138_3 = input.LA(3);

					if ((EvaluatePredicate(synpred39_Smi_fragment)))
					{
						alt138 = 1;
					}
				}
				else if ((LA138_2==TRUE_KW) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==FALSE_KW) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==NULL_KW) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==UPPER) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==LOWER) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==MINUS) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==NUMBER) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==L_BRACE) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==H_STRING) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==B_STRING) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==PLUS_INFINITY_KW) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==MINUS_INFINITY_KW) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==OPERATION_KW) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==ERROR_KW) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==135) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==191) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==133) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==132) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==145) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==147) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==146) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==188) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==189) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==180) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==OBJECT_KW) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==173) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==177) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==125) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==128) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==127) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==126) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==131) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==142) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==182) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==181) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==175) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
				else if ((LA138_2==130||(LA138_2>=157 && LA138_2<=160)||(LA138_2>=162 && LA138_2<=164)||LA138_2==187||LA138_2==190) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt138 = 1;
				}
			}
			} finally { DebugExitDecision(138); }
			switch (alt138)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1259:6: ( 'DESCRIPTION' )=> 'DESCRIPTION' v4= value
				{
				DebugLocation(1259, 25);
				string_literal324=(IToken)Match(input,140,Follow._140_in_traptype_macro7687); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal324_tree = (CommonTree)adaptor.Create(string_literal324);
				adaptor.AddChild(root_0, string_literal324_tree);
				}
				DebugLocation(1259, 41);
				PushFollow(Follow._value_in_traptype_macro7691);
				v4=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v4.Tree);
				DebugLocation(1259, 48);
				if (state.backtracking == 0)
				{
					 retval.result.Description = (v4!=null?v4.result:default(ISmiValue)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(138); }

			DebugLocation(1260, 2);
			// Smi.g:1260:2: ( 'REFERENCE' v5= value )?
			int alt139=2;
			try { DebugEnterSubRule(139);
			try { DebugEnterDecision(139, false);
			int LA139_1 = input.LA(1);

			if ((LA139_1==176))
			{
				alt139 = 1;
			}
			} finally { DebugExitDecision(139); }
			switch (alt139)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1260:3: 'REFERENCE' v5= value
				{
				DebugLocation(1260, 3);
				string_literal325=(IToken)Match(input,176,Follow._176_in_traptype_macro7700); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal325_tree = (CommonTree)adaptor.Create(string_literal325);
				adaptor.AddChild(root_0, string_literal325_tree);
				}
				DebugLocation(1260, 17);
				PushFollow(Follow._value_in_traptype_macro7704);
				v5=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v5.Tree);
				DebugLocation(1260, 24);
				if (state.backtracking == 0)
				{
					 retval.result.Reference = (v5!=null?v5.result:default(ISmiValue)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(139); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("traptype_macro", 87);
			LeaveRule("traptype_macro", 87);
			LeaveRule_traptype_macro();
		}
		DebugLocation(1260, 61);
		} finally { DebugExitRule(GrammarFileName, "traptype_macro"); }
		return retval;

	}
	// $ANTLR end "traptype_macro"

	private sealed partial class operation_errorlist_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public IList<TypeOrValue> result;
		public operation_errorlist_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_operation_errorlist();
	partial void LeaveRule_operation_errorlist();
	// $ANTLR start "operation_errorlist"
	// Smi.g:1262:1: operation_errorlist returns [IList<TypeOrValue> result] : t= typeorvaluelist ;
	[GrammarRule("operation_errorlist")]
	private SmiParser.operation_errorlist_return operation_errorlist()
	{
		EnterRule_operation_errorlist();
		EnterRule("operation_errorlist", 88);
		TraceIn("operation_errorlist", 88);
		SmiParser.operation_errorlist_return retval = new SmiParser.operation_errorlist_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		SmiParser.typeorvaluelist_return t = default(SmiParser.typeorvaluelist_return);

		try { DebugEnterRule(GrammarFileName, "operation_errorlist");
		DebugLocation(1262, 1);
		try
		{
			// Smi.g:1263:5: (t= typeorvaluelist )
			DebugEnterAlt(1);
			// Smi.g:1263:7: t= typeorvaluelist
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1263, 8);
			PushFollow(Follow._typeorvaluelist_in_operation_errorlist7727);
			t=typeorvaluelist();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, t.Tree);
			DebugLocation(1263, 25);
			if (state.backtracking == 0)
			{
				 retval.result = (t!=null?t.result:default(IList<TypeOrValue>)); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("operation_errorlist", 88);
			LeaveRule("operation_errorlist", 88);
			LeaveRule_operation_errorlist();
		}
		DebugLocation(1264, 1);
		} finally { DebugExitRule(GrammarFileName, "operation_errorlist"); }
		return retval;

	}
	// $ANTLR end "operation_errorlist"

	private sealed partial class linkedOp_list_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public IList<TypeOrValue> result;
		public linkedOp_list_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_linkedOp_list();
	partial void LeaveRule_linkedOp_list();
	// $ANTLR start "linkedOp_list"
	// Smi.g:1266:1: linkedOp_list returns [IList<TypeOrValue> result] : t= typeorvaluelist ;
	[GrammarRule("linkedOp_list")]
	private SmiParser.linkedOp_list_return linkedOp_list()
	{
		EnterRule_linkedOp_list();
		EnterRule("linkedOp_list", 89);
		TraceIn("linkedOp_list", 89);
		SmiParser.linkedOp_list_return retval = new SmiParser.linkedOp_list_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		SmiParser.typeorvaluelist_return t = default(SmiParser.typeorvaluelist_return);

		try { DebugEnterRule(GrammarFileName, "linkedOp_list");
		DebugLocation(1266, 1);
		try
		{
			// Smi.g:1267:5: (t= typeorvaluelist )
			DebugEnterAlt(1);
			// Smi.g:1267:7: t= typeorvaluelist
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1267, 8);
			PushFollow(Follow._typeorvaluelist_in_linkedOp_list7749);
			t=typeorvaluelist();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, t.Tree);
			DebugLocation(1267, 25);
			if (state.backtracking == 0)
			{
				 retval.result = (t!=null?t.result:default(IList<TypeOrValue>)); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("linkedOp_list", 89);
			LeaveRule("linkedOp_list", 89);
			LeaveRule_linkedOp_list();
		}
		DebugLocation(1268, 1);
		} finally { DebugExitRule(GrammarFileName, "linkedOp_list"); }
		return retval;

	}
	// $ANTLR end "linkedOp_list"

	private sealed partial class typeorvalue_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public TypeOrValue result;
		public typeorvalue_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_typeorvalue();
	partial void LeaveRule_typeorvalue();
	// $ANTLR start "typeorvalue"
	// Smi.g:1270:1: typeorvalue returns [TypeOrValue result] : ( ( type )=>t= type |v= value );
	[GrammarRule("typeorvalue")]
	private SmiParser.typeorvalue_return typeorvalue()
	{
		EnterRule_typeorvalue();
		EnterRule("typeorvalue", 90);
		TraceIn("typeorvalue", 90);
		SmiParser.typeorvalue_return retval = new SmiParser.typeorvalue_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		SmiParser.type_return t = default(SmiParser.type_return);
		SmiParser.value_return v = default(SmiParser.value_return);

		try { DebugEnterRule(GrammarFileName, "typeorvalue");
		DebugLocation(1270, 52);
		try
		{
			// Smi.g:1271:5: ( ( type )=>t= type |v= value )
			int alt140=2;
			try { DebugEnterDecision(140, false);
			try
			{
				alt140 = dfa140.Predict(input);
			}
			catch (NoViableAltException nvae)
			{
				DebugRecognitionException(nvae);
				throw;
			}
			} finally { DebugExitDecision(140); }
			switch (alt140)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1271:7: ( type )=>t= type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1271, 18);
				PushFollow(Follow._type_in_typeorvalue7777);
				t=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, t.Tree);
				DebugLocation(1271, 24);
				if (state.backtracking == 0)
				{
					 retval.result = new TypeOrValue((t!=null?t.result:default(ISmiType))); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1272:4: v= value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1272, 5);
				PushFollow(Follow._value_in_typeorvalue7787);
				v=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v.Tree);
				DebugLocation(1272, 12);
				if (state.backtracking == 0)
				{
					 retval.result = new TypeOrValue((v!=null?v.result:default(ISmiValue))); 
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("typeorvalue", 90);
			LeaveRule("typeorvalue", 90);
			LeaveRule_typeorvalue();
		}
		DebugLocation(1272, 52);
		} finally { DebugExitRule(GrammarFileName, "typeorvalue"); }
		return retval;

	}
	// $ANTLR end "typeorvalue"

	private sealed partial class typeorvaluelist_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public IList<TypeOrValue> result = new List<TypeOrValue>();
		public typeorvaluelist_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_typeorvaluelist();
	partial void LeaveRule_typeorvaluelist();
	// $ANTLR start "typeorvaluelist"
	// Smi.g:1275:1: typeorvaluelist returns [IList<TypeOrValue> result = new List<TypeOrValue>()] : t1= typeorvalue ( COMMA t2= typeorvalue )* ;
	[GrammarRule("typeorvaluelist")]
	private SmiParser.typeorvaluelist_return typeorvaluelist()
	{
		EnterRule_typeorvaluelist();
		EnterRule("typeorvaluelist", 91);
		TraceIn("typeorvaluelist", 91);
		SmiParser.typeorvaluelist_return retval = new SmiParser.typeorvaluelist_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMMA326 = default(IToken);
		SmiParser.typeorvalue_return t1 = default(SmiParser.typeorvalue_return);
		SmiParser.typeorvalue_return t2 = default(SmiParser.typeorvalue_return);

		CommonTree COMMA326_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "typeorvaluelist");
		DebugLocation(1275, 1);
		try
		{
			// Smi.g:1276:5: (t1= typeorvalue ( COMMA t2= typeorvalue )* )
			DebugEnterAlt(1);
			// Smi.g:1276:7: t1= typeorvalue ( COMMA t2= typeorvalue )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1276, 9);
			PushFollow(Follow._typeorvalue_in_typeorvaluelist7808);
			t1=typeorvalue();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, t1.Tree);
			DebugLocation(1276, 22);
			if (state.backtracking == 0)
			{
				 retval.result.Add((t1!=null?t1.result:default(TypeOrValue))); 
			}
			DebugLocation(1277, 2);
			// Smi.g:1277:2: ( COMMA t2= typeorvalue )*
			try { DebugEnterSubRule(141);
			while (true)
			{
				int alt141=2;
				try { DebugEnterDecision(141, false);
				int LA141_1 = input.LA(1);

				if ((LA141_1==COMMA))
				{
					alt141 = 1;
				}


				} finally { DebugExitDecision(141); }
				switch ( alt141 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1277:3: COMMA t2= typeorvalue
					{
					DebugLocation(1277, 3);
					COMMA326=(IToken)Match(input,COMMA,Follow._COMMA_in_typeorvaluelist7815); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA326_tree = (CommonTree)adaptor.Create(COMMA326);
					adaptor.AddChild(root_0, COMMA326_tree);
					}
					DebugLocation(1277, 11);
					PushFollow(Follow._typeorvalue_in_typeorvaluelist7819);
					t2=typeorvalue();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, t2.Tree);
					DebugLocation(1277, 24);
					if (state.backtracking == 0)
					{
						 retval.result.Add((t2!=null?t2.result:default(TypeOrValue))); 
					}

					}
					break;

				default:
					goto loop141;
				}
			}

			loop141:
				;

			} finally { DebugExitSubRule(141); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("typeorvaluelist", 91);
			LeaveRule("typeorvaluelist", 91);
			LeaveRule_typeorvaluelist();
		}
		DebugLocation(1278, 1);
		} finally { DebugExitRule(GrammarFileName, "typeorvaluelist"); }
		return retval;

	}
	// $ANTLR end "typeorvaluelist"

	private sealed partial class elementType_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ElementType result;
		public elementType_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_elementType();
	partial void LeaveRule_elementType();
	// $ANTLR start "elementType"
	// Smi.g:1281:1: elementType returns [ElementType result] : (t= elementType_tagged | COMPONENTS_KW OF_KW t4= type );
	[GrammarRule("elementType")]
	private SmiParser.elementType_return elementType()
	{
		EnterRule_elementType();
		EnterRule("elementType", 92);
		TraceIn("elementType", 92);
		SmiParser.elementType_return retval = new SmiParser.elementType_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMPONENTS_KW327 = default(IToken);
		IToken OF_KW328 = default(IToken);
		SmiParser.elementType_tagged_return t = default(SmiParser.elementType_tagged_return);
		SmiParser.type_return t4 = default(SmiParser.type_return);

		CommonTree COMPONENTS_KW327_tree = default(CommonTree);
		CommonTree OF_KW328_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "elementType");
		DebugLocation(1281, 1);
		try
		{
			// Smi.g:1282:5: (t= elementType_tagged | COMPONENTS_KW OF_KW t4= type )
			int alt142=2;
			try { DebugEnterDecision(142, false);
			int LA142_1 = input.LA(1);

			if ((LA142_1==LOWER))
			{
				alt142 = 1;
			}
			else if ((LA142_1==COMPONENTS_KW))
			{
				alt142 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 142, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(142); }
			switch (alt142)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1282:7: t= elementType_tagged
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1282, 8);
				PushFollow(Follow._elementType_tagged_in_elementType7846);
				t=elementType_tagged();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, t.Tree);
				DebugLocation(1282, 28);
				if (state.backtracking == 0)
				{
					 retval.result = (t!=null?t.result:default(TaggedElementType)); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1283:7: COMPONENTS_KW OF_KW t4= type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1283, 7);
				COMPONENTS_KW327=(IToken)Match(input,COMPONENTS_KW,Follow._COMPONENTS_KW_in_elementType7856); if (state.failed) return retval;
				if (state.backtracking == 0) {
				COMPONENTS_KW327_tree = (CommonTree)adaptor.Create(COMPONENTS_KW327);
				adaptor.AddChild(root_0, COMPONENTS_KW327_tree);
				}
				DebugLocation(1283, 21);
				OF_KW328=(IToken)Match(input,OF_KW,Follow._OF_KW_in_elementType7858); if (state.failed) return retval;
				if (state.backtracking == 0) {
				OF_KW328_tree = (CommonTree)adaptor.Create(OF_KW328);
				adaptor.AddChild(root_0, OF_KW328_tree);
				}
				DebugLocation(1283, 29);
				PushFollow(Follow._type_in_elementType7862);
				t4=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, t4.Tree);
				DebugLocation(1283, 35);
				if (state.backtracking == 0)
				{
					 retval.result = new ComponentsOfElementType((t4!=null?t4.result:default(ISmiType))); 
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("elementType", 92);
			LeaveRule("elementType", 92);
			LeaveRule_elementType();
		}
		DebugLocation(1284, 1);
		} finally { DebugExitRule(GrammarFileName, "elementType"); }
		return retval;

	}
	// $ANTLR end "elementType"

	private sealed partial class elementType_tagged_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public TaggedElementType result;
		public elementType_tagged_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_elementType_tagged();
	partial void LeaveRule_elementType_tagged();
	// $ANTLR start "elementType_tagged"
	// Smi.g:1286:1: elementType_tagged returns [TaggedElementType result] : name= LOWER ( ( L_BRACKET ( NUMBER | UPPER | LOWER ) )=>t1= tag )? (t2= tag_default )? t3= type ( OPTIONAL_KW | DEFAULT_KW v= value )? ;
	[GrammarRule("elementType_tagged")]
	private SmiParser.elementType_tagged_return elementType_tagged()
	{
		EnterRule_elementType_tagged();
		EnterRule("elementType_tagged", 93);
		TraceIn("elementType_tagged", 93);
		SmiParser.elementType_tagged_return retval = new SmiParser.elementType_tagged_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken name = default(IToken);
		IToken OPTIONAL_KW329 = default(IToken);
		IToken DEFAULT_KW330 = default(IToken);
		SmiParser.tag_return t1 = default(SmiParser.tag_return);
		SmiParser.tag_default_return t2 = default(SmiParser.tag_default_return);
		SmiParser.type_return t3 = default(SmiParser.type_return);
		SmiParser.value_return v = default(SmiParser.value_return);

		CommonTree name_tree = default(CommonTree);
		CommonTree OPTIONAL_KW329_tree = default(CommonTree);
		CommonTree DEFAULT_KW330_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "elementType_tagged");
		DebugLocation(1286, 1);
		try
		{
			// Smi.g:1287:5: (name= LOWER ( ( L_BRACKET ( NUMBER | UPPER | LOWER ) )=>t1= tag )? (t2= tag_default )? t3= type ( OPTIONAL_KW | DEFAULT_KW v= value )? )
			DebugEnterAlt(1);
			// Smi.g:1287:7: name= LOWER ( ( L_BRACKET ( NUMBER | UPPER | LOWER ) )=>t1= tag )? (t2= tag_default )? t3= type ( OPTIONAL_KW | DEFAULT_KW v= value )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1287, 11);
			name=(IToken)Match(input,LOWER,Follow._LOWER_in_elementType_tagged7884); if (state.failed) return retval;
			if (state.backtracking == 0) {
			name_tree = (CommonTree)adaptor.Create(name);
			adaptor.AddChild(root_0, name_tree);
			}
			DebugLocation(1288, 2);
			if (state.backtracking == 0)
			{
				 
					    retval.result = new TaggedElementType((name!=null?name.Text:null));
				    
			}
			DebugLocation(1291, 2);
			// Smi.g:1291:2: ( ( L_BRACKET ( NUMBER | UPPER | LOWER ) )=>t1= tag )?
			int alt143=2;
			try { DebugEnterSubRule(143);
			try { DebugEnterDecision(143, false);
			int LA143_1 = input.LA(1);

			if ((LA143_1==L_BRACKET))
			{
				int LA143_2 = input.LA(2);

				if ((EvaluatePredicate(synpred41_Smi_fragment)))
				{
					alt143 = 1;
				}
			}
			} finally { DebugExitDecision(143); }
			switch (alt143)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1291:3: ( L_BRACKET ( NUMBER | UPPER | LOWER ) )=>t1= tag
				{
				DebugLocation(1291, 41);
				PushFollow(Follow._tag_in_elementType_tagged7908);
				t1=tag();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, t1.Tree);
				DebugLocation(1291, 46);
				if (state.backtracking == 0)
				{
					 retval.result.Tag = (t1!=null?t1.result:default(Tag)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(143); }

			DebugLocation(1292, 5);
			// Smi.g:1292:5: (t2= tag_default )?
			int alt144=2;
			try { DebugEnterSubRule(144);
			try { DebugEnterDecision(144, false);
			int LA144_1 = input.LA(1);

			if ((LA144_1==AUTOMATIC_KW||LA144_1==EXPLICIT_KW||LA144_1==IMPLICIT_KW))
			{
				alt144 = 1;
			}
			} finally { DebugExitDecision(144); }
			switch (alt144)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1292:6: t2= tag_default
				{
				DebugLocation(1292, 8);
				PushFollow(Follow._tag_default_in_elementType_tagged7922);
				t2=tag_default();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, t2.Tree);
				DebugLocation(1292, 21);
				if (state.backtracking == 0)
				{
					 retval.result.TagDefault = (t2!=null?t2.result:default(TagDefault)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(144); }

			DebugLocation(1293, 4);
			PushFollow(Follow._type_in_elementType_tagged7932);
			t3=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, t3.Tree);
			DebugLocation(1293, 10);
			if (state.backtracking == 0)
			{
				  retval.result.Subtype = (t3!=null?t3.result:default(ISmiType)); 
			}
			DebugLocation(1294, 2);
			// Smi.g:1294:2: ( OPTIONAL_KW | DEFAULT_KW v= value )?
			int alt145=3;
			try { DebugEnterSubRule(145);
			try { DebugEnterDecision(145, false);
			int LA145_1 = input.LA(1);

			if ((LA145_1==OPTIONAL_KW))
			{
				alt145 = 1;
			}
			else if ((LA145_1==DEFAULT_KW))
			{
				alt145 = 2;
			}
			} finally { DebugExitDecision(145); }
			switch (alt145)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1294:3: OPTIONAL_KW
				{
				DebugLocation(1294, 3);
				OPTIONAL_KW329=(IToken)Match(input,OPTIONAL_KW,Follow._OPTIONAL_KW_in_elementType_tagged7938); if (state.failed) return retval;
				if (state.backtracking == 0) {
				OPTIONAL_KW329_tree = (CommonTree)adaptor.Create(OPTIONAL_KW329);
				adaptor.AddChild(root_0, OPTIONAL_KW329_tree);
				}
				DebugLocation(1294, 15);
				if (state.backtracking == 0)
				{
					 retval.result.Optional = true; 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1295:4: DEFAULT_KW v= value
				{
				DebugLocation(1295, 4);
				DEFAULT_KW330=(IToken)Match(input,DEFAULT_KW,Follow._DEFAULT_KW_in_elementType_tagged7946); if (state.failed) return retval;
				if (state.backtracking == 0) {
				DEFAULT_KW330_tree = (CommonTree)adaptor.Create(DEFAULT_KW330);
				adaptor.AddChild(root_0, DEFAULT_KW330_tree);
				}
				DebugLocation(1295, 15);
				if (state.backtracking == 0)
				{
					 retval.result.Default = true; 
				}
				DebugLocation(1296, 3);
				PushFollow(Follow._value_in_elementType_tagged7953);
				v=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v.Tree);
				DebugLocation(1296, 10);
				if (state.backtracking == 0)
				{
					 retval.result.Value = (v!=null?v.result:default(ISmiValue)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(145); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("elementType_tagged", 93);
			LeaveRule("elementType_tagged", 93);
			LeaveRule_elementType_tagged();
		}
		DebugLocation(1297, 1);
		} finally { DebugExitRule(GrammarFileName, "elementType_tagged"); }
		return retval;

	}
	// $ANTLR end "elementType_tagged"

	private sealed partial class namedNumber_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public NamedNumber result;
		public namedNumber_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_namedNumber();
	partial void LeaveRule_namedNumber();
	// $ANTLR start "namedNumber"
	// Smi.g:1302:1: namedNumber returns [NamedNumber result] : name= LOWER L_PAREN (sn= signed_number |dv= defined_value ) R_PAREN ;
	[GrammarRule("namedNumber")]
	private SmiParser.namedNumber_return namedNumber()
	{
		EnterRule_namedNumber();
		EnterRule("namedNumber", 94);
		TraceIn("namedNumber", 94);
		SmiParser.namedNumber_return retval = new SmiParser.namedNumber_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken name = default(IToken);
		IToken L_PAREN331 = default(IToken);
		IToken R_PAREN332 = default(IToken);
		SmiParser.signed_number_return sn = default(SmiParser.signed_number_return);
		SmiParser.defined_value_return dv = default(SmiParser.defined_value_return);

		CommonTree name_tree = default(CommonTree);
		CommonTree L_PAREN331_tree = default(CommonTree);
		CommonTree R_PAREN332_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "namedNumber");
		DebugLocation(1302, 1);
		try
		{
			// Smi.g:1303:5: (name= LOWER L_PAREN (sn= signed_number |dv= defined_value ) R_PAREN )
			DebugEnterAlt(1);
			// Smi.g:1303:7: name= LOWER L_PAREN (sn= signed_number |dv= defined_value ) R_PAREN
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1303, 11);
			name=(IToken)Match(input,LOWER,Follow._LOWER_in_namedNumber7981); if (state.failed) return retval;
			if (state.backtracking == 0) {
			name_tree = (CommonTree)adaptor.Create(name);
			adaptor.AddChild(root_0, name_tree);
			}
			DebugLocation(1304, 2);
			L_PAREN331=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_namedNumber7985); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_PAREN331_tree = (CommonTree)adaptor.Create(L_PAREN331);
			adaptor.AddChild(root_0, L_PAREN331_tree);
			}
			DebugLocation(1304, 10);
			// Smi.g:1304:10: (sn= signed_number |dv= defined_value )
			int alt146=2;
			try { DebugEnterSubRule(146);
			try { DebugEnterDecision(146, false);
			int LA146_1 = input.LA(1);

			if ((LA146_1==MINUS||LA146_1==NUMBER))
			{
				alt146 = 1;
			}
			else if ((LA146_1==LOWER||LA146_1==UPPER))
			{
				alt146 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 146, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(146); }
			switch (alt146)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1304:11: sn= signed_number
				{
				DebugLocation(1304, 13);
				PushFollow(Follow._signed_number_in_namedNumber7990);
				sn=signed_number();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, sn.Tree);
				DebugLocation(1304, 28);
				if (state.backtracking == 0)
				{
					 retval.result = new NamedNumber((name!=null?name.Text:null), (sn!=null?sn.result:default(NumberLiteralValue))); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1305:4: dv= defined_value
				{
				DebugLocation(1305, 6);
				PushFollow(Follow._defined_value_in_namedNumber8000);
				dv=defined_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, dv.Tree);
				DebugLocation(1305, 21);
				if (state.backtracking == 0)
				{
					 retval.result = new NamedNumber((name!=null?name.Text:null), (dv!=null?dv.result:default(DefinedValue))); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(146); }

			DebugLocation(1305, 77);
			R_PAREN332=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_namedNumber8005); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_PAREN332_tree = (CommonTree)adaptor.Create(R_PAREN332);
			adaptor.AddChild(root_0, R_PAREN332_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("namedNumber", 94);
			LeaveRule("namedNumber", 94);
			LeaveRule_namedNumber();
		}
		DebugLocation(1306, 1);
		} finally { DebugExitRule(GrammarFileName, "namedNumber"); }
		return retval;

	}
	// $ANTLR end "namedNumber"

	private sealed partial class signed_number_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public NumberLiteralValue result;
		public signed_number_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_signed_number();
	partial void LeaveRule_signed_number();
	// $ANTLR start "signed_number"
	// Smi.g:1308:1: signed_number returns [NumberLiteralValue result] : ( MINUS num= NUMBER |num2= NUMBER );
	[GrammarRule("signed_number")]
	private SmiParser.signed_number_return signed_number()
	{
		EnterRule_signed_number();
		EnterRule("signed_number", 95);
		TraceIn("signed_number", 95);
		SmiParser.signed_number_return retval = new SmiParser.signed_number_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken num = default(IToken);
		IToken num2 = default(IToken);
		IToken MINUS333 = default(IToken);

		CommonTree num_tree = default(CommonTree);
		CommonTree num2_tree = default(CommonTree);
		CommonTree MINUS333_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "signed_number");
		DebugLocation(1308, 1);
		try
		{
			// Smi.g:1309:5: ( MINUS num= NUMBER |num2= NUMBER )
			int alt147=2;
			try { DebugEnterDecision(147, false);
			int LA147_1 = input.LA(1);

			if ((LA147_1==MINUS))
			{
				alt147 = 1;
			}
			else if ((LA147_1==NUMBER))
			{
				alt147 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 147, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(147); }
			switch (alt147)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1309:7: MINUS num= NUMBER
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1309, 7);
				MINUS333=(IToken)Match(input,MINUS,Follow._MINUS_in_signed_number8023); if (state.failed) return retval;
				if (state.backtracking == 0) {
				MINUS333_tree = (CommonTree)adaptor.Create(MINUS333);
				adaptor.AddChild(root_0, MINUS333_tree);
				}
				DebugLocation(1309, 16);
				num=(IToken)Match(input,NUMBER,Follow._NUMBER_in_signed_number8027); if (state.failed) return retval;
				if (state.backtracking == 0) {
				num_tree = (CommonTree)adaptor.Create(num);
				adaptor.AddChild(root_0, num_tree);
				}
				DebugLocation(1309, 24);
				if (state.backtracking == 0)
				{
					 retval.result = new NumberLiteralValue(-1 * long.Parse((num!=null?num.Text:null))); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1310:4: num2= NUMBER
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1310, 8);
				num2=(IToken)Match(input,NUMBER,Follow._NUMBER_in_signed_number8036); if (state.failed) return retval;
				if (state.backtracking == 0) {
				num2_tree = (CommonTree)adaptor.Create(num2);
				adaptor.AddChild(root_0, num2_tree);
				}
				DebugLocation(1310, 16);
				if (state.backtracking == 0)
				{
					 retval.result = new NumberLiteralValue(ulong.Parse((num2!=null?num2.Text:null))); 
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("signed_number", 95);
			LeaveRule("signed_number", 95);
			LeaveRule_signed_number();
		}
		DebugLocation(1311, 1);
		} finally { DebugExitRule(GrammarFileName, "signed_number"); }
		return retval;

	}
	// $ANTLR end "signed_number"

	private sealed partial class element_set_specs_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ElementSetRange result = new ElementSetRange();
		public element_set_specs_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_element_set_specs();
	partial void LeaveRule_element_set_specs();
	// $ANTLR start "element_set_specs"
	// Smi.g:1313:1: element_set_specs returns [ElementSetRange result = new ElementSetRange()] : left= element_set_spec ( COMMA DOTDOTDOT )? ( COMMA right= element_set_spec )? ;
	[GrammarRule("element_set_specs")]
	private SmiParser.element_set_specs_return element_set_specs()
	{
		EnterRule_element_set_specs();
		EnterRule("element_set_specs", 96);
		TraceIn("element_set_specs", 96);
		SmiParser.element_set_specs_return retval = new SmiParser.element_set_specs_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMMA334 = default(IToken);
		IToken DOTDOTDOT335 = default(IToken);
		IToken COMMA336 = default(IToken);
		SmiParser.element_set_spec_return left = default(SmiParser.element_set_spec_return);
		SmiParser.element_set_spec_return right = default(SmiParser.element_set_spec_return);

		CommonTree COMMA334_tree = default(CommonTree);
		CommonTree DOTDOTDOT335_tree = default(CommonTree);
		CommonTree COMMA336_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "element_set_specs");
		DebugLocation(1313, 2);
		try
		{
			// Smi.g:1314:5: (left= element_set_spec ( COMMA DOTDOTDOT )? ( COMMA right= element_set_spec )? )
			DebugEnterAlt(1);
			// Smi.g:1314:7: left= element_set_spec ( COMMA DOTDOTDOT )? ( COMMA right= element_set_spec )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1314, 11);
			PushFollow(Follow._element_set_spec_in_element_set_specs8058);
			left=element_set_spec();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, left.Tree);
			DebugLocation(1314, 29);
			if (state.backtracking == 0)
			{
				 retval.result.LeftElement = (left!=null?left.result:default(ConstraintElement)); 
			}
			DebugLocation(1315, 3);
			// Smi.g:1315:3: ( COMMA DOTDOTDOT )?
			int alt148=2;
			try { DebugEnterSubRule(148);
			try { DebugEnterDecision(148, false);
			int LA148_1 = input.LA(1);

			if ((LA148_1==COMMA))
			{
				int LA148_2 = input.LA(2);

				if ((LA148_2==DOTDOTDOT))
				{
					alt148 = 1;
				}
			}
			} finally { DebugExitDecision(148); }
			switch (alt148)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1315:4: COMMA DOTDOTDOT
				{
				DebugLocation(1315, 4);
				COMMA334=(IToken)Match(input,COMMA,Follow._COMMA_in_element_set_specs8066); if (state.failed) return retval;
				if (state.backtracking == 0) {
				COMMA334_tree = (CommonTree)adaptor.Create(COMMA334);
				adaptor.AddChild(root_0, COMMA334_tree);
				}
				DebugLocation(1315, 10);
				DOTDOTDOT335=(IToken)Match(input,DOTDOTDOT,Follow._DOTDOTDOT_in_element_set_specs8068); if (state.failed) return retval;
				if (state.backtracking == 0) {
				DOTDOTDOT335_tree = (CommonTree)adaptor.Create(DOTDOTDOT335);
				adaptor.AddChild(root_0, DOTDOTDOT335_tree);
				}
				DebugLocation(1315, 20);
				if (state.backtracking == 0)
				{
					 retval.result.ContainsEllipsis = true; 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(148); }

			DebugLocation(1316, 3);
			// Smi.g:1316:3: ( COMMA right= element_set_spec )?
			int alt149=2;
			try { DebugEnterSubRule(149);
			try { DebugEnterDecision(149, false);
			int LA149_1 = input.LA(1);

			if ((LA149_1==COMMA))
			{
				alt149 = 1;
			}
			} finally { DebugExitDecision(149); }
			switch (alt149)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1316:4: COMMA right= element_set_spec
				{
				DebugLocation(1316, 4);
				COMMA336=(IToken)Match(input,COMMA,Follow._COMMA_in_element_set_specs8078); if (state.failed) return retval;
				if (state.backtracking == 0) {
				COMMA336_tree = (CommonTree)adaptor.Create(COMMA336);
				adaptor.AddChild(root_0, COMMA336_tree);
				}
				DebugLocation(1316, 15);
				PushFollow(Follow._element_set_spec_in_element_set_specs8082);
				right=element_set_spec();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, right.Tree);
				DebugLocation(1316, 33);
				if (state.backtracking == 0)
				{
					 retval.result.RightElement = (right!=null?right.result:default(ConstraintElement)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(149); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("element_set_specs", 96);
			LeaveRule("element_set_specs", 96);
			LeaveRule_element_set_specs();
		}
		DebugLocation(1317, 2);
		} finally { DebugExitRule(GrammarFileName, "element_set_specs"); }
		return retval;

	}
	// $ANTLR end "element_set_specs"

	private sealed partial class exception_spec_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ExceptionSpec result;
		public exception_spec_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_exception_spec();
	partial void LeaveRule_exception_spec();
	// $ANTLR start "exception_spec"
	// Smi.g:1319:1: exception_spec returns [ExceptionSpec result] : EXCLAMATION ( ( signed_number )=>sn= signed_number | ( defined_value )=>dv= defined_value |t= type COLON v= value ) ;
	[GrammarRule("exception_spec")]
	private SmiParser.exception_spec_return exception_spec()
	{
		EnterRule_exception_spec();
		EnterRule("exception_spec", 97);
		TraceIn("exception_spec", 97);
		SmiParser.exception_spec_return retval = new SmiParser.exception_spec_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken EXCLAMATION337 = default(IToken);
		IToken COLON338 = default(IToken);
		SmiParser.signed_number_return sn = default(SmiParser.signed_number_return);
		SmiParser.defined_value_return dv = default(SmiParser.defined_value_return);
		SmiParser.type_return t = default(SmiParser.type_return);
		SmiParser.value_return v = default(SmiParser.value_return);

		CommonTree EXCLAMATION337_tree = default(CommonTree);
		CommonTree COLON338_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "exception_spec");
		DebugLocation(1319, 17);
		try
		{
			// Smi.g:1320:6: ( EXCLAMATION ( ( signed_number )=>sn= signed_number | ( defined_value )=>dv= defined_value |t= type COLON v= value ) )
			DebugEnterAlt(1);
			// Smi.g:1320:8: EXCLAMATION ( ( signed_number )=>sn= signed_number | ( defined_value )=>dv= defined_value |t= type COLON v= value )
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1320, 8);
			EXCLAMATION337=(IToken)Match(input,EXCLAMATION,Follow._EXCLAMATION_in_exception_spec8107); if (state.failed) return retval;
			if (state.backtracking == 0) {
			EXCLAMATION337_tree = (CommonTree)adaptor.Create(EXCLAMATION337);
			adaptor.AddChild(root_0, EXCLAMATION337_tree);
			}
			DebugLocation(1321, 17);
			// Smi.g:1321:17: ( ( signed_number )=>sn= signed_number | ( defined_value )=>dv= defined_value |t= type COLON v= value )
			int alt150=3;
			try { DebugEnterSubRule(150);
			try { DebugEnterDecision(150, false);
			int LA150_1 = input.LA(1);

			if ((LA150_1==MINUS) && (EvaluatePredicate(synpred42_Smi_fragment)))
			{
				alt150 = 1;
			}
			else if ((LA150_1==NUMBER) && (EvaluatePredicate(synpred42_Smi_fragment)))
			{
				alt150 = 1;
			}
			else if ((LA150_1==UPPER))
			{
				int LA150_2 = input.LA(2);

				if ((LA150_2==DOT))
				{
					int LA150_3 = input.LA(3);

					if ((LA150_3==LOWER) && (EvaluatePredicate(synpred43_Smi_fragment)))
					{
						alt150 = 2;
					}
					else if ((LA150_3==UPPER))
					{
						alt150 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 150, 6, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else if ((LA150_2==COLON||LA150_2==L_PAREN))
				{
					alt150 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 150, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA150_1==LOWER))
			{
				int LA150_2 = input.LA(2);

				if ((LA150_2==LESS))
				{
					alt150 = 3;
				}
				else if ((LA150_2==R_PAREN) && (EvaluatePredicate(synpred43_Smi_fragment)))
				{
					alt150 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 150, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA150_1==ANY_KW||LA150_1==BIT_KW||(LA150_1>=BMP_STR_KW && LA150_1<=BOOLEAN_KW)||LA150_1==CHARACTER_KW||LA150_1==CHOICE_KW||LA150_1==EMBEDDED_KW||LA150_1==ENUMERATED_KW||LA150_1==ERROR_KW||LA150_1==EXTERNAL_KW||(LA150_1>=GENERALIZED_TIME_KW && LA150_1<=GRAPHIC_STR_KW)||LA150_1==IA5_STRING_KW||LA150_1==INTEGER_KW||LA150_1==ISO646_STR_KW||LA150_1==L_BRACKET||LA150_1==NULL_KW||LA150_1==NUMERIC_STR_KW||(LA150_1>=OBJECT_KW && LA150_1<=OCTET_KW)||LA150_1==OPERATION_KW||LA150_1==PRINTABLE_STR_KW||LA150_1==REAL_KW||(LA150_1>=SEQUENCE_KW && LA150_1<=SET_KW)||LA150_1==T61_STR_KW||LA150_1==TELETEX_STR_KW||LA150_1==UNIVERSAL_STR_KW||(LA150_1>=UTC_TIME_KW && LA150_1<=VISIBLE_STR_KW)||LA150_1==130||LA150_1==136||(LA150_1>=157 && LA150_1<=160)||(LA150_1>=162 && LA150_1<=164)||LA150_1==178||LA150_1==187||LA150_1==190))
			{
				alt150 = 3;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 150, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(150); }
			switch (alt150)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1321:19: ( signed_number )=>sn= signed_number
				{
				DebugLocation(1321, 40);
				PushFollow(Follow._signed_number_in_exception_spec8136);
				sn=signed_number();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, sn.Tree);
				DebugLocation(1321, 55);
				if (state.backtracking == 0)
				{
					 retval.result = new ExceptionSpec((sn!=null?sn.result:default(NumberLiteralValue))); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1322:21: ( defined_value )=>dv= defined_value
				{
				DebugLocation(1322, 42);
				PushFollow(Follow._defined_value_in_exception_spec8168);
				dv=defined_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, dv.Tree);
				DebugLocation(1322, 57);
				if (state.backtracking == 0)
				{
					 retval.result = new ExceptionSpec((dv!=null?dv.result:default(DefinedValue))); 
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:1323:21: t= type COLON v= value
				{
				DebugLocation(1323, 22);
				PushFollow(Follow._type_in_exception_spec8194);
				t=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, t.Tree);
				DebugLocation(1323, 28);
				COLON338=(IToken)Match(input,COLON,Follow._COLON_in_exception_spec8196); if (state.failed) return retval;
				if (state.backtracking == 0) {
				COLON338_tree = (CommonTree)adaptor.Create(COLON338);
				adaptor.AddChild(root_0, COLON338_tree);
				}
				DebugLocation(1323, 35);
				PushFollow(Follow._value_in_exception_spec8200);
				v=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v.Tree);
				DebugLocation(1323, 42);
				if (state.backtracking == 0)
				{
					 retval.result = new ExceptionSpec((t!=null?t.result:default(ISmiType)), (v!=null?v.result:default(ISmiValue))); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(150); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("exception_spec", 97);
			LeaveRule("exception_spec", 97);
			LeaveRule_exception_spec();
		}
		DebugLocation(1324, 17);
		} finally { DebugExitRule(GrammarFileName, "exception_spec"); }
		return retval;

	}
	// $ANTLR end "exception_spec"

	private sealed partial class element_set_spec_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ConstraintElement result;
		public element_set_spec_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_element_set_spec();
	partial void LeaveRule_element_set_spec();
	// $ANTLR start "element_set_spec"
	// Smi.g:1326:1: element_set_spec returns [ConstraintElement result] : (n= element_set_spec_normal | ALL_KW EXCEPT_KW c= constraint_elements );
	[GrammarRule("element_set_spec")]
	private SmiParser.element_set_spec_return element_set_spec()
	{
		EnterRule_element_set_spec();
		EnterRule("element_set_spec", 98);
		TraceIn("element_set_spec", 98);
		SmiParser.element_set_spec_return retval = new SmiParser.element_set_spec_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken ALL_KW339 = default(IToken);
		IToken EXCEPT_KW340 = default(IToken);
		SmiParser.element_set_spec_normal_return n = default(SmiParser.element_set_spec_normal_return);
		SmiParser.constraint_elements_return c = default(SmiParser.constraint_elements_return);

		CommonTree ALL_KW339_tree = default(CommonTree);
		CommonTree EXCEPT_KW340_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "element_set_spec");
		DebugLocation(1326, 2);
		try
		{
			// Smi.g:1327:6: (n= element_set_spec_normal | ALL_KW EXCEPT_KW c= constraint_elements )
			int alt151=2;
			try { DebugEnterDecision(151, false);
			int LA151_1 = input.LA(1);

			if ((LA151_1==ANY_KW||LA151_1==BIT_KW||(LA151_1>=BMP_STR_KW && LA151_1<=BOOLEAN_KW)||(LA151_1>=B_STRING && LA151_1<=CHARACTER_KW)||LA151_1==CHOICE_KW||LA151_1==C_STRING||LA151_1==EMBEDDED_KW||LA151_1==ENUMERATED_KW||LA151_1==ERROR_KW||(LA151_1>=EXTERNAL_KW && LA151_1<=GRAPHIC_STR_KW)||(LA151_1>=H_STRING && LA151_1<=IA5_STRING_KW)||LA151_1==INCLUDES_KW||LA151_1==INTEGER_KW||LA151_1==ISO646_STR_KW||(LA151_1>=LOWER && LA151_1<=L_PAREN)||(LA151_1>=MINUS && LA151_1<=NUMERIC_STR_KW)||(LA151_1>=OBJECT_KW && LA151_1<=OCTET_KW)||LA151_1==OPERATION_KW||LA151_1==PATTERN_KW||LA151_1==PLUS_INFINITY_KW||LA151_1==PRINTABLE_STR_KW||LA151_1==REAL_KW||(LA151_1>=SEQUENCE_KW && LA151_1<=SET_KW)||LA151_1==SIZE_KW||LA151_1==T61_STR_KW||(LA151_1>=TELETEX_STR_KW && LA151_1<=TRUE_KW)||(LA151_1>=UNIVERSAL_STR_KW && LA151_1<=WITH_KW)||(LA151_1>=125 && LA151_1<=128)||(LA151_1>=130 && LA151_1<=133)||(LA151_1>=135 && LA151_1<=136)||LA151_1==142||(LA151_1>=145 && LA151_1<=147)||(LA151_1>=157 && LA151_1<=160)||(LA151_1>=162 && LA151_1<=164)||LA151_1==173||LA151_1==175||(LA151_1>=177 && LA151_1<=178)||(LA151_1>=180 && LA151_1<=182)||(LA151_1>=187 && LA151_1<=191)))
			{
				alt151 = 1;
			}
			else if ((LA151_1==ALL_KW))
			{
				alt151 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 151, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(151); }
			switch (alt151)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1327:8: n= element_set_spec_normal
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1327, 9);
				PushFollow(Follow._element_set_spec_normal_in_element_set_spec8239);
				n=element_set_spec_normal();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, n.Tree);
				DebugLocation(1327, 34);
				if (state.backtracking == 0)
				{
					 retval.result = (n!=null?n.result:default(NormalConstraintElement)); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1328:8: ALL_KW EXCEPT_KW c= constraint_elements
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1328, 8);
				ALL_KW339=(IToken)Match(input,ALL_KW,Follow._ALL_KW_in_element_set_spec8250); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ALL_KW339_tree = (CommonTree)adaptor.Create(ALL_KW339);
				adaptor.AddChild(root_0, ALL_KW339_tree);
				}
				DebugLocation(1328, 15);
				EXCEPT_KW340=(IToken)Match(input,EXCEPT_KW,Follow._EXCEPT_KW_in_element_set_spec8252); if (state.failed) return retval;
				if (state.backtracking == 0) {
				EXCEPT_KW340_tree = (CommonTree)adaptor.Create(EXCEPT_KW340);
				adaptor.AddChild(root_0, EXCEPT_KW340_tree);
				}
				DebugLocation(1328, 26);
				PushFollow(Follow._constraint_elements_in_element_set_spec8256);
				c=constraint_elements();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, c.Tree);
				DebugLocation(1328, 47);
				if (state.backtracking == 0)
				{
					 retval.result = new AllExceptConstraintElement((c!=null?c.result:default(ConstraintElement))); 
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("element_set_spec", 98);
			LeaveRule("element_set_spec", 98);
			LeaveRule_element_set_spec();
		}
		DebugLocation(1329, 2);
		} finally { DebugExitRule(GrammarFileName, "element_set_spec"); }
		return retval;

	}
	// $ANTLR end "element_set_spec"

	private sealed partial class element_set_spec_normal_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public NormalConstraintElement result = new NormalConstraintElement();
		public element_set_spec_normal_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_element_set_spec_normal();
	partial void LeaveRule_element_set_spec_normal();
	// $ANTLR start "element_set_spec_normal"
	// Smi.g:1331:1: element_set_spec_normal returns [NormalConstraintElement result = new NormalConstraintElement()] : left= intersections ( ( BAR | UNION_KW ) right= intersections )* ;
	[GrammarRule("element_set_spec_normal")]
	private SmiParser.element_set_spec_normal_return element_set_spec_normal()
	{
		EnterRule_element_set_spec_normal();
		EnterRule("element_set_spec_normal", 99);
		TraceIn("element_set_spec_normal", 99);
		SmiParser.element_set_spec_normal_return retval = new SmiParser.element_set_spec_normal_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken set341 = default(IToken);
		SmiParser.intersections_return left = default(SmiParser.intersections_return);
		SmiParser.intersections_return right = default(SmiParser.intersections_return);

		CommonTree set341_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "element_set_spec_normal");
		DebugLocation(1331, 2);
		try
		{
			// Smi.g:1332:5: (left= intersections ( ( BAR | UNION_KW ) right= intersections )* )
			DebugEnterAlt(1);
			// Smi.g:1332:7: left= intersections ( ( BAR | UNION_KW ) right= intersections )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1332, 11);
			PushFollow(Follow._intersections_in_element_set_spec_normal8279);
			left=intersections();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, left.Tree);
			DebugLocation(1333, 3);
			if (state.backtracking == 0)
			{
				  
						 retval.result.Add(new NormalConstraintElement((left!=null?left.result:default(ConstraintElement))));
					 
			}
			DebugLocation(1336, 3);
			// Smi.g:1336:3: ( ( BAR | UNION_KW ) right= intersections )*
			try { DebugEnterSubRule(152);
			while (true)
			{
				int alt152=2;
				try { DebugEnterDecision(152, false);
				int LA152_1 = input.LA(1);

				if ((LA152_1==BAR||LA152_1==UNION_KW))
				{
					alt152 = 1;
				}


				} finally { DebugExitDecision(152); }
				switch ( alt152 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1336:5: ( BAR | UNION_KW ) right= intersections
					{
					DebugLocation(1336, 5);

					set341=(IToken)input.LT(1);
					if (input.LA(1)==BAR||input.LA(1)==UNION_KW)
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set341));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(1336, 29);
					PushFollow(Follow._intersections_in_element_set_spec_normal8303);
					right=intersections();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, right.Tree);
					DebugLocation(1336, 44);
					if (state.backtracking == 0)
					{
						 retval.result.Add(new NormalConstraintElement((right!=null?right.result:default(ConstraintElement)))); 
					}

					}
					break;

				default:
					goto loop152;
				}
			}

			loop152:
				;

			} finally { DebugExitSubRule(152); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("element_set_spec_normal", 99);
			LeaveRule("element_set_spec_normal", 99);
			LeaveRule_element_set_spec_normal();
		}
		DebugLocation(1337, 2);
		} finally { DebugExitRule(GrammarFileName, "element_set_spec_normal"); }
		return retval;

	}
	// $ANTLR end "element_set_spec_normal"

	private sealed partial class intersections_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ConstraintElement result = new NormalConstraintElement();
		public intersections_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_intersections();
	partial void LeaveRule_intersections();
	// $ANTLR start "intersections"
	// Smi.g:1339:1: intersections returns [ConstraintElement result = new NormalConstraintElement()] : c1= constraint_elements_except ( ( INTERSECTION | INTERSECTION_KW ) c2= constraint_elements_except )* ;
	[GrammarRule("intersections")]
	private SmiParser.intersections_return intersections()
	{
		EnterRule_intersections();
		EnterRule("intersections", 100);
		TraceIn("intersections", 100);
		SmiParser.intersections_return retval = new SmiParser.intersections_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken set342 = default(IToken);
		SmiParser.constraint_elements_except_return c1 = default(SmiParser.constraint_elements_except_return);
		SmiParser.constraint_elements_except_return c2 = default(SmiParser.constraint_elements_except_return);

		CommonTree set342_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "intersections");
		DebugLocation(1339, 5);
		try
		{
			// Smi.g:1340:6: (c1= constraint_elements_except ( ( INTERSECTION | INTERSECTION_KW ) c2= constraint_elements_except )* )
			DebugEnterAlt(1);
			// Smi.g:1340:8: c1= constraint_elements_except ( ( INTERSECTION | INTERSECTION_KW ) c2= constraint_elements_except )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1340, 10);
			PushFollow(Follow._constraint_elements_except_in_intersections8330);
			c1=constraint_elements_except();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, c1.Tree);
			DebugLocation(1341, 3);
			if (state.backtracking == 0)
			{

					     retval.result.Add((c1!=null?c1.result:default(ConstraintElement))); 
				     
			}
			DebugLocation(1344, 6);
			// Smi.g:1344:6: ( ( INTERSECTION | INTERSECTION_KW ) c2= constraint_elements_except )*
			try { DebugEnterSubRule(153);
			while (true)
			{
				int alt153=2;
				try { DebugEnterDecision(153, false);
				int LA153_1 = input.LA(1);

				if (((LA153_1>=INTERSECTION && LA153_1<=INTERSECTION_KW)))
				{
					alt153 = 1;
				}


				} finally { DebugExitDecision(153); }
				switch ( alt153 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1344:8: ( INTERSECTION | INTERSECTION_KW ) c2= constraint_elements_except
					{
					DebugLocation(1344, 8);

					set342=(IToken)input.LT(1);
					if ((input.LA(1)>=INTERSECTION && input.LA(1)<=INTERSECTION_KW))
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set342));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(1345, 5);
					PushFollow(Follow._constraint_elements_except_in_intersections8359);
					c2=constraint_elements_except();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, c2.Tree);
					DebugLocation(1345, 33);
					if (state.backtracking == 0)
					{
						 retval.result.Add((c2!=null?c2.result:default(ConstraintElement))); 
					}

					}
					break;

				default:
					goto loop153;
				}
			}

			loop153:
				;

			} finally { DebugExitSubRule(153); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("intersections", 100);
			LeaveRule("intersections", 100);
			LeaveRule_intersections();
		}
		DebugLocation(1346, 5);
		} finally { DebugExitRule(GrammarFileName, "intersections"); }
		return retval;

	}
	// $ANTLR end "intersections"

	private sealed partial class constraint_elements_except_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ConstraintElement result;
		public constraint_elements_except_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_constraint_elements_except();
	partial void LeaveRule_constraint_elements_except();
	// $ANTLR start "constraint_elements_except"
	// Smi.g:1348:1: constraint_elements_except returns [ConstraintElement result] : c= constraint_elements ( EXCEPT_KW c2= constraint_elements )? ;
	[GrammarRule("constraint_elements_except")]
	private SmiParser.constraint_elements_except_return constraint_elements_except()
	{
		EnterRule_constraint_elements_except();
		EnterRule("constraint_elements_except", 101);
		TraceIn("constraint_elements_except", 101);
		SmiParser.constraint_elements_except_return retval = new SmiParser.constraint_elements_except_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken EXCEPT_KW343 = default(IToken);
		SmiParser.constraint_elements_return c = default(SmiParser.constraint_elements_return);
		SmiParser.constraint_elements_return c2 = default(SmiParser.constraint_elements_return);

		CommonTree EXCEPT_KW343_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "constraint_elements_except");
		DebugLocation(1348, 71);
		try
		{
			// Smi.g:1349:6: (c= constraint_elements ( EXCEPT_KW c2= constraint_elements )? )
			DebugEnterAlt(1);
			// Smi.g:1349:8: c= constraint_elements ( EXCEPT_KW c2= constraint_elements )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1349, 9);
			PushFollow(Follow._constraint_elements_in_constraint_elements_except8386);
			c=constraint_elements();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, c.Tree);
			DebugLocation(1349, 30);
			if (state.backtracking == 0)
			{
				 retval.result = (c!=null?c.result:default(ConstraintElement)); 
			}
			DebugLocation(1350, 3);
			// Smi.g:1350:3: ( EXCEPT_KW c2= constraint_elements )?
			int alt154=2;
			try { DebugEnterSubRule(154);
			try { DebugEnterDecision(154, false);
			int LA154_1 = input.LA(1);

			if ((LA154_1==EXCEPT_KW))
			{
				alt154 = 1;
			}
			} finally { DebugExitDecision(154); }
			switch (alt154)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1350:4: EXCEPT_KW c2= constraint_elements
				{
				DebugLocation(1350, 4);
				EXCEPT_KW343=(IToken)Match(input,EXCEPT_KW,Follow._EXCEPT_KW_in_constraint_elements_except8393); if (state.failed) return retval;
				if (state.backtracking == 0) {
				EXCEPT_KW343_tree = (CommonTree)adaptor.Create(EXCEPT_KW343);
				adaptor.AddChild(root_0, EXCEPT_KW343_tree);
				}
				DebugLocation(1350, 16);
				PushFollow(Follow._constraint_elements_in_constraint_elements_except8397);
				c2=constraint_elements();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, c2.Tree);
				DebugLocation(1350, 37);
				if (state.backtracking == 0)
				{
					 retval.result.Element = (c2!=null?c2.result:default(ConstraintElement)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(154); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("constraint_elements_except", 101);
			LeaveRule("constraint_elements_except", 101);
			LeaveRule_constraint_elements_except();
		}
		DebugLocation(1350, 71);
		} finally { DebugExitRule(GrammarFileName, "constraint_elements_except"); }
		return retval;

	}
	// $ANTLR end "constraint_elements_except"

	private sealed partial class constraint_elements_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ConstraintElement result;
		public constraint_elements_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_constraint_elements();
	partial void LeaveRule_constraint_elements();
	// $ANTLR start "constraint_elements"
	// Smi.g:1352:1: constraint_elements returns [ConstraintElement result] : ( ( value_range )=>vr= value_range | ( value )=>v= value | SIZE_KW c= constraint | FROM_KW c2= constraint | L_PAREN e= element_set_spec R_PAREN |i= constraint_elements_includes | PATTERN_KW v2= value | WITH_KW ( COMPONENT_KW co1= constraint |cs= constraint_elements_components ) );
	[GrammarRule("constraint_elements")]
	private SmiParser.constraint_elements_return constraint_elements()
	{
		EnterRule_constraint_elements();
		EnterRule("constraint_elements", 102);
		TraceIn("constraint_elements", 102);
		SmiParser.constraint_elements_return retval = new SmiParser.constraint_elements_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken SIZE_KW344 = default(IToken);
		IToken FROM_KW345 = default(IToken);
		IToken L_PAREN346 = default(IToken);
		IToken R_PAREN347 = default(IToken);
		IToken PATTERN_KW348 = default(IToken);
		IToken WITH_KW349 = default(IToken);
		IToken COMPONENT_KW350 = default(IToken);
		SmiParser.value_range_return vr = default(SmiParser.value_range_return);
		SmiParser.value_return v = default(SmiParser.value_return);
		SmiParser.constraint_return c = default(SmiParser.constraint_return);
		SmiParser.constraint_return c2 = default(SmiParser.constraint_return);
		SmiParser.element_set_spec_return e = default(SmiParser.element_set_spec_return);
		SmiParser.constraint_elements_includes_return i = default(SmiParser.constraint_elements_includes_return);
		SmiParser.value_return v2 = default(SmiParser.value_return);
		SmiParser.constraint_return co1 = default(SmiParser.constraint_return);
		SmiParser.constraint_elements_components_return cs = default(SmiParser.constraint_elements_components_return);

		CommonTree SIZE_KW344_tree = default(CommonTree);
		CommonTree FROM_KW345_tree = default(CommonTree);
		CommonTree L_PAREN346_tree = default(CommonTree);
		CommonTree R_PAREN347_tree = default(CommonTree);
		CommonTree PATTERN_KW348_tree = default(CommonTree);
		CommonTree WITH_KW349_tree = default(CommonTree);
		CommonTree COMPONENT_KW350_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "constraint_elements");
		DebugLocation(1352, 1);
		try
		{
			// Smi.g:1353:5: ( ( value_range )=>vr= value_range | ( value )=>v= value | SIZE_KW c= constraint | FROM_KW c2= constraint | L_PAREN e= element_set_spec R_PAREN |i= constraint_elements_includes | PATTERN_KW v2= value | WITH_KW ( COMPONENT_KW co1= constraint |cs= constraint_elements_components ) )
			int alt156=8;
			try { DebugEnterDecision(156, false);
			try
			{
				alt156 = dfa156.Predict(input);
			}
			catch (NoViableAltException nvae)
			{
				DebugRecognitionException(nvae);
				throw;
			}
			} finally { DebugExitDecision(156); }
			switch (alt156)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1353:7: ( value_range )=>vr= value_range
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1353, 26);
				PushFollow(Follow._value_range_in_constraint_elements8425);
				vr=value_range();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, vr.Tree);
				DebugLocation(1353, 39);
				if (state.backtracking == 0)
				{
					 retval.result = new ValueRangeConstraintElement((vr!=null?vr.result:default(ValueRange))); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1354:7: ( value )=>v= value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1354, 19);
				PushFollow(Follow._value_in_constraint_elements8443);
				v=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v.Tree);
				DebugLocation(1354, 26);
				if (state.backtracking == 0)
				{
					 retval.result = new ValueConstraintElement((v!=null?v.result:default(ISmiValue))); 
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:1355:7: SIZE_KW c= constraint
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1355, 7);
				SIZE_KW344=(IToken)Match(input,SIZE_KW,Follow._SIZE_KW_in_constraint_elements8453); if (state.failed) return retval;
				if (state.backtracking == 0) {
				SIZE_KW344_tree = (CommonTree)adaptor.Create(SIZE_KW344);
				adaptor.AddChild(root_0, SIZE_KW344_tree);
				}
				DebugLocation(1355, 16);
				PushFollow(Follow._constraint_in_constraint_elements8457);
				c=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, c.Tree);
				DebugLocation(1355, 28);
				if (state.backtracking == 0)
				{
					 retval.result = new SizeConstraintElement((c!=null?c.result:default(Constraint))); 
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Smi.g:1356:7: FROM_KW c2= constraint
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1356, 7);
				FROM_KW345=(IToken)Match(input,FROM_KW,Follow._FROM_KW_in_constraint_elements8467); if (state.failed) return retval;
				if (state.backtracking == 0) {
				FROM_KW345_tree = (CommonTree)adaptor.Create(FROM_KW345);
				adaptor.AddChild(root_0, FROM_KW345_tree);
				}
				DebugLocation(1356, 17);
				PushFollow(Follow._constraint_in_constraint_elements8471);
				c2=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, c2.Tree);
				DebugLocation(1356, 29);
				if (state.backtracking == 0)
				{
					 retval.result = new FromConstraintElement((c2!=null?c2.result:default(Constraint))); 
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Smi.g:1357:7: L_PAREN e= element_set_spec R_PAREN
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1357, 7);
				L_PAREN346=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_constraint_elements8481); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_PAREN346_tree = (CommonTree)adaptor.Create(L_PAREN346);
				adaptor.AddChild(root_0, L_PAREN346_tree);
				}
				DebugLocation(1357, 16);
				PushFollow(Follow._element_set_spec_in_constraint_elements8485);
				e=element_set_spec();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, e.Tree);
				DebugLocation(1357, 34);
				R_PAREN347=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_constraint_elements8487); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_PAREN347_tree = (CommonTree)adaptor.Create(R_PAREN347);
				adaptor.AddChild(root_0, R_PAREN347_tree);
				}
				DebugLocation(1357, 42);
				if (state.backtracking == 0)
				{
					 retval.result = new ElementSetConstraintElement((e!=null?e.result:default(ConstraintElement))); 
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// Smi.g:1358:7: i= constraint_elements_includes
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1358, 8);
				PushFollow(Follow._constraint_elements_includes_in_constraint_elements8499);
				i=constraint_elements_includes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, i.Tree);
				DebugLocation(1358, 38);
				if (state.backtracking == 0)
				{
					 retval.result = (i!=null?i.result:default(IncludeTypeConstraintElement)); 
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// Smi.g:1359:7: PATTERN_KW v2= value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1359, 7);
				PATTERN_KW348=(IToken)Match(input,PATTERN_KW,Follow._PATTERN_KW_in_constraint_elements8509); if (state.failed) return retval;
				if (state.backtracking == 0) {
				PATTERN_KW348_tree = (CommonTree)adaptor.Create(PATTERN_KW348);
				adaptor.AddChild(root_0, PATTERN_KW348_tree);
				}
				DebugLocation(1359, 20);
				PushFollow(Follow._value_in_constraint_elements8513);
				v2=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v2.Tree);
				DebugLocation(1359, 27);
				if (state.backtracking == 0)
				{
					 retval.result = new PatternConstraintElement((v2!=null?v2.result:default(ISmiValue))); 
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// Smi.g:1360:7: WITH_KW ( COMPONENT_KW co1= constraint |cs= constraint_elements_components )
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1360, 7);
				WITH_KW349=(IToken)Match(input,WITH_KW,Follow._WITH_KW_in_constraint_elements8524); if (state.failed) return retval;
				if (state.backtracking == 0) {
				WITH_KW349_tree = (CommonTree)adaptor.Create(WITH_KW349);
				adaptor.AddChild(root_0, WITH_KW349_tree);
				}
				DebugLocation(1361, 6);
				// Smi.g:1361:6: ( COMPONENT_KW co1= constraint |cs= constraint_elements_components )
				int alt155=2;
				try { DebugEnterSubRule(155);
				try { DebugEnterDecision(155, false);
				int LA155_1 = input.LA(1);

				if ((LA155_1==COMPONENT_KW))
				{
					alt155 = 1;
				}
				else if ((LA155_1==COMPONENTS_KW))
				{
					alt155 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 155, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(155); }
				switch (alt155)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1361:7: COMPONENT_KW co1= constraint
					{
					DebugLocation(1361, 7);
					COMPONENT_KW350=(IToken)Match(input,COMPONENT_KW,Follow._COMPONENT_KW_in_constraint_elements8533); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMPONENT_KW350_tree = (CommonTree)adaptor.Create(COMPONENT_KW350);
					adaptor.AddChild(root_0, COMPONENT_KW350_tree);
					}
					DebugLocation(1361, 23);
					PushFollow(Follow._constraint_in_constraint_elements8537);
					co1=constraint();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, co1.Tree);
					DebugLocation(1361, 35);
					if (state.backtracking == 0)
					{
						 retval.result = new WithComponentConstraintElement((co1!=null?co1.result:default(Constraint))); 
					}

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// Smi.g:1362:5: cs= constraint_elements_components
					{
					DebugLocation(1362, 7);
					PushFollow(Follow._constraint_elements_components_in_constraint_elements8548);
					cs=constraint_elements_components();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, cs.Tree);
					DebugLocation(1362, 39);
					if (state.backtracking == 0)
					{
						 retval.result = (cs!=null?cs.result:default(WithComponentsConstraintElement)); 
					}

					}
					break;

				}
				} finally { DebugExitSubRule(155); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("constraint_elements", 102);
			LeaveRule("constraint_elements", 102);
			LeaveRule_constraint_elements();
		}
		DebugLocation(1363, 1);
		} finally { DebugExitRule(GrammarFileName, "constraint_elements"); }
		return retval;

	}
	// $ANTLR end "constraint_elements"

	private sealed partial class constraint_elements_includes_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public IncludeTypeConstraintElement result = new IncludeTypeConstraintElement();
		public constraint_elements_includes_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_constraint_elements_includes();
	partial void LeaveRule_constraint_elements_includes();
	// $ANTLR start "constraint_elements_includes"
	// Smi.g:1365:1: constraint_elements_includes returns [IncludeTypeConstraintElement result = new IncludeTypeConstraintElement()] : ( INCLUDES_KW )? t= type ;
	[GrammarRule("constraint_elements_includes")]
	private SmiParser.constraint_elements_includes_return constraint_elements_includes()
	{
		EnterRule_constraint_elements_includes();
		EnterRule("constraint_elements_includes", 103);
		TraceIn("constraint_elements_includes", 103);
		SmiParser.constraint_elements_includes_return retval = new SmiParser.constraint_elements_includes_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken INCLUDES_KW351 = default(IToken);
		SmiParser.type_return t = default(SmiParser.type_return);

		CommonTree INCLUDES_KW351_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "constraint_elements_includes");
		DebugLocation(1365, 1);
		try
		{
			// Smi.g:1366:5: ( ( INCLUDES_KW )? t= type )
			DebugEnterAlt(1);
			// Smi.g:1366:7: ( INCLUDES_KW )? t= type
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1366, 7);
			// Smi.g:1366:7: ( INCLUDES_KW )?
			int alt157=2;
			try { DebugEnterSubRule(157);
			try { DebugEnterDecision(157, false);
			int LA157_1 = input.LA(1);

			if ((LA157_1==INCLUDES_KW))
			{
				alt157 = 1;
			}
			} finally { DebugExitDecision(157); }
			switch (alt157)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1366:8: INCLUDES_KW
				{
				DebugLocation(1366, 8);
				INCLUDES_KW351=(IToken)Match(input,INCLUDES_KW,Follow._INCLUDES_KW_in_constraint_elements_includes8570); if (state.failed) return retval;
				if (state.backtracking == 0) {
				INCLUDES_KW351_tree = (CommonTree)adaptor.Create(INCLUDES_KW351);
				adaptor.AddChild(root_0, INCLUDES_KW351_tree);
				}
				DebugLocation(1366, 20);
				if (state.backtracking == 0)
				{
					 retval.result.Includes = true; 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(157); }

			DebugLocation(1367, 3);
			PushFollow(Follow._type_in_constraint_elements_includes8580);
			t=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, t.Tree);
			DebugLocation(1367, 9);
			if (state.backtracking == 0)
			{
				 retval.result.ConstraintType = (t!=null?t.result:default(ISmiType)); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("constraint_elements_includes", 103);
			LeaveRule("constraint_elements_includes", 103);
			LeaveRule_constraint_elements_includes();
		}
		DebugLocation(1368, 1);
		} finally { DebugExitRule(GrammarFileName, "constraint_elements_includes"); }
		return retval;

	}
	// $ANTLR end "constraint_elements_includes"

	private sealed partial class constraint_elements_components_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public WithComponentsConstraintElement result = new WithComponentsConstraintElement();
		public constraint_elements_components_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_constraint_elements_components();
	partial void LeaveRule_constraint_elements_components();
	// $ANTLR start "constraint_elements_components"
	// Smi.g:1370:1: constraint_elements_components returns [WithComponentsConstraintElement result = new WithComponentsConstraintElement()] : COMPONENTS_KW L_BRACE ( DOTDOTDOT COMMA )? tcl= type_constraint_list R_BRACE ;
	[GrammarRule("constraint_elements_components")]
	private SmiParser.constraint_elements_components_return constraint_elements_components()
	{
		EnterRule_constraint_elements_components();
		EnterRule("constraint_elements_components", 104);
		TraceIn("constraint_elements_components", 104);
		SmiParser.constraint_elements_components_return retval = new SmiParser.constraint_elements_components_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMPONENTS_KW352 = default(IToken);
		IToken L_BRACE353 = default(IToken);
		IToken DOTDOTDOT354 = default(IToken);
		IToken COMMA355 = default(IToken);
		IToken R_BRACE356 = default(IToken);
		SmiParser.type_constraint_list_return tcl = default(SmiParser.type_constraint_list_return);

		CommonTree COMPONENTS_KW352_tree = default(CommonTree);
		CommonTree L_BRACE353_tree = default(CommonTree);
		CommonTree DOTDOTDOT354_tree = default(CommonTree);
		CommonTree COMMA355_tree = default(CommonTree);
		CommonTree R_BRACE356_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "constraint_elements_components");
		DebugLocation(1370, 4);
		try
		{
			// Smi.g:1371:5: ( COMPONENTS_KW L_BRACE ( DOTDOTDOT COMMA )? tcl= type_constraint_list R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:1371:7: COMPONENTS_KW L_BRACE ( DOTDOTDOT COMMA )? tcl= type_constraint_list R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1371, 7);
			COMPONENTS_KW352=(IToken)Match(input,COMPONENTS_KW,Follow._COMPONENTS_KW_in_constraint_elements_components8600); if (state.failed) return retval;
			if (state.backtracking == 0) {
			COMPONENTS_KW352_tree = (CommonTree)adaptor.Create(COMPONENTS_KW352);
			adaptor.AddChild(root_0, COMPONENTS_KW352_tree);
			}
			DebugLocation(1371, 21);
			L_BRACE353=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_constraint_elements_components8602); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE353_tree = (CommonTree)adaptor.Create(L_BRACE353);
			adaptor.AddChild(root_0, L_BRACE353_tree);
			}
			DebugLocation(1371, 29);
			// Smi.g:1371:29: ( DOTDOTDOT COMMA )?
			int alt158=2;
			try { DebugEnterSubRule(158);
			try { DebugEnterDecision(158, false);
			int LA158_1 = input.LA(1);

			if ((LA158_1==DOTDOTDOT))
			{
				alt158 = 1;
			}
			} finally { DebugExitDecision(158); }
			switch (alt158)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1371:30: DOTDOTDOT COMMA
				{
				DebugLocation(1371, 30);
				DOTDOTDOT354=(IToken)Match(input,DOTDOTDOT,Follow._DOTDOTDOT_in_constraint_elements_components8605); if (state.failed) return retval;
				if (state.backtracking == 0) {
				DOTDOTDOT354_tree = (CommonTree)adaptor.Create(DOTDOTDOT354);
				adaptor.AddChild(root_0, DOTDOTDOT354_tree);
				}
				DebugLocation(1371, 40);
				COMMA355=(IToken)Match(input,COMMA,Follow._COMMA_in_constraint_elements_components8607); if (state.failed) return retval;
				if (state.backtracking == 0) {
				COMMA355_tree = (CommonTree)adaptor.Create(COMMA355);
				adaptor.AddChild(root_0, COMMA355_tree);
				}
				DebugLocation(1371, 46);
				if (state.backtracking == 0)
				{
					 retval.result.Ellipsis = true; 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(158); }

			DebugLocation(1372, 8);
			PushFollow(Follow._type_constraint_list_in_constraint_elements_components8620);
			tcl=type_constraint_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, tcl.Tree);
			DebugLocation(1372, 30);
			R_BRACE356=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_constraint_elements_components8622); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE356_tree = (CommonTree)adaptor.Create(R_BRACE356);
			adaptor.AddChild(root_0, R_BRACE356_tree);
			}
			DebugLocation(1372, 38);
			if (state.backtracking == 0)
			{
				 retval.result.TypeConstraintList = (tcl!=null?tcl.result:default(IList<ConstraintElement>)); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("constraint_elements_components", 104);
			LeaveRule("constraint_elements_components", 104);
			LeaveRule_constraint_elements_components();
		}
		DebugLocation(1373, 4);
		} finally { DebugExitRule(GrammarFileName, "constraint_elements_components"); }
		return retval;

	}
	// $ANTLR end "constraint_elements_components"

	private sealed partial class value_range_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ValueRange result = new ValueRange();
		public value_range_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_value_range();
	partial void LeaveRule_value_range();
	// $ANTLR start "value_range"
	// Smi.g:1375:1: value_range returns [ValueRange result = new ValueRange()] : (lower= value | MIN_KW ) ( LESS )? DOTDOT ( LESS )? (upper= value | MAX_KW ) ;
	[GrammarRule("value_range")]
	private SmiParser.value_range_return value_range()
	{
		EnterRule_value_range();
		EnterRule("value_range", 105);
		TraceIn("value_range", 105);
		SmiParser.value_range_return retval = new SmiParser.value_range_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken MIN_KW357 = default(IToken);
		IToken LESS358 = default(IToken);
		IToken DOTDOT359 = default(IToken);
		IToken LESS360 = default(IToken);
		IToken MAX_KW361 = default(IToken);
		SmiParser.value_return lower = default(SmiParser.value_return);
		SmiParser.value_return upper = default(SmiParser.value_return);

		CommonTree MIN_KW357_tree = default(CommonTree);
		CommonTree LESS358_tree = default(CommonTree);
		CommonTree DOTDOT359_tree = default(CommonTree);
		CommonTree LESS360_tree = default(CommonTree);
		CommonTree MAX_KW361_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "value_range");
		DebugLocation(1375, 1);
		try
		{
			// Smi.g:1376:5: ( (lower= value | MIN_KW ) ( LESS )? DOTDOT ( LESS )? (upper= value | MAX_KW ) )
			DebugEnterAlt(1);
			// Smi.g:1376:7: (lower= value | MIN_KW ) ( LESS )? DOTDOT ( LESS )? (upper= value | MAX_KW )
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1376, 7);
			// Smi.g:1376:7: (lower= value | MIN_KW )
			int alt159=2;
			try { DebugEnterSubRule(159);
			try { DebugEnterDecision(159, false);
			int LA159_1 = input.LA(1);

			if ((LA159_1==B_STRING||LA159_1==C_STRING||LA159_1==ERROR_KW||LA159_1==FALSE_KW||LA159_1==H_STRING||(LA159_1>=LOWER && LA159_1<=L_BRACE)||(LA159_1>=MINUS && LA159_1<=MINUS_INFINITY_KW)||(LA159_1>=NULL_KW && LA159_1<=NUMBER)||LA159_1==OBJECT_KW||LA159_1==OPERATION_KW||LA159_1==PLUS_INFINITY_KW||LA159_1==TRUE_KW||LA159_1==UPPER||(LA159_1>=125 && LA159_1<=128)||(LA159_1>=130 && LA159_1<=133)||LA159_1==135||LA159_1==142||(LA159_1>=145 && LA159_1<=147)||(LA159_1>=157 && LA159_1<=160)||(LA159_1>=162 && LA159_1<=164)||LA159_1==173||LA159_1==175||LA159_1==177||(LA159_1>=180 && LA159_1<=182)||(LA159_1>=187 && LA159_1<=191)))
			{
				alt159 = 1;
			}
			else if ((LA159_1==MIN_KW))
			{
				alt159 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 159, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(159); }
			switch (alt159)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1376:8: lower= value
				{
				DebugLocation(1376, 13);
				PushFollow(Follow._value_in_value_range8648);
				lower=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, lower.Tree);
				DebugLocation(1376, 20);
				if (state.backtracking == 0)
				{
					 retval.result.LowerValue = (lower!=null?lower.result:default(ISmiValue)); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1377:4: MIN_KW
				{
				DebugLocation(1377, 4);
				MIN_KW357=(IToken)Match(input,MIN_KW,Follow._MIN_KW_in_value_range8655); if (state.failed) return retval;
				if (state.backtracking == 0) {
				MIN_KW357_tree = (CommonTree)adaptor.Create(MIN_KW357);
				adaptor.AddChild(root_0, MIN_KW357_tree);
				}
				DebugLocation(1377, 11);
				if (state.backtracking == 0)
				{
					 retval.result.MinValue = true; 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(159); }

			DebugLocation(1378, 2);
			// Smi.g:1378:2: ( LESS )?
			int alt160=2;
			try { DebugEnterSubRule(160);
			try { DebugEnterDecision(160, false);
			int LA160_1 = input.LA(1);

			if ((LA160_1==LESS))
			{
				alt160 = 1;
			}
			} finally { DebugExitDecision(160); }
			switch (alt160)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1378:3: LESS
				{
				DebugLocation(1378, 3);
				LESS358=(IToken)Match(input,LESS,Follow._LESS_in_value_range8663); if (state.failed) return retval;
				if (state.backtracking == 0) {
				LESS358_tree = (CommonTree)adaptor.Create(LESS358);
				adaptor.AddChild(root_0, LESS358_tree);
				}
				DebugLocation(1378, 8);
				if (state.backtracking == 0)
				{
					 retval.result.LessThan = true; 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(160); }

			DebugLocation(1378, 39);
			DOTDOT359=(IToken)Match(input,DOTDOT,Follow._DOTDOT_in_value_range8669); if (state.failed) return retval;
			if (state.backtracking == 0) {
			DOTDOT359_tree = (CommonTree)adaptor.Create(DOTDOT359);
			adaptor.AddChild(root_0, DOTDOT359_tree);
			}
			DebugLocation(1379, 2);
			// Smi.g:1379:2: ( LESS )?
			int alt161=2;
			try { DebugEnterSubRule(161);
			try { DebugEnterDecision(161, false);
			int LA161_1 = input.LA(1);

			if ((LA161_1==LESS))
			{
				alt161 = 1;
			}
			} finally { DebugExitDecision(161); }
			switch (alt161)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1379:3: LESS
				{
				DebugLocation(1379, 3);
				LESS360=(IToken)Match(input,LESS,Follow._LESS_in_value_range8674); if (state.failed) return retval;
				if (state.backtracking == 0) {
				LESS360_tree = (CommonTree)adaptor.Create(LESS360);
				adaptor.AddChild(root_0, LESS360_tree);
				}
				DebugLocation(1379, 8);
				if (state.backtracking == 0)
				{
					 retval.result.GreaterThan = true; 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(161); }

			DebugLocation(1380, 2);
			// Smi.g:1380:2: (upper= value | MAX_KW )
			int alt162=2;
			try { DebugEnterSubRule(162);
			try { DebugEnterDecision(162, false);
			int LA162_1 = input.LA(1);

			if ((LA162_1==B_STRING||LA162_1==C_STRING||LA162_1==ERROR_KW||LA162_1==FALSE_KW||LA162_1==H_STRING||(LA162_1>=LOWER && LA162_1<=L_BRACE)||(LA162_1>=MINUS && LA162_1<=MINUS_INFINITY_KW)||(LA162_1>=NULL_KW && LA162_1<=NUMBER)||LA162_1==OBJECT_KW||LA162_1==OPERATION_KW||LA162_1==PLUS_INFINITY_KW||LA162_1==TRUE_KW||LA162_1==UPPER||(LA162_1>=125 && LA162_1<=128)||(LA162_1>=130 && LA162_1<=133)||LA162_1==135||LA162_1==142||(LA162_1>=145 && LA162_1<=147)||(LA162_1>=157 && LA162_1<=160)||(LA162_1>=162 && LA162_1<=164)||LA162_1==173||LA162_1==175||LA162_1==177||(LA162_1>=180 && LA162_1<=182)||(LA162_1>=187 && LA162_1<=191)))
			{
				alt162 = 1;
			}
			else if ((LA162_1==MAX_KW))
			{
				alt162 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 162, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(162); }
			switch (alt162)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1380:3: upper= value
				{
				DebugLocation(1380, 8);
				PushFollow(Follow._value_in_value_range8685);
				upper=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, upper.Tree);
				DebugLocation(1380, 15);
				if (state.backtracking == 0)
				{
					 retval.result.UpperValue = (upper!=null?upper.result:default(ISmiValue)); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1381:2: MAX_KW
				{
				DebugLocation(1381, 2);
				MAX_KW361=(IToken)Match(input,MAX_KW,Follow._MAX_KW_in_value_range8693); if (state.failed) return retval;
				if (state.backtracking == 0) {
				MAX_KW361_tree = (CommonTree)adaptor.Create(MAX_KW361);
				adaptor.AddChild(root_0, MAX_KW361_tree);
				}
				DebugLocation(1381, 9);
				if (state.backtracking == 0)
				{
					 retval.result.MaxValue = true; 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(162); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("value_range", 105);
			LeaveRule("value_range", 105);
			LeaveRule_value_range();
		}
		DebugLocation(1382, 1);
		} finally { DebugExitRule(GrammarFileName, "value_range"); }
		return retval;

	}
	// $ANTLR end "value_range"

	private sealed partial class type_constraint_list_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public IList<ConstraintElement> result = new List<ConstraintElement>();
		public type_constraint_list_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_type_constraint_list();
	partial void LeaveRule_type_constraint_list();
	// $ANTLR start "type_constraint_list"
	// Smi.g:1384:1: type_constraint_list returns [IList<ConstraintElement> result = new List<ConstraintElement>()] : nc1= named_constraint ( COMMA nc2= named_constraint )* ;
	[GrammarRule("type_constraint_list")]
	private SmiParser.type_constraint_list_return type_constraint_list()
	{
		EnterRule_type_constraint_list();
		EnterRule("type_constraint_list", 106);
		TraceIn("type_constraint_list", 106);
		SmiParser.type_constraint_list_return retval = new SmiParser.type_constraint_list_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMMA362 = default(IToken);
		SmiParser.named_constraint_return nc1 = default(SmiParser.named_constraint_return);
		SmiParser.named_constraint_return nc2 = default(SmiParser.named_constraint_return);

		CommonTree COMMA362_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "type_constraint_list");
		DebugLocation(1384, 1);
		try
		{
			// Smi.g:1385:5: (nc1= named_constraint ( COMMA nc2= named_constraint )* )
			DebugEnterAlt(1);
			// Smi.g:1385:7: nc1= named_constraint ( COMMA nc2= named_constraint )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1385, 10);
			PushFollow(Follow._named_constraint_in_type_constraint_list8717);
			nc1=named_constraint();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, nc1.Tree);
			DebugLocation(1385, 28);
			if (state.backtracking == 0)
			{
				 retval.result.Add((nc1!=null?nc1.result:default(NamedConstraintElement))); 
			}
			DebugLocation(1386, 2);
			// Smi.g:1386:2: ( COMMA nc2= named_constraint )*
			try { DebugEnterSubRule(163);
			while (true)
			{
				int alt163=2;
				try { DebugEnterDecision(163, false);
				int LA163_1 = input.LA(1);

				if ((LA163_1==COMMA))
				{
					alt163 = 1;
				}


				} finally { DebugExitDecision(163); }
				switch ( alt163 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1386:3: COMMA nc2= named_constraint
					{
					DebugLocation(1386, 3);
					COMMA362=(IToken)Match(input,COMMA,Follow._COMMA_in_type_constraint_list8724); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA362_tree = (CommonTree)adaptor.Create(COMMA362);
					adaptor.AddChild(root_0, COMMA362_tree);
					}
					DebugLocation(1386, 12);
					PushFollow(Follow._named_constraint_in_type_constraint_list8728);
					nc2=named_constraint();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, nc2.Tree);
					DebugLocation(1386, 30);
					if (state.backtracking == 0)
					{
						 retval.result.Add((nc2!=null?nc2.result:default(NamedConstraintElement))); 
					}

					}
					break;

				default:
					goto loop163;
				}
			}

			loop163:
				;

			} finally { DebugExitSubRule(163); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("type_constraint_list", 106);
			LeaveRule("type_constraint_list", 106);
			LeaveRule_type_constraint_list();
		}
		DebugLocation(1387, 1);
		} finally { DebugExitRule(GrammarFileName, "type_constraint_list"); }
		return retval;

	}
	// $ANTLR end "type_constraint_list"

	private sealed partial class named_constraint_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public NamedConstraintElement result;
		public named_constraint_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_named_constraint();
	partial void LeaveRule_named_constraint();
	// $ANTLR start "named_constraint"
	// Smi.g:1389:1: named_constraint returns [NamedConstraintElement result] : name= LOWER (c= constraint )? ( PRESENT_KW | ABSENT_KW | OPTIONAL_KW )? ;
	[GrammarRule("named_constraint")]
	private SmiParser.named_constraint_return named_constraint()
	{
		EnterRule_named_constraint();
		EnterRule("named_constraint", 107);
		TraceIn("named_constraint", 107);
		SmiParser.named_constraint_return retval = new SmiParser.named_constraint_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken name = default(IToken);
		IToken PRESENT_KW363 = default(IToken);
		IToken ABSENT_KW364 = default(IToken);
		IToken OPTIONAL_KW365 = default(IToken);
		SmiParser.constraint_return c = default(SmiParser.constraint_return);

		CommonTree name_tree = default(CommonTree);
		CommonTree PRESENT_KW363_tree = default(CommonTree);
		CommonTree ABSENT_KW364_tree = default(CommonTree);
		CommonTree OPTIONAL_KW365_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "named_constraint");
		DebugLocation(1389, 1);
		try
		{
			// Smi.g:1390:5: (name= LOWER (c= constraint )? ( PRESENT_KW | ABSENT_KW | OPTIONAL_KW )? )
			DebugEnterAlt(1);
			// Smi.g:1390:7: name= LOWER (c= constraint )? ( PRESENT_KW | ABSENT_KW | OPTIONAL_KW )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1390, 11);
			name=(IToken)Match(input,LOWER,Follow._LOWER_in_named_constraint8753); if (state.failed) return retval;
			if (state.backtracking == 0) {
			name_tree = (CommonTree)adaptor.Create(name);
			adaptor.AddChild(root_0, name_tree);
			}
			DebugLocation(1390, 18);
			if (state.backtracking == 0)
			{
				 retval.result = new NamedConstraintElement((name!=null?name.Text:null)); 
			}
			DebugLocation(1391, 2);
			// Smi.g:1391:2: (c= constraint )?
			int alt164=2;
			try { DebugEnterSubRule(164);
			try { DebugEnterDecision(164, false);
			int LA164_1 = input.LA(1);

			if ((LA164_1==L_PAREN))
			{
				alt164 = 1;
			}
			} finally { DebugExitDecision(164); }
			switch (alt164)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1391:3: c= constraint
				{
				DebugLocation(1391, 4);
				PushFollow(Follow._constraint_in_named_constraint8761);
				c=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, c.Tree);
				DebugLocation(1391, 16);
				if (state.backtracking == 0)
				{
					 retval.result.Constraint = (c!=null?c.result:default(Constraint)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(164); }

			DebugLocation(1392, 2);
			// Smi.g:1392:2: ( PRESENT_KW | ABSENT_KW | OPTIONAL_KW )?
			int alt165=4;
			try { DebugEnterSubRule(165);
			try { DebugEnterDecision(165, false);
			switch (input.LA(1))
			{
			case PRESENT_KW:
				{
				alt165 = 1;
				}
				break;
			case ABSENT_KW:
				{
				alt165 = 2;
				}
				break;
			case OPTIONAL_KW:
				{
				alt165 = 3;
				}
				break;
			}

			} finally { DebugExitDecision(165); }
			switch (alt165)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1392:3: PRESENT_KW
				{
				DebugLocation(1392, 3);
				PRESENT_KW363=(IToken)Match(input,PRESENT_KW,Follow._PRESENT_KW_in_named_constraint8770); if (state.failed) return retval;
				if (state.backtracking == 0) {
				PRESENT_KW363_tree = (CommonTree)adaptor.Create(PRESENT_KW363);
				adaptor.AddChild(root_0, PRESENT_KW363_tree);
				}
				DebugLocation(1392, 14);
				if (state.backtracking == 0)
				{
					 retval.result.Present = true; 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1393:4: ABSENT_KW
				{
				DebugLocation(1393, 4);
				ABSENT_KW364=(IToken)Match(input,ABSENT_KW,Follow._ABSENT_KW_in_named_constraint8777); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ABSENT_KW364_tree = (CommonTree)adaptor.Create(ABSENT_KW364);
				adaptor.AddChild(root_0, ABSENT_KW364_tree);
				}
				DebugLocation(1393, 14);
				if (state.backtracking == 0)
				{
					 retval.result.Absent = true; 
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:1394:4: OPTIONAL_KW
				{
				DebugLocation(1394, 4);
				OPTIONAL_KW365=(IToken)Match(input,OPTIONAL_KW,Follow._OPTIONAL_KW_in_named_constraint8784); if (state.failed) return retval;
				if (state.backtracking == 0) {
				OPTIONAL_KW365_tree = (CommonTree)adaptor.Create(OPTIONAL_KW365);
				adaptor.AddChild(root_0, OPTIONAL_KW365_tree);
				}
				DebugLocation(1394, 16);
				if (state.backtracking == 0)
				{
					 retval.result.Optinal = true; 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(165); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("named_constraint", 107);
			LeaveRule("named_constraint", 107);
			LeaveRule_named_constraint();
		}
		DebugLocation(1395, 1);
		} finally { DebugExitRule(GrammarFileName, "named_constraint"); }
		return retval;

	}
	// $ANTLR end "named_constraint"

	private sealed partial class choice_value_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ChoiceValue result = new ChoiceValue();
		public choice_value_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_choice_value();
	partial void LeaveRule_choice_value();
	// $ANTLR start "choice_value"
	// Smi.g:1397:1: choice_value returns [ChoiceValue result = new ChoiceValue()] : name= LOWER ( COLON )? v= value ;
	[GrammarRule("choice_value")]
	private SmiParser.choice_value_return choice_value()
	{
		EnterRule_choice_value();
		EnterRule("choice_value", 108);
		TraceIn("choice_value", 108);
		SmiParser.choice_value_return retval = new SmiParser.choice_value_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken name = default(IToken);
		IToken COLON366 = default(IToken);
		SmiParser.value_return v = default(SmiParser.value_return);

		CommonTree name_tree = default(CommonTree);
		CommonTree COLON366_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "choice_value");
		DebugLocation(1397, 1);
		try
		{
			// Smi.g:1398:5: (name= LOWER ( COLON )? v= value )
			DebugEnterAlt(1);
			// Smi.g:1398:7: name= LOWER ( COLON )? v= value
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1398, 11);
			name=(IToken)Match(input,LOWER,Follow._LOWER_in_choice_value8809); if (state.failed) return retval;
			if (state.backtracking == 0) {
			name_tree = (CommonTree)adaptor.Create(name);
			adaptor.AddChild(root_0, name_tree);
			}
			DebugLocation(1398, 18);
			if (state.backtracking == 0)
			{
				 retval.result.Name = (name!=null?name.Text:null); 
			}
			DebugLocation(1399, 2);
			// Smi.g:1399:2: ( COLON )?
			int alt166=2;
			try { DebugEnterSubRule(166);
			try { DebugEnterDecision(166, false);
			int LA166_1 = input.LA(1);

			if ((LA166_1==COLON))
			{
				alt166 = 1;
			}
			} finally { DebugExitDecision(166); }
			switch (alt166)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1399:3: COLON
				{
				DebugLocation(1399, 3);
				COLON366=(IToken)Match(input,COLON,Follow._COLON_in_choice_value8816); if (state.failed) return retval;
				if (state.backtracking == 0) {
				COLON366_tree = (CommonTree)adaptor.Create(COLON366);
				adaptor.AddChild(root_0, COLON366_tree);
				}
				DebugLocation(1399, 9);
				if (state.backtracking == 0)
				{
					 retval.result.ContainsColon = true; 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(166); }

			DebugLocation(1400, 3);
			PushFollow(Follow._value_in_choice_value8826);
			v=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, v.Tree);
			DebugLocation(1400, 10);
			if (state.backtracking == 0)
			{
				 retval.result.Value = (v!=null?v.result:default(ISmiValue)); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("choice_value", 108);
			LeaveRule("choice_value", 108);
			LeaveRule_choice_value();
		}
		DebugLocation(1401, 1);
		} finally { DebugExitRule(GrammarFileName, "choice_value"); }
		return retval;

	}
	// $ANTLR end "choice_value"

	private sealed partial class sequence_value_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public SequenceValue result = new SequenceValue();
		public sequence_value_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_sequence_value();
	partial void LeaveRule_sequence_value();
	// $ANTLR start "sequence_value"
	// Smi.g:1403:1: sequence_value returns [SequenceValue result = new SequenceValue()] : L_BRACE (nv1= named_value )? ( COMMA nv2= named_value )* R_BRACE ;
	[GrammarRule("sequence_value")]
	private SmiParser.sequence_value_return sequence_value()
	{
		EnterRule_sequence_value();
		EnterRule("sequence_value", 109);
		TraceIn("sequence_value", 109);
		SmiParser.sequence_value_return retval = new SmiParser.sequence_value_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE367 = default(IToken);
		IToken COMMA368 = default(IToken);
		IToken R_BRACE369 = default(IToken);
		SmiParser.named_value_return nv1 = default(SmiParser.named_value_return);
		SmiParser.named_value_return nv2 = default(SmiParser.named_value_return);

		CommonTree L_BRACE367_tree = default(CommonTree);
		CommonTree COMMA368_tree = default(CommonTree);
		CommonTree R_BRACE369_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "sequence_value");
		DebugLocation(1403, 1);
		try
		{
			// Smi.g:1404:5: ( L_BRACE (nv1= named_value )? ( COMMA nv2= named_value )* R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:1404:7: L_BRACE (nv1= named_value )? ( COMMA nv2= named_value )* R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1404, 7);
			L_BRACE367=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_sequence_value8846); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE367_tree = (CommonTree)adaptor.Create(L_BRACE367);
			adaptor.AddChild(root_0, L_BRACE367_tree);
			}
			DebugLocation(1404, 15);
			// Smi.g:1404:15: (nv1= named_value )?
			int alt167=2;
			try { DebugEnterSubRule(167);
			try { DebugEnterDecision(167, false);
			int LA167_1 = input.LA(1);

			if ((LA167_1==LOWER))
			{
				alt167 = 1;
			}
			} finally { DebugExitDecision(167); }
			switch (alt167)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1404:16: nv1= named_value
				{
				DebugLocation(1404, 19);
				PushFollow(Follow._named_value_in_sequence_value8851);
				nv1=named_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, nv1.Tree);
				DebugLocation(1404, 32);
				if (state.backtracking == 0)
				{
					 retval.result.Add((nv1!=null?nv1.result:default(NamedValue))); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(167); }

			DebugLocation(1405, 2);
			// Smi.g:1405:2: ( COMMA nv2= named_value )*
			try { DebugEnterSubRule(168);
			while (true)
			{
				int alt168=2;
				try { DebugEnterDecision(168, false);
				int LA168_1 = input.LA(1);

				if ((LA168_1==COMMA))
				{
					alt168 = 1;
				}


				} finally { DebugExitDecision(168); }
				switch ( alt168 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1405:3: COMMA nv2= named_value
					{
					DebugLocation(1405, 3);
					COMMA368=(IToken)Match(input,COMMA,Follow._COMMA_in_sequence_value8860); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA368_tree = (CommonTree)adaptor.Create(COMMA368);
					adaptor.AddChild(root_0, COMMA368_tree);
					}
					DebugLocation(1405, 12);
					PushFollow(Follow._named_value_in_sequence_value8864);
					nv2=named_value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, nv2.Tree);
					DebugLocation(1405, 25);
					if (state.backtracking == 0)
					{
						 retval.result.Add((nv2!=null?nv2.result:default(NamedValue))); 
					}

					}
					break;

				default:
					goto loop168;
				}
			}

			loop168:
				;

			} finally { DebugExitSubRule(168); }

			DebugLocation(1406, 2);
			R_BRACE369=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_sequence_value8872); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE369_tree = (CommonTree)adaptor.Create(R_BRACE369);
			adaptor.AddChild(root_0, R_BRACE369_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("sequence_value", 109);
			LeaveRule("sequence_value", 109);
			LeaveRule_sequence_value();
		}
		DebugLocation(1407, 1);
		} finally { DebugExitRule(GrammarFileName, "sequence_value"); }
		return retval;

	}
	// $ANTLR end "sequence_value"

	private sealed partial class sequenceof_value_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public SequenceOfValue result = new SequenceOfValue();
		public sequenceof_value_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_sequenceof_value();
	partial void LeaveRule_sequenceof_value();
	// $ANTLR start "sequenceof_value"
	// Smi.g:1409:1: sequenceof_value returns [SequenceOfValue result = new SequenceOfValue()] : L_BRACE (v1= value )? ( COMMA v2= value )* R_BRACE ;
	[GrammarRule("sequenceof_value")]
	private SmiParser.sequenceof_value_return sequenceof_value()
	{
		EnterRule_sequenceof_value();
		EnterRule("sequenceof_value", 110);
		TraceIn("sequenceof_value", 110);
		SmiParser.sequenceof_value_return retval = new SmiParser.sequenceof_value_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE370 = default(IToken);
		IToken COMMA371 = default(IToken);
		IToken R_BRACE372 = default(IToken);
		SmiParser.value_return v1 = default(SmiParser.value_return);
		SmiParser.value_return v2 = default(SmiParser.value_return);

		CommonTree L_BRACE370_tree = default(CommonTree);
		CommonTree COMMA371_tree = default(CommonTree);
		CommonTree R_BRACE372_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "sequenceof_value");
		DebugLocation(1409, 1);
		try
		{
			// Smi.g:1410:5: ( L_BRACE (v1= value )? ( COMMA v2= value )* R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:1410:7: L_BRACE (v1= value )? ( COMMA v2= value )* R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1410, 7);
			L_BRACE370=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_sequenceof_value8890); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE370_tree = (CommonTree)adaptor.Create(L_BRACE370);
			adaptor.AddChild(root_0, L_BRACE370_tree);
			}
			DebugLocation(1410, 15);
			// Smi.g:1410:15: (v1= value )?
			int alt169=2;
			try { DebugEnterSubRule(169);
			try { DebugEnterDecision(169, false);
			int LA169_1 = input.LA(1);

			if ((LA169_1==B_STRING||LA169_1==C_STRING||LA169_1==ERROR_KW||LA169_1==FALSE_KW||LA169_1==H_STRING||(LA169_1>=LOWER && LA169_1<=L_BRACE)||(LA169_1>=MINUS && LA169_1<=MINUS_INFINITY_KW)||(LA169_1>=NULL_KW && LA169_1<=NUMBER)||LA169_1==OBJECT_KW||LA169_1==OPERATION_KW||LA169_1==PLUS_INFINITY_KW||LA169_1==TRUE_KW||LA169_1==UPPER||(LA169_1>=125 && LA169_1<=128)||(LA169_1>=130 && LA169_1<=133)||LA169_1==135||LA169_1==142||(LA169_1>=145 && LA169_1<=147)||(LA169_1>=157 && LA169_1<=160)||(LA169_1>=162 && LA169_1<=164)||LA169_1==173||LA169_1==175||LA169_1==177||(LA169_1>=180 && LA169_1<=182)||(LA169_1>=187 && LA169_1<=191)))
			{
				alt169 = 1;
			}
			} finally { DebugExitDecision(169); }
			switch (alt169)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1410:16: v1= value
				{
				DebugLocation(1410, 18);
				PushFollow(Follow._value_in_sequenceof_value8895);
				v1=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, v1.Tree);
				DebugLocation(1410, 25);
				if (state.backtracking == 0)
				{
					 retval.result.Add((v1!=null?v1.result:default(ISmiValue))); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(169); }

			DebugLocation(1411, 2);
			// Smi.g:1411:2: ( COMMA v2= value )*
			try { DebugEnterSubRule(170);
			while (true)
			{
				int alt170=2;
				try { DebugEnterDecision(170, false);
				int LA170_1 = input.LA(1);

				if ((LA170_1==COMMA))
				{
					alt170 = 1;
				}


				} finally { DebugExitDecision(170); }
				switch ( alt170 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1411:3: COMMA v2= value
					{
					DebugLocation(1411, 3);
					COMMA371=(IToken)Match(input,COMMA,Follow._COMMA_in_sequenceof_value8904); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA371_tree = (CommonTree)adaptor.Create(COMMA371);
					adaptor.AddChild(root_0, COMMA371_tree);
					}
					DebugLocation(1411, 11);
					PushFollow(Follow._value_in_sequenceof_value8908);
					v2=value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, v2.Tree);
					DebugLocation(1411, 18);
					if (state.backtracking == 0)
					{
						 retval.result.Add((v2!=null?v2.result:default(ISmiValue))); 
					}

					}
					break;

				default:
					goto loop170;
				}
			}

			loop170:
				;

			} finally { DebugExitSubRule(170); }

			DebugLocation(1412, 2);
			R_BRACE372=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_sequenceof_value8916); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE372_tree = (CommonTree)adaptor.Create(R_BRACE372);
			adaptor.AddChild(root_0, R_BRACE372_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("sequenceof_value", 110);
			LeaveRule("sequenceof_value", 110);
			LeaveRule_sequenceof_value();
		}
		DebugLocation(1413, 1);
		} finally { DebugExitRule(GrammarFileName, "sequenceof_value"); }
		return retval;

	}
	// $ANTLR end "sequenceof_value"

	private sealed partial class cstr_value_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ISmiValue result;
		public cstr_value_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_cstr_value();
	partial void LeaveRule_cstr_value();
	// $ANTLR start "cstr_value"
	// Smi.g:1415:1: cstr_value returns [ISmiValue result] : ( ( H_STRING )=>h= H_STRING | ( B_STRING )=>b= B_STRING | L_BRACE ( ( id_list )=>id= id_list | ( char_defs_list )=>ch= char_defs_list |tu= tuple_or_quad ) R_BRACE );
	[GrammarRule("cstr_value")]
	private SmiParser.cstr_value_return cstr_value()
	{
		EnterRule_cstr_value();
		EnterRule("cstr_value", 111);
		TraceIn("cstr_value", 111);
		SmiParser.cstr_value_return retval = new SmiParser.cstr_value_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken h = default(IToken);
		IToken b = default(IToken);
		IToken L_BRACE373 = default(IToken);
		IToken R_BRACE374 = default(IToken);
		SmiParser.id_list_return id = default(SmiParser.id_list_return);
		SmiParser.char_defs_list_return ch = default(SmiParser.char_defs_list_return);
		SmiParser.tuple_or_quad_return tu = default(SmiParser.tuple_or_quad_return);

		CommonTree h_tree = default(CommonTree);
		CommonTree b_tree = default(CommonTree);
		CommonTree L_BRACE373_tree = default(CommonTree);
		CommonTree R_BRACE374_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "cstr_value");
		DebugLocation(1415, 21);
		try
		{
			// Smi.g:1416:5: ( ( H_STRING )=>h= H_STRING | ( B_STRING )=>b= B_STRING | L_BRACE ( ( id_list )=>id= id_list | ( char_defs_list )=>ch= char_defs_list |tu= tuple_or_quad ) R_BRACE )
			int alt172=3;
			try { DebugEnterDecision(172, false);
			int LA172_1 = input.LA(1);

			if ((LA172_1==H_STRING) && (EvaluatePredicate(synpred46_Smi_fragment)))
			{
				alt172 = 1;
			}
			else if ((LA172_1==B_STRING) && (EvaluatePredicate(synpred47_Smi_fragment)))
			{
				alt172 = 2;
			}
			else if ((LA172_1==L_BRACE))
			{
				alt172 = 3;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 172, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(172); }
			switch (alt172)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1416:7: ( H_STRING )=>h= H_STRING
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1416, 22);
				h=(IToken)Match(input,H_STRING,Follow._H_STRING_in_cstr_value8942); if (state.failed) return retval;
				if (state.backtracking == 0) {
				h_tree = (CommonTree)adaptor.Create(h);
				adaptor.AddChild(root_0, h_tree);
				}
				DebugLocation(1417, 2);
				if (state.backtracking == 0)
				{
					 
						    retval.result = new HexLiteralValue((h!=null?h.Text:null)); 
					    
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1420:7: ( B_STRING )=>b= B_STRING
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1420, 22);
				b=(IToken)Match(input,B_STRING,Follow._B_STRING_in_cstr_value8962); if (state.failed) return retval;
				if (state.backtracking == 0) {
				b_tree = (CommonTree)adaptor.Create(b);
				adaptor.AddChild(root_0, b_tree);
				}
				DebugLocation(1421, 2);
				if (state.backtracking == 0)
				{

						    retval.result = new BinaryLiteralValue((b!=null?b.Text:null));
						
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:1424:7: L_BRACE ( ( id_list )=>id= id_list | ( char_defs_list )=>ch= char_defs_list |tu= tuple_or_quad ) R_BRACE
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1424, 7);
				L_BRACE373=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_cstr_value8974); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE373_tree = (CommonTree)adaptor.Create(L_BRACE373);
				adaptor.AddChild(root_0, L_BRACE373_tree);
				}
				DebugLocation(1425, 13);
				// Smi.g:1425:13: ( ( id_list )=>id= id_list | ( char_defs_list )=>ch= char_defs_list |tu= tuple_or_quad )
				int alt171=3;
				try { DebugEnterSubRule(171);
				try { DebugEnterDecision(171, false);
				int LA171_1 = input.LA(1);

				if ((LA171_1==LOWER))
				{
					int LA171_2 = input.LA(2);

					if ((EvaluatePredicate(synpred48_Smi_fragment)))
					{
						alt171 = 1;
					}
					else if ((EvaluatePredicate(synpred49_Smi_fragment)))
					{
						alt171 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 171, 1, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else if ((LA171_1==C_STRING) && (EvaluatePredicate(synpred49_Smi_fragment)))
				{
					alt171 = 2;
				}
				else if ((LA171_1==L_BRACE) && (EvaluatePredicate(synpred49_Smi_fragment)))
				{
					alt171 = 2;
				}
				else if ((LA171_1==UPPER) && (EvaluatePredicate(synpred49_Smi_fragment)))
				{
					alt171 = 2;
				}
				else if ((LA171_1==MINUS||LA171_1==NUMBER))
				{
					alt171 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 171, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(171); }
				switch (alt171)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1425:15: ( id_list )=>id= id_list
					{
					DebugLocation(1425, 30);
					PushFollow(Follow._id_list_in_cstr_value8999);
					id=id_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, id.Tree);
					DebugLocation(1425, 39);
					if (state.backtracking == 0)
					{
						 retval.result = (id!=null?id.result:default(IdListValue)); 
					}

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// Smi.g:1426:17: ( char_defs_list )=>ch= char_defs_list
					{
					DebugLocation(1426, 39);
					PushFollow(Follow._char_defs_list_in_cstr_value9027);
					ch=char_defs_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, ch.Tree);
					DebugLocation(1426, 55);
					if (state.backtracking == 0)
					{
						 retval.result = (ch!=null?ch.result:default(CharDefinitionListValue)); 
					}

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// Smi.g:1427:17: tu= tuple_or_quad
					{
					DebugLocation(1427, 19);
					PushFollow(Follow._tuple_or_quad_in_cstr_value9049);
					tu=tuple_or_quad();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, tu.Tree);
					DebugLocation(1427, 34);
					if (state.backtracking == 0)
					{
						 retval.result = (tu!=null?tu.result:default(ISmiValue)); 
					}

					}
					break;

				}
				} finally { DebugExitSubRule(171); }

				DebugLocation(1428, 15);
				R_BRACE374=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_cstr_value9072); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE374_tree = (CommonTree)adaptor.Create(R_BRACE374);
				adaptor.AddChild(root_0, R_BRACE374_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("cstr_value", 111);
			LeaveRule("cstr_value", 111);
			LeaveRule_cstr_value();
		}
		DebugLocation(1428, 21);
		} finally { DebugExitRule(GrammarFileName, "cstr_value"); }
		return retval;

	}
	// $ANTLR end "cstr_value"

	private sealed partial class id_list_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public IdListValue result = new IdListValue();
		public id_list_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_id_list();
	partial void LeaveRule_id_list();
	// $ANTLR start "id_list"
	// Smi.g:1430:1: id_list returns [IdListValue result = new IdListValue()] : name1= LOWER ( COMMA name2= LOWER )* ;
	[GrammarRule("id_list")]
	private SmiParser.id_list_return id_list()
	{
		EnterRule_id_list();
		EnterRule("id_list", 112);
		TraceIn("id_list", 112);
		SmiParser.id_list_return retval = new SmiParser.id_list_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken name1 = default(IToken);
		IToken name2 = default(IToken);
		IToken COMMA375 = default(IToken);

		CommonTree name1_tree = default(CommonTree);
		CommonTree name2_tree = default(CommonTree);
		CommonTree COMMA375_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "id_list");
		DebugLocation(1430, 1);
		try
		{
			// Smi.g:1431:5: (name1= LOWER ( COMMA name2= LOWER )* )
			DebugEnterAlt(1);
			// Smi.g:1431:7: name1= LOWER ( COMMA name2= LOWER )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1431, 12);
			name1=(IToken)Match(input,LOWER,Follow._LOWER_in_id_list9090); if (state.failed) return retval;
			if (state.backtracking == 0) {
			name1_tree = (CommonTree)adaptor.Create(name1);
			adaptor.AddChild(root_0, name1_tree);
			}
			DebugLocation(1431, 19);
			if (state.backtracking == 0)
			{
				 retval.result.Add((name1!=null?name1.Text:null)); 
			}
			DebugLocation(1432, 2);
			// Smi.g:1432:2: ( COMMA name2= LOWER )*
			try { DebugEnterSubRule(173);
			while (true)
			{
				int alt173=2;
				try { DebugEnterDecision(173, false);
				int LA173_1 = input.LA(1);

				if ((LA173_1==COMMA))
				{
					alt173 = 1;
				}


				} finally { DebugExitDecision(173); }
				switch ( alt173 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1432:3: COMMA name2= LOWER
					{
					DebugLocation(1432, 3);
					COMMA375=(IToken)Match(input,COMMA,Follow._COMMA_in_id_list9096); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA375_tree = (CommonTree)adaptor.Create(COMMA375);
					adaptor.AddChild(root_0, COMMA375_tree);
					}
					DebugLocation(1432, 14);
					name2=(IToken)Match(input,LOWER,Follow._LOWER_in_id_list9100); if (state.failed) return retval;
					if (state.backtracking == 0) {
					name2_tree = (CommonTree)adaptor.Create(name2);
					adaptor.AddChild(root_0, name2_tree);
					}
					DebugLocation(1432, 21);
					if (state.backtracking == 0)
					{
						 retval.result.Add((name2!=null?name2.Text:null)); 
					}

					}
					break;

				default:
					goto loop173;
				}
			}

			loop173:
				;

			} finally { DebugExitSubRule(173); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("id_list", 112);
			LeaveRule("id_list", 112);
			LeaveRule_id_list();
		}
		DebugLocation(1433, 1);
		} finally { DebugExitRule(GrammarFileName, "id_list"); }
		return retval;

	}
	// $ANTLR end "id_list"

	private sealed partial class char_defs_list_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public CharDefinitionListValue result = new CharDefinitionListValue();
		public char_defs_list_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_char_defs_list();
	partial void LeaveRule_char_defs_list();
	// $ANTLR start "char_defs_list"
	// Smi.g:1435:1: char_defs_list returns [CharDefinitionListValue result = new CharDefinitionListValue()] : ch1= char_defs ( COMMA ch2= char_defs )* ;
	[GrammarRule("char_defs_list")]
	private SmiParser.char_defs_list_return char_defs_list()
	{
		EnterRule_char_defs_list();
		EnterRule("char_defs_list", 113);
		TraceIn("char_defs_list", 113);
		SmiParser.char_defs_list_return retval = new SmiParser.char_defs_list_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMMA376 = default(IToken);
		SmiParser.char_defs_return ch1 = default(SmiParser.char_defs_return);
		SmiParser.char_defs_return ch2 = default(SmiParser.char_defs_return);

		CommonTree COMMA376_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "char_defs_list");
		DebugLocation(1435, 1);
		try
		{
			// Smi.g:1436:5: (ch1= char_defs ( COMMA ch2= char_defs )* )
			DebugEnterAlt(1);
			// Smi.g:1436:7: ch1= char_defs ( COMMA ch2= char_defs )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1436, 10);
			PushFollow(Follow._char_defs_in_char_defs_list9125);
			ch1=char_defs();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, ch1.Tree);
			DebugLocation(1436, 21);
			if (state.backtracking == 0)
			{
				 retval.result.Add((ch1!=null?ch1.result:default(CharDefinition))); 
			}
			DebugLocation(1437, 2);
			// Smi.g:1437:2: ( COMMA ch2= char_defs )*
			try { DebugEnterSubRule(174);
			while (true)
			{
				int alt174=2;
				try { DebugEnterDecision(174, false);
				int LA174_1 = input.LA(1);

				if ((LA174_1==COMMA))
				{
					alt174 = 1;
				}


				} finally { DebugExitDecision(174); }
				switch ( alt174 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1437:3: COMMA ch2= char_defs
					{
					DebugLocation(1437, 3);
					COMMA376=(IToken)Match(input,COMMA,Follow._COMMA_in_char_defs_list9131); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA376_tree = (CommonTree)adaptor.Create(COMMA376);
					adaptor.AddChild(root_0, COMMA376_tree);
					}
					DebugLocation(1437, 12);
					PushFollow(Follow._char_defs_in_char_defs_list9135);
					ch2=char_defs();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, ch2.Tree);
					DebugLocation(1437, 23);
					if (state.backtracking == 0)
					{
						 retval.result.Add((ch2!=null?ch2.result:default(CharDefinition))); 
					}

					}
					break;

				default:
					goto loop174;
				}
			}

			loop174:
				;

			} finally { DebugExitSubRule(174); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("char_defs_list", 113);
			LeaveRule("char_defs_list", 113);
			LeaveRule_char_defs_list();
		}
		DebugLocation(1438, 1);
		} finally { DebugExitRule(GrammarFileName, "char_defs_list"); }
		return retval;

	}
	// $ANTLR end "char_defs_list"

	private sealed partial class tuple_or_quad_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public ISmiValue result;
		public tuple_or_quad_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_tuple_or_quad();
	partial void LeaveRule_tuple_or_quad();
	// $ANTLR start "tuple_or_quad"
	// Smi.g:1441:1: tuple_or_quad returns [ISmiValue result] : (tu= tuple_number |qu= quad_number );
	[GrammarRule("tuple_or_quad")]
	private SmiParser.tuple_or_quad_return tuple_or_quad()
	{
		EnterRule_tuple_or_quad();
		EnterRule("tuple_or_quad", 114);
		TraceIn("tuple_or_quad", 114);
		SmiParser.tuple_or_quad_return retval = new SmiParser.tuple_or_quad_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		SmiParser.tuple_number_return tu = default(SmiParser.tuple_number_return);
		SmiParser.quad_number_return qu = default(SmiParser.quad_number_return);

		try { DebugEnterRule(GrammarFileName, "tuple_or_quad");
		DebugLocation(1441, 1);
		try
		{
			// Smi.g:1442:5: (tu= tuple_number |qu= quad_number )
			int alt175=2;
			try { DebugEnterDecision(175, false);
			int LA175_1 = input.LA(1);

			if ((LA175_1==MINUS))
			{
				int LA175_2 = input.LA(2);

				if ((LA175_2==NUMBER))
				{
					int LA175_3 = input.LA(3);

					if ((LA175_3==COMMA))
					{
						int LA175_4 = input.LA(4);

						if ((LA175_4==MINUS))
						{
							int LA175_5 = input.LA(5);

							if ((LA175_5==NUMBER))
							{
								int LA175_6 = input.LA(6);

								if ((LA175_6==R_BRACE))
								{
									alt175 = 1;
								}
								else if ((LA175_6==COMMA))
								{
									alt175 = 2;
								}
								else
								{
									if (state.backtracking>0) {state.failed=true; return retval;}
									NoViableAltException nvae = new NoViableAltException("", 175, 7, input, 6);
									DebugRecognitionException(nvae);
									throw nvae;
								}
							}
							else
							{
								if (state.backtracking>0) {state.failed=true; return retval;}
								NoViableAltException nvae = new NoViableAltException("", 175, 5, input, 5);
								DebugRecognitionException(nvae);
								throw nvae;
							}
						}
						else if ((LA175_4==NUMBER))
						{
							int LA175_5 = input.LA(5);

							if ((LA175_5==R_BRACE))
							{
								alt175 = 1;
							}
							else if ((LA175_5==COMMA))
							{
								alt175 = 2;
							}
							else
							{
								if (state.backtracking>0) {state.failed=true; return retval;}
								NoViableAltException nvae = new NoViableAltException("", 175, 6, input, 5);
								DebugRecognitionException(nvae);
								throw nvae;
							}
						}
						else
						{
							if (state.backtracking>0) {state.failed=true; return retval;}
							NoViableAltException nvae = new NoViableAltException("", 175, 4, input, 4);
							DebugRecognitionException(nvae);
							throw nvae;
						}
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 175, 3, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 175, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA175_1==NUMBER))
			{
				int LA175_2 = input.LA(2);

				if ((LA175_2==COMMA))
				{
					int LA175_3 = input.LA(3);

					if ((LA175_3==MINUS))
					{
						int LA175_4 = input.LA(4);

						if ((LA175_4==NUMBER))
						{
							int LA175_5 = input.LA(5);

							if ((LA175_5==R_BRACE))
							{
								alt175 = 1;
							}
							else if ((LA175_5==COMMA))
							{
								alt175 = 2;
							}
							else
							{
								if (state.backtracking>0) {state.failed=true; return retval;}
								NoViableAltException nvae = new NoViableAltException("", 175, 7, input, 5);
								DebugRecognitionException(nvae);
								throw nvae;
							}
						}
						else
						{
							if (state.backtracking>0) {state.failed=true; return retval;}
							NoViableAltException nvae = new NoViableAltException("", 175, 5, input, 4);
							DebugRecognitionException(nvae);
							throw nvae;
						}
					}
					else if ((LA175_3==NUMBER))
					{
						int LA175_4 = input.LA(4);

						if ((LA175_4==R_BRACE))
						{
							alt175 = 1;
						}
						else if ((LA175_4==COMMA))
						{
							alt175 = 2;
						}
						else
						{
							if (state.backtracking>0) {state.failed=true; return retval;}
							NoViableAltException nvae = new NoViableAltException("", 175, 6, input, 4);
							DebugRecognitionException(nvae);
							throw nvae;
						}
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 175, 4, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 175, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 175, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(175); }
			switch (alt175)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1442:7: tu= tuple_number
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1442, 9);
				PushFollow(Follow._tuple_number_in_tuple_or_quad9161);
				tu=tuple_number();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, tu.Tree);
				DebugLocation(1442, 23);
				if (state.backtracking == 0)
				{
					 retval.result = (tu!=null?tu.result:default(TupleValue)); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1443:4: qu= quad_number
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1443, 6);
				PushFollow(Follow._quad_number_in_tuple_or_quad9170);
				qu=quad_number();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, qu.Tree);
				DebugLocation(1443, 19);
				if (state.backtracking == 0)
				{
					 retval.result = (qu!=null?qu.result:default(QuadValue)); 
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("tuple_or_quad", 114);
			LeaveRule("tuple_or_quad", 114);
			LeaveRule_tuple_or_quad();
		}
		DebugLocation(1444, 1);
		} finally { DebugExitRule(GrammarFileName, "tuple_or_quad"); }
		return retval;

	}
	// $ANTLR end "tuple_or_quad"

	private sealed partial class tuple_number_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public TupleValue result;
		public tuple_number_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_tuple_number();
	partial void LeaveRule_tuple_number();
	// $ANTLR start "tuple_number"
	// Smi.g:1446:1: tuple_number returns [TupleValue result] : sn1= signed_number COMMA sn2= signed_number ;
	[GrammarRule("tuple_number")]
	private SmiParser.tuple_number_return tuple_number()
	{
		EnterRule_tuple_number();
		EnterRule("tuple_number", 115);
		TraceIn("tuple_number", 115);
		SmiParser.tuple_number_return retval = new SmiParser.tuple_number_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMMA377 = default(IToken);
		SmiParser.signed_number_return sn1 = default(SmiParser.signed_number_return);
		SmiParser.signed_number_return sn2 = default(SmiParser.signed_number_return);

		CommonTree COMMA377_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "tuple_number");
		DebugLocation(1446, 1);
		try
		{
			// Smi.g:1447:5: (sn1= signed_number COMMA sn2= signed_number )
			DebugEnterAlt(1);
			// Smi.g:1447:7: sn1= signed_number COMMA sn2= signed_number
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1447, 10);
			PushFollow(Follow._signed_number_in_tuple_number9192);
			sn1=signed_number();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, sn1.Tree);
			DebugLocation(1447, 25);
			COMMA377=(IToken)Match(input,COMMA,Follow._COMMA_in_tuple_number9194); if (state.failed) return retval;
			if (state.backtracking == 0) {
			COMMA377_tree = (CommonTree)adaptor.Create(COMMA377);
			adaptor.AddChild(root_0, COMMA377_tree);
			}
			DebugLocation(1447, 34);
			PushFollow(Follow._signed_number_in_tuple_number9198);
			sn2=signed_number();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, sn2.Tree);
			DebugLocation(1447, 49);
			if (state.backtracking == 0)
			{
				 retval.result = new TupleValue((sn1!=null?sn1.result:default(NumberLiteralValue)), (sn2!=null?sn2.result:default(NumberLiteralValue))); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("tuple_number", 115);
			LeaveRule("tuple_number", 115);
			LeaveRule_tuple_number();
		}
		DebugLocation(1448, 1);
		} finally { DebugExitRule(GrammarFileName, "tuple_number"); }
		return retval;

	}
	// $ANTLR end "tuple_number"

	private sealed partial class quad_number_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public QuadValue result;
		public quad_number_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_quad_number();
	partial void LeaveRule_quad_number();
	// $ANTLR start "quad_number"
	// Smi.g:1450:1: quad_number returns [QuadValue result] : sn1= signed_number COMMA sn2= signed_number COMMA sn3= signed_number COMMA sn4= signed_number ;
	[GrammarRule("quad_number")]
	private SmiParser.quad_number_return quad_number()
	{
		EnterRule_quad_number();
		EnterRule("quad_number", 116);
		TraceIn("quad_number", 116);
		SmiParser.quad_number_return retval = new SmiParser.quad_number_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMMA378 = default(IToken);
		IToken COMMA379 = default(IToken);
		IToken COMMA380 = default(IToken);
		SmiParser.signed_number_return sn1 = default(SmiParser.signed_number_return);
		SmiParser.signed_number_return sn2 = default(SmiParser.signed_number_return);
		SmiParser.signed_number_return sn3 = default(SmiParser.signed_number_return);
		SmiParser.signed_number_return sn4 = default(SmiParser.signed_number_return);

		CommonTree COMMA378_tree = default(CommonTree);
		CommonTree COMMA379_tree = default(CommonTree);
		CommonTree COMMA380_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "quad_number");
		DebugLocation(1450, 1);
		try
		{
			// Smi.g:1451:5: (sn1= signed_number COMMA sn2= signed_number COMMA sn3= signed_number COMMA sn4= signed_number )
			DebugEnterAlt(1);
			// Smi.g:1451:7: sn1= signed_number COMMA sn2= signed_number COMMA sn3= signed_number COMMA sn4= signed_number
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1451, 10);
			PushFollow(Follow._signed_number_in_quad_number9220);
			sn1=signed_number();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, sn1.Tree);
			DebugLocation(1451, 25);
			COMMA378=(IToken)Match(input,COMMA,Follow._COMMA_in_quad_number9222); if (state.failed) return retval;
			if (state.backtracking == 0) {
			COMMA378_tree = (CommonTree)adaptor.Create(COMMA378);
			adaptor.AddChild(root_0, COMMA378_tree);
			}
			DebugLocation(1451, 34);
			PushFollow(Follow._signed_number_in_quad_number9226);
			sn2=signed_number();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, sn2.Tree);
			DebugLocation(1451, 49);
			COMMA379=(IToken)Match(input,COMMA,Follow._COMMA_in_quad_number9228); if (state.failed) return retval;
			if (state.backtracking == 0) {
			COMMA379_tree = (CommonTree)adaptor.Create(COMMA379);
			adaptor.AddChild(root_0, COMMA379_tree);
			}
			DebugLocation(1451, 58);
			PushFollow(Follow._signed_number_in_quad_number9232);
			sn3=signed_number();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, sn3.Tree);
			DebugLocation(1451, 73);
			COMMA380=(IToken)Match(input,COMMA,Follow._COMMA_in_quad_number9234); if (state.failed) return retval;
			if (state.backtracking == 0) {
			COMMA380_tree = (CommonTree)adaptor.Create(COMMA380);
			adaptor.AddChild(root_0, COMMA380_tree);
			}
			DebugLocation(1451, 82);
			PushFollow(Follow._signed_number_in_quad_number9238);
			sn4=signed_number();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, sn4.Tree);
			DebugLocation(1452, 2);
			if (state.backtracking == 0)
			{
				 retval.result = new QuadValue((sn1!=null?sn1.result:default(NumberLiteralValue)), (sn2!=null?sn2.result:default(NumberLiteralValue)), (sn3!=null?sn3.result:default(NumberLiteralValue)), (sn4!=null?sn4.result:default(NumberLiteralValue))); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("quad_number", 116);
			LeaveRule("quad_number", 116);
			LeaveRule_quad_number();
		}
		DebugLocation(1453, 1);
		} finally { DebugExitRule(GrammarFileName, "quad_number"); }
		return retval;

	}
	// $ANTLR end "quad_number"

	private sealed partial class char_defs_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public CharDefinition result;
		public char_defs_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_char_defs();
	partial void LeaveRule_char_defs();
	// $ANTLR start "char_defs"
	// Smi.g:1455:1: char_defs returns [CharDefinition result] : (cs= C_STRING | L_BRACE tu= tuple_or_quad R_BRACE |dv= defined_value );
	[GrammarRule("char_defs")]
	private SmiParser.char_defs_return char_defs()
	{
		EnterRule_char_defs();
		EnterRule("char_defs", 117);
		TraceIn("char_defs", 117);
		SmiParser.char_defs_return retval = new SmiParser.char_defs_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken cs = default(IToken);
		IToken L_BRACE381 = default(IToken);
		IToken R_BRACE382 = default(IToken);
		SmiParser.tuple_or_quad_return tu = default(SmiParser.tuple_or_quad_return);
		SmiParser.defined_value_return dv = default(SmiParser.defined_value_return);

		CommonTree cs_tree = default(CommonTree);
		CommonTree L_BRACE381_tree = default(CommonTree);
		CommonTree R_BRACE382_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "char_defs");
		DebugLocation(1455, 68);
		try
		{
			// Smi.g:1456:5: (cs= C_STRING | L_BRACE tu= tuple_or_quad R_BRACE |dv= defined_value )
			int alt176=3;
			try { DebugEnterDecision(176, false);
			switch (input.LA(1))
			{
			case C_STRING:
				{
				alt176 = 1;
				}
				break;
			case L_BRACE:
				{
				alt176 = 2;
				}
				break;
			case LOWER:
			case UPPER:
				{
				alt176 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 176, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(176); }
			switch (alt176)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1457:2: cs= C_STRING
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1457, 4);
				cs=(IToken)Match(input,C_STRING,Follow._C_STRING_in_char_defs9263); if (state.failed) return retval;
				if (state.backtracking == 0) {
				cs_tree = (CommonTree)adaptor.Create(cs);
				adaptor.AddChild(root_0, cs_tree);
				}
				DebugLocation(1457, 14);
				if (state.backtracking == 0)
				{
					 retval.result = new CharDefinition((cs!=null?cs.Text:null)); 
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1458:7: L_BRACE tu= tuple_or_quad R_BRACE
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1458, 7);
				L_BRACE381=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_char_defs9273); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE381_tree = (CommonTree)adaptor.Create(L_BRACE381);
				adaptor.AddChild(root_0, L_BRACE381_tree);
				}
				DebugLocation(1458, 17);
				PushFollow(Follow._tuple_or_quad_in_char_defs9277);
				tu=tuple_or_quad();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, tu.Tree);
				DebugLocation(1458, 32);
				R_BRACE382=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_char_defs9279); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE382_tree = (CommonTree)adaptor.Create(R_BRACE382);
				adaptor.AddChild(root_0, R_BRACE382_tree);
				}
				DebugLocation(1458, 40);
				if (state.backtracking == 0)
				{
					 retval.result = new CharDefinition((tu!=null?tu.result:default(ISmiValue))); 
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:1459:7: dv= defined_value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1459, 9);
				PushFollow(Follow._defined_value_in_char_defs9291);
				dv=defined_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, dv.Tree);
				DebugLocation(1459, 24);
				if (state.backtracking == 0)
				{
					 retval.result = new CharDefinition((dv!=null?dv.result:default(DefinedValue))); 
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("char_defs", 117);
			LeaveRule("char_defs", 117);
			LeaveRule_char_defs();
		}
		DebugLocation(1459, 68);
		} finally { DebugExitRule(GrammarFileName, "char_defs"); }
		return retval;

	}
	// $ANTLR end "char_defs"

	private sealed partial class named_value_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public NamedValue result;
		public named_value_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_named_value();
	partial void LeaveRule_named_value();
	// $ANTLR start "named_value"
	// Smi.g:1464:1: named_value returns [NamedValue result] : name= LOWER v= value ;
	[GrammarRule("named_value")]
	private SmiParser.named_value_return named_value()
	{
		EnterRule_named_value();
		EnterRule("named_value", 118);
		TraceIn("named_value", 118);
		SmiParser.named_value_return retval = new SmiParser.named_value_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken name = default(IToken);
		SmiParser.value_return v = default(SmiParser.value_return);

		CommonTree name_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "named_value");
		DebugLocation(1464, 1);
		try
		{
			// Smi.g:1465:5: (name= LOWER v= value )
			DebugEnterAlt(1);
			// Smi.g:1465:7: name= LOWER v= value
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1465, 11);
			name=(IToken)Match(input,LOWER,Follow._LOWER_in_named_value9314); if (state.failed) return retval;
			if (state.backtracking == 0) {
			name_tree = (CommonTree)adaptor.Create(name);
			adaptor.AddChild(root_0, name_tree);
			}
			DebugLocation(1465, 19);
			PushFollow(Follow._value_in_named_value9318);
			v=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, v.Tree);
			DebugLocation(1465, 26);
			if (state.backtracking == 0)
			{
				 retval.result = new NamedValue((name!=null?name.Text:null), (v!=null?v.result:default(ISmiValue))); 
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}

		catch (RecognitionException) 
		{
		    throw;
		}

		finally
		{
			TraceOut("named_value", 118);
			LeaveRule("named_value", 118);
			LeaveRule_named_value();
		}
		DebugLocation(1466, 1);
		} finally { DebugExitRule(GrammarFileName, "named_value"); }
		return retval;

	}
	// $ANTLR end "named_value"

	partial void EnterRule_synpred1_Smi_fragment();
	partial void LeaveRule_synpred1_Smi_fragment();

	// $ANTLR start synpred1_Smi
	public void synpred1_Smi_fragment()
	{
		EnterRule_synpred1_Smi_fragment();
		EnterRule("synpred1_Smi_fragment", 119);
		TraceIn("synpred1_Smi_fragment", 119);
		try
		{
			// Smi.g:634:16: ( LOWER ( LOWER | NUMBER ) )
			DebugEnterAlt(1);
			// Smi.g:634:17: LOWER ( LOWER | NUMBER )
			{
			DebugLocation(634, 17);
			Match(input,LOWER,Follow._LOWER_in_synpred1_Smi2093); if (state.failed) return;
			DebugLocation(634, 23);
			if (input.LA(1)==LOWER||input.LA(1)==NUMBER)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("synpred1_Smi_fragment", 119);
			LeaveRule("synpred1_Smi_fragment", 119);
			LeaveRule_synpred1_Smi_fragment();
		}
	}
	// $ANTLR end synpred1_Smi

	partial void EnterRule_synpred2_Smi_fragment();
	partial void LeaveRule_synpred2_Smi_fragment();

	// $ANTLR start synpred2_Smi
	public void synpred2_Smi_fragment()
	{
		EnterRule_synpred2_Smi_fragment();
		EnterRule("synpred2_Smi_fragment", 120);
		TraceIn("synpred2_Smi_fragment", 120);
		try
		{
			// Smi.g:701:29: ( defined_value )
			DebugEnterAlt(1);
			// Smi.g:701:30: defined_value
			{
			DebugLocation(701, 30);
			PushFollow(Follow._defined_value_in_synpred2_Smi2553);
			defined_value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred2_Smi_fragment", 120);
			LeaveRule("synpred2_Smi_fragment", 120);
			LeaveRule_synpred2_Smi_fragment();
		}
	}
	// $ANTLR end synpred2_Smi

	partial void EnterRule_synpred3_Smi_fragment();
	partial void LeaveRule_synpred3_Smi_fragment();

	// $ANTLR start synpred3_Smi
	public void synpred3_Smi_fragment()
	{
		EnterRule_synpred3_Smi_fragment();
		EnterRule("synpred3_Smi_fragment", 121);
		TraceIn("synpred3_Smi_fragment", 121);
		try
		{
			// Smi.g:724:7: ( TRUE_KW )
			DebugEnterAlt(1);
			// Smi.g:724:8: TRUE_KW
			{
			DebugLocation(724, 8);
			Match(input,TRUE_KW,Follow._TRUE_KW_in_synpred3_Smi2815); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred3_Smi_fragment", 121);
			LeaveRule("synpred3_Smi_fragment", 121);
			LeaveRule_synpred3_Smi_fragment();
		}
	}
	// $ANTLR end synpred3_Smi

	partial void EnterRule_synpred4_Smi_fragment();
	partial void LeaveRule_synpred4_Smi_fragment();

	// $ANTLR start synpred4_Smi
	public void synpred4_Smi_fragment()
	{
		EnterRule_synpred4_Smi_fragment();
		EnterRule("synpred4_Smi_fragment", 122);
		TraceIn("synpred4_Smi_fragment", 122);
		try
		{
			// Smi.g:725:8: ( FALSE_KW )
			DebugEnterAlt(1);
			// Smi.g:725:9: FALSE_KW
			{
			DebugLocation(725, 9);
			Match(input,FALSE_KW,Follow._FALSE_KW_in_synpred4_Smi2832); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred4_Smi_fragment", 122);
			LeaveRule("synpred4_Smi_fragment", 122);
			LeaveRule_synpred4_Smi_fragment();
		}
	}
	// $ANTLR end synpred4_Smi

	partial void EnterRule_synpred5_Smi_fragment();
	partial void LeaveRule_synpred5_Smi_fragment();

	// $ANTLR start synpred5_Smi
	public void synpred5_Smi_fragment()
	{
		EnterRule_synpred5_Smi_fragment();
		EnterRule("synpred5_Smi_fragment", 123);
		TraceIn("synpred5_Smi_fragment", 123);
		try
		{
			// Smi.g:726:8: ( NULL_KW )
			DebugEnterAlt(1);
			// Smi.g:726:9: NULL_KW
			{
			DebugLocation(726, 9);
			Match(input,NULL_KW,Follow._NULL_KW_in_synpred5_Smi2849); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred5_Smi_fragment", 123);
			LeaveRule("synpred5_Smi_fragment", 123);
			LeaveRule_synpred5_Smi_fragment();
		}
	}
	// $ANTLR end synpred5_Smi

	partial void EnterRule_synpred6_Smi_fragment();
	partial void LeaveRule_synpred6_Smi_fragment();

	// $ANTLR start synpred6_Smi
	public void synpred6_Smi_fragment()
	{
		EnterRule_synpred6_Smi_fragment();
		EnterRule("synpred6_Smi_fragment", 124);
		TraceIn("synpred6_Smi_fragment", 124);
		try
		{
			// Smi.g:727:8: ( C_STRING )
			DebugEnterAlt(1);
			// Smi.g:727:9: C_STRING
			{
			DebugLocation(727, 9);
			Match(input,C_STRING,Follow._C_STRING_in_synpred6_Smi2866); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred6_Smi_fragment", 124);
			LeaveRule("synpred6_Smi_fragment", 124);
			LeaveRule_synpred6_Smi_fragment();
		}
	}
	// $ANTLR end synpred6_Smi

	partial void EnterRule_synpred7_Smi_fragment();
	partial void LeaveRule_synpred7_Smi_fragment();

	// $ANTLR start synpred7_Smi
	public void synpred7_Smi_fragment()
	{
		EnterRule_synpred7_Smi_fragment();
		EnterRule("synpred7_Smi_fragment", 125);
		TraceIn("synpred7_Smi_fragment", 125);
		try
		{
			// Smi.g:728:8: ( defined_value )
			DebugEnterAlt(1);
			// Smi.g:728:9: defined_value
			{
			DebugLocation(728, 9);
			PushFollow(Follow._defined_value_in_synpred7_Smi2886);
			defined_value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred7_Smi_fragment", 125);
			LeaveRule("synpred7_Smi_fragment", 125);
			LeaveRule_synpred7_Smi_fragment();
		}
	}
	// $ANTLR end synpred7_Smi

	partial void EnterRule_synpred8_Smi_fragment();
	partial void LeaveRule_synpred8_Smi_fragment();

	// $ANTLR start synpred8_Smi
	public void synpred8_Smi_fragment()
	{
		EnterRule_synpred8_Smi_fragment();
		EnterRule("synpred8_Smi_fragment", 126);
		TraceIn("synpred8_Smi_fragment", 126);
		try
		{
			// Smi.g:729:8: ( signed_number )
			DebugEnterAlt(1);
			// Smi.g:729:9: signed_number
			{
			DebugLocation(729, 9);
			PushFollow(Follow._signed_number_in_synpred8_Smi2905);
			signed_number();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred8_Smi_fragment", 126);
			LeaveRule("synpred8_Smi_fragment", 126);
			LeaveRule_synpred8_Smi_fragment();
		}
	}
	// $ANTLR end synpred8_Smi

	partial void EnterRule_synpred9_Smi_fragment();
	partial void LeaveRule_synpred9_Smi_fragment();

	// $ANTLR start synpred9_Smi
	public void synpred9_Smi_fragment()
	{
		EnterRule_synpred9_Smi_fragment();
		EnterRule("synpred9_Smi_fragment", 127);
		TraceIn("synpred9_Smi_fragment", 127);
		try
		{
			// Smi.g:730:8: ( choice_value )
			DebugEnterAlt(1);
			// Smi.g:730:9: choice_value
			{
			DebugLocation(730, 9);
			PushFollow(Follow._choice_value_in_synpred9_Smi2924);
			choice_value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred9_Smi_fragment", 127);
			LeaveRule("synpred9_Smi_fragment", 127);
			LeaveRule_synpred9_Smi_fragment();
		}
	}
	// $ANTLR end synpred9_Smi

	partial void EnterRule_synpred10_Smi_fragment();
	partial void LeaveRule_synpred10_Smi_fragment();

	// $ANTLR start synpred10_Smi
	public void synpred10_Smi_fragment()
	{
		EnterRule_synpred10_Smi_fragment();
		EnterRule("synpred10_Smi_fragment", 128);
		TraceIn("synpred10_Smi_fragment", 128);
		try
		{
			// Smi.g:731:8: ( sequence_value )
			DebugEnterAlt(1);
			// Smi.g:731:9: sequence_value
			{
			DebugLocation(731, 9);
			PushFollow(Follow._sequence_value_in_synpred10_Smi2943);
			sequence_value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred10_Smi_fragment", 128);
			LeaveRule("synpred10_Smi_fragment", 128);
			LeaveRule_synpred10_Smi_fragment();
		}
	}
	// $ANTLR end synpred10_Smi

	partial void EnterRule_synpred11_Smi_fragment();
	partial void LeaveRule_synpred11_Smi_fragment();

	// $ANTLR start synpred11_Smi
	public void synpred11_Smi_fragment()
	{
		EnterRule_synpred11_Smi_fragment();
		EnterRule("synpred11_Smi_fragment", 129);
		TraceIn("synpred11_Smi_fragment", 129);
		try
		{
			// Smi.g:732:8: ( sequenceof_value )
			DebugEnterAlt(1);
			// Smi.g:732:9: sequenceof_value
			{
			DebugLocation(732, 9);
			PushFollow(Follow._sequenceof_value_in_synpred11_Smi2962);
			sequenceof_value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred11_Smi_fragment", 129);
			LeaveRule("synpred11_Smi_fragment", 129);
			LeaveRule_synpred11_Smi_fragment();
		}
	}
	// $ANTLR end synpred11_Smi

	partial void EnterRule_synpred12_Smi_fragment();
	partial void LeaveRule_synpred12_Smi_fragment();

	// $ANTLR start synpred12_Smi
	public void synpred12_Smi_fragment()
	{
		EnterRule_synpred12_Smi_fragment();
		EnterRule("synpred12_Smi_fragment", 130);
		TraceIn("synpred12_Smi_fragment", 130);
		try
		{
			// Smi.g:733:8: ( cstr_value )
			DebugEnterAlt(1);
			// Smi.g:733:9: cstr_value
			{
			DebugLocation(733, 9);
			PushFollow(Follow._cstr_value_in_synpred12_Smi2981);
			cstr_value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred12_Smi_fragment", 130);
			LeaveRule("synpred12_Smi_fragment", 130);
			LeaveRule_synpred12_Smi_fragment();
		}
	}
	// $ANTLR end synpred12_Smi

	partial void EnterRule_synpred13_Smi_fragment();
	partial void LeaveRule_synpred13_Smi_fragment();

	// $ANTLR start synpred13_Smi
	public void synpred13_Smi_fragment()
	{
		EnterRule_synpred13_Smi_fragment();
		EnterRule("synpred13_Smi_fragment", 131);
		TraceIn("synpred13_Smi_fragment", 131);
		try
		{
			// Smi.g:734:8: ( obj_id_comp_lst )
			DebugEnterAlt(1);
			// Smi.g:734:9: obj_id_comp_lst
			{
			DebugLocation(734, 9);
			PushFollow(Follow._obj_id_comp_lst_in_synpred13_Smi3000);
			obj_id_comp_lst();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred13_Smi_fragment", 131);
			LeaveRule("synpred13_Smi_fragment", 131);
			LeaveRule_synpred13_Smi_fragment();
		}
	}
	// $ANTLR end synpred13_Smi

	partial void EnterRule_synpred14_Smi_fragment();
	partial void LeaveRule_synpred14_Smi_fragment();

	// $ANTLR start synpred14_Smi
	public void synpred14_Smi_fragment()
	{
		EnterRule_synpred14_Smi_fragment();
		EnterRule("synpred14_Smi_fragment", 132);
		TraceIn("synpred14_Smi_fragment", 132);
		try
		{
			// Smi.g:735:8: ( PLUS_INFINITY_KW )
			DebugEnterAlt(1);
			// Smi.g:735:9: PLUS_INFINITY_KW
			{
			DebugLocation(735, 9);
			Match(input,PLUS_INFINITY_KW,Follow._PLUS_INFINITY_KW_in_synpred14_Smi3019); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred14_Smi_fragment", 132);
			LeaveRule("synpred14_Smi_fragment", 132);
			LeaveRule_synpred14_Smi_fragment();
		}
	}
	// $ANTLR end synpred14_Smi

	partial void EnterRule_synpred15_Smi_fragment();
	partial void LeaveRule_synpred15_Smi_fragment();

	// $ANTLR start synpred15_Smi
	public void synpred15_Smi_fragment()
	{
		EnterRule_synpred15_Smi_fragment();
		EnterRule("synpred15_Smi_fragment", 133);
		TraceIn("synpred15_Smi_fragment", 133);
		try
		{
			// Smi.g:736:8: ( MINUS_INFINITY_KW )
			DebugEnterAlt(1);
			// Smi.g:736:9: MINUS_INFINITY_KW
			{
			DebugLocation(736, 9);
			Match(input,MINUS_INFINITY_KW,Follow._MINUS_INFINITY_KW_in_synpred15_Smi3036); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred15_Smi_fragment", 133);
			LeaveRule("synpred15_Smi_fragment", 133);
			LeaveRule_synpred15_Smi_fragment();
		}
	}
	// $ANTLR end synpred15_Smi

	partial void EnterRule_synpred16_Smi_fragment();
	partial void LeaveRule_synpred16_Smi_fragment();

	// $ANTLR start synpred16_Smi
	public void synpred16_Smi_fragment()
	{
		EnterRule_synpred16_Smi_fragment();
		EnterRule("synpred16_Smi_fragment", 134);
		TraceIn("synpred16_Smi_fragment", 134);
		try
		{
			// Smi.g:737:5: ( symbol )
			DebugEnterAlt(1);
			// Smi.g:737:6: symbol
			{
			DebugLocation(737, 6);
			PushFollow(Follow._symbol_in_synpred16_Smi3050);
			symbol();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred16_Smi_fragment", 134);
			LeaveRule("synpred16_Smi_fragment", 134);
			LeaveRule_synpred16_Smi_fragment();
		}
	}
	// $ANTLR end synpred16_Smi

	partial void EnterRule_synpred17_Smi_fragment();
	partial void LeaveRule_synpred17_Smi_fragment();

	// $ANTLR start synpred17_Smi
	public void synpred17_Smi_fragment()
	{
		EnterRule_synpred17_Smi_fragment();
		EnterRule("synpred17_Smi_fragment", 135);
		TraceIn("synpred17_Smi_fragment", 135);
		try
		{
			// Smi.g:777:25: ( L_BRACE namedNumber )
			DebugEnterAlt(1);
			// Smi.g:777:26: L_BRACE namedNumber
			{
			DebugLocation(777, 26);
			Match(input,L_BRACE,Follow._L_BRACE_in_synpred17_Smi3399); if (state.failed) return;
			DebugLocation(777, 34);
			PushFollow(Follow._namedNumber_in_synpred17_Smi3401);
			namedNumber();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred17_Smi_fragment", 135);
			LeaveRule("synpred17_Smi_fragment", 135);
			LeaveRule_synpred17_Smi_fragment();
		}
	}
	// $ANTLR end synpred17_Smi

	partial void EnterRule_synpred18_Smi_fragment();
	partial void LeaveRule_synpred18_Smi_fragment();

	// $ANTLR start synpred18_Smi
	public void synpred18_Smi_fragment()
	{
		EnterRule_synpred18_Smi_fragment();
		EnterRule("synpred18_Smi_fragment", 136);
		TraceIn("synpred18_Smi_fragment", 136);
		try
		{
			// Smi.g:811:19: ( L_BRACE namedNumber )
			DebugEnterAlt(1);
			// Smi.g:811:20: L_BRACE namedNumber
			{
			DebugLocation(811, 20);
			Match(input,L_BRACE,Follow._L_BRACE_in_synpred18_Smi3605); if (state.failed) return;
			DebugLocation(811, 28);
			PushFollow(Follow._namedNumber_in_synpred18_Smi3607);
			namedNumber();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred18_Smi_fragment", 136);
			LeaveRule("synpred18_Smi_fragment", 136);
			LeaveRule_synpred18_Smi_fragment();
		}
	}
	// $ANTLR end synpred18_Smi

	partial void EnterRule_synpred19_Smi_fragment();
	partial void LeaveRule_synpred19_Smi_fragment();

	// $ANTLR start synpred19_Smi
	public void synpred19_Smi_fragment()
	{
		EnterRule_synpred19_Smi_fragment();
		EnterRule("synpred19_Smi_fragment", 137);
		TraceIn("synpred19_Smi_fragment", 137);
		try
		{
			// Smi.g:894:10: ( CHOICE_KW )
			DebugEnterAlt(1);
			// Smi.g:894:11: CHOICE_KW
			{
			DebugLocation(894, 11);
			Match(input,CHOICE_KW,Follow._CHOICE_KW_in_synpred19_Smi4162); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred19_Smi_fragment", 137);
			LeaveRule("synpred19_Smi_fragment", 137);
			LeaveRule_synpred19_Smi_fragment();
		}
	}
	// $ANTLR end synpred19_Smi

	partial void EnterRule_synpred20_Smi_fragment();
	partial void LeaveRule_synpred20_Smi_fragment();

	// $ANTLR start synpred20_Smi
	public void synpred20_Smi_fragment()
	{
		EnterRule_synpred20_Smi_fragment();
		EnterRule("synpred20_Smi_fragment", 138);
		TraceIn("synpred20_Smi_fragment", 138);
		try
		{
			// Smi.g:914:16: ( LOWER )
			DebugEnterAlt(1);
			// Smi.g:914:17: LOWER
			{
			DebugLocation(914, 17);
			Match(input,LOWER,Follow._LOWER_in_synpred20_Smi4297); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred20_Smi_fragment", 138);
			LeaveRule("synpred20_Smi_fragment", 138);
			LeaveRule_synpred20_Smi_fragment();
		}
	}
	// $ANTLR end synpred20_Smi

	partial void EnterRule_synpred21_Smi_fragment();
	partial void LeaveRule_synpred21_Smi_fragment();

	// $ANTLR start synpred21_Smi
	public void synpred21_Smi_fragment()
	{
		EnterRule_synpred21_Smi_fragment();
		EnterRule("synpred21_Smi_fragment", 139);
		TraceIn("synpred21_Smi_fragment", 139);
		try
		{
			// Smi.g:916:7: ( RESULT_KW )
			DebugEnterAlt(1);
			// Smi.g:916:8: RESULT_KW
			{
			DebugLocation(916, 8);
			Match(input,RESULT_KW,Follow._RESULT_KW_in_synpred21_Smi4328); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred21_Smi_fragment", 139);
			LeaveRule("synpred21_Smi_fragment", 139);
			LeaveRule_synpred21_Smi_fragment();
		}
	}
	// $ANTLR end synpred21_Smi

	partial void EnterRule_synpred22_Smi_fragment();
	partial void LeaveRule_synpred22_Smi_fragment();

	// $ANTLR start synpred22_Smi
	public void synpred22_Smi_fragment()
	{
		EnterRule_synpred22_Smi_fragment();
		EnterRule("synpred22_Smi_fragment", 140);
		TraceIn("synpred22_Smi_fragment", 140);
		try
		{
			// Smi.g:917:10: ( LOWER )
			DebugEnterAlt(1);
			// Smi.g:917:11: LOWER
			{
			DebugLocation(917, 11);
			Match(input,LOWER,Follow._LOWER_in_synpred22_Smi4346); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred22_Smi_fragment", 140);
			LeaveRule("synpred22_Smi_fragment", 140);
			LeaveRule_synpred22_Smi_fragment();
		}
	}
	// $ANTLR end synpred22_Smi

	partial void EnterRule_synpred23_Smi_fragment();
	partial void LeaveRule_synpred23_Smi_fragment();

	// $ANTLR start synpred23_Smi
	public void synpred23_Smi_fragment()
	{
		EnterRule_synpred23_Smi_fragment();
		EnterRule("synpred23_Smi_fragment", 141);
		TraceIn("synpred23_Smi_fragment", 141);
		try
		{
			// Smi.g:917:22: ( LOWER )
			DebugEnterAlt(1);
			// Smi.g:917:23: LOWER
			{
			DebugLocation(917, 23);
			Match(input,LOWER,Follow._LOWER_in_synpred23_Smi4353); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred23_Smi_fragment", 141);
			LeaveRule("synpred23_Smi_fragment", 141);
			LeaveRule_synpred23_Smi_fragment();
		}
	}
	// $ANTLR end synpred23_Smi

	partial void EnterRule_synpred24_Smi_fragment();
	partial void LeaveRule_synpred24_Smi_fragment();

	// $ANTLR start synpred24_Smi
	public void synpred24_Smi_fragment()
	{
		EnterRule_synpred24_Smi_fragment();
		EnterRule("synpred24_Smi_fragment", 142);
		TraceIn("synpred24_Smi_fragment", 142);
		try
		{
			// Smi.g:920:7: ( ERRORS_KW )
			DebugEnterAlt(1);
			// Smi.g:920:8: ERRORS_KW
			{
			DebugLocation(920, 8);
			Match(input,ERRORS_KW,Follow._ERRORS_KW_in_synpred24_Smi4389); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred24_Smi_fragment", 142);
			LeaveRule("synpred24_Smi_fragment", 142);
			LeaveRule_synpred24_Smi_fragment();
		}
	}
	// $ANTLR end synpred24_Smi

	partial void EnterRule_synpred25_Smi_fragment();
	partial void LeaveRule_synpred25_Smi_fragment();

	// $ANTLR start synpred25_Smi
	public void synpred25_Smi_fragment()
	{
		EnterRule_synpred25_Smi_fragment();
		EnterRule("synpred25_Smi_fragment", 143);
		TraceIn("synpred25_Smi_fragment", 143);
		try
		{
			// Smi.g:921:7: ( LINKED_KW )
			DebugEnterAlt(1);
			// Smi.g:921:8: LINKED_KW
			{
			DebugLocation(921, 8);
			Match(input,LINKED_KW,Follow._LINKED_KW_in_synpred25_Smi4420); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred25_Smi_fragment", 143);
			LeaveRule("synpred25_Smi_fragment", 143);
			LeaveRule_synpred25_Smi_fragment();
		}
	}
	// $ANTLR end synpred25_Smi

	partial void EnterRule_synpred26_Smi_fragment();
	partial void LeaveRule_synpred26_Smi_fragment();

	// $ANTLR start synpred26_Smi
	public void synpred26_Smi_fragment()
	{
		EnterRule_synpred26_Smi_fragment();
		EnterRule("synpred26_Smi_fragment", 144);
		TraceIn("synpred26_Smi_fragment", 144);
		try
		{
			// Smi.g:935:18: ( LOWER )
			DebugEnterAlt(1);
			// Smi.g:935:19: LOWER
			{
			DebugLocation(935, 19);
			Match(input,LOWER,Follow._LOWER_in_synpred26_Smi4480); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred26_Smi_fragment", 144);
			LeaveRule("synpred26_Smi_fragment", 144);
			LeaveRule_synpred26_Smi_fragment();
		}
	}
	// $ANTLR end synpred26_Smi

	partial void EnterRule_synpred27_Smi_fragment();
	partial void LeaveRule_synpred27_Smi_fragment();

	// $ANTLR start synpred27_Smi
	public void synpred27_Smi_fragment()
	{
		EnterRule_synpred27_Smi_fragment();
		EnterRule("synpred27_Smi_fragment", 145);
		TraceIn("synpred27_Smi_fragment", 145);
		try
		{
			// Smi.g:983:23: ( smi_type L_BRACE )
			DebugEnterAlt(1);
			// Smi.g:983:24: smi_type L_BRACE
			{
			DebugLocation(983, 24);
			PushFollow(Follow._smi_type_in_synpred27_Smi4897);
			smi_type();
			PopFollow();
			if (state.failed) return;
			DebugLocation(983, 33);
			Match(input,L_BRACE,Follow._L_BRACE_in_synpred27_Smi4899); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred27_Smi_fragment", 145);
			LeaveRule("synpred27_Smi_fragment", 145);
			LeaveRule_synpred27_Smi_fragment();
		}
	}
	// $ANTLR end synpred27_Smi

	partial void EnterRule_synpred28_Smi_fragment();
	partial void LeaveRule_synpred28_Smi_fragment();

	// $ANTLR start synpred28_Smi
	public void synpred28_Smi_fragment()
	{
		EnterRule_synpred28_Smi_fragment();
		EnterRule("synpred28_Smi_fragment", 146);
		TraceIn("synpred28_Smi_fragment", 146);
		try
		{
			// Smi.g:988:24: ( smi_type )
			DebugEnterAlt(1);
			// Smi.g:988:25: smi_type
			{
			DebugLocation(988, 25);
			PushFollow(Follow._smi_type_in_synpred28_Smi4944);
			smi_type();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred28_Smi_fragment", 146);
			LeaveRule("synpred28_Smi_fragment", 146);
			LeaveRule_synpred28_Smi_fragment();
		}
	}
	// $ANTLR end synpred28_Smi

	partial void EnterRule_synpred29_Smi_fragment();
	partial void LeaveRule_synpred29_Smi_fragment();

	// $ANTLR start synpred29_Smi
	public void synpred29_Smi_fragment()
	{
		EnterRule_synpred29_Smi_fragment();
		EnterRule("synpred29_Smi_fragment", 147);
		TraceIn("synpred29_Smi_fragment", 147);
		try
		{
			// Smi.g:999:21: ( 'DESCRIPTION' )
			DebugEnterAlt(1);
			// Smi.g:999:22: 'DESCRIPTION'
			{
			DebugLocation(999, 22);
			Match(input,140,Follow._140_in_synpred29_Smi5297); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred29_Smi_fragment", 147);
			LeaveRule("synpred29_Smi_fragment", 147);
			LeaveRule_synpred29_Smi_fragment();
		}
	}
	// $ANTLR end synpred29_Smi

	partial void EnterRule_synpred30_Smi_fragment();
	partial void LeaveRule_synpred30_Smi_fragment();

	// $ANTLR start synpred30_Smi
	public void synpred30_Smi_fragment()
	{
		EnterRule_synpred30_Smi_fragment();
		EnterRule("synpred30_Smi_fragment", 148);
		TraceIn("synpred30_Smi_fragment", 148);
		try
		{
			// Smi.g:1003:7: (~ ( 'PIB-INDEX' ) )
			DebugEnterAlt(1);
			// Smi.g:
			{
			DebugLocation(1003, 7);
			if ((input.LA(1)>=ABSENT_KW && input.LA(1)<=168)||(input.LA(1)>=170 && input.LA(1)<=196))
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("synpred30_Smi_fragment", 148);
			LeaveRule("synpred30_Smi_fragment", 148);
			LeaveRule_synpred30_Smi_fragment();
		}
	}
	// $ANTLR end synpred30_Smi

	partial void EnterRule_synpred31_Smi_fragment();
	partial void LeaveRule_synpred31_Smi_fragment();

	// $ANTLR start synpred31_Smi
	public void synpred31_Smi_fragment()
	{
		EnterRule_synpred31_Smi_fragment();
		EnterRule("synpred31_Smi_fragment", 149);
		TraceIn("synpred31_Smi_fragment", 149);
		try
		{
			// Smi.g:1011:7: ( 'DEFVAL' )
			DebugEnterAlt(1);
			// Smi.g:1011:8: 'DEFVAL'
			{
			DebugLocation(1011, 8);
			Match(input,139,Follow._139_in_synpred31_Smi5743); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred31_Smi_fragment", 149);
			LeaveRule("synpred31_Smi_fragment", 149);
			LeaveRule_synpred31_Smi_fragment();
		}
	}
	// $ANTLR end synpred31_Smi

	partial void EnterRule_synpred32_Smi_fragment();
	partial void LeaveRule_synpred32_Smi_fragment();

	// $ANTLR start synpred32_Smi
	public void synpred32_Smi_fragment()
	{
		EnterRule_synpred32_Smi_fragment();
		EnterRule("synpred32_Smi_fragment", 150);
		TraceIn("synpred32_Smi_fragment", 150);
		try
		{
			// Smi.g:1012:23: ( L_BRACE LOWER ( COMMA | R_BRACE ) )
			DebugEnterAlt(1);
			// Smi.g:1012:24: L_BRACE LOWER ( COMMA | R_BRACE )
			{
			DebugLocation(1012, 24);
			Match(input,L_BRACE,Follow._L_BRACE_in_synpred32_Smi5776); if (state.failed) return;
			DebugLocation(1012, 32);
			Match(input,LOWER,Follow._LOWER_in_synpred32_Smi5778); if (state.failed) return;
			DebugLocation(1012, 38);
			if (input.LA(1)==COMMA||input.LA(1)==R_BRACE)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("synpred32_Smi_fragment", 150);
			LeaveRule("synpred32_Smi_fragment", 150);
			LeaveRule_synpred32_Smi_fragment();
		}
	}
	// $ANTLR end synpred32_Smi

	partial void EnterRule_synpred33_Smi_fragment();
	partial void LeaveRule_synpred33_Smi_fragment();

	// $ANTLR start synpred33_Smi
	public void synpred33_Smi_fragment()
	{
		EnterRule_synpred33_Smi_fragment();
		EnterRule("synpred33_Smi_fragment", 151);
		TraceIn("synpred33_Smi_fragment", 151);
		try
		{
			// Smi.g:1119:16: ( smi_type L_BRACE )
			DebugEnterAlt(1);
			// Smi.g:1119:17: smi_type L_BRACE
			{
			DebugLocation(1119, 17);
			PushFollow(Follow._smi_type_in_synpred33_Smi6558);
			smi_type();
			PopFollow();
			if (state.failed) return;
			DebugLocation(1119, 26);
			Match(input,L_BRACE,Follow._L_BRACE_in_synpred33_Smi6560); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred33_Smi_fragment", 151);
			LeaveRule("synpred33_Smi_fragment", 151);
			LeaveRule_synpred33_Smi_fragment();
		}
	}
	// $ANTLR end synpred33_Smi

	partial void EnterRule_synpred34_Smi_fragment();
	partial void LeaveRule_synpred34_Smi_fragment();

	// $ANTLR start synpred34_Smi
	public void synpred34_Smi_fragment()
	{
		EnterRule_synpred34_Smi_fragment();
		EnterRule("synpred34_Smi_fragment", 152);
		TraceIn("synpred34_Smi_fragment", 152);
		try
		{
			// Smi.g:1165:17: ( UPPER )
			DebugEnterAlt(1);
			// Smi.g:1165:18: UPPER
			{
			DebugLocation(1165, 18);
			Match(input,UPPER,Follow._UPPER_in_synpred34_Smi6923); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred34_Smi_fragment", 152);
			LeaveRule("synpred34_Smi_fragment", 152);
			LeaveRule_synpred34_Smi_fragment();
		}
	}
	// $ANTLR end synpred34_Smi

	partial void EnterRule_synpred35_Smi_fragment();
	partial void LeaveRule_synpred35_Smi_fragment();

	// $ANTLR start synpred35_Smi
	public void synpred35_Smi_fragment()
	{
		EnterRule_synpred35_Smi_fragment();
		EnterRule("synpred35_Smi_fragment", 153);
		TraceIn("synpred35_Smi_fragment", 153);
		try
		{
			// Smi.g:1166:3: ( value )
			DebugEnterAlt(1);
			// Smi.g:1166:4: value
			{
			DebugLocation(1166, 4);
			PushFollow(Follow._value_in_synpred35_Smi6937);
			value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred35_Smi_fragment", 153);
			LeaveRule("synpred35_Smi_fragment", 153);
			LeaveRule_synpred35_Smi_fragment();
		}
	}
	// $ANTLR end synpred35_Smi

	partial void EnterRule_synpred36_Smi_fragment();
	partial void LeaveRule_synpred36_Smi_fragment();

	// $ANTLR start synpred36_Smi
	public void synpred36_Smi_fragment()
	{
		EnterRule_synpred36_Smi_fragment();
		EnterRule("synpred36_Smi_fragment", 154);
		TraceIn("synpred36_Smi_fragment", 154);
		try
		{
			// Smi.g:1229:24: ( L_BRACE ( LOWER | COMMA | R_BRACE ) )
			DebugEnterAlt(1);
			// Smi.g:1229:25: L_BRACE ( LOWER | COMMA | R_BRACE )
			{
			DebugLocation(1229, 25);
			Match(input,L_BRACE,Follow._L_BRACE_in_synpred36_Smi7437); if (state.failed) return;
			DebugLocation(1229, 33);
			if (input.LA(1)==COMMA||input.LA(1)==LOWER||input.LA(1)==R_BRACE)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("synpred36_Smi_fragment", 154);
			LeaveRule("synpred36_Smi_fragment", 154);
			LeaveRule_synpred36_Smi_fragment();
		}
	}
	// $ANTLR end synpred36_Smi

	partial void EnterRule_synpred37_Smi_fragment();
	partial void LeaveRule_synpred37_Smi_fragment();

	// $ANTLR start synpred37_Smi
	public void synpred37_Smi_fragment()
	{
		EnterRule_synpred37_Smi_fragment();
		EnterRule("synpred37_Smi_fragment", 155);
		TraceIn("synpred37_Smi_fragment", 155);
		try
		{
			// Smi.g:1236:7: ( smi_type L_BRACE )
			DebugEnterAlt(1);
			// Smi.g:1236:8: smi_type L_BRACE
			{
			DebugLocation(1236, 8);
			PushFollow(Follow._smi_type_in_synpred37_Smi7522);
			smi_type();
			PopFollow();
			if (state.failed) return;
			DebugLocation(1236, 17);
			Match(input,L_BRACE,Follow._L_BRACE_in_synpred37_Smi7524); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred37_Smi_fragment", 155);
			LeaveRule("synpred37_Smi_fragment", 155);
			LeaveRule_synpred37_Smi_fragment();
		}
	}
	// $ANTLR end synpred37_Smi

	partial void EnterRule_synpred38_Smi_fragment();
	partial void LeaveRule_synpred38_Smi_fragment();

	// $ANTLR start synpred38_Smi
	public void synpred38_Smi_fragment()
	{
		EnterRule_synpred38_Smi_fragment();
		EnterRule("synpred38_Smi_fragment", 156);
		TraceIn("synpred38_Smi_fragment", 156);
		try
		{
			// Smi.g:1239:7: ( smi_type )
			DebugEnterAlt(1);
			// Smi.g:1239:8: smi_type
			{
			DebugLocation(1239, 8);
			PushFollow(Follow._smi_type_in_synpred38_Smi7565);
			smi_type();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred38_Smi_fragment", 156);
			LeaveRule("synpred38_Smi_fragment", 156);
			LeaveRule_synpred38_Smi_fragment();
		}
	}
	// $ANTLR end synpred38_Smi

	partial void EnterRule_synpred39_Smi_fragment();
	partial void LeaveRule_synpred39_Smi_fragment();

	// $ANTLR start synpred39_Smi
	public void synpred39_Smi_fragment()
	{
		EnterRule_synpred39_Smi_fragment();
		EnterRule("synpred39_Smi_fragment", 157);
		TraceIn("synpred39_Smi_fragment", 157);
		try
		{
			// Smi.g:1259:6: ( 'DESCRIPTION' )
			DebugEnterAlt(1);
			// Smi.g:1259:7: 'DESCRIPTION'
			{
			DebugLocation(1259, 7);
			Match(input,140,Follow._140_in_synpred39_Smi7682); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred39_Smi_fragment", 157);
			LeaveRule("synpred39_Smi_fragment", 157);
			LeaveRule_synpred39_Smi_fragment();
		}
	}
	// $ANTLR end synpred39_Smi

	partial void EnterRule_synpred40_Smi_fragment();
	partial void LeaveRule_synpred40_Smi_fragment();

	// $ANTLR start synpred40_Smi
	public void synpred40_Smi_fragment()
	{
		EnterRule_synpred40_Smi_fragment();
		EnterRule("synpred40_Smi_fragment", 158);
		TraceIn("synpred40_Smi_fragment", 158);
		try
		{
			// Smi.g:1271:7: ( type )
			DebugEnterAlt(1);
			// Smi.g:1271:8: type
			{
			DebugLocation(1271, 8);
			PushFollow(Follow._type_in_synpred40_Smi7770);
			type();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred40_Smi_fragment", 158);
			LeaveRule("synpred40_Smi_fragment", 158);
			LeaveRule_synpred40_Smi_fragment();
		}
	}
	// $ANTLR end synpred40_Smi

	partial void EnterRule_synpred41_Smi_fragment();
	partial void LeaveRule_synpred41_Smi_fragment();

	// $ANTLR start synpred41_Smi
	public void synpred41_Smi_fragment()
	{
		EnterRule_synpred41_Smi_fragment();
		EnterRule("synpred41_Smi_fragment", 159);
		TraceIn("synpred41_Smi_fragment", 159);
		try
		{
			// Smi.g:1291:3: ( L_BRACKET ( NUMBER | UPPER | LOWER ) )
			DebugEnterAlt(1);
			// Smi.g:1291:4: L_BRACKET ( NUMBER | UPPER | LOWER )
			{
			DebugLocation(1291, 4);
			Match(input,L_BRACKET,Follow._L_BRACKET_in_synpred41_Smi7893); if (state.failed) return;
			DebugLocation(1291, 14);
			if (input.LA(1)==LOWER||input.LA(1)==NUMBER||input.LA(1)==UPPER)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("synpred41_Smi_fragment", 159);
			LeaveRule("synpred41_Smi_fragment", 159);
			LeaveRule_synpred41_Smi_fragment();
		}
	}
	// $ANTLR end synpred41_Smi

	partial void EnterRule_synpred42_Smi_fragment();
	partial void LeaveRule_synpred42_Smi_fragment();

	// $ANTLR start synpred42_Smi
	public void synpred42_Smi_fragment()
	{
		EnterRule_synpred42_Smi_fragment();
		EnterRule("synpred42_Smi_fragment", 160);
		TraceIn("synpred42_Smi_fragment", 160);
		try
		{
			// Smi.g:1321:19: ( signed_number )
			DebugEnterAlt(1);
			// Smi.g:1321:20: signed_number
			{
			DebugLocation(1321, 20);
			PushFollow(Follow._signed_number_in_synpred42_Smi8129);
			signed_number();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred42_Smi_fragment", 160);
			LeaveRule("synpred42_Smi_fragment", 160);
			LeaveRule_synpred42_Smi_fragment();
		}
	}
	// $ANTLR end synpred42_Smi

	partial void EnterRule_synpred43_Smi_fragment();
	partial void LeaveRule_synpred43_Smi_fragment();

	// $ANTLR start synpred43_Smi
	public void synpred43_Smi_fragment()
	{
		EnterRule_synpred43_Smi_fragment();
		EnterRule("synpred43_Smi_fragment", 161);
		TraceIn("synpred43_Smi_fragment", 161);
		try
		{
			// Smi.g:1322:21: ( defined_value )
			DebugEnterAlt(1);
			// Smi.g:1322:22: defined_value
			{
			DebugLocation(1322, 22);
			PushFollow(Follow._defined_value_in_synpred43_Smi8161);
			defined_value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred43_Smi_fragment", 161);
			LeaveRule("synpred43_Smi_fragment", 161);
			LeaveRule_synpred43_Smi_fragment();
		}
	}
	// $ANTLR end synpred43_Smi

	partial void EnterRule_synpred44_Smi_fragment();
	partial void LeaveRule_synpred44_Smi_fragment();

	// $ANTLR start synpred44_Smi
	public void synpred44_Smi_fragment()
	{
		EnterRule_synpred44_Smi_fragment();
		EnterRule("synpred44_Smi_fragment", 162);
		TraceIn("synpred44_Smi_fragment", 162);
		try
		{
			// Smi.g:1353:7: ( value_range )
			DebugEnterAlt(1);
			// Smi.g:1353:8: value_range
			{
			DebugLocation(1353, 8);
			PushFollow(Follow._value_range_in_synpred44_Smi8418);
			value_range();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred44_Smi_fragment", 162);
			LeaveRule("synpred44_Smi_fragment", 162);
			LeaveRule_synpred44_Smi_fragment();
		}
	}
	// $ANTLR end synpred44_Smi

	partial void EnterRule_synpred45_Smi_fragment();
	partial void LeaveRule_synpred45_Smi_fragment();

	// $ANTLR start synpred45_Smi
	public void synpred45_Smi_fragment()
	{
		EnterRule_synpred45_Smi_fragment();
		EnterRule("synpred45_Smi_fragment", 163);
		TraceIn("synpred45_Smi_fragment", 163);
		try
		{
			// Smi.g:1354:7: ( value )
			DebugEnterAlt(1);
			// Smi.g:1354:8: value
			{
			DebugLocation(1354, 8);
			PushFollow(Follow._value_in_synpred45_Smi8436);
			value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred45_Smi_fragment", 163);
			LeaveRule("synpred45_Smi_fragment", 163);
			LeaveRule_synpred45_Smi_fragment();
		}
	}
	// $ANTLR end synpred45_Smi

	partial void EnterRule_synpred46_Smi_fragment();
	partial void LeaveRule_synpred46_Smi_fragment();

	// $ANTLR start synpred46_Smi
	public void synpred46_Smi_fragment()
	{
		EnterRule_synpred46_Smi_fragment();
		EnterRule("synpred46_Smi_fragment", 164);
		TraceIn("synpred46_Smi_fragment", 164);
		try
		{
			// Smi.g:1416:7: ( H_STRING )
			DebugEnterAlt(1);
			// Smi.g:1416:8: H_STRING
			{
			DebugLocation(1416, 8);
			Match(input,H_STRING,Follow._H_STRING_in_synpred46_Smi8935); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred46_Smi_fragment", 164);
			LeaveRule("synpred46_Smi_fragment", 164);
			LeaveRule_synpred46_Smi_fragment();
		}
	}
	// $ANTLR end synpred46_Smi

	partial void EnterRule_synpred47_Smi_fragment();
	partial void LeaveRule_synpred47_Smi_fragment();

	// $ANTLR start synpred47_Smi
	public void synpred47_Smi_fragment()
	{
		EnterRule_synpred47_Smi_fragment();
		EnterRule("synpred47_Smi_fragment", 165);
		TraceIn("synpred47_Smi_fragment", 165);
		try
		{
			// Smi.g:1420:7: ( B_STRING )
			DebugEnterAlt(1);
			// Smi.g:1420:8: B_STRING
			{
			DebugLocation(1420, 8);
			Match(input,B_STRING,Follow._B_STRING_in_synpred47_Smi8955); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred47_Smi_fragment", 165);
			LeaveRule("synpred47_Smi_fragment", 165);
			LeaveRule_synpred47_Smi_fragment();
		}
	}
	// $ANTLR end synpred47_Smi

	partial void EnterRule_synpred48_Smi_fragment();
	partial void LeaveRule_synpred48_Smi_fragment();

	// $ANTLR start synpred48_Smi
	public void synpred48_Smi_fragment()
	{
		EnterRule_synpred48_Smi_fragment();
		EnterRule("synpred48_Smi_fragment", 166);
		TraceIn("synpred48_Smi_fragment", 166);
		try
		{
			// Smi.g:1425:15: ( id_list )
			DebugEnterAlt(1);
			// Smi.g:1425:16: id_list
			{
			DebugLocation(1425, 16);
			PushFollow(Follow._id_list_in_synpred48_Smi8992);
			id_list();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred48_Smi_fragment", 166);
			LeaveRule("synpred48_Smi_fragment", 166);
			LeaveRule_synpred48_Smi_fragment();
		}
	}
	// $ANTLR end synpred48_Smi

	partial void EnterRule_synpred49_Smi_fragment();
	partial void LeaveRule_synpred49_Smi_fragment();

	// $ANTLR start synpred49_Smi
	public void synpred49_Smi_fragment()
	{
		EnterRule_synpred49_Smi_fragment();
		EnterRule("synpred49_Smi_fragment", 167);
		TraceIn("synpred49_Smi_fragment", 167);
		try
		{
			// Smi.g:1426:17: ( char_defs_list )
			DebugEnterAlt(1);
			// Smi.g:1426:18: char_defs_list
			{
			DebugLocation(1426, 18);
			PushFollow(Follow._char_defs_list_in_synpred49_Smi9020);
			char_defs_list();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred49_Smi_fragment", 167);
			LeaveRule("synpred49_Smi_fragment", 167);
			LeaveRule_synpred49_Smi_fragment();
		}
	}
	// $ANTLR end synpred49_Smi
	#endregion Rules

	#region Synpreds
	private bool EvaluatePredicate(System.Action fragment)
	{
		bool success = false;
		state.backtracking++;
		try { DebugBeginBacktrack(state.backtracking);
		int start = input.Mark();
		try
		{
			fragment();
		}
		catch ( RecognitionException re )
		{
			System.Console.Error.WriteLine("impossible: "+re);
		}
		success = !state.failed;
		input.Rewind(start);
		} finally { DebugEndBacktrack(state.backtracking, success); }
		state.backtracking--;
		state.failed=false;
		return success;
	}
	#endregion Synpreds


	#region DFA
	private DFA52 dfa52;
	private DFA79 dfa79;
	private DFA84 dfa84;
	private DFA101 dfa101;
	private DFA110 dfa110;
	private DFA109 dfa109;
	private DFA131 dfa131;
	private DFA140 dfa140;
	private DFA156 dfa156;

	protected override void InitDFAs()
	{
		base.InitDFAs();
		dfa52 = new DFA52( this, SpecialStateTransition52 );
		dfa79 = new DFA79( this, SpecialStateTransition79 );
		dfa84 = new DFA84( this, SpecialStateTransition84 );
		dfa101 = new DFA101( this, SpecialStateTransition101 );
		dfa110 = new DFA110( this, SpecialStateTransition110 );
		dfa109 = new DFA109( this, SpecialStateTransition109 );
		dfa131 = new DFA131( this, SpecialStateTransition131 );
		dfa140 = new DFA140( this, SpecialStateTransition140 );
		dfa156 = new DFA156( this, SpecialStateTransition156 );
	}

	private class DFA52 : DFA
	{
		private const string DFA52_eotS =
			"\x62\xFFFF";
		private const string DFA52_eofS =
			"\x1\x30\x61\xFFFF";
		private const string DFA52_minS =
			"\x1\x7\x1\x0\x19\xFFFF\x1\x0\x6\xFFFF\xD\x0\x33\xFFFF";
		private const string DFA52_maxS =
			"\x1\xC4\x1\x0\x19\xFFFF\x1\x0\x6\xFFFF\xD\x0\x33\xFFFF";
		private const string DFA52_acceptS =
			"\x2\xFFFF\x19\x1\x1\xFFFF\x6\x1\xD\xFFFF\x1\x1\x1\x2\x31\xFFFF";
		private const string DFA52_specialS =
			"\x1\x0\x1\x1\x19\xFFFF\x1\x2\x6\xFFFF\x1\x3\x1\x4\x1\x5\x1\x6\x1\x7\x1"+
			"\x8\x1\x9\x1\xA\x1\xB\x1\xC\x1\xD\x1\xE\x1\xF\x33\xFFFF}>";
		private static readonly string[] DFA52_transitionS =
			{
				"\x1\x2\x2\xFFFF\x1\x30\x1\xFFFF\x1\x30\x2\xFFFF\x1\x3\x1\xFFFF\x1\x6"+
				"\x1\x4\x2\xFFFF\x1\x5\x2\xFFFF\x1\x15\x1\xFFFF\x2\x30\x5\xFFFF\x1\x30"+
				"\x5\xFFFF\x1\x16\x1\x30\x1\x17\x1\x30\x1\x24\x2\x30\x3\xFFFF\x1\x18"+
				"\x2\xFFFF\x1\x7\x1\x8\x1\x9\x2\xFFFF\x1\xA\x6\xFFFF\x1\x19\x2\x30\x1"+
				"\xB\x1\xFFFF\x1\x30\x1\x1\x1\xFFFF\x1\x21\x5\xFFFF\x1\x1A\x1\xFFFF\x1"+
				"\xC\x1\xFFFF\x1\x1B\x1\x1C\x2\xFFFF\x1\x23\x1\x30\x6\xFFFF\x1\xD\x1"+
				"\xFFFF\x1\x1D\x1\xFFFF\x2\x30\x1\xFFFF\x1\x30\x1\xFFFF\x1\x1F\x1\x20"+
				"\x4\xFFFF\x1\xF\x1\xFFFF\x1\xE\x2\xFFFF\x1\x30\x2\xFFFF\x1\x10\x1\x22"+
				"\x1\x12\x1\x11\x1\x13\x1\x14\x2\xFFFF\x5\x30\x1\x2D\x3\x30\x1\xFFFF"+
				"\x1\x30\x1\x2F\x1\xFFFF\x3\x30\x1\xFFFF\x1\x30\x2\xFFFF\x3\x30\x6\xFFFF"+
				"\x2\x30\x1\xFFFF\x1\x2C\x1\x26\x1\x2B\x1\x28\x1\xFFFF\x1\x2A\x1\x27"+
				"\x1\x25\x2\xFFFF\x1\x30\x2\xFFFF\x4\x30\x1\xFFFF\x1\x30\x1\xFFFF\x1"+
				"\x30\x1\x1E\x1\xFFFF\x4\x30\x3\xFFFF\x1\x29\x2\x30\x1\x2E\x1\x30\x1"+
				"\xFFFF\x1\x30\x2\xFFFF\x1\x30",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				""
			};

		private static readonly short[] DFA52_eot = DFA.UnpackEncodedString(DFA52_eotS);
		private static readonly short[] DFA52_eof = DFA.UnpackEncodedString(DFA52_eofS);
		private static readonly char[] DFA52_min = DFA.UnpackEncodedStringToUnsignedChars(DFA52_minS);
		private static readonly char[] DFA52_max = DFA.UnpackEncodedStringToUnsignedChars(DFA52_maxS);
		private static readonly short[] DFA52_accept = DFA.UnpackEncodedString(DFA52_acceptS);
		private static readonly short[] DFA52_special = DFA.UnpackEncodedString(DFA52_specialS);
		private static readonly short[][] DFA52_transition;

		static DFA52()
		{
			int numStates = DFA52_transitionS.Length;
			DFA52_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA52_transition[i] = DFA.UnpackEncodedString(DFA52_transitionS[i]);
			}
		}

		public DFA52( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 52;
			this.eot = DFA52_eot;
			this.eof = DFA52_eof;
			this.min = DFA52_min;
			this.max = DFA52_max;
			this.accept = DFA52_accept;
			this.special = DFA52_special;
			this.transition = DFA52_transition;
		}

		public override string Description { get { return "917:9: ( ( LOWER )=> ( ( LOWER )=>l2= LOWER )? t2= type )?"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition52(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA52_1 = input.LA(1);
		int index52_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((LA52_1==LOWER)) {s = 1;}

				else if ((LA52_1==ANY_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 2;}

				else if ((LA52_1==BIT_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 3;}

				else if ((LA52_1==BOOLEAN_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 4;}

				else if ((LA52_1==CHARACTER_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 5;}

				else if ((LA52_1==BMP_STR_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 6;}

				else if ((LA52_1==GENERALIZED_TIME_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 7;}

				else if ((LA52_1==GENERAL_STR_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 8;}

				else if ((LA52_1==GRAPHIC_STR_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 9;}

				else if ((LA52_1==IA5_STRING_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 10;}

				else if ((LA52_1==ISO646_STR_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 11;}

				else if ((LA52_1==NUMERIC_STR_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 12;}

				else if ((LA52_1==PRINTABLE_STR_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 13;}

				else if ((LA52_1==TELETEX_STR_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 14;}

				else if ((LA52_1==T61_STR_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 15;}

				else if ((LA52_1==UNIVERSAL_STR_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 16;}

				else if ((LA52_1==UTF8_STR_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 17;}

				else if ((LA52_1==UTC_TIME_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 18;}

				else if ((LA52_1==VIDEOTEX_STR_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 19;}

				else if ((LA52_1==VISIBLE_STR_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 20;}

				else if ((LA52_1==CHOICE_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 21;}

				else if ((LA52_1==EMBEDDED_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 22;}

				else if ((LA52_1==ENUMERATED_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 23;}

				else if ((LA52_1==EXTERNAL_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 24;}

				else if ((LA52_1==INTEGER_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 25;}

				else if ((LA52_1==NULL_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 26;}

				else if ((LA52_1==OBJECT_KW)) {s = 27;}

				else if ((LA52_1==OCTET_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 28;}

				else if ((LA52_1==REAL_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 29;}

				else if ((LA52_1==178) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 30;}

				else if ((LA52_1==SEQUENCE_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 31;}

				else if ((LA52_1==SET_KW) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 32;}

				else if ((LA52_1==L_BRACKET) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 33;}

				else if ((LA52_1==UPPER)) {s = 34;}

				else if ((LA52_1==OPERATION_KW)) {s = 35;}

				else if ((LA52_1==ERROR_KW)) {s = 36;}

				else if ((LA52_1==164)) {s = 37;}

				else if ((LA52_1==158)) {s = 38;}

				else if ((LA52_1==163)) {s = 39;}

				else if ((LA52_1==160)) {s = 40;}

				else if ((LA52_1==187)) {s = 41;}

				else if ((LA52_1==162)) {s = 42;}

				else if ((LA52_1==159)) {s = 43;}

				else if ((LA52_1==157)) {s = 44;}

				else if ((LA52_1==130)) {s = 45;}

				else if ((LA52_1==190)) {s = 46;}

				else if ((LA52_1==136) && (EvaluatePredicate(synpred22_Smi_fragment))) {s = 47;}

				else if ((LA52_1==EOF||LA52_1==ASSIGN_OP||LA52_1==BAR||(LA52_1>=COLON && LA52_1<=COMMA)||LA52_1==DEFAULT_KW||LA52_1==END_KW||LA52_1==ERRORS_KW||(LA52_1>=EXCEPT_KW && LA52_1<=EXCLAMATION)||(LA52_1>=INTERSECTION && LA52_1<=INTERSECTION_KW)||LA52_1==LINKED_KW||LA52_1==OPTIONAL_KW||(LA52_1>=RESULT_KW && LA52_1<=R_BRACE)||LA52_1==R_PAREN||LA52_1==UNION_KW||(LA52_1>=125 && LA52_1<=129)||(LA52_1>=131 && LA52_1<=133)||LA52_1==135||(LA52_1>=138 && LA52_1<=140)||LA52_1==142||(LA52_1>=145 && LA52_1<=147)||(LA52_1>=154 && LA52_1<=155)||LA52_1==167||(LA52_1>=170 && LA52_1<=173)||LA52_1==175||LA52_1==177||(LA52_1>=180 && LA52_1<=183)||(LA52_1>=188 && LA52_1<=189)||LA52_1==191||LA52_1==193||LA52_1==196)) {s = 48;}

				input.Seek(index52_1);
				break;
			}
		case 1:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred22_Smi_fragment))) {s = 47;}

				else if ((true)) {s = 48;}

				input.Seek(index52_1);
				break;
			}
		case 2:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred22_Smi_fragment))) {s = 47;}

				else if ((true)) {s = 48;}

				input.Seek(index52_1);
				break;
			}
		case 3:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred22_Smi_fragment))) {s = 47;}

				else if ((true)) {s = 48;}

				input.Seek(index52_1);
				break;
			}
		case 4:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred22_Smi_fragment))) {s = 47;}

				else if ((true)) {s = 48;}

				input.Seek(index52_1);
				break;
			}
		case 5:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred22_Smi_fragment))) {s = 47;}

				else if ((true)) {s = 48;}

				input.Seek(index52_1);
				break;
			}
		case 6:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred22_Smi_fragment))) {s = 47;}

				else if ((true)) {s = 48;}

				input.Seek(index52_1);
				break;
			}
		case 7:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred22_Smi_fragment))) {s = 47;}

				else if ((true)) {s = 48;}

				input.Seek(index52_1);
				break;
			}
		case 8:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred22_Smi_fragment))) {s = 47;}

				else if ((true)) {s = 48;}

				input.Seek(index52_1);
				break;
			}
		case 9:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred22_Smi_fragment))) {s = 47;}

				else if ((true)) {s = 48;}

				input.Seek(index52_1);
				break;
			}
		case 10:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred22_Smi_fragment))) {s = 47;}

				else if ((true)) {s = 48;}

				input.Seek(index52_1);
				break;
			}
		case 11:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred22_Smi_fragment))) {s = 47;}

				else if ((true)) {s = 48;}

				input.Seek(index52_1);
				break;
			}
		case 12:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred22_Smi_fragment))) {s = 47;}

				else if ((true)) {s = 48;}

				input.Seek(index52_1);
				break;
			}
		case 13:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred22_Smi_fragment))) {s = 47;}

				else if ((true)) {s = 48;}

				input.Seek(index52_1);
				break;
			}
		case 14:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred22_Smi_fragment))) {s = 47;}

				else if ((true)) {s = 48;}

				input.Seek(index52_1);
				break;
			}
		case 15:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred22_Smi_fragment))) {s = 47;}

				else if ((true)) {s = 48;}

				input.Seek(index52_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 52, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA79 : DFA
	{
		private const string DFA79_eotS =
			"\x3F\xFFFF";
		private const string DFA79_eofS =
			"\x1\x5\x3E\xFFFF";
		private const string DFA79_minS =
			"\x1\xA\x1\x0\x3D\xFFFF";
		private const string DFA79_maxS =
			"\x1\xC4\x1\x0\x3D\xFFFF";
		private const string DFA79_acceptS =
			"\x2\xFFFF\x1\x2\x1\x3\x1\x4\x1\x5\x38\xFFFF\x1\x1";
		private const string DFA79_specialS =
			"\x1\xFFFF\x1\x0\x3D\xFFFF}>";
		private static readonly string[] DFA79_transitionS =
			{
				"\x1\x5\x1\xFFFF\x1\x5\xD\xFFFF\x2\x5\x5\xFFFF\x1\x5\x6\xFFFF\x1\x5\x1"+
				"\xFFFF\x4\x5\x13\xFFFF\x2\x5\x2\xFFFF\x2\x5\xB\xFFFF\x1\x5\x3\xFFFF"+
				"\x2\x5\xA\xFFFF\x2\x5\x1\xFFFF\x1\x5\xC\xFFFF\x1\x5\x3\xFFFF\x1\x5\x6"+
				"\xFFFF\x9\x5\x1\x2\x1\x5\x2\xFFFF\x3\x5\x1\xFFFF\x1\x5\x1\xFFFF\x1\x4"+
				"\x3\x5\x1\xFFFF\x1\x1\x4\xFFFF\x2\x5\x1\xFFFF\x4\x5\x1\xFFFF\x3\x5\x2"+
				"\xFFFF\x1\x5\x1\xFFFF\x1\x3\x4\x5\x1\xFFFF\x1\x5\x1\xFFFF\x1\x5\x2\xFFFF"+
				"\x4\x5\x3\xFFFF\x7\x5\x2\xFFFF\x1\x5",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				""
			};

		private static readonly short[] DFA79_eot = DFA.UnpackEncodedString(DFA79_eotS);
		private static readonly short[] DFA79_eof = DFA.UnpackEncodedString(DFA79_eofS);
		private static readonly char[] DFA79_min = DFA.UnpackEncodedStringToUnsignedChars(DFA79_minS);
		private static readonly char[] DFA79_max = DFA.UnpackEncodedStringToUnsignedChars(DFA79_maxS);
		private static readonly short[] DFA79_accept = DFA.UnpackEncodedString(DFA79_acceptS);
		private static readonly short[] DFA79_special = DFA.UnpackEncodedString(DFA79_specialS);
		private static readonly short[][] DFA79_transition;

		static DFA79()
		{
			int numStates = DFA79_transitionS.Length;
			DFA79_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA79_transition[i] = DFA.UnpackEncodedString(DFA79_transitionS[i]);
			}
		}

		public DFA79( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 79;
			this.eot = DFA79_eot;
			this.eof = DFA79_eof;
			this.min = DFA79_min;
			this.max = DFA79_max;
			this.accept = DFA79_accept;
			this.special = DFA79_special;
			this.transition = DFA79_transition;
		}

		public override string Description { get { return "1003:5: ( (~ ( 'PIB-INDEX' ) )=> 'INDEX' i3= objecttype_macro_index | 'AUGMENTS' i4= objecttype_macro_augments | 'PIB-INDEX' L_BRACE v3= value R_BRACE | 'EXTENDS' L_BRACE v4= value R_BRACE )?"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition79(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA79_1 = input.LA(1);
		int index79_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred30_Smi_fragment))) {s = 62;}

				else if ((true)) {s = 5;}

				input.Seek(index79_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 79, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA84 : DFA
	{
		private const string DFA84_eotS =
			"\xA\xFFFF";
		private const string DFA84_eofS =
			"\xA\xFFFF";
		private const string DFA84_minS =
			"\x2\x14\x1\xFFFF\x2\x14\x1\x0\x1\x14\x1\xFFFF\x1\x0\x1\x14";
		private const string DFA84_maxS =
			"\x2\xBF\x1\xFFFF\x2\xBF\x1\x0\x1\xBF\x1\xFFFF\x1\x0\x1\xBF";
		private const string DFA84_acceptS =
			"\x2\xFFFF\x1\x2\x4\xFFFF\x1\x1\x2\xFFFF";
		private const string DFA84_specialS =
			"\x5\xFFFF\x1\x0\x2\xFFFF\x1\x1\x1\xFFFF}>";
		private static readonly string[] DFA84_transitionS =
			{
				"\x1\x2\xB\xFFFF\x1\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1\x2\x5\xFFFF\x1\x2\xD"+
				"\xFFFF\x1\x2\x1\x1\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\x2\xFFFF\x1\x2\x3\xFFFF"+
				"\x1\x2\x5\xFFFF\x1\x2\x13\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x4\x2"+
				"\x1\xFFFF\x4\x2\x1\xFFFF\x1\x2\x6\xFFFF\x1\x2\x2\xFFFF\x3\x2\x9\xFFFF"+
				"\x4\x2\x1\xFFFF\x3\x2\x8\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2"+
				"\xFFFF\x3\x2\x4\xFFFF\x5\x2",
				"\x1\x2\x6\xFFFF\x1\x2\x4\xFFFF\x1\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1\x2\x5"+
				"\xFFFF\x1\x2\xD\xFFFF\x1\x3\x1\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\x2\xFFFF"+
				"\x1\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x1\x2\xC\xFFFF\x1\x2\x5"+
				"\xFFFF\x1\x2\x6\xFFFF\x4\x2\x1\xFFFF\x4\x2\x1\xFFFF\x1\x2\x6\xFFFF\x1"+
				"\x2\x2\xFFFF\x3\x2\x9\xFFFF\x4\x2\x1\xFFFF\x3\x2\x8\xFFFF\x1\x2\x1\xFFFF"+
				"\x1\x2\x1\xFFFF\x1\x2\x2\xFFFF\x3\x2\x4\xFFFF\x5\x2",
				"",
				"\x1\x2\x5\xFFFF\x1\x2\x1\x4\x4\xFFFF\x1\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1"+
				"\x2\x5\xFFFF\x1\x2\xD\xFFFF\x2\x2\x1\xFFFF\x1\x2\x1\xFFFF\x2\x2\x1\xFFFF"+
				"\x2\x2\x2\xFFFF\x1\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x1\x5\xC"+
				"\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x4\x2\x1\xFFFF\x4\x2\x1\xFFFF\x1"+
				"\x2\x6\xFFFF\x1\x2\x2\xFFFF\x3\x2\x9\xFFFF\x4\x2\x1\xFFFF\x3\x2\x8\xFFFF"+
				"\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2\xFFFF\x3\x2\x4\xFFFF\x5\x2",
				"\x1\x2\xB\xFFFF\x1\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1\x2\x5\xFFFF\x1\x2\xD"+
				"\xFFFF\x1\x6\x1\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\x2\xFFFF\x1\x2\x3\xFFFF"+
				"\x1\x2\x5\xFFFF\x1\x2\x13\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x4\x2"+
				"\x1\xFFFF\x4\x2\x1\xFFFF\x1\x2\x6\xFFFF\x1\x2\x2\xFFFF\x3\x2\x9\xFFFF"+
				"\x4\x2\x1\xFFFF\x3\x2\x8\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2"+
				"\xFFFF\x3\x2\x4\xFFFF\x5\x2",
				"\x1\xFFFF",
				"\x1\x2\x5\xFFFF\x1\x2\x1\x9\x4\xFFFF\x1\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1"+
				"\x2\x5\xFFFF\x1\x2\xD\xFFFF\x2\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\x2\xFFFF"+
				"\x1\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x1\x8\xC\xFFFF\x1\x2\x5"+
				"\xFFFF\x1\x2\x6\xFFFF\x4\x2\x1\xFFFF\x4\x2\x1\xFFFF\x1\x2\x6\xFFFF\x1"+
				"\x2\x2\xFFFF\x3\x2\x9\xFFFF\x4\x2\x1\xFFFF\x3\x2\x8\xFFFF\x1\x2\x1\xFFFF"+
				"\x1\x2\x1\xFFFF\x1\x2\x2\xFFFF\x3\x2\x4\xFFFF\x5\x2",
				"",
				"\x1\xFFFF",
				"\x1\x2\xB\xFFFF\x1\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1\x2\x5\xFFFF\x1\x2\xD"+
				"\xFFFF\x1\x6\x1\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\x2\xFFFF\x1\x2\x3\xFFFF"+
				"\x1\x2\x5\xFFFF\x1\x2\x13\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x4\x2"+
				"\x1\xFFFF\x4\x2\x1\xFFFF\x1\x2\x6\xFFFF\x1\x2\x2\xFFFF\x3\x2\x9\xFFFF"+
				"\x4\x2\x1\xFFFF\x3\x2\x8\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2"+
				"\xFFFF\x3\x2\x4\xFFFF\x5\x2"
			};

		private static readonly short[] DFA84_eot = DFA.UnpackEncodedString(DFA84_eotS);
		private static readonly short[] DFA84_eof = DFA.UnpackEncodedString(DFA84_eofS);
		private static readonly char[] DFA84_min = DFA.UnpackEncodedStringToUnsignedChars(DFA84_minS);
		private static readonly char[] DFA84_max = DFA.UnpackEncodedStringToUnsignedChars(DFA84_maxS);
		private static readonly short[] DFA84_accept = DFA.UnpackEncodedString(DFA84_acceptS);
		private static readonly short[] DFA84_special = DFA.UnpackEncodedString(DFA84_specialS);
		private static readonly short[][] DFA84_transition;

		static DFA84()
		{
			int numStates = DFA84_transitionS.Length;
			DFA84_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA84_transition[i] = DFA.UnpackEncodedString(DFA84_transitionS[i]);
			}
		}

		public DFA84( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 84;
			this.eot = DFA84_eot;
			this.eof = DFA84_eof;
			this.min = DFA84_min;
			this.max = DFA84_max;
			this.accept = DFA84_accept;
			this.special = DFA84_special;
			this.transition = DFA84_transition;
		}

		public override string Description { get { return "1012:21: ( ( L_BRACE LOWER ( COMMA | R_BRACE ) )=>b= objecttype_macro_bitsvalue |v7= value )"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition84(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA84_1 = input.LA(1);
		int index84_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred32_Smi_fragment))) {s = 7;}

				else if ((true)) {s = 2;}

				input.Seek(index84_1);
				break;
			}
		case 1:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred32_Smi_fragment))) {s = 7;}

				else if ((true)) {s = 2;}

				input.Seek(index84_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 84, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA101 : DFA
	{
		private const string DFA101_eotS =
			"\x1A\xFFFF";
		private const string DFA101_eofS =
			"\x1\xFFFF\x2\x6\x2\xFFFF\x1\x6\x3\xFFFF\x2\x6\xF\xFFFF";
		private const string DFA101_minS =
			"\x1\x7\x2\xA\x1\x6C\x1\x3A\x1\xA\x2\xFFFF\x1\x46\x2\xA\x1\x49\x1\x46"+
			"\x1\x4F\x2\x65\x1\x1B\x1\x46\x1\x0\x1\x49\x1\x46\x1\x4F\x2\x65\x1\x1B"+
			"\x1\x0";
		private const string DFA101_maxS =
			"\x1\xBE\x2\xC4\x1\x6C\x1\x3A\x1\xC4\x2\xFFFF\x1\x46\x2\xC4\x1\x49\x1"+
			"\x76\x1\x4F\x2\x65\x1\x63\x1\x46\x1\x0\x1\x49\x1\x76\x1\x4F\x2\x65\x1"+
			"\x63\x1\x0";
		private const string DFA101_acceptS =
			"\x6\xFFFF\x1\x2\x1\x1\x12\xFFFF";
		private const string DFA101_specialS =
			"\x1\xFFFF\x1\x0\x3\xFFFF\x1\x1\x3\xFFFF\x1\x2\x1\x3\x7\xFFFF\x1\x4\x6"+
			"\xFFFF\x1\x5}>";
		private static readonly string[] DFA101_transitionS =
			{
				"\x1\x6\x7\xFFFF\x1\x6\x1\xFFFF\x2\x6\x2\xFFFF\x1\x6\x2\xFFFF\x1\x6\xE"+
				"\xFFFF\x1\x6\x1\xFFFF\x1\x6\x1\xFFFF\x1\x6\x5\xFFFF\x1\x6\x2\xFFFF\x3"+
				"\x6\x2\xFFFF\x1\x6\x6\xFFFF\x1\x2\x2\xFFFF\x1\x6\x2\xFFFF\x1\x6\x1\xFFFF"+
				"\x1\x6\x5\xFFFF\x1\x6\x1\xFFFF\x1\x6\x1\xFFFF\x1\x4\x1\x3\x2\xFFFF\x1"+
				"\x6\x7\xFFFF\x1\x6\x1\xFFFF\x1\x6\x6\xFFFF\x2\x6\x4\xFFFF\x1\x6\x1\xFFFF"+
				"\x1\x6\x5\xFFFF\x1\x6\x1\x5\x4\x6\x7\xFFFF\x1\x6\x5\xFFFF\x1\x1\x14"+
				"\xFFFF\x4\x6\x1\xFFFF\x3\x6\xD\xFFFF\x1\x6\x8\xFFFF\x1\x6\x2\xFFFF\x1"+
				"\x6",
				"\x1\x6\x1\xFFFF\x1\x6\xD\xFFFF\x2\x6\x5\xFFFF\x1\x6\x6\xFFFF\x1\x6\x1"+
				"\xFFFF\x4\x6\x13\xFFFF\x2\x6\x2\xFFFF\x2\x6\x1\x7\xA\xFFFF\x1\x6\x3"+
				"\xFFFF\x2\x6\xA\xFFFF\x2\x6\x1\xFFFF\x1\x6\xC\xFFFF\x1\x6\x3\xFFFF\x1"+
				"\x6\x6\xFFFF\x9\x6\x1\xFFFF\x1\x6\x2\xFFFF\x3\x6\x1\xFFFF\x1\x6\x2\xFFFF"+
				"\x3\x6\x6\xFFFF\x2\x6\x1\xFFFF\x4\x6\x1\xFFFF\x3\x6\x2\xFFFF\x1\x6\x2"+
				"\xFFFF\x4\x6\x1\xFFFF\x1\x6\x1\xFFFF\x1\x6\x2\xFFFF\x4\x6\x3\xFFFF\x5"+
				"\x6\x1\xFFFF\x1\x6\x2\xFFFF\x1\x6",
				"\x1\x6\x1\xFFFF\x1\x6\xD\xFFFF\x2\x6\x5\xFFFF\x1\x6\x6\xFFFF\x1\x6\x1"+
				"\xFFFF\x4\x6\x13\xFFFF\x2\x6\x2\xFFFF\x2\x6\x1\x8\x1\xFFFF\x1\x6\x8"+
				"\xFFFF\x1\x6\x3\xFFFF\x2\x6\xA\xFFFF\x2\x6\x1\xFFFF\x1\x6\xC\xFFFF\x1"+
				"\x6\x3\xFFFF\x1\x6\x6\xFFFF\x9\x6\x1\xFFFF\x1\x6\x2\xFFFF\x3\x6\x1\xFFFF"+
				"\x1\x6\x2\xFFFF\x3\x6\x6\xFFFF\x2\x6\x1\xFFFF\x4\x6\x1\xFFFF\x3\x6\x2"+
				"\xFFFF\x1\x6\x2\xFFFF\x4\x6\x1\xFFFF\x1\x6\x1\xFFFF\x1\x6\x2\xFFFF\x4"+
				"\x6\x3\xFFFF\x5\x6\x1\xFFFF\x1\x6\x2\xFFFF\x1\x6",
				"\x1\x9",
				"\x1\xA",
				"\x1\x6\x1\xFFFF\x1\x6\xD\xFFFF\x2\x6\x5\xFFFF\x1\x6\x2\xFFFF\x1\x6\x3"+
				"\xFFFF\x1\x6\x1\xFFFF\x4\x6\x13\xFFFF\x2\x6\x2\xFFFF\x2\x6\x1\x7\x1"+
				"\xFFFF\x1\x6\x8\xFFFF\x1\x6\x3\xFFFF\x2\x6\xA\xFFFF\x2\x6\x1\xFFFF\x1"+
				"\x6\xC\xFFFF\x1\x6\x3\xFFFF\x1\x6\x6\xFFFF\x9\x6\x1\xFFFF\x1\x6\x2\xFFFF"+
				"\x3\x6\x1\xFFFF\x1\x6\x2\xFFFF\x3\x6\x6\xFFFF\x2\x6\x1\xFFFF\x4\x6\x1"+
				"\xFFFF\x3\x6\x2\xFFFF\x1\x6\x2\xFFFF\x4\x6\x1\xFFFF\x1\x6\x1\xFFFF\x1"+
				"\x6\x2\xFFFF\x4\x6\x3\xFFFF\x5\x6\x1\xFFFF\x1\x6\x2\xFFFF\x1\x6",
				"",
				"",
				"\x1\xB",
				"\x1\x6\x1\xFFFF\x1\x6\xD\xFFFF\x2\x6\x5\xFFFF\x1\x6\x6\xFFFF\x1\x6\x1"+
				"\xFFFF\x4\x6\x13\xFFFF\x2\x6\x2\xFFFF\x2\x6\x1\x7\x1\xFFFF\x1\x6\x8"+
				"\xFFFF\x1\x6\x3\xFFFF\x2\x6\xA\xFFFF\x2\x6\x1\xFFFF\x1\x6\xC\xFFFF\x1"+
				"\x6\x3\xFFFF\x1\x6\x6\xFFFF\x9\x6\x1\xFFFF\x1\x6\x2\xFFFF\x3\x6\x1\xFFFF"+
				"\x1\x6\x2\xFFFF\x3\x6\x6\xFFFF\x2\x6\x1\xFFFF\x4\x6\x1\xFFFF\x3\x6\x2"+
				"\xFFFF\x1\x6\x2\xFFFF\x4\x6\x1\xFFFF\x1\x6\x1\xFFFF\x1\x6\x2\xFFFF\x4"+
				"\x6\x3\xFFFF\x5\x6\x1\xFFFF\x1\x6\x2\xFFFF\x1\x6",
				"\x1\x6\x1\xFFFF\x1\x6\xD\xFFFF\x2\x6\x5\xFFFF\x1\x6\x6\xFFFF\x1\x6\x1"+
				"\xFFFF\x4\x6\x13\xFFFF\x2\x6\x2\xFFFF\x2\x6\x1\x7\xA\xFFFF\x1\x6\x3"+
				"\xFFFF\x2\x6\xA\xFFFF\x2\x6\x1\xFFFF\x1\x6\xC\xFFFF\x1\x6\x3\xFFFF\x1"+
				"\x6\x6\xFFFF\x9\x6\x1\xFFFF\x1\x6\x2\xFFFF\x3\x6\x1\xFFFF\x1\x6\x2\xFFFF"+
				"\x3\x6\x6\xFFFF\x2\x6\x1\xFFFF\x4\x6\x1\xFFFF\x3\x6\x2\xFFFF\x1\x6\x2"+
				"\xFFFF\x4\x6\x1\xFFFF\x1\x6\x1\xFFFF\x1\x6\x2\xFFFF\x4\x6\x3\xFFFF\x5"+
				"\x6\x1\xFFFF\x1\x6\x2\xFFFF\x1\x6",
				"\x1\xC",
				"\x1\x6\x4\xFFFF\x1\xD\x3\xFFFF\x1\xE\x26\xFFFF\x1\x6",
				"\x1\xF",
				"\x1\x10",
				"\x1\x10",
				"\x1\x11\x47\xFFFF\x1\x12",
				"\x1\x13",
				"\x1\xFFFF",
				"\x1\x14",
				"\x1\x6\x4\xFFFF\x1\x15\x3\xFFFF\x1\x16\x26\xFFFF\x1\x6",
				"\x1\x17",
				"\x1\x18",
				"\x1\x18",
				"\x1\x11\x47\xFFFF\x1\x19",
				"\x1\xFFFF"
			};

		private static readonly short[] DFA101_eot = DFA.UnpackEncodedString(DFA101_eotS);
		private static readonly short[] DFA101_eof = DFA.UnpackEncodedString(DFA101_eofS);
		private static readonly char[] DFA101_min = DFA.UnpackEncodedStringToUnsignedChars(DFA101_minS);
		private static readonly char[] DFA101_max = DFA.UnpackEncodedStringToUnsignedChars(DFA101_maxS);
		private static readonly short[] DFA101_accept = DFA.UnpackEncodedString(DFA101_acceptS);
		private static readonly short[] DFA101_special = DFA.UnpackEncodedString(DFA101_specialS);
		private static readonly short[][] DFA101_transition;

		static DFA101()
		{
			int numStates = DFA101_transitionS.Length;
			DFA101_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA101_transition[i] = DFA.UnpackEncodedString(DFA101_transitionS[i]);
			}
		}

		public DFA101( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 101;
			this.eot = DFA101_eot;
			this.eof = DFA101_eof;
			this.min = DFA101_min;
			this.max = DFA101_max;
			this.accept = DFA101_accept;
			this.special = DFA101_special;
			this.transition = DFA101_transition;
		}

		public override string Description { get { return "1119:14: ( ( smi_type L_BRACE )=>s2= smi_type L_BRACE nb1= namedbit ( COMMA nb2= namedbit )* R_BRACE |t= type )"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition101(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA101_1 = input.LA(1);
		int index101_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((LA101_1==L_BRACE) && (EvaluatePredicate(synpred33_Smi_fragment))) {s = 7;}

				else if ((LA101_1==EOF||LA101_1==ASSIGN_OP||LA101_1==BAR||(LA101_1>=COLON && LA101_1<=COMMA)||LA101_1==DEFAULT_KW||LA101_1==END_KW||(LA101_1>=ERRORS_KW && LA101_1<=EXCLAMATION)||(LA101_1>=INTERSECTION && LA101_1<=INTERSECTION_KW)||(LA101_1>=LINKED_KW && LA101_1<=LOWER)||LA101_1==OBJECT_KW||(LA101_1>=OPERATION_KW && LA101_1<=OPTIONAL_KW)||(LA101_1>=RESULT_KW && LA101_1<=R_BRACE)||LA101_1==R_PAREN||LA101_1==UNION_KW||LA101_1==UPPER||(LA101_1>=125 && LA101_1<=133)||LA101_1==135||(LA101_1>=138 && LA101_1<=140)||LA101_1==142||(LA101_1>=145 && LA101_1<=147)||(LA101_1>=154 && LA101_1<=155)||(LA101_1>=157 && LA101_1<=160)||(LA101_1>=162 && LA101_1<=164)||LA101_1==167||(LA101_1>=170 && LA101_1<=173)||LA101_1==175||LA101_1==177||(LA101_1>=180 && LA101_1<=183)||(LA101_1>=187 && LA101_1<=191)||LA101_1==193||LA101_1==196)) {s = 6;}

				input.Seek(index101_1);
				break;
			}
		case 1:
			{
				input.Rewind();
				if ((LA101_1==EOF||LA101_1==ASSIGN_OP||LA101_1==BAR||(LA101_1>=COLON && LA101_1<=COMMA)||LA101_1==DEFAULT_KW||LA101_1==DOT||LA101_1==END_KW||(LA101_1>=ERRORS_KW && LA101_1<=EXCLAMATION)||(LA101_1>=INTERSECTION && LA101_1<=INTERSECTION_KW)||(LA101_1>=LINKED_KW && LA101_1<=LOWER)||LA101_1==L_PAREN||LA101_1==OBJECT_KW||(LA101_1>=OPERATION_KW && LA101_1<=OPTIONAL_KW)||(LA101_1>=RESULT_KW && LA101_1<=R_BRACE)||LA101_1==R_PAREN||LA101_1==UNION_KW||LA101_1==UPPER||(LA101_1>=125 && LA101_1<=133)||LA101_1==135||(LA101_1>=138 && LA101_1<=140)||LA101_1==142||(LA101_1>=145 && LA101_1<=147)||(LA101_1>=154 && LA101_1<=155)||(LA101_1>=157 && LA101_1<=160)||(LA101_1>=162 && LA101_1<=164)||LA101_1==167||(LA101_1>=170 && LA101_1<=173)||LA101_1==175||LA101_1==177||(LA101_1>=180 && LA101_1<=183)||(LA101_1>=187 && LA101_1<=191)||LA101_1==193||LA101_1==196)) {s = 6;}

				else if ((LA101_1==L_BRACE) && (EvaluatePredicate(synpred33_Smi_fragment))) {s = 7;}

				input.Seek(index101_1);
				break;
			}
		case 2:
			{
				input.Rewind();
				if ((LA101_1==L_BRACE) && (EvaluatePredicate(synpred33_Smi_fragment))) {s = 7;}

				else if ((LA101_1==EOF||LA101_1==ASSIGN_OP||LA101_1==BAR||(LA101_1>=COLON && LA101_1<=COMMA)||LA101_1==DEFAULT_KW||LA101_1==END_KW||(LA101_1>=ERRORS_KW && LA101_1<=EXCLAMATION)||(LA101_1>=INTERSECTION && LA101_1<=INTERSECTION_KW)||(LA101_1>=LINKED_KW && LA101_1<=LOWER)||LA101_1==L_PAREN||LA101_1==OBJECT_KW||(LA101_1>=OPERATION_KW && LA101_1<=OPTIONAL_KW)||(LA101_1>=RESULT_KW && LA101_1<=R_BRACE)||LA101_1==R_PAREN||LA101_1==UNION_KW||LA101_1==UPPER||(LA101_1>=125 && LA101_1<=133)||LA101_1==135||(LA101_1>=138 && LA101_1<=140)||LA101_1==142||(LA101_1>=145 && LA101_1<=147)||(LA101_1>=154 && LA101_1<=155)||(LA101_1>=157 && LA101_1<=160)||(LA101_1>=162 && LA101_1<=164)||LA101_1==167||(LA101_1>=170 && LA101_1<=173)||LA101_1==175||LA101_1==177||(LA101_1>=180 && LA101_1<=183)||(LA101_1>=187 && LA101_1<=191)||LA101_1==193||LA101_1==196)) {s = 6;}

				input.Seek(index101_1);
				break;
			}
		case 3:
			{
				input.Rewind();
				if ((LA101_1==L_BRACE) && (EvaluatePredicate(synpred33_Smi_fragment))) {s = 7;}

				else if ((LA101_1==EOF||LA101_1==ASSIGN_OP||LA101_1==BAR||(LA101_1>=COLON && LA101_1<=COMMA)||LA101_1==DEFAULT_KW||LA101_1==END_KW||(LA101_1>=ERRORS_KW && LA101_1<=EXCLAMATION)||(LA101_1>=INTERSECTION && LA101_1<=INTERSECTION_KW)||(LA101_1>=LINKED_KW && LA101_1<=LOWER)||LA101_1==OBJECT_KW||(LA101_1>=OPERATION_KW && LA101_1<=OPTIONAL_KW)||(LA101_1>=RESULT_KW && LA101_1<=R_BRACE)||LA101_1==R_PAREN||LA101_1==UNION_KW||LA101_1==UPPER||(LA101_1>=125 && LA101_1<=133)||LA101_1==135||(LA101_1>=138 && LA101_1<=140)||LA101_1==142||(LA101_1>=145 && LA101_1<=147)||(LA101_1>=154 && LA101_1<=155)||(LA101_1>=157 && LA101_1<=160)||(LA101_1>=162 && LA101_1<=164)||LA101_1==167||(LA101_1>=170 && LA101_1<=173)||LA101_1==175||LA101_1==177||(LA101_1>=180 && LA101_1<=183)||(LA101_1>=187 && LA101_1<=191)||LA101_1==193||LA101_1==196)) {s = 6;}

				input.Seek(index101_1);
				break;
			}
		case 4:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred33_Smi_fragment))) {s = 7;}

				else if ((true)) {s = 6;}

				input.Seek(index101_1);
				break;
			}
		case 5:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred33_Smi_fragment))) {s = 7;}

				else if ((true)) {s = 6;}

				input.Seek(index101_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 101, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA110 : DFA
	{
		private const string DFA110_eotS =
			"\xBA\xFFFF";
		private const string DFA110_eofS =
			"\x1\x2\x1\x47\xB8\xFFFF";
		private const string DFA110_minS =
			"\x2\xA\x1\xFFFF\x1\x7\x45\xFFFF\x1\x0\x1\x28\x1\x0\x1\x14\x2\x0\xA\x28"+
			"\x61\xFFFF";
		private const string DFA110_maxS =
			"\x2\xC4\x1\xFFFF\x1\xBF\x45\xFFFF\x1\x0\x1\xBF\x1\x0\x1\xBF\x2\x0\xA"+
			"\xBF\x61\xFFFF";
		private const string DFA110_acceptS =
			"\x2\xFFFF\x1\x2\x1\xFFFF\x45\x1\x10\xFFFF\x61\x1";
		private const string DFA110_specialS =
			"\x1\xFFFF\x1\x0\x1\xFFFF\x1\x1\x45\xFFFF\x1\x2\x1\x3\x1\x4\x1\x5\x1\x6"+
			"\x1\x7\x1\x8\x1\x9\x1\xA\x1\xB\x1\xC\x1\xD\x1\xE\x1\xF\x1\x10\x1\x11"+
			"\x61\xFFFF}>";
		private static readonly string[] DFA110_transitionS =
			{
				"\x1\x2\x1\xFFFF\x1\x2\xD\xFFFF\x2\x2\x5\xFFFF\x1\x2\x6\xFFFF\x1\x2\x1"+
				"\xFFFF\x4\x2\x13\xFFFF\x2\x2\x2\xFFFF\x2\x2\xB\xFFFF\x1\x2\x3\xFFFF"+
				"\x2\x2\xA\xFFFF\x2\x2\x1\xFFFF\x1\x2\xC\xFFFF\x1\x2\x3\xFFFF\x1\x1\x6"+
				"\xFFFF\x9\x2\x1\xFFFF\x1\x2\x2\xFFFF\x3\x2\x1\xFFFF\x1\x2\x2\xFFFF\x4"+
				"\x2\x4\xFFFF\x8\x2\x1\xFFFF\x3\x2\x2\xFFFF\x1\x2\x2\xFFFF\x4\x2\x1\xFFFF"+
				"\x1\x2\x1\xFFFF\x1\x2\x2\xFFFF\x4\x2\x3\xFFFF\x5\x2\x1\xFFFF\x1\x2\x2"+
				"\xFFFF\x1\x2",
				"\x1\x3\x1\xFFFF\x1\x46\x7\xFFFF\x1\xE\x5\xFFFF\x1\x41\x1\x3D\x4\xFFFF"+
				"\x1\x7\x1\x40\x6\xFFFF\x1\x2C\x1\xFFFF\x1\x2E\x1\x12\x1\x44\x1\x42\x4"+
				"\xFFFF\x1\x5\x5\xFFFF\x1\xD\x8\xFFFF\x2\x45\x2\xFFFF\x1\x2F\x1\x9\x1"+
				"\xC\x3\xFFFF\x1\xA\x1\x10\x1\xFFFF\x1\x6\x1\xB\x2\xFFFF\x1\x1D\x3\xFFFF"+
				"\x1\x11\x1\x3F\x4\xFFFF\x1\xF\x5\xFFFF\x1\x2D\x1\x3E\x1\xFFFF\x1\x43"+
				"\xA\xFFFF\x1\x4\x1\xFFFF\x1\x46\x3\xFFFF\x1\x8\x6\xFFFF\x1\x20\x1\x23"+
				"\x1\x22\x1\x21\x1\x32\x1\x29\x1\x24\x1\x16\x1\x15\x1\xFFFF\x1\x13\x2"+
				"\xFFFF\x1\x3B\x1\x3C\x1\x3A\x1\xFFFF\x1\x25\x2\xFFFF\x1\x17\x1\x19\x1"+
				"\x18\x1\x2B\x3\xFFFF\x1\x2\x1\x2A\x1\x31\x1\x38\x1\x48\x4\x29\x1\xFFFF"+
				"\x3\x29\x2\xFFFF\x1\x33\x2\xFFFF\x1\x39\x1\x34\x1\x35\x1\x1E\x1\xFFFF"+
				"\x1\x28\x1\xFFFF\x1\x1F\x2\xFFFF\x1\x1C\x1\x27\x1\x26\x1\x36\x3\xFFFF"+
				"\x1\x29\x1\x1A\x1\x1B\x1\x29\x1\x14\x1\xFFFF\x1\x30\x2\xFFFF\x1\x37",
				"",
				"\x1\x2\x7\xFFFF\x1\x2\x1\xFFFF\x2\x2\x1\xFFFF\x1\x60\x1\x2\x2\xFFFF"+
				"\x1\x2\x7\xFFFF\x1\x5B\x6\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x4E"+
				"\x5\xFFFF\x1\x2\x1\x5A\x1\xFFFF\x3\x2\x1\xFFFF\x1\x5F\x1\x2\x6\xFFFF"+
				"\x1\x2\x2\xFFFF\x1\x2\x2\xFFFF\x1\x4C\x1\x5E\x1\x2\x2\xFFFF\x1\x5C\x1"+
				"\x62\x1\xFFFF\x1\x49\x1\x5D\x1\x2\x1\xFFFF\x1\x4A\x1\x2\x2\xFFFF\x1"+
				"\x4D\x5\xFFFF\x1\x61\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x6\xFFFF\x2\x2\x4"+
				"\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\x59\x4\xFFFF\x1\x2\x1\x4B\x4\x2\x2\xFFFF"+
				"\x1\x6F\x1\x72\x1\x71\x1\x70\x1\xFFFF\x1\x57\x1\x73\x1\x66\x1\x65\x1"+
				"\xFFFF\x1\x63\x1\x2\x5\xFFFF\x1\x74\x2\xFFFF\x1\x67\x1\x69\x1\x68\x9"+
				"\xFFFF\x1\x56\x1\x50\x1\x55\x1\x52\x1\xFFFF\x1\x54\x1\x51\x1\x4F\x8"+
				"\xFFFF\x1\x6D\x1\xFFFF\x1\x77\x1\xFFFF\x1\x6E\x1\x2\x1\xFFFF\x1\x6C"+
				"\x1\x76\x1\x75\x4\xFFFF\x1\x53\x1\x6A\x1\x6B\x1\x58\x1\x64",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"\x1\x2C\x2\xFFFF\x1\x7B\xE\xFFFF\x1\x2\xB\xFFFF\x1\x79\xB\xFFFF\x1\x86"+
				"\x3\xFFFF\x1\x7A\x1F\xFFFF\x1\x78\x6\xFFFF\x1\x89\x1\x8C\x1\x8B\x1\x8A"+
				"\x1\xFFFF\x1\x92\x1\x8D\x1\x7F\x1\x7E\x1\xFFFF\x1\x7C\x6\xFFFF\x1\x8E"+
				"\x2\xFFFF\x1\x80\x1\x82\x1\x81\x9\xFFFF\x4\x92\x1\xFFFF\x3\x92\x8\xFFFF"+
				"\x1\x87\x1\xFFFF\x1\x91\x1\xFFFF\x1\x88\x2\xFFFF\x1\x85\x1\x90\x1\x8F"+
				"\x4\xFFFF\x1\x92\x1\x83\x1\x84\x1\x92\x1\x7D",
				"\x1\xFFFF",
				"\x1\xB7\x5\xFFFF\x1\xAE\x5\xFFFF\x1\xB2\x7\xFFFF\x1\x2C\x2\xFFFF\x1"+
				"\x96\x6\xFFFF\x1\xB0\x5\xFFFF\x1\xB6\xB\xFFFF\x1\x2\x1\xFFFF\x1\x94"+
				"\x1\xB5\x3\xFFFF\x1\xB3\x1\xB9\x1\xFFFF\x1\xB1\x1\xB4\x2\xFFFF\x1\xA1"+
				"\x3\xFFFF\x1\x95\x5\xFFFF\x1\xB8\x13\xFFFF\x1\xAF\x5\xFFFF\x1\x93\x6"+
				"\xFFFF\x1\xA4\x1\xA7\x1\xA6\x1\xA5\x1\xFFFF\x1\xAD\x1\xA8\x1\x9A\x1"+
				"\x99\x1\xFFFF\x1\x97\x6\xFFFF\x1\xA9\x2\xFFFF\x1\x9B\x1\x9D\x1\x9C\x9"+
				"\xFFFF\x4\xAD\x1\xFFFF\x3\xAD\x8\xFFFF\x1\xA2\x1\xFFFF\x1\xAC\x1\xFFFF"+
				"\x1\xA3\x2\xFFFF\x1\xA0\x1\xAB\x1\xAA\x4\xFFFF\x1\xAD\x1\x9E\x1\x9F"+
				"\x1\xAD\x1\x98",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\x2C\x2\xFFFF\x1\x7B\x1A\xFFFF\x1\x79\xB\xFFFF\x1\x86\x3\xFFFF\x1"+
				"\x7A\x1F\xFFFF\x1\x78\x6\xFFFF\x1\x89\x1\x8C\x1\x8B\x1\x8A\x1\xFFFF"+
				"\x1\x92\x1\x8D\x1\x7F\x1\x7E\x1\xFFFF\x1\x7C\x6\xFFFF\x1\x8E\x2\xFFFF"+
				"\x1\x80\x1\x82\x1\x81\x9\xFFFF\x4\x92\x1\xFFFF\x3\x92\x8\xFFFF\x1\x87"+
				"\x1\xFFFF\x1\x91\x1\xFFFF\x1\x88\x2\xFFFF\x1\x85\x1\x90\x1\x8F\x3\xFFFF"+
				"\x1\x2\x1\x92\x1\x83\x1\x84\x1\x92\x1\x7D",
				"\x1\x2C\x2\xFFFF\x1\x7B\x1A\xFFFF\x1\x79\xB\xFFFF\x1\x86\x3\xFFFF\x1"+
				"\x7A\x1F\xFFFF\x1\x78\x6\xFFFF\x1\x89\x1\x8C\x1\x8B\x1\x8A\x1\xFFFF"+
				"\x1\x92\x1\x8D\x1\x7F\x1\x7E\x1\xFFFF\x1\x7C\x6\xFFFF\x1\x8E\x2\xFFFF"+
				"\x1\x80\x1\x82\x1\x81\x3\xFFFF\x1\x2\x5\xFFFF\x4\x92\x1\xFFFF\x3\x92"+
				"\x8\xFFFF\x1\x87\x1\xFFFF\x1\x91\x1\xFFFF\x1\x88\x2\xFFFF\x1\x85\x1"+
				"\x90\x1\x8F\x1\xFFFF\x1\x2\x2\xFFFF\x1\x92\x1\x83\x1\x84\x1\x92\x1\x7D",
				"\x1\x2C\x2\xFFFF\x1\x7B\x1A\xFFFF\x1\x79\xB\xFFFF\x1\x86\x3\xFFFF\x1"+
				"\x7A\x1F\xFFFF\x1\x78\x6\xFFFF\x1\x89\x1\x8C\x1\x8B\x1\x8A\x1\xFFFF"+
				"\x1\x92\x1\x8D\x1\x7F\x1\x7E\x1\xFFFF\x1\x7C\x6\xFFFF\x1\x8E\x2\xFFFF"+
				"\x1\x80\x1\x82\x1\x81\x9\xFFFF\x4\x92\x1\xFFFF\x3\x92\x8\xFFFF\x1\x87"+
				"\x1\xFFFF\x1\x91\x1\xFFFF\x1\x88\x2\xFFFF\x1\x85\x1\x90\x1\x8F\x1\x2"+
				"\x3\xFFFF\x1\x92\x1\x83\x1\x84\x1\x92\x1\x7D",
				"\x1\x2C\x2\xFFFF\x1\x7B\x1A\xFFFF\x1\x79\xB\xFFFF\x1\x86\x3\xFFFF\x1"+
				"\x7A\x1F\xFFFF\x1\x78\x6\xFFFF\x1\x89\x1\x8C\x1\x8B\x1\x8A\x1\xFFFF"+
				"\x1\x92\x1\x8D\x1\x7F\x1\x7E\x1\xFFFF\x1\x7C\x6\xFFFF\x1\x8E\x2\xFFFF"+
				"\x1\x80\x1\x82\x1\x81\x9\xFFFF\x4\x92\x1\xFFFF\x3\x92\x1\x2\x7\xFFFF"+
				"\x1\x87\x1\xFFFF\x1\x91\x1\xFFFF\x1\x88\x2\xFFFF\x1\x85\x1\x90\x1\x8F"+
				"\x1\x2\x3\xFFFF\x1\x92\x1\x83\x1\x84\x1\x92\x1\x7D",
				"\x1\x2C\x2\xFFFF\x1\x7B\x1A\xFFFF\x1\x79\xB\xFFFF\x1\x86\x3\xFFFF\x1"+
				"\x7A\x1F\xFFFF\x1\x78\x6\xFFFF\x1\x89\x1\x8C\x1\x8B\x1\x8A\x1\xFFFF"+
				"\x1\x92\x1\x8D\x1\x7F\x1\x7E\x1\xFFFF\x1\x7C\x5\xFFFF\x1\x2\x1\x8E\x2"+
				"\xFFFF\x1\x80\x1\x82\x1\x81\x9\xFFFF\x4\x92\x1\xFFFF\x3\x92\x8\xFFFF"+
				"\x1\x87\x1\xFFFF\x1\x91\x1\xFFFF\x1\x88\x2\xFFFF\x1\x85\x1\x90\x1\x8F"+
				"\x1\x2\x3\xFFFF\x1\x92\x1\x83\x1\x84\x1\x92\x1\x7D",
				"\x1\x2C\x2\xFFFF\x1\x7B\x1A\xFFFF\x1\x79\xB\xFFFF\x1\x86\x3\xFFFF\x1"+
				"\x7A\x1F\xFFFF\x1\x78\x6\xFFFF\x1\x89\x1\x8C\x1\x8B\x1\x8A\x1\xFFFF"+
				"\x1\x92\x1\x8D\x1\x7F\x1\x7E\x1\xFFFF\x1\x7C\x6\xFFFF\x1\x8E\x2\xFFFF"+
				"\x1\x80\x1\x82\x1\x81\x9\xFFFF\x4\x92\x1\xFFFF\x3\x92\x1\x2\x7\xFFFF"+
				"\x1\x87\x1\xFFFF\x1\x91\x1\xFFFF\x1\x88\x2\xFFFF\x1\x85\x1\x90\x1\x8F"+
				"\x4\xFFFF\x1\x92\x1\x83\x1\x84\x1\x92\x1\x7D",
				"\x1\x2C\x2\xFFFF\x1\x7B\x1A\xFFFF\x1\x79\xB\xFFFF\x1\x86\x3\xFFFF\x1"+
				"\x7A\x1F\xFFFF\x1\x78\x6\xFFFF\x1\x89\x1\x8C\x1\x8B\x1\x8A\x1\xFFFF"+
				"\x1\x92\x1\x8D\x1\x7F\x1\x7E\x1\xFFFF\x1\x7C\x6\xFFFF\x1\x8E\x2\xFFFF"+
				"\x1\x80\x1\x82\x1\x81\x9\xFFFF\x4\x92\x1\x2\x3\x92\x8\xFFFF\x1\x87\x1"+
				"\xFFFF\x1\x91\x1\xFFFF\x1\x88\x2\xFFFF\x1\x85\x1\x90\x1\x8F\x4\xFFFF"+
				"\x1\x92\x1\x83\x1\x84\x1\x92\x1\x7D",
				"\x1\x2C\x2\xFFFF\x1\x7B\x1A\xFFFF\x1\x79\xB\xFFFF\x1\x86\x3\xFFFF\x1"+
				"\x7A\x1F\xFFFF\x1\x78\x6\xFFFF\x1\x89\x1\x8C\x1\x8B\x1\x8A\x1\xFFFF"+
				"\x1\x92\x1\x8D\x1\x7F\x1\x7E\x1\xFFFF\x1\x7C\x6\xFFFF\x1\x8E\x2\xFFFF"+
				"\x1\x80\x1\x82\x1\x81\x9\xFFFF\x4\x92\x1\xFFFF\x3\x92\x8\xFFFF\x1\x87"+
				"\x1\xFFFF\x1\x91\x1\xFFFF\x1\x88\x2\xFFFF\x1\x85\x1\x90\x1\x8F\x1\x2"+
				"\x3\xFFFF\x1\x92\x1\x83\x1\x84\x1\x92\x1\x7D",
				"\x1\x2C\x2\xFFFF\x1\x7B\x1A\xFFFF\x1\x79\xB\xFFFF\x1\x86\x3\xFFFF\x1"+
				"\x7A\x1F\xFFFF\x1\x78\x6\xFFFF\x1\x89\x1\x8C\x1\x8B\x1\x8A\x1\xFFFF"+
				"\x1\x92\x1\x8D\x1\x7F\x1\x7E\x1\xFFFF\x1\x7C\x6\xFFFF\x1\x8E\x2\xFFFF"+
				"\x1\x80\x1\x82\x1\x81\x9\xFFFF\x4\x92\x1\xFFFF\x3\x92\x8\xFFFF\x1\x87"+
				"\x1\x2\x1\x91\x1\xFFFF\x1\x88\x2\xFFFF\x1\x85\x1\x90\x1\x8F\x4\xFFFF"+
				"\x1\x92\x1\x83\x1\x84\x1\x92\x1\x7D",
				"\x1\x2C\x2\xFFFF\x1\x7B\x1A\xFFFF\x1\x79\xB\xFFFF\x1\x86\x3\xFFFF\x1"+
				"\x7A\x1F\xFFFF\x1\x78\x6\xFFFF\x1\x89\x1\x8C\x1\x8B\x1\x8A\x1\xFFFF"+
				"\x1\x92\x1\x8D\x1\x7F\x1\x7E\x1\xFFFF\x1\x7C\x6\xFFFF\x1\x8E\x1\x2\x1"+
				"\xFFFF\x1\x80\x1\x82\x1\x81\x9\xFFFF\x4\x92\x1\xFFFF\x3\x92\x8\xFFFF"+
				"\x1\x87\x1\xFFFF\x1\x91\x1\xFFFF\x1\x88\x2\xFFFF\x1\x85\x1\x90\x1\x8F"+
				"\x4\xFFFF\x1\x92\x1\x83\x1\x84\x1\x92\x1\x7D",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				""
			};

		private static readonly short[] DFA110_eot = DFA.UnpackEncodedString(DFA110_eotS);
		private static readonly short[] DFA110_eof = DFA.UnpackEncodedString(DFA110_eofS);
		private static readonly char[] DFA110_min = DFA.UnpackEncodedStringToUnsignedChars(DFA110_minS);
		private static readonly char[] DFA110_max = DFA.UnpackEncodedStringToUnsignedChars(DFA110_maxS);
		private static readonly short[] DFA110_accept = DFA.UnpackEncodedString(DFA110_acceptS);
		private static readonly short[] DFA110_special = DFA.UnpackEncodedString(DFA110_specialS);
		private static readonly short[][] DFA110_transition;

		static DFA110()
		{
			int numStates = DFA110_transitionS.Length;
			DFA110_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA110_transition[i] = DFA.UnpackEncodedString(DFA110_transitionS[i]);
			}
		}

		public DFA110( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 110;
			this.eot = DFA110_eot;
			this.eof = DFA110_eof;
			this.min = DFA110_min;
			this.max = DFA110_max;
			this.accept = DFA110_accept;
			this.special = DFA110_special;
			this.transition = DFA110_transition;
		}

		public override string Description { get { return "1165:16: ( ( UPPER )=>name= UPPER ( ( value )=>v1= value )? )?"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition110(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA110_1 = input.LA(1);
		int index110_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((LA110_1==ASSIGN_OP)) {s = 3;}

				else if ((LA110_1==TRUE_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 4;}

				else if ((LA110_1==FALSE_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 5;}

				else if ((LA110_1==NULL_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 6;}

				else if ((LA110_1==C_STRING) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 7;}

				else if ((LA110_1==UPPER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 8;}

				else if ((LA110_1==LOWER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 9;}

				else if ((LA110_1==MINUS) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 10;}

				else if ((LA110_1==NUMBER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 11;}

				else if ((LA110_1==L_BRACE) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 12;}

				else if ((LA110_1==H_STRING) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 13;}

				else if ((LA110_1==B_STRING) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 14;}

				else if ((LA110_1==PLUS_INFINITY_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 15;}

				else if ((LA110_1==MINUS_INFINITY_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 16;}

				else if ((LA110_1==OPERATION_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 17;}

				else if ((LA110_1==ERROR_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 18;}

				else if ((LA110_1==135) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 19;}

				else if ((LA110_1==191) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 20;}

				else if ((LA110_1==133) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 21;}

				else if ((LA110_1==132) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 22;}

				else if ((LA110_1==145) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 23;}

				else if ((LA110_1==147) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 24;}

				else if ((LA110_1==146) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 25;}

				else if ((LA110_1==188) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 26;}

				else if ((LA110_1==189) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 27;}

				else if ((LA110_1==180) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 28;}

				else if ((LA110_1==OBJECT_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 29;}

				else if ((LA110_1==173) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 30;}

				else if ((LA110_1==177) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 31;}

				else if ((LA110_1==125) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 32;}

				else if ((LA110_1==128) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 33;}

				else if ((LA110_1==127) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 34;}

				else if ((LA110_1==126) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 35;}

				else if ((LA110_1==131) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 36;}

				else if ((LA110_1==142) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 37;}

				else if ((LA110_1==182) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 38;}

				else if ((LA110_1==181) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 39;}

				else if ((LA110_1==175) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 40;}

				else if ((LA110_1==130||(LA110_1>=157 && LA110_1<=160)||(LA110_1>=162 && LA110_1<=164)||LA110_1==187||LA110_1==190) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 41;}

				else if ((LA110_1==153) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 42;}

				else if ((LA110_1==148) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 43;}

				else if ((LA110_1==END_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 44;}

				else if ((LA110_1==RESULT_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 45;}

				else if ((LA110_1==ERRORS_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 46;}

				else if ((LA110_1==LINKED_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 47;}

				else if ((LA110_1==193) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 48;}

				else if ((LA110_1==154) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 49;}

				else if ((LA110_1==129) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 50;}

				else if ((LA110_1==167) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 51;}

				else if ((LA110_1==171) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 52;}

				else if ((LA110_1==172) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 53;}

				else if ((LA110_1==183) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 54;}

				else if ((LA110_1==196) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 55;}

				else if ((LA110_1==155) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 56;}

				else if ((LA110_1==170) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 57;}

				else if ((LA110_1==140) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 58;}

				else if ((LA110_1==138) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 59;}

				else if ((LA110_1==139) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 60;}

				else if ((LA110_1==COMMA) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 61;}

				else if ((LA110_1==R_BRACE) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 62;}

				else if ((LA110_1==OPTIONAL_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 63;}

				else if ((LA110_1==DEFAULT_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 64;}

				else if ((LA110_1==COLON) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 65;}

				else if ((LA110_1==EXCLAMATION) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 66;}

				else if ((LA110_1==R_PAREN) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 67;}

				else if ((LA110_1==EXCEPT_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 68;}

				else if (((LA110_1>=INTERSECTION && LA110_1<=INTERSECTION_KW)) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 69;}

				else if ((LA110_1==BAR||LA110_1==UNION_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 70;}

				else if ((LA110_1==EOF) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 71;}

				else if ((LA110_1==156) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 72;}

				else if ((LA110_1==152)) {s = 2;}

				input.Seek(index110_1);
				break;
			}
		case 1:
			{
				input.Rewind();
				if ((LA110_1==ANY_KW||LA110_1==BIT_KW||(LA110_1>=BMP_STR_KW && LA110_1<=BOOLEAN_KW)||LA110_1==CHARACTER_KW||LA110_1==CHOICE_KW||LA110_1==EMBEDDED_KW||LA110_1==ENUMERATED_KW||LA110_1==EXTERNAL_KW||(LA110_1>=GENERALIZED_TIME_KW && LA110_1<=GRAPHIC_STR_KW)||LA110_1==IA5_STRING_KW||LA110_1==INTEGER_KW||LA110_1==ISO646_STR_KW||LA110_1==L_BRACKET||LA110_1==NUMERIC_STR_KW||LA110_1==OCTET_KW||LA110_1==PRINTABLE_STR_KW||LA110_1==REAL_KW||(LA110_1>=SEQUENCE_KW && LA110_1<=SET_KW)||LA110_1==T61_STR_KW||LA110_1==TELETEX_STR_KW||LA110_1==UNIVERSAL_STR_KW||(LA110_1>=UTC_TIME_KW && LA110_1<=VISIBLE_STR_KW)||LA110_1==136||LA110_1==178)) {s = 2;}

				else if ((LA110_1==NULL_KW)) {s = 73;}

				else if ((LA110_1==OBJECT_KW)) {s = 74;}

				else if ((LA110_1==UPPER)) {s = 75;}

				else if ((LA110_1==LOWER)) {s = 76;}

				else if ((LA110_1==OPERATION_KW)) {s = 77;}

				else if ((LA110_1==ERROR_KW)) {s = 78;}

				else if ((LA110_1==164)) {s = 79;}

				else if ((LA110_1==158)) {s = 80;}

				else if ((LA110_1==163)) {s = 81;}

				else if ((LA110_1==160)) {s = 82;}

				else if ((LA110_1==187)) {s = 83;}

				else if ((LA110_1==162)) {s = 84;}

				else if ((LA110_1==159)) {s = 85;}

				else if ((LA110_1==157)) {s = 86;}

				else if ((LA110_1==130)) {s = 87;}

				else if ((LA110_1==190)) {s = 88;}

				else if ((LA110_1==TRUE_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 89;}

				else if ((LA110_1==FALSE_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 90;}

				else if ((LA110_1==C_STRING) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 91;}

				else if ((LA110_1==MINUS) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 92;}

				else if ((LA110_1==NUMBER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 93;}

				else if ((LA110_1==L_BRACE) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 94;}

				else if ((LA110_1==H_STRING) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 95;}

				else if ((LA110_1==B_STRING) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 96;}

				else if ((LA110_1==PLUS_INFINITY_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 97;}

				else if ((LA110_1==MINUS_INFINITY_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 98;}

				else if ((LA110_1==135) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 99;}

				else if ((LA110_1==191) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 100;}

				else if ((LA110_1==133) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 101;}

				else if ((LA110_1==132) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 102;}

				else if ((LA110_1==145) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 103;}

				else if ((LA110_1==147) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 104;}

				else if ((LA110_1==146) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 105;}

				else if ((LA110_1==188) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 106;}

				else if ((LA110_1==189) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 107;}

				else if ((LA110_1==180) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 108;}

				else if ((LA110_1==173) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 109;}

				else if ((LA110_1==177) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 110;}

				else if ((LA110_1==125) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 111;}

				else if ((LA110_1==128) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 112;}

				else if ((LA110_1==127) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 113;}

				else if ((LA110_1==126) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 114;}

				else if ((LA110_1==131) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 115;}

				else if ((LA110_1==142) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 116;}

				else if ((LA110_1==182) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 117;}

				else if ((LA110_1==181) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 118;}

				else if ((LA110_1==175) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 119;}

				input.Seek(index110_1);
				break;
			}
		case 2:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred34_Smi_fragment))) {s = 119;}

				else if ((true)) {s = 2;}

				input.Seek(index110_1);
				break;
			}
		case 3:
			{
				input.Rewind();
				if ((LA110_1==IDENTIFIER_KW)) {s = 2;}

				else if ((LA110_1==END_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 44;}

				else if ((LA110_1==UPPER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 120;}

				else if ((LA110_1==LOWER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 121;}

				else if ((LA110_1==OPERATION_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 122;}

				else if ((LA110_1==ERROR_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 123;}

				else if ((LA110_1==135) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 124;}

				else if ((LA110_1==191) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 125;}

				else if ((LA110_1==133) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 126;}

				else if ((LA110_1==132) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 127;}

				else if ((LA110_1==145) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 128;}

				else if ((LA110_1==147) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 129;}

				else if ((LA110_1==146) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 130;}

				else if ((LA110_1==188) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 131;}

				else if ((LA110_1==189) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 132;}

				else if ((LA110_1==180) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 133;}

				else if ((LA110_1==OBJECT_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 134;}

				else if ((LA110_1==173) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 135;}

				else if ((LA110_1==177) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 136;}

				else if ((LA110_1==125) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 137;}

				else if ((LA110_1==128) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 138;}

				else if ((LA110_1==127) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 139;}

				else if ((LA110_1==126) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 140;}

				else if ((LA110_1==131) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 141;}

				else if ((LA110_1==142) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 142;}

				else if ((LA110_1==182) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 143;}

				else if ((LA110_1==181) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 144;}

				else if ((LA110_1==175) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 145;}

				else if ((LA110_1==130||(LA110_1>=157 && LA110_1<=160)||(LA110_1>=162 && LA110_1<=164)||LA110_1==187||LA110_1==190) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 146;}

				input.Seek(index110_1);
				break;
			}
		case 4:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred34_Smi_fragment))) {s = 146;}

				else if ((true)) {s = 2;}

				input.Seek(index110_1);
				break;
			}
		case 5:
			{
				input.Rewind();
				if ((LA110_1==LESS)) {s = 2;}

				else if ((LA110_1==END_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 44;}

				else if ((LA110_1==UPPER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 147;}

				else if ((LA110_1==LOWER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 148;}

				else if ((LA110_1==OPERATION_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 149;}

				else if ((LA110_1==ERROR_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 150;}

				else if ((LA110_1==135) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 151;}

				else if ((LA110_1==191) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 152;}

				else if ((LA110_1==133) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 153;}

				else if ((LA110_1==132) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 154;}

				else if ((LA110_1==145) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 155;}

				else if ((LA110_1==147) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 156;}

				else if ((LA110_1==146) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 157;}

				else if ((LA110_1==188) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 158;}

				else if ((LA110_1==189) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 159;}

				else if ((LA110_1==180) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 160;}

				else if ((LA110_1==OBJECT_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 161;}

				else if ((LA110_1==173) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 162;}

				else if ((LA110_1==177) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 163;}

				else if ((LA110_1==125) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 164;}

				else if ((LA110_1==128) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 165;}

				else if ((LA110_1==127) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 166;}

				else if ((LA110_1==126) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 167;}

				else if ((LA110_1==131) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 168;}

				else if ((LA110_1==142) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 169;}

				else if ((LA110_1==182) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 170;}

				else if ((LA110_1==181) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 171;}

				else if ((LA110_1==175) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 172;}

				else if ((LA110_1==130||(LA110_1>=157 && LA110_1<=160)||(LA110_1>=162 && LA110_1<=164)||LA110_1==187||LA110_1==190) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 173;}

				else if ((LA110_1==COLON) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 174;}

				else if ((LA110_1==TRUE_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 175;}

				else if ((LA110_1==FALSE_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 176;}

				else if ((LA110_1==NULL_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 177;}

				else if ((LA110_1==C_STRING) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 178;}

				else if ((LA110_1==MINUS) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 179;}

				else if ((LA110_1==NUMBER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 180;}

				else if ((LA110_1==L_BRACE) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 181;}

				else if ((LA110_1==H_STRING) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 182;}

				else if ((LA110_1==B_STRING) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 183;}

				else if ((LA110_1==PLUS_INFINITY_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 184;}

				else if ((LA110_1==MINUS_INFINITY_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 185;}

				input.Seek(index110_1);
				break;
			}
		case 6:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred34_Smi_fragment))) {s = 185;}

				else if ((true)) {s = 2;}

				input.Seek(index110_1);
				break;
			}
		case 7:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred34_Smi_fragment))) {s = 185;}

				else if ((true)) {s = 2;}

				input.Seek(index110_1);
				break;
			}
		case 8:
			{
				input.Rewind();
				if ((LA110_1==186)) {s = 2;}

				else if ((LA110_1==END_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 44;}

				else if ((LA110_1==UPPER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 120;}

				else if ((LA110_1==LOWER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 121;}

				else if ((LA110_1==OPERATION_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 122;}

				else if ((LA110_1==ERROR_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 123;}

				else if ((LA110_1==135) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 124;}

				else if ((LA110_1==191) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 125;}

				else if ((LA110_1==133) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 126;}

				else if ((LA110_1==132) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 127;}

				else if ((LA110_1==145) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 128;}

				else if ((LA110_1==147) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 129;}

				else if ((LA110_1==146) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 130;}

				else if ((LA110_1==188) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 131;}

				else if ((LA110_1==189) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 132;}

				else if ((LA110_1==180) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 133;}

				else if ((LA110_1==OBJECT_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 134;}

				else if ((LA110_1==173) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 135;}

				else if ((LA110_1==177) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 136;}

				else if ((LA110_1==125) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 137;}

				else if ((LA110_1==128) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 138;}

				else if ((LA110_1==127) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 139;}

				else if ((LA110_1==126) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 140;}

				else if ((LA110_1==131) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 141;}

				else if ((LA110_1==142) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 142;}

				else if ((LA110_1==182) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 143;}

				else if ((LA110_1==181) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 144;}

				else if ((LA110_1==175) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 145;}

				else if ((LA110_1==130||(LA110_1>=157 && LA110_1<=160)||(LA110_1>=162 && LA110_1<=164)||LA110_1==187||LA110_1==190) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 146;}

				input.Seek(index110_1);
				break;
			}
		case 9:
			{
				input.Rewind();
				if ((LA110_1==151||LA110_1==184)) {s = 2;}

				else if ((LA110_1==END_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 44;}

				else if ((LA110_1==UPPER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 120;}

				else if ((LA110_1==LOWER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 121;}

				else if ((LA110_1==OPERATION_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 122;}

				else if ((LA110_1==ERROR_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 123;}

				else if ((LA110_1==135) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 124;}

				else if ((LA110_1==191) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 125;}

				else if ((LA110_1==133) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 126;}

				else if ((LA110_1==132) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 127;}

				else if ((LA110_1==145) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 128;}

				else if ((LA110_1==147) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 129;}

				else if ((LA110_1==146) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 130;}

				else if ((LA110_1==188) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 131;}

				else if ((LA110_1==189) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 132;}

				else if ((LA110_1==180) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 133;}

				else if ((LA110_1==OBJECT_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 134;}

				else if ((LA110_1==173) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 135;}

				else if ((LA110_1==177) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 136;}

				else if ((LA110_1==125) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 137;}

				else if ((LA110_1==128) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 138;}

				else if ((LA110_1==127) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 139;}

				else if ((LA110_1==126) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 140;}

				else if ((LA110_1==131) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 141;}

				else if ((LA110_1==142) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 142;}

				else if ((LA110_1==182) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 143;}

				else if ((LA110_1==181) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 144;}

				else if ((LA110_1==175) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 145;}

				else if ((LA110_1==130||(LA110_1>=157 && LA110_1<=160)||(LA110_1>=162 && LA110_1<=164)||LA110_1==187||LA110_1==190) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 146;}

				input.Seek(index110_1);
				break;
			}
		case 10:
			{
				input.Rewind();
				if ((LA110_1==183)) {s = 2;}

				else if ((LA110_1==END_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 44;}

				else if ((LA110_1==UPPER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 120;}

				else if ((LA110_1==LOWER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 121;}

				else if ((LA110_1==OPERATION_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 122;}

				else if ((LA110_1==ERROR_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 123;}

				else if ((LA110_1==135) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 124;}

				else if ((LA110_1==191) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 125;}

				else if ((LA110_1==133) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 126;}

				else if ((LA110_1==132) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 127;}

				else if ((LA110_1==145) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 128;}

				else if ((LA110_1==147) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 129;}

				else if ((LA110_1==146) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 130;}

				else if ((LA110_1==188) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 131;}

				else if ((LA110_1==189) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 132;}

				else if ((LA110_1==180) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 133;}

				else if ((LA110_1==OBJECT_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 134;}

				else if ((LA110_1==173) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 135;}

				else if ((LA110_1==177) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 136;}

				else if ((LA110_1==125) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 137;}

				else if ((LA110_1==128) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 138;}

				else if ((LA110_1==127) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 139;}

				else if ((LA110_1==126) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 140;}

				else if ((LA110_1==131) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 141;}

				else if ((LA110_1==142) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 142;}

				else if ((LA110_1==182) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 143;}

				else if ((LA110_1==181) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 144;}

				else if ((LA110_1==175) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 145;}

				else if ((LA110_1==130||(LA110_1>=157 && LA110_1<=160)||(LA110_1>=162 && LA110_1<=164)||LA110_1==187||LA110_1==190) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 146;}

				input.Seek(index110_1);
				break;
			}
		case 11:
			{
				input.Rewind();
				if ((LA110_1==165||LA110_1==183)) {s = 2;}

				else if ((LA110_1==END_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 44;}

				else if ((LA110_1==UPPER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 120;}

				else if ((LA110_1==LOWER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 121;}

				else if ((LA110_1==OPERATION_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 122;}

				else if ((LA110_1==ERROR_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 123;}

				else if ((LA110_1==135) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 124;}

				else if ((LA110_1==191) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 125;}

				else if ((LA110_1==133) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 126;}

				else if ((LA110_1==132) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 127;}

				else if ((LA110_1==145) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 128;}

				else if ((LA110_1==147) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 129;}

				else if ((LA110_1==146) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 130;}

				else if ((LA110_1==188) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 131;}

				else if ((LA110_1==189) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 132;}

				else if ((LA110_1==180) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 133;}

				else if ((LA110_1==OBJECT_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 134;}

				else if ((LA110_1==173) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 135;}

				else if ((LA110_1==177) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 136;}

				else if ((LA110_1==125) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 137;}

				else if ((LA110_1==128) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 138;}

				else if ((LA110_1==127) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 139;}

				else if ((LA110_1==126) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 140;}

				else if ((LA110_1==131) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 141;}

				else if ((LA110_1==142) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 142;}

				else if ((LA110_1==182) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 143;}

				else if ((LA110_1==181) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 144;}

				else if ((LA110_1==175) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 145;}

				else if ((LA110_1==130||(LA110_1>=157 && LA110_1<=160)||(LA110_1>=162 && LA110_1<=164)||LA110_1==187||LA110_1==190) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 146;}

				input.Seek(index110_1);
				break;
			}
		case 12:
			{
				input.Rewind();
				if ((LA110_1==141||LA110_1==183)) {s = 2;}

				else if ((LA110_1==END_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 44;}

				else if ((LA110_1==UPPER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 120;}

				else if ((LA110_1==LOWER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 121;}

				else if ((LA110_1==OPERATION_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 122;}

				else if ((LA110_1==ERROR_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 123;}

				else if ((LA110_1==135) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 124;}

				else if ((LA110_1==191) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 125;}

				else if ((LA110_1==133) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 126;}

				else if ((LA110_1==132) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 127;}

				else if ((LA110_1==145) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 128;}

				else if ((LA110_1==147) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 129;}

				else if ((LA110_1==146) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 130;}

				else if ((LA110_1==188) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 131;}

				else if ((LA110_1==189) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 132;}

				else if ((LA110_1==180) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 133;}

				else if ((LA110_1==OBJECT_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 134;}

				else if ((LA110_1==173) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 135;}

				else if ((LA110_1==177) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 136;}

				else if ((LA110_1==125) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 137;}

				else if ((LA110_1==128) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 138;}

				else if ((LA110_1==127) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 139;}

				else if ((LA110_1==126) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 140;}

				else if ((LA110_1==131) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 141;}

				else if ((LA110_1==142) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 142;}

				else if ((LA110_1==182) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 143;}

				else if ((LA110_1==181) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 144;}

				else if ((LA110_1==175) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 145;}

				else if ((LA110_1==130||(LA110_1>=157 && LA110_1<=160)||(LA110_1>=162 && LA110_1<=164)||LA110_1==187||LA110_1==190) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 146;}

				input.Seek(index110_1);
				break;
			}
		case 13:
			{
				input.Rewind();
				if ((LA110_1==165)) {s = 2;}

				else if ((LA110_1==END_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 44;}

				else if ((LA110_1==UPPER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 120;}

				else if ((LA110_1==LOWER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 121;}

				else if ((LA110_1==OPERATION_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 122;}

				else if ((LA110_1==ERROR_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 123;}

				else if ((LA110_1==135) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 124;}

				else if ((LA110_1==191) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 125;}

				else if ((LA110_1==133) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 126;}

				else if ((LA110_1==132) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 127;}

				else if ((LA110_1==145) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 128;}

				else if ((LA110_1==147) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 129;}

				else if ((LA110_1==146) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 130;}

				else if ((LA110_1==188) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 131;}

				else if ((LA110_1==189) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 132;}

				else if ((LA110_1==180) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 133;}

				else if ((LA110_1==OBJECT_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 134;}

				else if ((LA110_1==173) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 135;}

				else if ((LA110_1==177) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 136;}

				else if ((LA110_1==125) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 137;}

				else if ((LA110_1==128) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 138;}

				else if ((LA110_1==127) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 139;}

				else if ((LA110_1==126) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 140;}

				else if ((LA110_1==131) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 141;}

				else if ((LA110_1==142) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 142;}

				else if ((LA110_1==182) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 143;}

				else if ((LA110_1==181) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 144;}

				else if ((LA110_1==175) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 145;}

				else if ((LA110_1==130||(LA110_1>=157 && LA110_1<=160)||(LA110_1>=162 && LA110_1<=164)||LA110_1==187||LA110_1==190) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 146;}

				input.Seek(index110_1);
				break;
			}
		case 14:
			{
				input.Rewind();
				if ((LA110_1==161)) {s = 2;}

				else if ((LA110_1==END_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 44;}

				else if ((LA110_1==UPPER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 120;}

				else if ((LA110_1==LOWER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 121;}

				else if ((LA110_1==OPERATION_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 122;}

				else if ((LA110_1==ERROR_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 123;}

				else if ((LA110_1==135) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 124;}

				else if ((LA110_1==191) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 125;}

				else if ((LA110_1==133) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 126;}

				else if ((LA110_1==132) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 127;}

				else if ((LA110_1==145) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 128;}

				else if ((LA110_1==147) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 129;}

				else if ((LA110_1==146) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 130;}

				else if ((LA110_1==188) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 131;}

				else if ((LA110_1==189) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 132;}

				else if ((LA110_1==180) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 133;}

				else if ((LA110_1==OBJECT_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 134;}

				else if ((LA110_1==173) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 135;}

				else if ((LA110_1==177) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 136;}

				else if ((LA110_1==125) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 137;}

				else if ((LA110_1==128) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 138;}

				else if ((LA110_1==127) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 139;}

				else if ((LA110_1==126) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 140;}

				else if ((LA110_1==131) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 141;}

				else if ((LA110_1==142) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 142;}

				else if ((LA110_1==182) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 143;}

				else if ((LA110_1==181) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 144;}

				else if ((LA110_1==175) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 145;}

				else if ((LA110_1==130||(LA110_1>=157 && LA110_1<=160)||(LA110_1>=162 && LA110_1<=164)||LA110_1==187||LA110_1==190) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 146;}

				input.Seek(index110_1);
				break;
			}
		case 15:
			{
				input.Rewind();
				if ((LA110_1==183)) {s = 2;}

				else if ((LA110_1==END_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 44;}

				else if ((LA110_1==UPPER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 120;}

				else if ((LA110_1==LOWER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 121;}

				else if ((LA110_1==OPERATION_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 122;}

				else if ((LA110_1==ERROR_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 123;}

				else if ((LA110_1==135) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 124;}

				else if ((LA110_1==191) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 125;}

				else if ((LA110_1==133) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 126;}

				else if ((LA110_1==132) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 127;}

				else if ((LA110_1==145) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 128;}

				else if ((LA110_1==147) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 129;}

				else if ((LA110_1==146) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 130;}

				else if ((LA110_1==188) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 131;}

				else if ((LA110_1==189) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 132;}

				else if ((LA110_1==180) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 133;}

				else if ((LA110_1==OBJECT_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 134;}

				else if ((LA110_1==173) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 135;}

				else if ((LA110_1==177) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 136;}

				else if ((LA110_1==125) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 137;}

				else if ((LA110_1==128) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 138;}

				else if ((LA110_1==127) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 139;}

				else if ((LA110_1==126) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 140;}

				else if ((LA110_1==131) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 141;}

				else if ((LA110_1==142) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 142;}

				else if ((LA110_1==182) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 143;}

				else if ((LA110_1==181) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 144;}

				else if ((LA110_1==175) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 145;}

				else if ((LA110_1==130||(LA110_1>=157 && LA110_1<=160)||(LA110_1>=162 && LA110_1<=164)||LA110_1==187||LA110_1==190) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 146;}

				input.Seek(index110_1);
				break;
			}
		case 16:
			{
				input.Rewind();
				if ((LA110_1==174)) {s = 2;}

				else if ((LA110_1==END_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 44;}

				else if ((LA110_1==UPPER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 120;}

				else if ((LA110_1==LOWER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 121;}

				else if ((LA110_1==OPERATION_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 122;}

				else if ((LA110_1==ERROR_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 123;}

				else if ((LA110_1==135) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 124;}

				else if ((LA110_1==191) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 125;}

				else if ((LA110_1==133) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 126;}

				else if ((LA110_1==132) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 127;}

				else if ((LA110_1==145) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 128;}

				else if ((LA110_1==147) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 129;}

				else if ((LA110_1==146) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 130;}

				else if ((LA110_1==188) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 131;}

				else if ((LA110_1==189) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 132;}

				else if ((LA110_1==180) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 133;}

				else if ((LA110_1==OBJECT_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 134;}

				else if ((LA110_1==173) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 135;}

				else if ((LA110_1==177) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 136;}

				else if ((LA110_1==125) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 137;}

				else if ((LA110_1==128) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 138;}

				else if ((LA110_1==127) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 139;}

				else if ((LA110_1==126) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 140;}

				else if ((LA110_1==131) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 141;}

				else if ((LA110_1==142) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 142;}

				else if ((LA110_1==182) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 143;}

				else if ((LA110_1==181) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 144;}

				else if ((LA110_1==175) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 145;}

				else if ((LA110_1==130||(LA110_1>=157 && LA110_1<=160)||(LA110_1>=162 && LA110_1<=164)||LA110_1==187||LA110_1==190) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 146;}

				input.Seek(index110_1);
				break;
			}
		case 17:
			{
				input.Rewind();
				if ((LA110_1==143)) {s = 2;}

				else if ((LA110_1==END_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 44;}

				else if ((LA110_1==UPPER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 120;}

				else if ((LA110_1==LOWER) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 121;}

				else if ((LA110_1==OPERATION_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 122;}

				else if ((LA110_1==ERROR_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 123;}

				else if ((LA110_1==135) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 124;}

				else if ((LA110_1==191) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 125;}

				else if ((LA110_1==133) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 126;}

				else if ((LA110_1==132) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 127;}

				else if ((LA110_1==145) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 128;}

				else if ((LA110_1==147) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 129;}

				else if ((LA110_1==146) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 130;}

				else if ((LA110_1==188) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 131;}

				else if ((LA110_1==189) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 132;}

				else if ((LA110_1==180) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 133;}

				else if ((LA110_1==OBJECT_KW) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 134;}

				else if ((LA110_1==173) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 135;}

				else if ((LA110_1==177) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 136;}

				else if ((LA110_1==125) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 137;}

				else if ((LA110_1==128) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 138;}

				else if ((LA110_1==127) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 139;}

				else if ((LA110_1==126) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 140;}

				else if ((LA110_1==131) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 141;}

				else if ((LA110_1==142) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 142;}

				else if ((LA110_1==182) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 143;}

				else if ((LA110_1==181) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 144;}

				else if ((LA110_1==175) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 145;}

				else if ((LA110_1==130||(LA110_1>=157 && LA110_1<=160)||(LA110_1>=162 && LA110_1<=164)||LA110_1==187||LA110_1==190) && (EvaluatePredicate(synpred34_Smi_fragment))) {s = 146;}

				input.Seek(index110_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 110, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA109 : DFA
	{
		private const string DFA109_eotS =
			"\x47\xFFFF";
		private const string DFA109_eofS =
			"\x1\x27\x46\xFFFF";
		private const string DFA109_minS =
			"\x1\xA\x4\xFFFF\x2\x0\x7\xFFFF\x19\x0\x20\xFFFF";
		private const string DFA109_maxS =
			"\x1\xC4\x4\xFFFF\x2\x0\x7\xFFFF\x19\x0\x20\xFFFF";
		private const string DFA109_acceptS =
			"\x1\xFFFF\x4\x1\x2\xFFFF\x7\x1\x19\xFFFF\x1\x2\x1F\xFFFF";
		private const string DFA109_specialS =
			"\x1\x0\x4\xFFFF\x1\x1\x1\x2\x7\xFFFF\x1\x3\x1\x4\x1\x5\x1\x6\x1\x7\x1"+
			"\x8\x1\x9\x1\xA\x1\xB\x1\xC\x1\xD\x1\xE\x1\xF\x1\x10\x1\x11\x1\x12\x1"+
			"\x13\x1\x14\x1\x15\x1\x16\x1\x17\x1\x18\x1\x19\x1\x1A\x1\x1B\x20\xFFFF}>";
		private static readonly string[] DFA109_transitionS =
			{
				"\x1\x27\x1\xFFFF\x1\x27\x7\xFFFF\x1\xB\x5\xFFFF\x2\x27\x4\xFFFF\x1\x4"+
				"\x1\x27\x6\xFFFF\x1\x27\x1\xFFFF\x1\x27\x1\xF\x2\x27\x4\xFFFF\x1\x2"+
				"\x5\xFFFF\x1\xA\x8\xFFFF\x2\x27\x2\xFFFF\x1\x27\x1\x6\x1\x9\x3\xFFFF"+
				"\x1\x7\x1\xD\x1\xFFFF\x1\x3\x1\x8\x2\xFFFF\x1\x1A\x3\xFFFF\x1\xE\x1"+
				"\x27\x4\xFFFF\x1\xC\x5\xFFFF\x2\x27\x1\xFFFF\x1\x27\xA\xFFFF\x1\x1\x1"+
				"\xFFFF\x1\x27\x3\xFFFF\x1\x5\x6\xFFFF\x1\x1D\x1\x20\x1\x1F\x1\x1E\x1"+
				"\x27\x1\x26\x1\x21\x1\x13\x1\x12\x1\xFFFF\x1\x10\x2\xFFFF\x3\x27\x1"+
				"\xFFFF\x1\x22\x2\xFFFF\x1\x14\x1\x16\x1\x15\x1\x27\x4\xFFFF\x4\x27\x4"+
				"\x26\x1\xFFFF\x3\x26\x2\xFFFF\x1\x27\x2\xFFFF\x3\x27\x1\x1B\x1\xFFFF"+
				"\x1\x25\x1\xFFFF\x1\x1C\x2\xFFFF\x1\x19\x1\x24\x1\x23\x1\x27\x3\xFFFF"+
				"\x1\x26\x1\x17\x1\x18\x1\x26\x1\x11\x1\xFFFF\x1\x27\x2\xFFFF\x1\x27",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				""
			};

		private static readonly short[] DFA109_eot = DFA.UnpackEncodedString(DFA109_eotS);
		private static readonly short[] DFA109_eof = DFA.UnpackEncodedString(DFA109_eofS);
		private static readonly char[] DFA109_min = DFA.UnpackEncodedStringToUnsignedChars(DFA109_minS);
		private static readonly char[] DFA109_max = DFA.UnpackEncodedStringToUnsignedChars(DFA109_maxS);
		private static readonly short[] DFA109_accept = DFA.UnpackEncodedString(DFA109_acceptS);
		private static readonly short[] DFA109_special = DFA.UnpackEncodedString(DFA109_specialS);
		private static readonly short[][] DFA109_transition;

		static DFA109()
		{
			int numStates = DFA109_transitionS.Length;
			DFA109_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA109_transition[i] = DFA.UnpackEncodedString(DFA109_transitionS[i]);
			}
		}

		public DFA109( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 109;
			this.eot = DFA109_eot;
			this.eof = DFA109_eof;
			this.min = DFA109_min;
			this.max = DFA109_max;
			this.accept = DFA109_accept;
			this.special = DFA109_special;
			this.transition = DFA109_transition;
		}

		public override string Description { get { return "1166:2: ( ( value )=>v1= value )?"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition109(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA109_1 = input.LA(1);
		int index109_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((LA109_1==TRUE_KW) && (EvaluatePredicate(synpred35_Smi_fragment))) {s = 1;}

				else if ((LA109_1==FALSE_KW) && (EvaluatePredicate(synpred35_Smi_fragment))) {s = 2;}

				else if ((LA109_1==NULL_KW) && (EvaluatePredicate(synpred35_Smi_fragment))) {s = 3;}

				else if ((LA109_1==C_STRING) && (EvaluatePredicate(synpred35_Smi_fragment))) {s = 4;}

				else if ((LA109_1==UPPER)) {s = 5;}

				else if ((LA109_1==LOWER)) {s = 6;}

				else if ((LA109_1==MINUS) && (EvaluatePredicate(synpred35_Smi_fragment))) {s = 7;}

				else if ((LA109_1==NUMBER) && (EvaluatePredicate(synpred35_Smi_fragment))) {s = 8;}

				else if ((LA109_1==L_BRACE) && (EvaluatePredicate(synpred35_Smi_fragment))) {s = 9;}

				else if ((LA109_1==H_STRING) && (EvaluatePredicate(synpred35_Smi_fragment))) {s = 10;}

				else if ((LA109_1==B_STRING) && (EvaluatePredicate(synpred35_Smi_fragment))) {s = 11;}

				else if ((LA109_1==PLUS_INFINITY_KW) && (EvaluatePredicate(synpred35_Smi_fragment))) {s = 12;}

				else if ((LA109_1==MINUS_INFINITY_KW) && (EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((LA109_1==OPERATION_KW)) {s = 14;}

				else if ((LA109_1==ERROR_KW)) {s = 15;}

				else if ((LA109_1==135)) {s = 16;}

				else if ((LA109_1==191)) {s = 17;}

				else if ((LA109_1==133)) {s = 18;}

				else if ((LA109_1==132)) {s = 19;}

				else if ((LA109_1==145)) {s = 20;}

				else if ((LA109_1==147)) {s = 21;}

				else if ((LA109_1==146)) {s = 22;}

				else if ((LA109_1==188)) {s = 23;}

				else if ((LA109_1==189)) {s = 24;}

				else if ((LA109_1==180)) {s = 25;}

				else if ((LA109_1==OBJECT_KW)) {s = 26;}

				else if ((LA109_1==173)) {s = 27;}

				else if ((LA109_1==177)) {s = 28;}

				else if ((LA109_1==125)) {s = 29;}

				else if ((LA109_1==128)) {s = 30;}

				else if ((LA109_1==127)) {s = 31;}

				else if ((LA109_1==126)) {s = 32;}

				else if ((LA109_1==131)) {s = 33;}

				else if ((LA109_1==142)) {s = 34;}

				else if ((LA109_1==182)) {s = 35;}

				else if ((LA109_1==181)) {s = 36;}

				else if ((LA109_1==175)) {s = 37;}

				else if ((LA109_1==130||(LA109_1>=157 && LA109_1<=160)||(LA109_1>=162 && LA109_1<=164)||LA109_1==187||LA109_1==190)) {s = 38;}

				else if ((LA109_1==EOF||LA109_1==ASSIGN_OP||LA109_1==BAR||(LA109_1>=COLON && LA109_1<=COMMA)||LA109_1==DEFAULT_KW||LA109_1==END_KW||LA109_1==ERRORS_KW||(LA109_1>=EXCEPT_KW && LA109_1<=EXCLAMATION)||(LA109_1>=INTERSECTION && LA109_1<=INTERSECTION_KW)||LA109_1==LINKED_KW||LA109_1==OPTIONAL_KW||(LA109_1>=RESULT_KW && LA109_1<=R_BRACE)||LA109_1==R_PAREN||LA109_1==UNION_KW||LA109_1==129||(LA109_1>=138 && LA109_1<=140)||LA109_1==148||(LA109_1>=153 && LA109_1<=156)||LA109_1==167||(LA109_1>=170 && LA109_1<=172)||LA109_1==183||LA109_1==193||LA109_1==196)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 1:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 2:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 3:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 4:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 5:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 6:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 7:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 8:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 9:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 10:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 11:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 12:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 13:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 14:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 15:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 16:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 17:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 18:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 19:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 20:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 21:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 22:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 23:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 24:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 25:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 26:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}
		case 27:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred35_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 39;}

				input.Seek(index109_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 109, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA131 : DFA
	{
		private const string DFA131_eotS =
			"\x11\xFFFF";
		private const string DFA131_eofS =
			"\x11\xFFFF";
		private const string DFA131_minS =
			"\x2\x14\x1\xFFFF\x2\x14\x1\x0\x1\x14\x1\x0\x1\x14\x1\xFFFF\x1\x14\x1"+
			"\x0\x1\x14\x1\x0\x2\x14\x1\x0";
		private const string DFA131_maxS =
			"\x2\xBF\x1\xFFFF\x2\xBF\x1\x0\x1\xBF\x1\x0\x1\xBF\x1\xFFFF\x1\xBF\x1"+
			"\x0\x1\xBF\x1\x0\x2\xBF\x1\x0";
		private const string DFA131_acceptS =
			"\x2\xFFFF\x1\x2\x6\xFFFF\x1\x1\x7\xFFFF";
		private const string DFA131_specialS =
			"\x5\xFFFF\x1\x0\x1\xFFFF\x1\x1\x3\xFFFF\x1\x2\x1\xFFFF\x1\x3\x2\xFFFF"+
			"\x1\x4}>";
		private static readonly string[] DFA131_transitionS =
			{
				"\x1\x2\xB\xFFFF\x1\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1\x2\x5\xFFFF\x1\x2\xD"+
				"\xFFFF\x1\x2\x1\x1\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\x2\xFFFF\x1\x2\x3\xFFFF"+
				"\x1\x2\x5\xFFFF\x1\x2\x13\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x4\x2"+
				"\x1\xFFFF\x4\x2\x1\xFFFF\x1\x2\x6\xFFFF\x1\x2\x2\xFFFF\x3\x2\x9\xFFFF"+
				"\x4\x2\x1\xFFFF\x3\x2\x8\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2"+
				"\xFFFF\x3\x2\x4\xFFFF\x5\x2",
				"\x1\x2\x6\xFFFF\x1\x4\x4\xFFFF\x1\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1\x2\x5"+
				"\xFFFF\x1\x2\xD\xFFFF\x1\x3\x1\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\x2\xFFFF"+
				"\x1\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x1\x5\xC\xFFFF\x1\x2\x5"+
				"\xFFFF\x1\x2\x6\xFFFF\x4\x2\x1\xFFFF\x4\x2\x1\xFFFF\x1\x2\x6\xFFFF\x1"+
				"\x2\x2\xFFFF\x3\x2\x9\xFFFF\x4\x2\x1\xFFFF\x3\x2\x8\xFFFF\x1\x2\x1\xFFFF"+
				"\x1\x2\x1\xFFFF\x1\x2\x2\xFFFF\x3\x2\x4\xFFFF\x5\x2",
				"",
				"\x1\x2\x5\xFFFF\x1\x2\x1\x6\x4\xFFFF\x1\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1"+
				"\x2\x5\xFFFF\x1\x2\xD\xFFFF\x2\x2\x1\xFFFF\x1\x2\x1\xFFFF\x2\x2\x1\xFFFF"+
				"\x2\x2\x2\xFFFF\x1\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x1\x7\xC"+
				"\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x4\x2\x1\xFFFF\x4\x2\x1\xFFFF\x1"+
				"\x2\x6\xFFFF\x1\x2\x2\xFFFF\x3\x2\x9\xFFFF\x4\x2\x1\xFFFF\x3\x2\x8\xFFFF"+
				"\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2\xFFFF\x3\x2\x4\xFFFF\x5\x2",
				"\x1\x2\xB\xFFFF\x1\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1\x2\x5\xFFFF\x1\x2\xD"+
				"\xFFFF\x1\x8\x1\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\x2\xFFFF\x1\x2\x3\xFFFF"+
				"\x1\x2\x5\xFFFF\x1\x2\x13\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x4\x2"+
				"\x1\xFFFF\x4\x2\x1\xFFFF\x1\x2\x6\xFFFF\x1\x2\x2\xFFFF\x3\x2\x9\xFFFF"+
				"\x4\x2\x1\xFFFF\x3\x2\x8\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2"+
				"\xFFFF\x3\x2\x4\xFFFF\x5\x2",
				"\x1\xFFFF",
				"\x1\x2\xB\xFFFF\x1\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1\x2\x5\xFFFF\x1\x2\xD"+
				"\xFFFF\x1\xA\x1\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\x2\xFFFF\x1\x2\x3\xFFFF"+
				"\x1\x2\x5\xFFFF\x1\x2\x13\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x4\x2"+
				"\x1\xFFFF\x4\x2\x1\xFFFF\x1\x2\x6\xFFFF\x1\x2\x2\xFFFF\x3\x2\x9\xFFFF"+
				"\x4\x2\x1\xFFFF\x3\x2\x8\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2"+
				"\xFFFF\x3\x2\x4\xFFFF\x5\x2",
				"\x1\xFFFF",
				"\x1\x2\x5\xFFFF\x1\x2\x1\xC\x4\xFFFF\x1\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1"+
				"\x2\x5\xFFFF\x1\x2\xD\xFFFF\x2\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\x2\xFFFF"+
				"\x1\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x1\xB\xC\xFFFF\x1\x2\x5"+
				"\xFFFF\x1\x2\x6\xFFFF\x4\x2\x1\xFFFF\x4\x2\x1\xFFFF\x1\x2\x6\xFFFF\x1"+
				"\x2\x2\xFFFF\x3\x2\x9\xFFFF\x4\x2\x1\xFFFF\x3\x2\x8\xFFFF\x1\x2\x1\xFFFF"+
				"\x1\x2\x1\xFFFF\x1\x2\x2\xFFFF\x3\x2\x4\xFFFF\x5\x2",
				"",
				"\x1\x2\x5\xFFFF\x1\x2\x1\xE\x4\xFFFF\x1\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1"+
				"\x2\x5\xFFFF\x1\x2\xD\xFFFF\x2\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\x2\xFFFF"+
				"\x1\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x1\xD\xC\xFFFF\x1\x2\x5"+
				"\xFFFF\x1\x2\x6\xFFFF\x4\x2\x1\xFFFF\x4\x2\x1\xFFFF\x1\x2\x6\xFFFF\x1"+
				"\x2\x2\xFFFF\x3\x2\x9\xFFFF\x4\x2\x1\xFFFF\x3\x2\x8\xFFFF\x1\x2\x1\xFFFF"+
				"\x1\x2\x1\xFFFF\x1\x2\x2\xFFFF\x3\x2\x4\xFFFF\x5\x2",
				"\x1\xFFFF",
				"\x1\x2\xB\xFFFF\x1\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1\x2\x5\xFFFF\x1\x2\xD"+
				"\xFFFF\x1\xF\x1\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\x2\xFFFF\x1\x2\x3\xFFFF"+
				"\x1\x2\x5\xFFFF\x1\x2\x13\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x4\x2"+
				"\x1\xFFFF\x4\x2\x1\xFFFF\x1\x2\x6\xFFFF\x1\x2\x2\xFFFF\x3\x2\x9\xFFFF"+
				"\x4\x2\x1\xFFFF\x3\x2\x8\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2"+
				"\xFFFF\x3\x2\x4\xFFFF\x5\x2",
				"\x1\xFFFF",
				"\x1\x2\xB\xFFFF\x1\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1\x2\x5\xFFFF\x1\x2\xD"+
				"\xFFFF\x1\xA\x1\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\x2\xFFFF\x1\x2\x3\xFFFF"+
				"\x1\x2\x5\xFFFF\x1\x2\x13\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x4\x2"+
				"\x1\xFFFF\x4\x2\x1\xFFFF\x1\x2\x6\xFFFF\x1\x2\x2\xFFFF\x3\x2\x9\xFFFF"+
				"\x4\x2\x1\xFFFF\x3\x2\x8\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2"+
				"\xFFFF\x3\x2\x4\xFFFF\x5\x2",
				"\x1\x2\x5\xFFFF\x1\x2\x1\xC\x4\xFFFF\x1\x2\xA\xFFFF\x1\x2\x6\xFFFF\x1"+
				"\x2\x5\xFFFF\x1\x2\xD\xFFFF\x2\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\x2\xFFFF"+
				"\x1\x2\x3\xFFFF\x1\x2\x5\xFFFF\x1\x2\x6\xFFFF\x1\x10\xC\xFFFF\x1\x2"+
				"\x5\xFFFF\x1\x2\x6\xFFFF\x4\x2\x1\xFFFF\x4\x2\x1\xFFFF\x1\x2\x6\xFFFF"+
				"\x1\x2\x2\xFFFF\x3\x2\x9\xFFFF\x4\x2\x1\xFFFF\x3\x2\x8\xFFFF\x1\x2\x1"+
				"\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2\xFFFF\x3\x2\x4\xFFFF\x5\x2",
				"\x1\xFFFF"
			};

		private static readonly short[] DFA131_eot = DFA.UnpackEncodedString(DFA131_eotS);
		private static readonly short[] DFA131_eof = DFA.UnpackEncodedString(DFA131_eofS);
		private static readonly char[] DFA131_min = DFA.UnpackEncodedStringToUnsignedChars(DFA131_minS);
		private static readonly char[] DFA131_max = DFA.UnpackEncodedStringToUnsignedChars(DFA131_maxS);
		private static readonly short[] DFA131_accept = DFA.UnpackEncodedString(DFA131_acceptS);
		private static readonly short[] DFA131_special = DFA.UnpackEncodedString(DFA131_specialS);
		private static readonly short[][] DFA131_transition;

		static DFA131()
		{
			int numStates = DFA131_transitionS.Length;
			DFA131_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA131_transition[i] = DFA.UnpackEncodedString(DFA131_transitionS[i]);
			}
		}

		public DFA131( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 131;
			this.eot = DFA131_eot;
			this.eof = DFA131_eof;
			this.min = DFA131_min;
			this.max = DFA131_max;
			this.accept = DFA131_accept;
			this.special = DFA131_special;
			this.transition = DFA131_transition;
		}

		public override string Description { get { return "1229:23: ( ( L_BRACE ( LOWER | COMMA | R_BRACE ) )=> L_BRACE (l1= LOWER )? ( COMMA l2= LOWER )* R_BRACE |v4= value )"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition131(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA131_1 = input.LA(1);
		int index131_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred36_Smi_fragment))) {s = 9;}

				else if ((true)) {s = 2;}

				input.Seek(index131_1);
				break;
			}
		case 1:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred36_Smi_fragment))) {s = 9;}

				else if ((true)) {s = 2;}

				input.Seek(index131_1);
				break;
			}
		case 2:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred36_Smi_fragment))) {s = 9;}

				else if ((true)) {s = 2;}

				input.Seek(index131_1);
				break;
			}
		case 3:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred36_Smi_fragment))) {s = 9;}

				else if ((true)) {s = 2;}

				input.Seek(index131_1);
				break;
			}
		case 4:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred36_Smi_fragment))) {s = 9;}

				else if ((true)) {s = 2;}

				input.Seek(index131_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 131, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA140 : DFA
	{
		private const string DFA140_eotS =
			"\x40\xFFFF";
		private const string DFA140_eofS =
			"\x40\xFFFF";
		private const string DFA140_minS =
			"\x1\x7\x18\xFFFF\x1\x0\x1\x1B\x6\xFFFF\x1\x0\x1\x14\x2\x0\xA\x1B\x11"+
			"\xFFFF";
		private const string DFA140_maxS =
			"\x1\xBF\x18\xFFFF\x1\x0\x1\x63\x6\xFFFF\x1\x0\x1\xBF\x2\x0\x1\xBA\x1"+
			"\xB8\x3\xB7\x1\xA5\x1\xA1\x1\xB7\x1\xAE\x1\x8F\x11\xFFFF";
		private const string DFA140_acceptS =
			"\x1\xFFFF\x18\x1\x2\xFFFF\x6\x1\xE\xFFFF\x1\x1\x1\x2\xF\x1";
		private const string DFA140_specialS =
			"\x1\x0\x18\xFFFF\x1\x1\x1\x2\x6\xFFFF\x1\x3\x1\x4\x1\x5\x1\x6\x1\x7\x1"+
			"\x8\x1\x9\x1\xA\x1\xB\x1\xC\x1\xD\x1\xE\x1\xF\x1\x10\x11\xFFFF}>";
		private static readonly string[] DFA140_transitionS =
			{
				"\x1\x1\x7\xFFFF\x1\x2\x1\xFFFF\x1\x5\x1\x3\x1\xFFFF\x1\x30\x1\x4\x2"+
				"\xFFFF\x1\x14\x7\xFFFF\x1\x30\x6\xFFFF\x1\x15\x1\xFFFF\x1\x16\x1\xFFFF"+
				"\x1\x24\x5\xFFFF\x1\x17\x1\x30\x1\xFFFF\x1\x6\x1\x7\x1\x8\x1\xFFFF\x1"+
				"\x30\x1\x9\x6\xFFFF\x1\x18\x2\xFFFF\x1\xA\x2\xFFFF\x1\x22\x1\x30\x1"+
				"\x20\x2\xFFFF\x2\x30\x1\xFFFF\x1\x19\x1\x30\x1\xB\x1\xFFFF\x1\x1A\x1"+
				"\x1B\x2\xFFFF\x1\x23\x5\xFFFF\x1\x30\x1\xFFFF\x1\xC\x1\xFFFF\x1\x1C"+
				"\x6\xFFFF\x1\x1E\x1\x1F\x4\xFFFF\x1\xE\x1\xFFFF\x1\xD\x1\x30\x4\xFFFF"+
				"\x1\xF\x1\x21\x1\x11\x1\x10\x1\x12\x1\x13\x2\xFFFF\x4\x30\x1\xFFFF\x1"+
				"\x2D\x3\x30\x1\xFFFF\x1\x30\x1\x2F\x5\xFFFF\x1\x30\x2\xFFFF\x3\x30\x9"+
				"\xFFFF\x1\x2C\x1\x26\x1\x2B\x1\x28\x1\xFFFF\x1\x2A\x1\x27\x1\x25\x8"+
				"\xFFFF\x1\x30\x1\xFFFF\x1\x30\x1\xFFFF\x1\x30\x1\x1D\x1\xFFFF\x3\x30"+
				"\x4\xFFFF\x1\x29\x2\x30\x1\x2E\x1\x30",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"\x1\x30\x1E\xFFFF\x1\x31\x28\xFFFF\x1\x30",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"\x1\x30\x5\xFFFF\x2\x30\x4\xFFFF\x1\x30\xA\xFFFF\x1\x30\x6\xFFFF\x1"+
				"\x30\x5\xFFFF\x1\x30\xB\xFFFF\x1\x32\x1\xFFFF\x2\x30\x3\xFFFF\x2\x30"+
				"\x1\xFFFF\x2\x30\x2\xFFFF\x1\x30\x3\xFFFF\x1\x30\x5\xFFFF\x1\x30\x6"+
				"\xFFFF\x1\x30\xC\xFFFF\x1\x30\x5\xFFFF\x1\x30\x6\xFFFF\x4\x30\x1\xFFFF"+
				"\x4\x30\x1\xFFFF\x1\x30\x6\xFFFF\x1\x30\x2\xFFFF\x3\x30\x9\xFFFF\x4"+
				"\x30\x1\xFFFF\x3\x30\x8\xFFFF\x1\x30\x1\xFFFF\x1\x30\x1\xFFFF\x1\x30"+
				"\x2\xFFFF\x3\x30\x4\xFFFF\x5\x30",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\x30\x47\xFFFF\x1\x30\x56\xFFFF\x1\x33",
				"\x1\x30\x47\xFFFF\x1\x30\x33\xFFFF\x1\x35\x20\xFFFF\x1\x34",
				"\x1\x30\x47\xFFFF\x1\x30\x53\xFFFF\x1\x36",
				"\x1\x30\x47\xFFFF\x1\x30\x41\xFFFF\x1\x37\x11\xFFFF\x1\x38",
				"\x1\x30\x47\xFFFF\x1\x30\x29\xFFFF\x1\x39\x29\xFFFF\x1\x3A",
				"\x1\x30\x47\xFFFF\x1\x30\x41\xFFFF\x1\x3B",
				"\x1\x30\x47\xFFFF\x1\x30\x3D\xFFFF\x1\x3C",
				"\x1\x30\x47\xFFFF\x1\x30\x53\xFFFF\x1\x3D",
				"\x1\x30\x47\xFFFF\x1\x30\x4A\xFFFF\x1\x3E",
				"\x1\x30\x47\xFFFF\x1\x30\x2B\xFFFF\x1\x3F",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				""
			};

		private static readonly short[] DFA140_eot = DFA.UnpackEncodedString(DFA140_eotS);
		private static readonly short[] DFA140_eof = DFA.UnpackEncodedString(DFA140_eofS);
		private static readonly char[] DFA140_min = DFA.UnpackEncodedStringToUnsignedChars(DFA140_minS);
		private static readonly char[] DFA140_max = DFA.UnpackEncodedStringToUnsignedChars(DFA140_maxS);
		private static readonly short[] DFA140_accept = DFA.UnpackEncodedString(DFA140_acceptS);
		private static readonly short[] DFA140_special = DFA.UnpackEncodedString(DFA140_specialS);
		private static readonly short[][] DFA140_transition;

		static DFA140()
		{
			int numStates = DFA140_transitionS.Length;
			DFA140_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA140_transition[i] = DFA.UnpackEncodedString(DFA140_transitionS[i]);
			}
		}

		public DFA140( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 140;
			this.eot = DFA140_eot;
			this.eof = DFA140_eof;
			this.min = DFA140_min;
			this.max = DFA140_max;
			this.accept = DFA140_accept;
			this.special = DFA140_special;
			this.transition = DFA140_transition;
		}

		public override string Description { get { return "1270:1: typeorvalue returns [TypeOrValue result] : ( ( type )=>t= type |v= value );"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition140(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA140_1 = input.LA(1);
		int index140_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((LA140_1==ANY_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 1;}

				else if ((LA140_1==BIT_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 2;}

				else if ((LA140_1==BOOLEAN_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 3;}

				else if ((LA140_1==CHARACTER_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 4;}

				else if ((LA140_1==BMP_STR_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 5;}

				else if ((LA140_1==GENERALIZED_TIME_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 6;}

				else if ((LA140_1==GENERAL_STR_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 7;}

				else if ((LA140_1==GRAPHIC_STR_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 8;}

				else if ((LA140_1==IA5_STRING_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 9;}

				else if ((LA140_1==ISO646_STR_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 10;}

				else if ((LA140_1==NUMERIC_STR_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 11;}

				else if ((LA140_1==PRINTABLE_STR_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 12;}

				else if ((LA140_1==TELETEX_STR_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 13;}

				else if ((LA140_1==T61_STR_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 14;}

				else if ((LA140_1==UNIVERSAL_STR_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 15;}

				else if ((LA140_1==UTF8_STR_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 16;}

				else if ((LA140_1==UTC_TIME_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 17;}

				else if ((LA140_1==VIDEOTEX_STR_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 18;}

				else if ((LA140_1==VISIBLE_STR_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 19;}

				else if ((LA140_1==CHOICE_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 20;}

				else if ((LA140_1==EMBEDDED_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 21;}

				else if ((LA140_1==ENUMERATED_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 22;}

				else if ((LA140_1==EXTERNAL_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 23;}

				else if ((LA140_1==INTEGER_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 24;}

				else if ((LA140_1==NULL_KW)) {s = 25;}

				else if ((LA140_1==OBJECT_KW)) {s = 26;}

				else if ((LA140_1==OCTET_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 27;}

				else if ((LA140_1==REAL_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 28;}

				else if ((LA140_1==178) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 29;}

				else if ((LA140_1==SEQUENCE_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 30;}

				else if ((LA140_1==SET_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 31;}

				else if ((LA140_1==L_BRACKET) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 32;}

				else if ((LA140_1==UPPER)) {s = 33;}

				else if ((LA140_1==LOWER)) {s = 34;}

				else if ((LA140_1==OPERATION_KW)) {s = 35;}

				else if ((LA140_1==ERROR_KW)) {s = 36;}

				else if ((LA140_1==164)) {s = 37;}

				else if ((LA140_1==158)) {s = 38;}

				else if ((LA140_1==163)) {s = 39;}

				else if ((LA140_1==160)) {s = 40;}

				else if ((LA140_1==187)) {s = 41;}

				else if ((LA140_1==162)) {s = 42;}

				else if ((LA140_1==159)) {s = 43;}

				else if ((LA140_1==157)) {s = 44;}

				else if ((LA140_1==130)) {s = 45;}

				else if ((LA140_1==190)) {s = 46;}

				else if ((LA140_1==136) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 47;}

				else if ((LA140_1==B_STRING||LA140_1==C_STRING||LA140_1==FALSE_KW||LA140_1==H_STRING||LA140_1==L_BRACE||(LA140_1>=MINUS && LA140_1<=MINUS_INFINITY_KW)||LA140_1==NUMBER||LA140_1==PLUS_INFINITY_KW||LA140_1==TRUE_KW||(LA140_1>=125 && LA140_1<=128)||(LA140_1>=131 && LA140_1<=133)||LA140_1==135||LA140_1==142||(LA140_1>=145 && LA140_1<=147)||LA140_1==173||LA140_1==175||LA140_1==177||(LA140_1>=180 && LA140_1<=182)||(LA140_1>=188 && LA140_1<=189)||LA140_1==191)) {s = 48;}

				input.Seek(index140_1);
				break;
			}
		case 1:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred40_Smi_fragment))) {s = 47;}

				else if ((true)) {s = 48;}

				input.Seek(index140_1);
				break;
			}
		case 2:
			{
				input.Rewind();
				if ((LA140_1==IDENTIFIER_KW) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 49;}

				else if ((LA140_1==COMMA||LA140_1==R_BRACE)) {s = 48;}

				input.Seek(index140_1);
				break;
			}
		case 3:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred40_Smi_fragment))) {s = 49;}

				else if ((true)) {s = 48;}

				input.Seek(index140_1);
				break;
			}
		case 4:
			{
				input.Rewind();
				if ((LA140_1==LESS) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 50;}

				else if ((LA140_1==B_STRING||(LA140_1>=COLON && LA140_1<=COMMA)||LA140_1==C_STRING||LA140_1==ERROR_KW||LA140_1==FALSE_KW||LA140_1==H_STRING||(LA140_1>=LOWER && LA140_1<=L_BRACE)||(LA140_1>=MINUS && LA140_1<=MINUS_INFINITY_KW)||(LA140_1>=NULL_KW && LA140_1<=NUMBER)||LA140_1==OBJECT_KW||LA140_1==OPERATION_KW||LA140_1==PLUS_INFINITY_KW||LA140_1==R_BRACE||LA140_1==TRUE_KW||LA140_1==UPPER||(LA140_1>=125 && LA140_1<=128)||(LA140_1>=130 && LA140_1<=133)||LA140_1==135||LA140_1==142||(LA140_1>=145 && LA140_1<=147)||(LA140_1>=157 && LA140_1<=160)||(LA140_1>=162 && LA140_1<=164)||LA140_1==173||LA140_1==175||LA140_1==177||(LA140_1>=180 && LA140_1<=182)||(LA140_1>=187 && LA140_1<=191))) {s = 48;}

				input.Seek(index140_1);
				break;
			}
		case 5:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred40_Smi_fragment))) {s = 50;}

				else if ((true)) {s = 48;}

				input.Seek(index140_1);
				break;
			}
		case 6:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred40_Smi_fragment))) {s = 50;}

				else if ((true)) {s = 48;}

				input.Seek(index140_1);
				break;
			}
		case 7:
			{
				input.Rewind();
				if ((LA140_1==186) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 51;}

				else if ((LA140_1==COMMA||LA140_1==R_BRACE)) {s = 48;}

				input.Seek(index140_1);
				break;
			}
		case 8:
			{
				input.Rewind();
				if ((LA140_1==184) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 52;}

				else if ((LA140_1==151) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 53;}

				else if ((LA140_1==COMMA||LA140_1==R_BRACE)) {s = 48;}

				input.Seek(index140_1);
				break;
			}
		case 9:
			{
				input.Rewind();
				if ((LA140_1==183) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 54;}

				else if ((LA140_1==COMMA||LA140_1==R_BRACE)) {s = 48;}

				input.Seek(index140_1);
				break;
			}
		case 10:
			{
				input.Rewind();
				if ((LA140_1==165) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 55;}

				else if ((LA140_1==183) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 56;}

				else if ((LA140_1==COMMA||LA140_1==R_BRACE)) {s = 48;}

				input.Seek(index140_1);
				break;
			}
		case 11:
			{
				input.Rewind();
				if ((LA140_1==141) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 57;}

				else if ((LA140_1==183) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 58;}

				else if ((LA140_1==COMMA||LA140_1==R_BRACE)) {s = 48;}

				input.Seek(index140_1);
				break;
			}
		case 12:
			{
				input.Rewind();
				if ((LA140_1==165) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 59;}

				else if ((LA140_1==COMMA||LA140_1==R_BRACE)) {s = 48;}

				input.Seek(index140_1);
				break;
			}
		case 13:
			{
				input.Rewind();
				if ((LA140_1==161) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 60;}

				else if ((LA140_1==COMMA||LA140_1==R_BRACE)) {s = 48;}

				input.Seek(index140_1);
				break;
			}
		case 14:
			{
				input.Rewind();
				if ((LA140_1==183) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 61;}

				else if ((LA140_1==COMMA||LA140_1==R_BRACE)) {s = 48;}

				input.Seek(index140_1);
				break;
			}
		case 15:
			{
				input.Rewind();
				if ((LA140_1==174) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 62;}

				else if ((LA140_1==COMMA||LA140_1==R_BRACE)) {s = 48;}

				input.Seek(index140_1);
				break;
			}
		case 16:
			{
				input.Rewind();
				if ((LA140_1==143) && (EvaluatePredicate(synpred40_Smi_fragment))) {s = 63;}

				else if ((LA140_1==COMMA||LA140_1==R_BRACE)) {s = 48;}

				input.Seek(index140_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 140, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA156 : DFA
	{
		private const string DFA156_eotS =
			"\x57\xFFFF";
		private const string DFA156_eofS =
			"\x57\xFFFF";
		private const string DFA156_minS =
			"\x1\x7\x26\x0\x23\xFFFF\x9\x0\x4\xFFFF";
		private const string DFA156_maxS =
			"\x1\xBF\x26\x0\x23\xFFFF\x9\x0\x4\xFFFF";
		private const string DFA156_acceptS =
			"\x27\xFFFF\x1\x1\x1\x3\x1\x4\x1\x5\x1\x6\x28\xFFFF\x1\x7\x1\x8\x1\x2";
		private const string DFA156_specialS =
			"\x1\x0\x1\x1\x1\x2\x1\x3\x1\x4\x1\x5\x1\x6\x1\x7\x1\x8\x1\x9\x1\xA\x1"+
			"\xB\x1\xC\x1\xD\x1\xE\x1\xF\x1\x10\x1\x11\x1\x12\x1\x13\x1\x14\x1\x15"+
			"\x1\x16\x1\x17\x1\x18\x1\x19\x1\x1A\x1\x1B\x1\x1C\x1\x1D\x1\x1E\x1\x1F"+
			"\x1\x20\x1\x21\x1\x22\x1\x23\x1\x24\x1\x25\x1\x26\x23\xFFFF\x1\x27\x1"+
			"\x28\x1\x29\x1\x2A\x1\x2B\x1\x2C\x1\x2D\x1\x2E\x1\x2F\x4\xFFFF}>";
		private static readonly string[] DFA156_transitionS =
			{
				"\x1\x2B\x7\xFFFF\x1\x2B\x1\xFFFF\x2\x2B\x1\xFFFF\x1\xB\x1\x2B\x2\xFFFF"+
				"\x1\x2B\x7\xFFFF\x1\x4\x6\xFFFF\x1\x2B\x1\xFFFF\x1\x2B\x1\xFFFF\x1\xF"+
				"\x5\xFFFF\x1\x2B\x1\x2\x1\x29\x3\x2B\x1\xFFFF\x1\xA\x1\x2B\x4\xFFFF"+
				"\x1\x2B\x1\xFFFF\x1\x2B\x2\xFFFF\x1\x2B\x2\xFFFF\x1\x6\x1\x9\x1\x2B"+
				"\x1\x2A\x1\xFFFF\x1\x7\x1\xD\x1\x27\x1\x3\x1\x8\x1\x2B\x1\xFFFF\x1\x1A"+
				"\x1\x2B\x2\xFFFF\x1\xE\x2\xFFFF\x1\x54\x2\xFFFF\x1\xC\x1\xFFFF\x1\x2B"+
				"\x1\xFFFF\x1\x2B\x6\xFFFF\x2\x2B\x1\xFFFF\x1\x28\x2\xFFFF\x1\x2B\x1"+
				"\xFFFF\x1\x2B\x1\x1\x4\xFFFF\x1\x2B\x1\x5\x4\x2B\x1\x55\x1\xFFFF\x1"+
				"\x1D\x1\x20\x1\x1F\x1\x1E\x1\xFFFF\x1\x51\x1\x21\x1\x13\x1\x12\x1\xFFFF"+
				"\x1\x10\x1\x2B\x5\xFFFF\x1\x22\x2\xFFFF\x1\x14\x1\x16\x1\x15\x9\xFFFF"+
				"\x1\x50\x1\x4A\x1\x4F\x1\x4C\x1\xFFFF\x1\x4E\x1\x4B\x1\x26\x8\xFFFF"+
				"\x1\x1B\x1\xFFFF\x1\x25\x1\xFFFF\x1\x1C\x1\x2B\x1\xFFFF\x1\x19\x1\x24"+
				"\x1\x23\x4\xFFFF\x1\x4D\x1\x17\x1\x18\x1\x52\x1\x11",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"",
				"",
				"",
				""
			};

		private static readonly short[] DFA156_eot = DFA.UnpackEncodedString(DFA156_eotS);
		private static readonly short[] DFA156_eof = DFA.UnpackEncodedString(DFA156_eofS);
		private static readonly char[] DFA156_min = DFA.UnpackEncodedStringToUnsignedChars(DFA156_minS);
		private static readonly char[] DFA156_max = DFA.UnpackEncodedStringToUnsignedChars(DFA156_maxS);
		private static readonly short[] DFA156_accept = DFA.UnpackEncodedString(DFA156_acceptS);
		private static readonly short[] DFA156_special = DFA.UnpackEncodedString(DFA156_specialS);
		private static readonly short[][] DFA156_transition;

		static DFA156()
		{
			int numStates = DFA156_transitionS.Length;
			DFA156_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA156_transition[i] = DFA.UnpackEncodedString(DFA156_transitionS[i]);
			}
		}

		public DFA156( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 156;
			this.eot = DFA156_eot;
			this.eof = DFA156_eof;
			this.min = DFA156_min;
			this.max = DFA156_max;
			this.accept = DFA156_accept;
			this.special = DFA156_special;
			this.transition = DFA156_transition;
		}

		public override string Description { get { return "1352:1: constraint_elements returns [ConstraintElement result] : ( ( value_range )=>vr= value_range | ( value )=>v= value | SIZE_KW c= constraint | FROM_KW c2= constraint | L_PAREN e= element_set_spec R_PAREN |i= constraint_elements_includes | PATTERN_KW v2= value | WITH_KW ( COMPONENT_KW co1= constraint |cs= constraint_elements_components ) );"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition156(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA156_1 = input.LA(1);
		int index156_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((LA156_1==TRUE_KW)) {s = 1;}

				else if ((LA156_1==FALSE_KW)) {s = 2;}

				else if ((LA156_1==NULL_KW)) {s = 3;}

				else if ((LA156_1==C_STRING)) {s = 4;}

				else if ((LA156_1==UPPER)) {s = 5;}

				else if ((LA156_1==LOWER)) {s = 6;}

				else if ((LA156_1==MINUS)) {s = 7;}

				else if ((LA156_1==NUMBER)) {s = 8;}

				else if ((LA156_1==L_BRACE)) {s = 9;}

				else if ((LA156_1==H_STRING)) {s = 10;}

				else if ((LA156_1==B_STRING)) {s = 11;}

				else if ((LA156_1==PLUS_INFINITY_KW)) {s = 12;}

				else if ((LA156_1==MINUS_INFINITY_KW)) {s = 13;}

				else if ((LA156_1==OPERATION_KW)) {s = 14;}

				else if ((LA156_1==ERROR_KW)) {s = 15;}

				else if ((LA156_1==135)) {s = 16;}

				else if ((LA156_1==191)) {s = 17;}

				else if ((LA156_1==133)) {s = 18;}

				else if ((LA156_1==132)) {s = 19;}

				else if ((LA156_1==145)) {s = 20;}

				else if ((LA156_1==147)) {s = 21;}

				else if ((LA156_1==146)) {s = 22;}

				else if ((LA156_1==188)) {s = 23;}

				else if ((LA156_1==189)) {s = 24;}

				else if ((LA156_1==180)) {s = 25;}

				else if ((LA156_1==OBJECT_KW)) {s = 26;}

				else if ((LA156_1==173)) {s = 27;}

				else if ((LA156_1==177)) {s = 28;}

				else if ((LA156_1==125)) {s = 29;}

				else if ((LA156_1==128)) {s = 30;}

				else if ((LA156_1==127)) {s = 31;}

				else if ((LA156_1==126)) {s = 32;}

				else if ((LA156_1==131)) {s = 33;}

				else if ((LA156_1==142)) {s = 34;}

				else if ((LA156_1==182)) {s = 35;}

				else if ((LA156_1==181)) {s = 36;}

				else if ((LA156_1==175)) {s = 37;}

				else if ((LA156_1==164)) {s = 38;}

				else if ((LA156_1==MIN_KW) && (EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((LA156_1==SIZE_KW)) {s = 40;}

				else if ((LA156_1==FROM_KW)) {s = 41;}

				else if ((LA156_1==L_PAREN)) {s = 42;}

				else if ((LA156_1==ANY_KW||LA156_1==BIT_KW||(LA156_1>=BMP_STR_KW && LA156_1<=BOOLEAN_KW)||LA156_1==CHARACTER_KW||LA156_1==CHOICE_KW||LA156_1==EMBEDDED_KW||LA156_1==ENUMERATED_KW||LA156_1==EXTERNAL_KW||(LA156_1>=GENERALIZED_TIME_KW && LA156_1<=GRAPHIC_STR_KW)||LA156_1==IA5_STRING_KW||LA156_1==INCLUDES_KW||LA156_1==INTEGER_KW||LA156_1==ISO646_STR_KW||LA156_1==L_BRACKET||LA156_1==NUMERIC_STR_KW||LA156_1==OCTET_KW||LA156_1==PRINTABLE_STR_KW||LA156_1==REAL_KW||(LA156_1>=SEQUENCE_KW && LA156_1<=SET_KW)||LA156_1==T61_STR_KW||LA156_1==TELETEX_STR_KW||LA156_1==UNIVERSAL_STR_KW||(LA156_1>=UTC_TIME_KW && LA156_1<=VISIBLE_STR_KW)||LA156_1==136||LA156_1==178)) {s = 43;}

				else if ((LA156_1==158)) {s = 74;}

				else if ((LA156_1==163)) {s = 75;}

				else if ((LA156_1==160)) {s = 76;}

				else if ((LA156_1==187)) {s = 77;}

				else if ((LA156_1==162)) {s = 78;}

				else if ((LA156_1==159)) {s = 79;}

				else if ((LA156_1==157)) {s = 80;}

				else if ((LA156_1==130)) {s = 81;}

				else if ((LA156_1==190)) {s = 82;}

				else if ((LA156_1==PATTERN_KW)) {s = 84;}

				else if ((LA156_1==WITH_KW)) {s = 85;}

				input.Seek(index156_1);
				break;
			}
		case 1:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 2:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 3:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				else if ((true)) {s = 43;}

				input.Seek(index156_1);
				break;
			}
		case 4:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 5:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				else if ((true)) {s = 43;}

				input.Seek(index156_1);
				break;
			}
		case 6:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				else if ((true)) {s = 43;}

				input.Seek(index156_1);
				break;
			}
		case 7:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 8:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 9:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 10:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 11:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 12:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 13:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 14:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				else if ((true)) {s = 43;}

				input.Seek(index156_1);
				break;
			}
		case 15:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				else if ((true)) {s = 43;}

				input.Seek(index156_1);
				break;
			}
		case 16:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 17:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 18:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 19:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 20:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 21:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 22:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 23:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 24:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 25:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 26:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				else if ((true)) {s = 43;}

				input.Seek(index156_1);
				break;
			}
		case 27:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 28:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 29:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 30:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 31:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 32:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 33:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 34:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 35:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 36:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 37:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				input.Seek(index156_1);
				break;
			}
		case 38:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				else if ((true)) {s = 43;}

				input.Seek(index156_1);
				break;
			}
		case 39:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				else if ((true)) {s = 43;}

				input.Seek(index156_1);
				break;
			}
		case 40:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				else if ((true)) {s = 43;}

				input.Seek(index156_1);
				break;
			}
		case 41:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				else if ((true)) {s = 43;}

				input.Seek(index156_1);
				break;
			}
		case 42:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				else if ((true)) {s = 43;}

				input.Seek(index156_1);
				break;
			}
		case 43:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				else if ((true)) {s = 43;}

				input.Seek(index156_1);
				break;
			}
		case 44:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				else if ((true)) {s = 43;}

				input.Seek(index156_1);
				break;
			}
		case 45:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				else if ((true)) {s = 43;}

				input.Seek(index156_1);
				break;
			}
		case 46:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				else if ((true)) {s = 43;}

				input.Seek(index156_1);
				break;
			}
		case 47:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred44_Smi_fragment))) {s = 39;}

				else if ((EvaluatePredicate(synpred45_Smi_fragment))) {s = 86;}

				else if ((true)) {s = 43;}

				input.Seek(index156_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 156, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}

	#endregion DFA

	#region Follow sets
	private static class Follow
	{
		public static readonly BitSet _module_definition_in_statement1918 = new BitSet(new ulong[]{0x0UL});
		public static readonly BitSet _EOF_in_statement1924 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _module_identifier_in_module_definition1949 = new BitSet(new ulong[]{0x800000000UL,0x0UL,0x10000000000UL});
		public static readonly BitSet _set_in_module_definition1951 = new BitSet(new ulong[]{0x801400000000C00UL});
		public static readonly BitSet _set_in_module_definition1964 = new BitSet(new ulong[]{0x0UL,0x400000000000UL});
		public static readonly BitSet _TAGS_KW_in_module_definition1976 = new BitSet(new ulong[]{0x1000000000400UL});
		public static readonly BitSet _EXTENSIBILITY_KW_in_module_definition1985 = new BitSet(new ulong[]{0x1000000000000000UL});
		public static readonly BitSet _IMPLIED_KW_in_module_definition1987 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _ASSIGN_OP_in_module_definition1993 = new BitSet(new ulong[]{0x4000UL});
		public static readonly BitSet _BEGIN_KW_in_module_definition1995 = new BitSet(new ulong[]{0x2000890000000000UL,0xE040000000440040UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _module_body_in_module_definition1999 = new BitSet(new ulong[]{0x10000000000UL});
		public static readonly BitSet _END_KW_in_module_definition2001 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UPPER_in_module_identifier2018 = new BitSet(new ulong[]{0x2UL,0x80UL});
		public static readonly BitSet _obj_id_comp_lst_in_module_identifier2021 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _exports_in_module_body2044 = new BitSet(new ulong[]{0x2000080000000002UL,0xE040000000440040UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _imports_in_module_body2055 = new BitSet(new ulong[]{0x80000000002UL,0xE040000000440040UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _assignment_in_module_body2066 = new BitSet(new ulong[]{0x80000000002UL,0xE040000000440040UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _L_BRACE_in_obj_id_comp_lst2089 = new BitSet(new ulong[]{0x0UL,0x40000000008040UL});
		public static readonly BitSet _defined_value_in_obj_id_comp_lst2106 = new BitSet(new ulong[]{0x0UL,0x8040UL});
		public static readonly BitSet _obj_id_component_in_obj_id_comp_lst2116 = new BitSet(new ulong[]{0x0UL,0x800008040UL});
		public static readonly BitSet _R_BRACE_in_obj_id_comp_lst2124 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UPPER_in_defined_value2148 = new BitSet(new ulong[]{0x1000000000UL});
		public static readonly BitSet _DOT_in_defined_value2150 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _LOWER_in_defined_value2160 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NUMBER_in_obj_id_component2185 = new BitSet(new ulong[]{0x2UL,0x200UL});
		public static readonly BitSet _LOWER_in_obj_id_component2197 = new BitSet(new ulong[]{0x2UL,0x200UL});
		public static readonly BitSet _L_PAREN_in_obj_id_component2204 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _NUMBER_in_obj_id_component2208 = new BitSet(new ulong[]{0x0UL,0x2000000000UL});
		public static readonly BitSet _R_PAREN_in_obj_id_component2210 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _EXPLICIT_KW_in_tag_default2236 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IMPLICIT_KW_in_tag_default2243 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _AUTOMATIC_KW_in_tag_default2250 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _EXPORTS_KW_in_exports2270 = new BitSet(new ulong[]{0x80000000040UL,0xE040004000440040UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _symbol_list_in_exports2282 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _ALL_KW_in_exports2293 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _SEMI_in_exports2304 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IMPORTS_KW_in_imports2320 = new BitSet(new ulong[]{0x80000000000UL,0xE040004000440040UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _symbols_from_module_in_imports2325 = new BitSet(new ulong[]{0x80000000000UL,0xE040004000440040UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _SEMI_in_imports2331 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UPPER_in_assignment2354 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _ASSIGN_OP_in_assignment2356 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _type_in_assignment2360 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_assignment2374 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _type_in_assignment2378 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _ASSIGN_OP_in_assignment2380 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_assignment2384 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UPPER_in_assignment2399 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000000UL});
		public static readonly BitSet _macroName_in_assignment2403 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000000UL});
		public static readonly BitSet _152_in_assignment2406 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _ASSIGN_OP_in_assignment2408 = new BitSet(new ulong[]{0x4000UL});
		public static readonly BitSet _BEGIN_KW_in_assignment2410 = new BitSet(new ulong[]{0xFFFFFFFFFFFFFFF0UL,0xFFFFFFFFFFFFFFFFUL,0xFFFFFFFFFFFFFFFFUL,0x1FUL});
		public static readonly BitSet _END_KW_in_assignment2420 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _symbol_in_symbol_list2448 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _COMMA_in_symbol_list2455 = new BitSet(new ulong[]{0x80000000000UL,0xE040000000440040UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _symbol_in_symbol_list2459 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _symbol_list_in_symbols_from_module2482 = new BitSet(new ulong[]{0x8000000000000UL});
		public static readonly BitSet _FROM_KW_in_symbols_from_module2487 = new BitSet(new ulong[]{0x0UL,0x40000000000000UL});
		public static readonly BitSet _UPPER_in_symbols_from_module2491 = new BitSet(new ulong[]{0x2UL,0x400000000000C0UL});
		public static readonly BitSet _obj_id_comp_lst_in_symbols_from_module2521 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_value_in_symbols_from_module2558 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UPPER_in_symbol2594 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_symbol2598 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _macroName_in_symbol2602 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OPERATION_KW_in_macroName2609 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ERROR_KW_in_macroName2613 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _135_in_macroName2618 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _191_in_macroName2622 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _133_in_macroName2636 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _132_in_macroName2640 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _145_in_macroName2644 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _147_in_macroName2658 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _146_in_macroName2662 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _188_in_macroName2666 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _189_in_macroName2670 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _180_in_macroName2677 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OBJECT_KW_in_macroName2681 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _173_in_macroName2685 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _177_in_macroName2689 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _125_in_macroName2693 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _128_in_macroName2700 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _127_in_macroName2704 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _126_in_macroName2708 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _131_in_macroName2715 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _142_in_macroName2719 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _182_in_macroName2723 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _181_in_macroName2727 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _175_in_macroName2731 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_macros_in_macroName2738 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _built_in_type_in_type2758 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_type_in_type2767 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _selection_type_in_type2776 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _macros_type_in_type2785 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_type2794 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _TRUE_KW_in_value2820 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FALSE_KW_in_value2837 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NULL_KW_in_value2854 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _C_STRING_in_value2873 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_value_in_value2893 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _signed_number_in_value2912 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _choice_value_in_value2931 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _sequence_value_in_value2950 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _sequenceof_value_in_value2969 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _cstr_value_in_value2988 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _obj_id_comp_lst_in_value3007 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PLUS_INFINITY_KW_in_value3024 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _MINUS_INFINITY_KW_in_value3041 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _symbol_in_value3057 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _any_type_in_built_in_type3080 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _bit_string_type_in_built_in_type3092 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _boolean_type_in_built_in_type3104 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _character_str_type_in_built_in_type3116 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _choice_type_in_built_in_type3128 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _embedded_type_in_built_in_type3140 = new BitSet(new ulong[]{0x8000000000UL});
		public static readonly BitSet _EMBEDDED_KW_in_built_in_type3142 = new BitSet(new ulong[]{0x0UL,0x4000000UL});
		public static readonly BitSet _PDV_KW_in_built_in_type3144 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enum_type_in_built_in_type3156 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _external_type_in_built_in_type3168 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _integer_type_in_built_in_type3177 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _null_type_in_built_in_type3186 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _object_identifier_type_in_built_in_type3195 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _octetString_type_in_built_in_type3204 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _real_type_in_built_in_type3213 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _relativeOid_type_in_built_in_type3222 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _sequence_type_in_built_in_type3231 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _sequenceof_type_in_built_in_type3240 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _set_type_in_built_in_type3249 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _setof_type_in_built_in_type3258 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _tagged_type_in_built_in_type3267 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UPPER_in_defined_type3290 = new BitSet(new ulong[]{0x1000000000UL});
		public static readonly BitSet _DOT_in_defined_type3292 = new BitSet(new ulong[]{0x0UL,0x40000000000000UL});
		public static readonly BitSet _UPPER_in_defined_type3302 = new BitSet(new ulong[]{0x2UL,0x200UL});
		public static readonly BitSet _constraint_in_defined_type3310 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_selection_type3333 = new BitSet(new ulong[]{0x0UL,0x10UL});
		public static readonly BitSet _LESS_in_selection_type3335 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _type_in_selection_type3339 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ANY_KW_in_any_type3359 = new BitSet(new ulong[]{0x400000002UL});
		public static readonly BitSet _DEFINED_KW_in_any_type3362 = new BitSet(new ulong[]{0x80000UL});
		public static readonly BitSet _BY_KW_in_any_type3364 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _LOWER_in_any_type3368 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BIT_KW_in_bit_string_type3393 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _STRING_KW_in_bit_string_type3395 = new BitSet(new ulong[]{0x2UL,0x280UL});
		public static readonly BitSet _namedNumber_list_in_bit_string_type3408 = new BitSet(new ulong[]{0x2UL,0x200UL});
		public static readonly BitSet _constraint_in_bit_string_type3419 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BOOLEAN_KW_in_boolean_type3444 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CHARACTER_KW_in_character_str_type3463 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _STRING_KW_in_character_str_type3465 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _character_set_in_character_str_type3474 = new BitSet(new ulong[]{0x2UL,0x200UL});
		public static readonly BitSet _constraint_in_character_str_type3483 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CHOICE_KW_in_choice_type3507 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_choice_type3509 = new BitSet(new ulong[]{0x20000000UL,0x40UL});
		public static readonly BitSet _elementType_list_in_choice_type3513 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_choice_type3515 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _EMBEDDED_KW_in_embedded_type3535 = new BitSet(new ulong[]{0x0UL,0x4000000UL});
		public static readonly BitSet _PDV_KW_in_embedded_type3537 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ENUMERATED_KW_in_enum_type3556 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _namedNumber_list_in_enum_type3560 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _EXTERNAL_KW_in_external_type3580 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _INTEGER_KW_in_integer_type3601 = new BitSet(new ulong[]{0x2UL,0x280UL});
		public static readonly BitSet _namedNumber_list_in_integer_type3614 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constraint_in_integer_type3623 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NULL_KW_in_null_type3648 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OBJECT_KW_in_object_identifier_type3667 = new BitSet(new ulong[]{0x400000000000000UL});
		public static readonly BitSet _IDENTIFIER_KW_in_object_identifier_type3669 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OCTET_KW_in_octetString_type3688 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _STRING_KW_in_octetString_type3690 = new BitSet(new ulong[]{0x2UL,0x200UL});
		public static readonly BitSet _constraint_in_octetString_type3695 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _REAL_KW_in_real_type3718 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _178_in_relativeOid_type3740 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEQUENCE_KW_in_sequence_type3761 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_sequence_type3763 = new BitSet(new ulong[]{0x20000000UL,0x800000040UL});
		public static readonly BitSet _elementType_list_in_sequence_type3768 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_sequence_type3774 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEQUENCE_KW_in_sequenceof_type3793 = new BitSet(new ulong[]{0x0UL,0x100200UL});
		public static readonly BitSet _L_PAREN_in_sequenceof_type3796 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SIZE_KW_in_sequenceof_type3798 = new BitSet(new ulong[]{0x0UL,0x200UL});
		public static readonly BitSet _constraint_in_sequenceof_type3802 = new BitSet(new ulong[]{0x0UL,0x2000000000UL});
		public static readonly BitSet _R_PAREN_in_sequenceof_type3806 = new BitSet(new ulong[]{0x0UL,0x100000UL});
		public static readonly BitSet _OF_KW_in_sequenceof_type3811 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _type_in_sequenceof_type3815 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SET_KW_in_set_type3835 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_set_type3837 = new BitSet(new ulong[]{0x20000000UL,0x800000040UL});
		public static readonly BitSet _elementType_list_in_set_type3842 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_set_type3848 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SET_KW_in_setof_type3866 = new BitSet(new ulong[]{0x0UL,0x40000100000UL});
		public static readonly BitSet _SIZE_KW_in_setof_type3869 = new BitSet(new ulong[]{0x0UL,0x200UL});
		public static readonly BitSet _constraint_in_setof_type3873 = new BitSet(new ulong[]{0x0UL,0x100000UL});
		public static readonly BitSet _OF_KW_in_setof_type3880 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _type_in_setof_type3884 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _tag_in_tagged_type3906 = new BitSet(new ulong[]{0xA724A8001268880UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _tag_default_in_tagged_type3914 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _type_in_tagged_type3924 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_namedNumber_list3944 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _namedNumber_in_namedNumber_list3948 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_namedNumber_list3954 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _namedNumber_in_namedNumber_list3958 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_namedNumber_list3964 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_PAREN_in_constraint3982 = new BitSet(new ulong[]{0x437E2A81013680C0UL,0xEFE1A5A1524DFBC9UL,0xF876A01DE00E41BDUL});
		public static readonly BitSet _element_set_specs_in_constraint3987 = new BitSet(new ulong[]{0x200000000000UL,0x2000000000UL});
		public static readonly BitSet _exception_spec_in_constraint3998 = new BitSet(new ulong[]{0x0UL,0x2000000000UL});
		public static readonly BitSet _R_PAREN_in_constraint4004 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BMP_STR_KW_in_character_set4022 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GENERALIZED_TIME_KW_in_character_set4029 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GENERAL_STR_KW_in_character_set4036 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _GRAPHIC_STR_KW_in_character_set4043 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IA5_STRING_KW_in_character_set4053 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ISO646_STR_KW_in_character_set4060 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NUMERIC_STR_KW_in_character_set4067 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PRINTABLE_STR_KW_in_character_set4074 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _TELETEX_STR_KW_in_character_set4084 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _T61_STR_KW_in_character_set4091 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UNIVERSAL_STR_KW_in_character_set4098 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UTF8_STR_KW_in_character_set4105 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UTC_TIME_KW_in_character_set4115 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _VIDEOTEX_STR_KW_in_character_set4122 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _VISIBLE_STR_KW_in_character_set4129 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _elementType_in_elementType_list4151 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _COMMA_in_elementType_list4158 = new BitSet(new ulong[]{0x21000000UL,0x40UL});
		public static readonly BitSet _choice_type_in_elementType_list4169 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _elementType_in_elementType_list4178 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _L_BRACKET_in_tag4201 = new BitSet(new ulong[]{0x100UL,0x50000080008040UL});
		public static readonly BitSet _clazz_in_tag4206 = new BitSet(new ulong[]{0x0UL,0x40000000008040UL});
		public static readonly BitSet _class_NUMBER_in_tag4216 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _R_BRACKET_in_tag4218 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NUMBER_in_class_NUMBER4257 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_value_in_class_NUMBER4266 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OPERATION_KW_in_operation_macro4288 = new BitSet(new ulong[]{0x40000000202UL,0x400000020UL});
		public static readonly BitSet _ARGUMENT_KW_in_operation_macro4293 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _LOWER_in_operation_macro4304 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _type_in_operation_macro4314 = new BitSet(new ulong[]{0x40000000002UL,0x400000020UL});
		public static readonly BitSet _RESULT_KW_in_operation_macro4333 = new BitSet(new ulong[]{0x2720E8001268082UL,0x7E0A181404D4169UL,0x4804001DE0000104UL});
		public static readonly BitSet _LOWER_in_operation_macro4360 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _type_in_operation_macro4371 = new BitSet(new ulong[]{0x40000000002UL,0x20UL});
		public static readonly BitSet _ERRORS_KW_in_operation_macro4394 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_operation_macro4396 = new BitSet(new ulong[]{0x3760A8101368080UL,0xE7E1A189504DD9C9UL,0xF876A01DE00E41BDUL});
		public static readonly BitSet _operation_errorlist_in_operation_macro4401 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_operation_macro4407 = new BitSet(new ulong[]{0x2UL,0x20UL});
		public static readonly BitSet _LINKED_KW_in_operation_macro4425 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_operation_macro4427 = new BitSet(new ulong[]{0x3760A8101368080UL,0xE7E1A189504DD9C9UL,0xF876A01DE00E41BDUL});
		public static readonly BitSet _linkedOp_list_in_operation_macro4432 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_operation_macro4438 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ERROR_KW_in_error_macro4470 = new BitSet(new ulong[]{0x2UL,0x1000000UL});
		public static readonly BitSet _PARAMETER_KW_in_error_macro4476 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _LOWER_in_error_macro4487 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _type_in_error_macro4497 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _operation_macro_in_macros_type4527 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _error_macro_in_macros_type4536 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _objecttype_macro_in_macros_type4545 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _moduleidentity_macro_in_macros_type4554 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _objectidentity_macro_in_macros_type4566 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _notificationtype_macro_in_macros_type4575 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _textualconvention_macro_in_macros_type4584 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _objectgroup_macro_in_macros_type4596 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _notificationgroup_macro_in_macros_type4605 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modulecompliance_macro_in_macros_type4614 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _agentcapabilities_macro_in_macros_type4626 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _traptype_macro_in_macros_type4635 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _136_in_smi_type4720 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _INTEGER_KW_in_smi_type4727 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OCTET_KW_in_smi_type4734 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _STRING_KW_in_smi_type4736 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OBJECT_KW_in_smi_type4743 = new BitSet(new ulong[]{0x400000000000000UL});
		public static readonly BitSet _IDENTIFIER_KW_in_smi_type4745 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UPPER_in_smi_type4755 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_PAREN_in_smi_subtyping4773 = new BitSet(new ulong[]{0x100000000100000UL,0x8800UL});
		public static readonly BitSet _subtype_range_in_smi_subtyping4775 = new BitSet(new ulong[]{0x1000UL,0x2000000000UL});
		public static readonly BitSet _BAR_in_smi_subtyping4778 = new BitSet(new ulong[]{0x100000000100000UL,0x8800UL});
		public static readonly BitSet _subtype_range_in_smi_subtyping4780 = new BitSet(new ulong[]{0x1000UL,0x2000000000UL});
		public static readonly BitSet _R_PAREN_in_smi_subtyping4784 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_PAREN_in_smi_subtyping4801 = new BitSet(new ulong[]{0x0UL,0x40000000000UL});
		public static readonly BitSet _SIZE_KW_in_smi_subtyping4803 = new BitSet(new ulong[]{0x0UL,0x200UL});
		public static readonly BitSet _L_PAREN_in_smi_subtyping4805 = new BitSet(new ulong[]{0x100000000100000UL,0x8800UL});
		public static readonly BitSet _subtype_range_in_smi_subtyping4807 = new BitSet(new ulong[]{0x1000UL,0x2000000000UL});
		public static readonly BitSet _BAR_in_smi_subtyping4810 = new BitSet(new ulong[]{0x100000000100000UL,0x8800UL});
		public static readonly BitSet _subtype_range_in_smi_subtyping4812 = new BitSet(new ulong[]{0x1000UL,0x2000000000UL});
		public static readonly BitSet _R_PAREN_in_smi_subtyping4816 = new BitSet(new ulong[]{0x0UL,0x2000000000UL});
		public static readonly BitSet _R_PAREN_in_smi_subtyping4818 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _subtype_value_in_subtype_range4824 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _DOTDOT_in_subtype_range4827 = new BitSet(new ulong[]{0x100000000100000UL,0x8800UL});
		public static readonly BitSet _subtype_value_in_subtype_range4829 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _MINUS_in_subtype_value4839 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _NUMBER_in_subtype_value4843 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _B_STRING_in_subtype_value4847 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _H_STRING_in_subtype_value4851 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _164_in_objecttype_macro4869 = new BitSet(new ulong[]{0x0UL,0x0UL,0x400000000000000UL});
		public static readonly BitSet _186_in_objecttype_macro4871 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _smi_type_in_objecttype_macro4906 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _namedbits_in_objecttype_macro4910 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80188004000002UL,0x2UL});
		public static readonly BitSet _smi_type_in_objecttype_macro4951 = new BitSet(new ulong[]{0x0UL,0x200UL,0x80188004000002UL,0x2UL});
		public static readonly BitSet _smi_subtyping_in_objecttype_macro4954 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80188004000002UL,0x2UL});
		public static readonly BitSet _type_in_objecttype_macro4985 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80188004000002UL,0x2UL});
		public static readonly BitSet _193_in_objecttype_macro5031 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_objecttype_macro5035 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80188004000002UL});
		public static readonly BitSet _154_in_objecttype_macro5063 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _129_in_objecttype_macro5076 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _objecttype_macro_accesstypes_in_objecttype_macro5091 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80180000000000UL});
		public static readonly BitSet _167_in_objecttype_macro5116 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _objecttype_macro_pibaccess_in_objecttype_macro5120 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80180000000000UL});
		public static readonly BitSet _171_in_objecttype_macro5160 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro5162 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_objecttype_macro5166 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro5168 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80100000000000UL});
		public static readonly BitSet _172_in_objecttype_macro5211 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro5213 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_objecttype_macro5217 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro5219 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80000000000000UL});
		public static readonly BitSet _183_in_objecttype_macro5268 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _objecttype_macro_statustypes_in_objecttype_macro5272 = new BitSet(new ulong[]{0x2UL,0x0UL,0x1020000611840UL,0x1UL});
		public static readonly BitSet _140_in_objecttype_macro5302 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_objecttype_macro5306 = new BitSet(new ulong[]{0x2UL,0x0UL,0x1020000610840UL,0x1UL});
		public static readonly BitSet _150_in_objecttype_macro5363 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro5365 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _objecttype_macro_error_in_objecttype_macro5369 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_objecttype_macro5380 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _objecttype_macro_error_in_objecttype_macro5384 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro5390 = new BitSet(new ulong[]{0x2UL,0x0UL,0x1020000210840UL,0x1UL});
		public static readonly BitSet _176_in_objecttype_macro5405 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_objecttype_macro5409 = new BitSet(new ulong[]{0x2UL,0x0UL,0x20000210840UL,0x1UL});
		public static readonly BitSet _149_in_objecttype_macro5431 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _objecttype_macro_index_in_objecttype_macro5435 = new BitSet(new ulong[]{0x2UL,0x0UL,0x200800UL,0x1UL});
		public static readonly BitSet _134_in_objecttype_macro5461 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _objecttype_macro_augments_in_objecttype_macro5465 = new BitSet(new ulong[]{0x2UL,0x0UL,0x200800UL,0x1UL});
		public static readonly BitSet _169_in_objecttype_macro5491 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro5493 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_objecttype_macro5497 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro5499 = new BitSet(new ulong[]{0x2UL,0x0UL,0x200800UL,0x1UL});
		public static readonly BitSet _144_in_objecttype_macro5546 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro5548 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_objecttype_macro5552 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro5554 = new BitSet(new ulong[]{0x2UL,0x0UL,0x200800UL,0x1UL});
		public static readonly BitSet _149_in_objecttype_macro5624 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _objecttype_macro_index_in_objecttype_macro5628 = new BitSet(new ulong[]{0x2UL,0x0UL,0x800UL,0x1UL});
		public static readonly BitSet _192_in_objecttype_macro5678 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro5680 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100081044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_objecttype_macro5685 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_objecttype_macro5696 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_objecttype_macro5700 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro5709 = new BitSet(new ulong[]{0x2UL,0x0UL,0x800UL});
		public static readonly BitSet _139_in_objecttype_macro5748 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro5750 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _objecttype_macro_bitsvalue_in_objecttype_macro5793 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _value_in_objecttype_macro5824 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro5850 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_objecttype_macro_accesstypes5874 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_objecttype_macro_pibaccess5901 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_objecttype_macro_statustypes5925 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro_index5947 = new BitSet(new ulong[]{0x1104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _objecttype_macro_indextype_in_objecttype_macro_index5951 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_objecttype_macro_index5958 = new BitSet(new ulong[]{0x1104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _objecttype_macro_indextype_in_objecttype_macro_index5962 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro_index5968 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IMPLIED_KW_in_objecttype_macro_indextype5994 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_objecttype_macro_indextype6000 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro_augments6020 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_objecttype_macro_augments6024 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro_augments6026 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_namedbits6050 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _namedbit_in_namedbits6054 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_namedbits6061 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _namedbit_in_namedbits6065 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_namedbits6071 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro_bitsvalue6094 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _LOWER_in_objecttype_macro_bitsvalue6098 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_objecttype_macro_bitsvalue6105 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _LOWER_in_objecttype_macro_bitsvalue6109 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro_bitsvalue6115 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _namedbit_in_objecttype_macro_error6141 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _158_in_moduleidentity_macro6163 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100000000800000UL});
		public static readonly BitSet _184_in_moduleidentity_macro6166 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_moduleidentity_macro6168 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _moduleidentity_macro_categories_in_moduleidentity_macro6172 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_moduleidentity_macro6174 = new BitSet(new ulong[]{0x0UL,0x0UL,0x800000UL});
		public static readonly BitSet _151_in_moduleidentity_macro6186 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_moduleidentity_macro6190 = new BitSet(new ulong[]{0x0UL,0x0UL,0x4000000000UL});
		public static readonly BitSet _166_in_moduleidentity_macro6195 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_moduleidentity_macro6199 = new BitSet(new ulong[]{0x0UL,0x0UL,0x200UL});
		public static readonly BitSet _137_in_moduleidentity_macro6204 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_moduleidentity_macro6208 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000UL});
		public static readonly BitSet _140_in_moduleidentity_macro6216 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_moduleidentity_macro6220 = new BitSet(new ulong[]{0x2UL,0x0UL,0x8000000000000UL});
		public static readonly BitSet _moduleidentity_macro_revision_in_moduleidentity_macro6228 = new BitSet(new ulong[]{0x2UL,0x0UL,0x8000000000000UL});
		public static readonly BitSet _179_in_moduleidentity_macro_revision6249 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_moduleidentity_macro_revision6253 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000UL});
		public static readonly BitSet _140_in_moduleidentity_macro_revision6255 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_moduleidentity_macro_revision6259 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_moduleidentity_macro_categories6282 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _moduleidentity_macro_categoryid_in_moduleidentity_macro_categories6295 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _COMMA_in_moduleidentity_macro_categories6302 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _moduleidentity_macro_categoryid_in_moduleidentity_macro_categories6306 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _namedbit_in_moduleidentity_macro_categoryid6330 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _163_in_objectidentity_macro6353 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80000000000000UL});
		public static readonly BitSet _183_in_objectidentity_macro6355 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _status_in_objectidentity_macro6359 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000UL});
		public static readonly BitSet _140_in_objectidentity_macro6363 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_objectidentity_macro6367 = new BitSet(new ulong[]{0x2UL,0x0UL,0x1000000000000UL});
		public static readonly BitSet _176_in_objectidentity_macro6374 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_objectidentity_macro6378 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _160_in_notificationtype_macro6401 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80002000000000UL});
		public static readonly BitSet _165_in_notificationtype_macro6404 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_notificationtype_macro6406 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_notificationtype_macro6410 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_notificationtype_macro6420 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_notificationtype_macro6424 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_notificationtype_macro6430 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80000000000000UL});
		public static readonly BitSet _183_in_notificationtype_macro6439 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _status_in_notificationtype_macro6443 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000UL});
		public static readonly BitSet _140_in_notificationtype_macro6451 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_notificationtype_macro6455 = new BitSet(new ulong[]{0x2UL,0x0UL,0x1000000000000UL});
		public static readonly BitSet _176_in_notificationtype_macro6464 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_notificationtype_macro6468 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _187_in_textualconvention_macro6496 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80000000002000UL});
		public static readonly BitSet _141_in_textualconvention_macro6499 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_textualconvention_macro6503 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80000000000000UL});
		public static readonly BitSet _183_in_textualconvention_macro6513 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _status_in_textualconvention_macro6517 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000UL});
		public static readonly BitSet _140_in_textualconvention_macro6525 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_textualconvention_macro6529 = new BitSet(new ulong[]{0x0UL,0x0UL,0x401000000000000UL});
		public static readonly BitSet _176_in_textualconvention_macro6538 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_textualconvention_macro6542 = new BitSet(new ulong[]{0x0UL,0x0UL,0x400000000000000UL});
		public static readonly BitSet _186_in_textualconvention_macro6553 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _smi_type_in_textualconvention_macro6567 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_textualconvention_macro6572 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _namedbit_in_textualconvention_macro6576 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_textualconvention_macro6593 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _namedbit_in_textualconvention_macro6597 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_textualconvention_macro6603 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_textualconvention_macro6613 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_namedbit6634 = new BitSet(new ulong[]{0x0UL,0x200UL});
		public static readonly BitSet _L_PAREN_in_namedbit6639 = new BitSet(new ulong[]{0x0UL,0x8800UL});
		public static readonly BitSet _MINUS_in_namedbit6642 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _NUMBER_in_namedbit6652 = new BitSet(new ulong[]{0x0UL,0x2000000000UL});
		public static readonly BitSet _R_PAREN_in_namedbit6654 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _162_in_objectgroup_macro6676 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000000000UL});
		public static readonly BitSet _165_in_objectgroup_macro6678 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_objectgroup_macro6680 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_objectgroup_macro6684 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_objectgroup_macro6690 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_objectgroup_macro6694 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_objectgroup_macro6700 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80000000000000UL});
		public static readonly BitSet _183_in_objectgroup_macro6707 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _status_in_objectgroup_macro6711 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000UL});
		public static readonly BitSet _140_in_objectgroup_macro6716 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_objectgroup_macro6720 = new BitSet(new ulong[]{0x2UL,0x0UL,0x1000000000000UL});
		public static readonly BitSet _176_in_objectgroup_macro6726 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_objectgroup_macro6730 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _159_in_notificationgroup_macro6755 = new BitSet(new ulong[]{0x0UL,0x0UL,0x200000000UL});
		public static readonly BitSet _161_in_notificationgroup_macro6757 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_notificationgroup_macro6759 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_notificationgroup_macro6763 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_notificationgroup_macro6769 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_notificationgroup_macro6773 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_notificationgroup_macro6779 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80000000000000UL});
		public static readonly BitSet _183_in_notificationgroup_macro6786 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _status_in_notificationgroup_macro6790 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000UL});
		public static readonly BitSet _140_in_notificationgroup_macro6795 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_notificationgroup_macro6799 = new BitSet(new ulong[]{0x2UL,0x0UL,0x1000000000000UL});
		public static readonly BitSet _176_in_notificationgroup_macro6805 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_notificationgroup_macro6809 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _157_in_modulecompliance_macro6834 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80000000000000UL});
		public static readonly BitSet _183_in_modulecompliance_macro6836 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _status_in_modulecompliance_macro6840 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000UL});
		public static readonly BitSet _140_in_modulecompliance_macro6846 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_modulecompliance_macro6850 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000010000000UL});
		public static readonly BitSet _176_in_modulecompliance_macro6856 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_modulecompliance_macro6860 = new BitSet(new ulong[]{0x0UL,0x0UL,0x10000000UL});
		public static readonly BitSet _modulecompliance_macro_module_in_modulecompliance_macro6871 = new BitSet(new ulong[]{0x2UL,0x0UL,0x10000000UL});
		public static readonly BitSet _LOWER_in_status6896 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _156_in_modulecompliance_macro_module6919 = new BitSet(new ulong[]{0x2UL,0x40000000040000UL,0x2100000UL});
		public static readonly BitSet _UPPER_in_modulecompliance_macro_module6930 = new BitSet(new ulong[]{0x104080100100002UL,0xE04100001044D8C0UL,0xF872A01DE21E40BDUL});
		public static readonly BitSet _value_in_modulecompliance_macro_module6944 = new BitSet(new ulong[]{0x2UL,0x40000UL,0x2100000UL});
		public static readonly BitSet _153_in_modulecompliance_macro_module6959 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_modulecompliance_macro_module6961 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_modulecompliance_macro_module6965 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_modulecompliance_macro_module6971 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_modulecompliance_macro_module6975 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_modulecompliance_macro_module6981 = new BitSet(new ulong[]{0x2UL,0x40000UL,0x100000UL});
		public static readonly BitSet _modulecompliance_macro_compliance_in_modulecompliance_macro_module6992 = new BitSet(new ulong[]{0x2UL,0x40000UL,0x100000UL});
		public static readonly BitSet _148_in_modulecompliance_macro_compliance7015 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_modulecompliance_macro_compliance7019 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000UL});
		public static readonly BitSet _140_in_modulecompliance_macro_compliance7021 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_modulecompliance_macro_compliance7025 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OBJECT_KW_in_modulecompliance_macro_compliance7035 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_modulecompliance_macro_compliance7039 = new BitSet(new ulong[]{0x0UL,0x0UL,0x400040008001000UL,0x10UL});
		public static readonly BitSet _186_in_modulecompliance_macro_compliance7049 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _syntax_in_modulecompliance_macro_compliance7053 = new BitSet(new ulong[]{0x0UL,0x0UL,0x40008001000UL,0x10UL});
		public static readonly BitSet _196_in_modulecompliance_macro_compliance7064 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _syntax_in_modulecompliance_macro_compliance7068 = new BitSet(new ulong[]{0x0UL,0x0UL,0x40008001000UL});
		public static readonly BitSet _155_in_modulecompliance_macro_compliance7085 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _modulecompliance_macro_access_in_modulecompliance_macro_compliance7089 = new BitSet(new ulong[]{0x0UL,0x0UL,0x40000001000UL});
		public static readonly BitSet _170_in_modulecompliance_macro_compliance7101 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _modulecompliance_macro_pibaccess_in_modulecompliance_macro_compliance7105 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000UL});
		public static readonly BitSet _140_in_modulecompliance_macro_compliance7120 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_modulecompliance_macro_compliance7124 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_modulecompliance_macro_access7146 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_modulecompliance_macro_pibaccess7171 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _130_in_agentcapabilities_macro7193 = new BitSet(new ulong[]{0x0UL,0x0UL,0x400000000000UL});
		public static readonly BitSet _174_in_agentcapabilities_macro7195 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_agentcapabilities_macro7199 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80000000000000UL});
		public static readonly BitSet _183_in_agentcapabilities_macro7204 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _agentcapabilities_macro_status_in_agentcapabilities_macro7208 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000UL});
		public static readonly BitSet _140_in_agentcapabilities_macro7213 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_agentcapabilities_macro7217 = new BitSet(new ulong[]{0x2UL,0x0UL,0x201000000000000UL});
		public static readonly BitSet _176_in_agentcapabilities_macro7223 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_agentcapabilities_macro7227 = new BitSet(new ulong[]{0x2UL,0x0UL,0x200000000000000UL});
		public static readonly BitSet _agentcapabilities_macro_module_in_agentcapabilities_macro7237 = new BitSet(new ulong[]{0x2UL,0x0UL,0x200000000000000UL});
		public static readonly BitSet _LOWER_in_agentcapabilities_macro_status7261 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _185_in_agentcapabilities_macro_module7279 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _LOWER_in_agentcapabilities_macro_module7283 = new BitSet(new ulong[]{0x4104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_agentcapabilities_macro_module7291 = new BitSet(new ulong[]{0x4000000000000000UL});
		public static readonly BitSet _INCLUDES_KW_in_agentcapabilities_macro_module7301 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_agentcapabilities_macro_module7303 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_agentcapabilities_macro_module7307 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_agentcapabilities_macro_module7313 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_agentcapabilities_macro_module7317 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_agentcapabilities_macro_module7321 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x8UL});
		public static readonly BitSet _agentcapabilities_macro_variation_in_agentcapabilities_macro_module7329 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x8UL});
		public static readonly BitSet _195_in_agentcapabilities_macro_variation7351 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_agentcapabilities_macro_variation7355 = new BitSet(new ulong[]{0x0UL,0x0UL,0x400000000001C02UL,0x10UL});
		public static readonly BitSet _186_in_agentcapabilities_macro_variation7361 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _syntax_in_agentcapabilities_macro_variation7365 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1C02UL,0x10UL});
		public static readonly BitSet _196_in_agentcapabilities_macro_variation7373 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _syntax_in_agentcapabilities_macro_variation7377 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1C02UL});
		public static readonly BitSet _129_in_agentcapabilities_macro_variation7385 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _agentcapabilities_macro_access_in_agentcapabilities_macro_variation7389 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1C00UL});
		public static readonly BitSet _138_in_agentcapabilities_macro_variation7400 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_agentcapabilities_macro_variation7402 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_agentcapabilities_macro_variation7406 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_agentcapabilities_macro_variation7412 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_agentcapabilities_macro_variation7416 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_agentcapabilities_macro_variation7420 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1800UL});
		public static readonly BitSet _139_in_agentcapabilities_macro_variation7431 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_agentcapabilities_macro_variation7433 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _L_BRACE_in_agentcapabilities_macro_variation7454 = new BitSet(new ulong[]{0x8000000UL,0x800000040UL});
		public static readonly BitSet _LOWER_in_agentcapabilities_macro_variation7459 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_agentcapabilities_macro_variation7468 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _LOWER_in_agentcapabilities_macro_variation7472 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_agentcapabilities_macro_variation7476 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000UL});
		public static readonly BitSet _value_in_agentcapabilities_macro_variation7485 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000UL});
		public static readonly BitSet _140_in_agentcapabilities_macro_variation7497 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _C_STRING_in_agentcapabilities_macro_variation7501 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_syntax7531 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_syntax7536 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _namedbit_in_syntax7540 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_syntax7546 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _namedbit_in_syntax7550 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_syntax7556 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_syntax7572 = new BitSet(new ulong[]{0x2UL,0x200UL});
		public static readonly BitSet _smi_subtyping_in_syntax7575 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_syntax7589 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_agentcapabilities_macro_access7611 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _190_in_traptype_macro7637 = new BitSet(new ulong[]{0x0UL,0x0UL,0x8000UL});
		public static readonly BitSet _143_in_traptype_macro7639 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_traptype_macro7643 = new BitSet(new ulong[]{0x2UL,0x0UL,0x1000000001000UL,0x4UL});
		public static readonly BitSet _194_in_traptype_macro7649 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_traptype_macro7651 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_traptype_macro7655 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_traptype_macro7661 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_traptype_macro7665 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_traptype_macro7671 = new BitSet(new ulong[]{0x2UL,0x0UL,0x1000000001000UL});
		public static readonly BitSet _140_in_traptype_macro7687 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_traptype_macro7691 = new BitSet(new ulong[]{0x2UL,0x0UL,0x1000000000000UL});
		public static readonly BitSet _176_in_traptype_macro7700 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_traptype_macro7704 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _typeorvaluelist_in_operation_errorlist7727 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _typeorvaluelist_in_linkedOp_list7749 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_typeorvalue7777 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _value_in_typeorvalue7787 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _typeorvalue_in_typeorvaluelist7808 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _COMMA_in_typeorvaluelist7815 = new BitSet(new ulong[]{0x3760A8101368080UL,0xE7E1A181504DD9C9UL,0xF876A01DE00E41BDUL});
		public static readonly BitSet _typeorvalue_in_typeorvaluelist7819 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _elementType_tagged_in_elementType7846 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _COMPONENTS_KW_in_elementType7856 = new BitSet(new ulong[]{0x0UL,0x100000UL});
		public static readonly BitSet _OF_KW_in_elementType7858 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _type_in_elementType7862 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_elementType_tagged7884 = new BitSet(new ulong[]{0xA724A8001268880UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _tag_in_elementType_tagged7908 = new BitSet(new ulong[]{0xA724A8001268880UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _tag_default_in_elementType_tagged7922 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _type_in_elementType_tagged7932 = new BitSet(new ulong[]{0x200000002UL,0x800000UL});
		public static readonly BitSet _OPTIONAL_KW_in_elementType_tagged7938 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DEFAULT_KW_in_elementType_tagged7946 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_elementType_tagged7953 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_namedNumber7981 = new BitSet(new ulong[]{0x0UL,0x200UL});
		public static readonly BitSet _L_PAREN_in_namedNumber7985 = new BitSet(new ulong[]{0x0UL,0x40000000008840UL});
		public static readonly BitSet _signed_number_in_namedNumber7990 = new BitSet(new ulong[]{0x0UL,0x2000000000UL});
		public static readonly BitSet _defined_value_in_namedNumber8000 = new BitSet(new ulong[]{0x0UL,0x2000000000UL});
		public static readonly BitSet _R_PAREN_in_namedNumber8005 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _MINUS_in_signed_number8023 = new BitSet(new ulong[]{0x0UL,0x8000UL});
		public static readonly BitSet _NUMBER_in_signed_number8027 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NUMBER_in_signed_number8036 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _element_set_spec_in_element_set_specs8058 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _COMMA_in_element_set_specs8066 = new BitSet(new ulong[]{0x4000000000UL});
		public static readonly BitSet _DOTDOTDOT_in_element_set_specs8068 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _COMMA_in_element_set_specs8078 = new BitSet(new ulong[]{0x437E0A81013680C0UL,0xEFE1A581524DFBC9UL,0xF876A01DE00E41BDUL});
		public static readonly BitSet _element_set_spec_in_element_set_specs8082 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _EXCLAMATION_in_exception_spec8107 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404DC949UL,0x4804001DE0000104UL});
		public static readonly BitSet _signed_number_in_exception_spec8136 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_value_in_exception_spec8168 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_exception_spec8194 = new BitSet(new ulong[]{0x4000000UL});
		public static readonly BitSet _COLON_in_exception_spec8196 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_exception_spec8200 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _element_set_spec_normal_in_element_set_spec8239 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ALL_KW_in_element_set_spec8250 = new BitSet(new ulong[]{0x100000000000UL});
		public static readonly BitSet _EXCEPT_KW_in_element_set_spec8252 = new BitSet(new ulong[]{0x437E0A8101368080UL,0xEFE1A581524DFBC9UL,0xF876A01DE00E41BDUL});
		public static readonly BitSet _constraint_elements_in_element_set_spec8256 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _intersections_in_element_set_spec_normal8279 = new BitSet(new ulong[]{0x1002UL,0x4000000000000UL});
		public static readonly BitSet _set_in_element_set_spec_normal8291 = new BitSet(new ulong[]{0x437E0A8101368080UL,0xEFE1A581524DFBC9UL,0xF876A01DE00E41BDUL});
		public static readonly BitSet _intersections_in_element_set_spec_normal8303 = new BitSet(new ulong[]{0x1002UL,0x4000000000000UL});
		public static readonly BitSet _constraint_elements_except_in_intersections8330 = new BitSet(new ulong[]{0x2UL,0x6UL});
		public static readonly BitSet _set_in_intersections8346 = new BitSet(new ulong[]{0x437E0A8101368080UL,0xEFE1A581524DFBC9UL,0xF876A01DE00E41BDUL});
		public static readonly BitSet _constraint_elements_except_in_intersections8359 = new BitSet(new ulong[]{0x2UL,0x6UL});
		public static readonly BitSet _constraint_elements_in_constraint_elements_except8386 = new BitSet(new ulong[]{0x100000000002UL});
		public static readonly BitSet _EXCEPT_KW_in_constraint_elements_except8393 = new BitSet(new ulong[]{0x437E0A8101368080UL,0xEFE1A581524DFBC9UL,0xF876A01DE00E41BDUL});
		public static readonly BitSet _constraint_elements_in_constraint_elements_except8397 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _value_range_in_constraint_elements8425 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _value_in_constraint_elements8443 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SIZE_KW_in_constraint_elements8453 = new BitSet(new ulong[]{0x0UL,0x200UL});
		public static readonly BitSet _constraint_in_constraint_elements8457 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FROM_KW_in_constraint_elements8467 = new BitSet(new ulong[]{0x0UL,0x200UL});
		public static readonly BitSet _constraint_in_constraint_elements8471 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_PAREN_in_constraint_elements8481 = new BitSet(new ulong[]{0x437E0A81013680C0UL,0xEFE1A581524DFBC9UL,0xF876A01DE00E41BDUL});
		public static readonly BitSet _element_set_spec_in_constraint_elements8485 = new BitSet(new ulong[]{0x0UL,0x2000000000UL});
		public static readonly BitSet _R_PAREN_in_constraint_elements8487 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constraint_elements_includes_in_constraint_elements8499 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PATTERN_KW_in_constraint_elements8509 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_constraint_elements8513 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _WITH_KW_in_constraint_elements8524 = new BitSet(new ulong[]{0x60000000UL});
		public static readonly BitSet _COMPONENT_KW_in_constraint_elements8533 = new BitSet(new ulong[]{0x0UL,0x200UL});
		public static readonly BitSet _constraint_in_constraint_elements8537 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constraint_elements_components_in_constraint_elements8548 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _INCLUDES_KW_in_constraint_elements_includes8570 = new BitSet(new ulong[]{0x2720A8001268080UL,0x7E0A181404D4149UL,0x4804001DE0000104UL});
		public static readonly BitSet _type_in_constraint_elements_includes8580 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _COMPONENTS_KW_in_constraint_elements_components8600 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_constraint_elements_components8602 = new BitSet(new ulong[]{0x4000000000UL,0x40UL});
		public static readonly BitSet _DOTDOTDOT_in_constraint_elements_components8605 = new BitSet(new ulong[]{0x8000000UL});
		public static readonly BitSet _COMMA_in_constraint_elements_components8607 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _type_constraint_list_in_constraint_elements_components8620 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_constraint_elements_components8622 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _value_in_value_range8648 = new BitSet(new ulong[]{0x2000000000UL,0x10UL});
		public static readonly BitSet _MIN_KW_in_value_range8655 = new BitSet(new ulong[]{0x2000000000UL,0x10UL});
		public static readonly BitSet _LESS_in_value_range8663 = new BitSet(new ulong[]{0x2000000000UL});
		public static readonly BitSet _DOTDOT_in_value_range8669 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044DCD0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _LESS_in_value_range8674 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044DCC0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_value_range8685 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _MAX_KW_in_value_range8693 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _named_constraint_in_type_constraint_list8717 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _COMMA_in_type_constraint_list8724 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _named_constraint_in_type_constraint_list8728 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _LOWER_in_named_constraint8753 = new BitSet(new ulong[]{0x12UL,0x20800200UL});
		public static readonly BitSet _constraint_in_named_constraint8761 = new BitSet(new ulong[]{0x12UL,0x20800000UL});
		public static readonly BitSet _PRESENT_KW_in_named_constraint8770 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ABSENT_KW_in_named_constraint8777 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OPTIONAL_KW_in_named_constraint8784 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_choice_value8809 = new BitSet(new ulong[]{0x104080104100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _COLON_in_choice_value8816 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_choice_value8826 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_sequence_value8846 = new BitSet(new ulong[]{0x8000000UL,0x800000040UL});
		public static readonly BitSet _named_value_in_sequence_value8851 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_sequence_value8860 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _named_value_in_sequence_value8864 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_sequence_value8872 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_sequenceof_value8890 = new BitSet(new ulong[]{0x104080108100000UL,0xE04100081044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_sequenceof_value8895 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _COMMA_in_sequenceof_value8904 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_sequenceof_value8908 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_sequenceof_value8916 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _H_STRING_in_cstr_value8942 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _B_STRING_in_cstr_value8962 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_cstr_value8974 = new BitSet(new ulong[]{0x100000000UL,0x400000000088C0UL});
		public static readonly BitSet _id_list_in_cstr_value8999 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _char_defs_list_in_cstr_value9027 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _tuple_or_quad_in_cstr_value9049 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_cstr_value9072 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_id_list9090 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _COMMA_in_id_list9096 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _LOWER_in_id_list9100 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _char_defs_in_char_defs_list9125 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _COMMA_in_char_defs_list9131 = new BitSet(new ulong[]{0x100000000UL,0x400000000000C0UL});
		public static readonly BitSet _char_defs_in_char_defs_list9135 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _tuple_number_in_tuple_or_quad9161 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _quad_number_in_tuple_or_quad9170 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _signed_number_in_tuple_number9192 = new BitSet(new ulong[]{0x8000000UL});
		public static readonly BitSet _COMMA_in_tuple_number9194 = new BitSet(new ulong[]{0x0UL,0x8800UL});
		public static readonly BitSet _signed_number_in_tuple_number9198 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _signed_number_in_quad_number9220 = new BitSet(new ulong[]{0x8000000UL});
		public static readonly BitSet _COMMA_in_quad_number9222 = new BitSet(new ulong[]{0x0UL,0x8800UL});
		public static readonly BitSet _signed_number_in_quad_number9226 = new BitSet(new ulong[]{0x8000000UL});
		public static readonly BitSet _COMMA_in_quad_number9228 = new BitSet(new ulong[]{0x0UL,0x8800UL});
		public static readonly BitSet _signed_number_in_quad_number9232 = new BitSet(new ulong[]{0x8000000UL});
		public static readonly BitSet _COMMA_in_quad_number9234 = new BitSet(new ulong[]{0x0UL,0x8800UL});
		public static readonly BitSet _signed_number_in_quad_number9238 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _C_STRING_in_char_defs9263 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_char_defs9273 = new BitSet(new ulong[]{0x0UL,0x8800UL});
		public static readonly BitSet _tuple_or_quad_in_char_defs9277 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _R_BRACE_in_char_defs9279 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_value_in_char_defs9291 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_named_value9314 = new BitSet(new ulong[]{0x104080100100000UL,0xE04100001044D8C0UL,0xF872A01DE00E40BDUL});
		public static readonly BitSet _value_in_named_value9318 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_synpred1_Smi2093 = new BitSet(new ulong[]{0x0UL,0x8040UL});
		public static readonly BitSet _set_in_synpred1_Smi2095 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_value_in_synpred2_Smi2553 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _TRUE_KW_in_synpred3_Smi2815 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FALSE_KW_in_synpred4_Smi2832 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NULL_KW_in_synpred5_Smi2849 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _C_STRING_in_synpred6_Smi2866 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_value_in_synpred7_Smi2886 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _signed_number_in_synpred8_Smi2905 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _choice_value_in_synpred9_Smi2924 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _sequence_value_in_synpred10_Smi2943 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _sequenceof_value_in_synpred11_Smi2962 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _cstr_value_in_synpred12_Smi2981 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _obj_id_comp_lst_in_synpred13_Smi3000 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PLUS_INFINITY_KW_in_synpred14_Smi3019 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _MINUS_INFINITY_KW_in_synpred15_Smi3036 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _symbol_in_synpred16_Smi3050 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_synpred17_Smi3399 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _namedNumber_in_synpred17_Smi3401 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_synpred18_Smi3605 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _namedNumber_in_synpred18_Smi3607 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CHOICE_KW_in_synpred19_Smi4162 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_synpred20_Smi4297 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _RESULT_KW_in_synpred21_Smi4328 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_synpred22_Smi4346 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_synpred23_Smi4353 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ERRORS_KW_in_synpred24_Smi4389 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LINKED_KW_in_synpred25_Smi4420 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_synpred26_Smi4480 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_synpred27_Smi4897 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_synpred27_Smi4899 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_synpred28_Smi4944 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _140_in_synpred29_Smi5297 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _139_in_synpred31_Smi5743 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_synpred32_Smi5776 = new BitSet(new ulong[]{0x0UL,0x40UL});
		public static readonly BitSet _LOWER_in_synpred32_Smi5778 = new BitSet(new ulong[]{0x8000000UL,0x800000000UL});
		public static readonly BitSet _set_in_synpred32_Smi5780 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_synpred33_Smi6558 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_synpred33_Smi6560 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UPPER_in_synpred34_Smi6923 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _value_in_synpred35_Smi6937 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_synpred36_Smi7437 = new BitSet(new ulong[]{0x8000000UL,0x800000040UL});
		public static readonly BitSet _set_in_synpred36_Smi7439 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_synpred37_Smi7522 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _L_BRACE_in_synpred37_Smi7524 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_synpred38_Smi7565 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _140_in_synpred39_Smi7682 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_synpred40_Smi7770 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACKET_in_synpred41_Smi7893 = new BitSet(new ulong[]{0x0UL,0x40000000008040UL});
		public static readonly BitSet _set_in_synpred41_Smi7895 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _signed_number_in_synpred42_Smi8129 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_value_in_synpred43_Smi8161 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _value_range_in_synpred44_Smi8418 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _value_in_synpred45_Smi8436 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _H_STRING_in_synpred46_Smi8935 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _B_STRING_in_synpred47_Smi8955 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _id_list_in_synpred48_Smi8992 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _char_defs_list_in_synpred49_Smi9020 = new BitSet(new ulong[]{0x2UL});
	}
	#endregion Follow sets
}

} // namespace  Lextm.SharpSnmpLib.Mib.Ast 
