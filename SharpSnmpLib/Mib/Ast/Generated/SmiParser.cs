//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.4.1.9004
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.4.1.9004 Smi.g 2011-12-17 20:50:11

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// CLS compliance checking will not be performed on 'type' because it is not visible from outside this assembly.
#pragma warning disable 3019


#pragma warning disable 3001, 3003, 3005, 3009, 1591 


using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;


using Antlr.Runtime.Tree;
using RewriteRuleITokenStream = Antlr.Runtime.Tree.RewriteRuleTokenStream;

namespace  Lextm.SharpSnmpLib.Mib.Ast.ANTLR 
{
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.4.1.9004")]
[System.CLSCompliant(false)]
public partial class SmiParser : Antlr.Runtime.Parser
{
	internal static readonly string[] tokenNames = new string[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "ABSENT_KW", "ABSTRACT_SYNTAX_KW", "ALL_KW", "ANY_KW", "APPLICATION_KW", "ARGUMENT_KW", "ASSIGN_OP", "AUTOMATIC_KW", "BAR", "BASED_NUM_KW", "BDIG", "BEGIN_KW", "BIT_KW", "BMP_STR_KW", "BOOLEAN_KW", "BY_KW", "B_OR_H_STRING", "B_STRING", "CHARACTER_KW", "CHARB", "CHARH", "CHOICE_KW", "CLASS_KW", "COLON", "COMMA", "COMMENT", "COMPONENTS_KW", "COMPONENT_KW", "CONSTRAINED_KW", "C_STRING", "DEFAULT_KW", "DEFINED_KW", "DEFINITIONS_KW", "DOT", "DOTDOT", "DOTDOTDOT", "EMBEDDED_KW", "END_KW", "ENUMERATED_KW", "ERRORS_KW", "ERROR_KW", "EXCEPT_KW", "EXCLAMATION", "EXPLICIT_KW", "EXPORTS_KW", "EXTENSIBILITY_KW", "EXTERNAL_KW", "FALSE_KW", "FROM_KW", "GENERALIZED_TIME_KW", "GENERAL_STR_KW", "GRAPHIC_STR_KW", "HDIG", "H_STRING", "IA5_STRING_KW", "IDENTIFIER_KW", "IMPLICIT_KW", "IMPLIED_KW", "IMPORTS_KW", "INCLUDES_KW", "INSTANCE_KW", "INTEGER_KW", "INTERSECTION", "INTERSECTION_KW", "ISO646_STR_KW", "LESS", "LINKED_KW", "LOWER", "L_BRACE", "L_BRACKET", "L_PAREN", "MAX_KW", "MINUS", "MINUS_INFINITY_KW", "MIN_KW", "NULL_KW", "NUMBER", "NUMERIC_STR_KW", "OBJECT_DESCRIPTOR_KW", "OBJECT_KW", "OCTET_KW", "OF_KW", "OID_KW", "OPERATION_KW", "OPTIONAL_KW", "PARAMETER_KW", "PATTERN_KW", "PDV_KW", "PLUS", "PLUS_INFINITY_KW", "PRESENT_KW", "PRINTABLE_STR_KW", "PRIVATE_KW", "REAL_KW", "RELATIVE_KW", "RESULT_KW", "R_BRACE", "R_BRACKET", "R_PAREN", "SEMI", "SEQUENCE_KW", "SET_KW", "SINGLE_QUOTE", "SIZE_KW", "SL_COMMENT", "STRING_KW", "T61_STR_KW", "TAGS_KW", "TELETEX_STR_KW", "TRUE_KW", "TYPE_IDENTIFIER_KW", "UNION_KW", "UNIQUE_KW", "UNIVERSAL_KW", "UNIVERSAL_STR_KW", "UPPER", "UTC_TIME_KW", "UTF8_STR_KW", "VIDEOTEX_STR_KW", "VISIBLE_STR_KW", "WITH_KW", "WS", "'ABSTRACT-BIND'", "'ABSTRACT-ERROR'", "'ABSTRACT-OPERATION'", "'ABSTRACT-UNBIND'", "'ACCESS'", "'AGENT-CAPABILITIES'", "'ALGORITHM'", "'APPLICATION-CONTEXT'", "'APPLICATION-SERVICE-ELEMENT'", "'AUGMENTS'", "'BIND'", "'BITS'", "'CONTACT-INFO'", "'CREATION-REQUIRES'", "'DEFVAL'", "'DESCRIPTION'", "'DISPLAY-HINT'", "'ENCRYPTED'", "'ENTERPRISE'", "'EXTENDS'", "'EXTENSION'", "'EXTENSION-ATTRIBUTE'", "'EXTENSIONS'", "'GROUP'", "'INDEX'", "'INSTALL-ERRORS'", "'LAST-UPDATED'", "'MACRO'", "'MANDATORY-GROUPS'", "'MAX-ACCESS'", "'MIN-ACCESS'", "'MODULE'", "'MODULE-COMPLIANCE'", "'MODULE-IDENTITY'", "'NOTIFICATION-GROUP'", "'NOTIFICATION-TYPE'", "'NOTIFICATIONS'", "'OBJECT-GROUP'", "'OBJECT-IDENTITY'", "'OBJECT-TYPE'", "'OBJECTS'", "'ORGANIZATION'", "'PIB-ACCESS'", "'PIB-DEFINITIONS'", "'PIB-INDEX'", "'PIB-MIN-ACCESS'", "'PIB-REFERENCES'", "'PIB-TAG'", "'PORT'", "'PRODUCT-RELEASE'", "'PROTECTED'", "'REFERENCE'", "'REFINE'", "'RELATIVE-OID'", "'REVISION'", "'SECURITY-CATEGORY'", "'SIGNATURE'", "'SIGNED'", "'STATUS'", "'SUBJECT-CATEGORIES'", "'SUPPORTS'", "'SYNTAX'", "'TEXTUAL-CONVENTION'", "'TOKEN'", "'TOKEN-DATA'", "'TRAP-TYPE'", "'UNBIND'", "'UNIQUENESS'", "'UNITS'", "'VARIABLES'", "'VARIATION'", "'WRITE-SYNTAX'"
	};
	public const int EOF=-1;
	public const int ABSENT_KW=4;
	public const int ABSTRACT_SYNTAX_KW=5;
	public const int ALL_KW=6;
	public const int ANY_KW=7;
	public const int APPLICATION_KW=8;
	public const int ARGUMENT_KW=9;
	public const int ASSIGN_OP=10;
	public const int AUTOMATIC_KW=11;
	public const int BAR=12;
	public const int BASED_NUM_KW=13;
	public const int BDIG=14;
	public const int BEGIN_KW=15;
	public const int BIT_KW=16;
	public const int BMP_STR_KW=17;
	public const int BOOLEAN_KW=18;
	public const int BY_KW=19;
	public const int B_OR_H_STRING=20;
	public const int B_STRING=21;
	public const int CHARACTER_KW=22;
	public const int CHARB=23;
	public const int CHARH=24;
	public const int CHOICE_KW=25;
	public const int CLASS_KW=26;
	public const int COLON=27;
	public const int COMMA=28;
	public const int COMMENT=29;
	public const int COMPONENTS_KW=30;
	public const int COMPONENT_KW=31;
	public const int CONSTRAINED_KW=32;
	public const int C_STRING=33;
	public const int DEFAULT_KW=34;
	public const int DEFINED_KW=35;
	public const int DEFINITIONS_KW=36;
	public const int DOT=37;
	public const int DOTDOT=38;
	public const int DOTDOTDOT=39;
	public const int EMBEDDED_KW=40;
	public const int END_KW=41;
	public const int ENUMERATED_KW=42;
	public const int ERRORS_KW=43;
	public const int ERROR_KW=44;
	public const int EXCEPT_KW=45;
	public const int EXCLAMATION=46;
	public const int EXPLICIT_KW=47;
	public const int EXPORTS_KW=48;
	public const int EXTENSIBILITY_KW=49;
	public const int EXTERNAL_KW=50;
	public const int FALSE_KW=51;
	public const int FROM_KW=52;
	public const int GENERALIZED_TIME_KW=53;
	public const int GENERAL_STR_KW=54;
	public const int GRAPHIC_STR_KW=55;
	public const int HDIG=56;
	public const int H_STRING=57;
	public const int IA5_STRING_KW=58;
	public const int IDENTIFIER_KW=59;
	public const int IMPLICIT_KW=60;
	public const int IMPLIED_KW=61;
	public const int IMPORTS_KW=62;
	public const int INCLUDES_KW=63;
	public const int INSTANCE_KW=64;
	public const int INTEGER_KW=65;
	public const int INTERSECTION=66;
	public const int INTERSECTION_KW=67;
	public const int ISO646_STR_KW=68;
	public const int LESS=69;
	public const int LINKED_KW=70;
	public const int LOWER=71;
	public const int L_BRACE=72;
	public const int L_BRACKET=73;
	public const int L_PAREN=74;
	public const int MAX_KW=75;
	public const int MINUS=76;
	public const int MINUS_INFINITY_KW=77;
	public const int MIN_KW=78;
	public const int NULL_KW=79;
	public const int NUMBER=80;
	public const int NUMERIC_STR_KW=81;
	public const int OBJECT_DESCRIPTOR_KW=82;
	public const int OBJECT_KW=83;
	public const int OCTET_KW=84;
	public const int OF_KW=85;
	public const int OID_KW=86;
	public const int OPERATION_KW=87;
	public const int OPTIONAL_KW=88;
	public const int PARAMETER_KW=89;
	public const int PATTERN_KW=90;
	public const int PDV_KW=91;
	public const int PLUS=92;
	public const int PLUS_INFINITY_KW=93;
	public const int PRESENT_KW=94;
	public const int PRINTABLE_STR_KW=95;
	public const int PRIVATE_KW=96;
	public const int REAL_KW=97;
	public const int RELATIVE_KW=98;
	public const int RESULT_KW=99;
	public const int R_BRACE=100;
	public const int R_BRACKET=101;
	public const int R_PAREN=102;
	public const int SEMI=103;
	public const int SEQUENCE_KW=104;
	public const int SET_KW=105;
	public const int SINGLE_QUOTE=106;
	public const int SIZE_KW=107;
	public const int SL_COMMENT=108;
	public const int STRING_KW=109;
	public const int T61_STR_KW=110;
	public const int TAGS_KW=111;
	public const int TELETEX_STR_KW=112;
	public const int TRUE_KW=113;
	public const int TYPE_IDENTIFIER_KW=114;
	public const int UNION_KW=115;
	public const int UNIQUE_KW=116;
	public const int UNIVERSAL_KW=117;
	public const int UNIVERSAL_STR_KW=118;
	public const int UPPER=119;
	public const int UTC_TIME_KW=120;
	public const int UTF8_STR_KW=121;
	public const int VIDEOTEX_STR_KW=122;
	public const int VISIBLE_STR_KW=123;
	public const int WITH_KW=124;
	public const int WS=125;
	public const int T__126=126;
	public const int T__127=127;
	public const int T__128=128;
	public const int T__129=129;
	public const int T__130=130;
	public const int T__131=131;
	public const int T__132=132;
	public const int T__133=133;
	public const int T__134=134;
	public const int T__135=135;
	public const int T__136=136;
	public const int T__137=137;
	public const int T__138=138;
	public const int T__139=139;
	public const int T__140=140;
	public const int T__141=141;
	public const int T__142=142;
	public const int T__143=143;
	public const int T__144=144;
	public const int T__145=145;
	public const int T__146=146;
	public const int T__147=147;
	public const int T__148=148;
	public const int T__149=149;
	public const int T__150=150;
	public const int T__151=151;
	public const int T__152=152;
	public const int T__153=153;
	public const int T__154=154;
	public const int T__155=155;
	public const int T__156=156;
	public const int T__157=157;
	public const int T__158=158;
	public const int T__159=159;
	public const int T__160=160;
	public const int T__161=161;
	public const int T__162=162;
	public const int T__163=163;
	public const int T__164=164;
	public const int T__165=165;
	public const int T__166=166;
	public const int T__167=167;
	public const int T__168=168;
	public const int T__169=169;
	public const int T__170=170;
	public const int T__171=171;
	public const int T__172=172;
	public const int T__173=173;
	public const int T__174=174;
	public const int T__175=175;
	public const int T__176=176;
	public const int T__177=177;
	public const int T__178=178;
	public const int T__179=179;
	public const int T__180=180;
	public const int T__181=181;
	public const int T__182=182;
	public const int T__183=183;
	public const int T__184=184;
	public const int T__185=185;
	public const int T__186=186;
	public const int T__187=187;
	public const int T__188=188;
	public const int T__189=189;
	public const int T__190=190;
	public const int T__191=191;
	public const int T__192=192;
	public const int T__193=193;
	public const int T__194=194;
	public const int T__195=195;
	public const int T__196=196;
	public const int T__197=197;

	public SmiParser(ITokenStream input)
		: this(input, new RecognizerSharedState())
	{
	}
	public SmiParser(ITokenStream input, RecognizerSharedState state)
		: base(input, state)
	{
		ITreeAdaptor treeAdaptor = default(ITreeAdaptor);
		CreateTreeAdaptor(ref treeAdaptor);
		TreeAdaptor = treeAdaptor ?? new CommonTreeAdaptor();
		OnCreated();
	}
	// Implement this function in your helper file to use a custom tree adaptor
	partial void CreateTreeAdaptor(ref ITreeAdaptor adaptor);

	private ITreeAdaptor adaptor;

	public ITreeAdaptor TreeAdaptor
	{
		get
		{
			return adaptor;
		}

		set
		{
			this.adaptor = value;
		}
	}

	public override string[] TokenNames { get { return SmiParser.tokenNames; } }
	public override string GrammarFileName { get { return "Smi.g"; } }


		private MibDocument doc = new MibDocument();

		public MibDocument GetDocument()
		{
		    statement();
		    return doc;
		}


	partial void OnCreated();
	partial void EnterRule(string ruleName, int ruleIndex);
	partial void LeaveRule(string ruleName, int ruleIndex);

	#region Rules
	partial void EnterRule_statement();
	partial void LeaveRule_statement();
	// $ANTLR start "statement"
	// Smi.g:603:1: statement : (mod= module_definition )* EOF ;
	[GrammarRule("statement")]
	private AstParserRuleReturnScope<CommonTree, IToken> statement()
	{
		EnterRule_statement();
		EnterRule("statement", 1);
		TraceIn("statement", 1);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken EOF1 = default(IToken);
		SmiParser.module_definition_return mod = default(SmiParser.module_definition_return);

		CommonTree EOF1_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "statement");
		DebugLocation(603, 1);
		try
		{
			// Smi.g:604:5: ( (mod= module_definition )* EOF )
			DebugEnterAlt(1);
			// Smi.g:604:7: (mod= module_definition )* EOF
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(604, 7);
			// Smi.g:604:7: (mod= module_definition )*
			try { DebugEnterSubRule(1);
			while (true)
			{
				int alt1=2;
				try { DebugEnterDecision(1, false);
				int LA1_1 = input.LA(1);

				if ((LA1_1==UPPER))
				{
					alt1 = 1;
				}


				} finally { DebugExitDecision(1); }
				switch ( alt1 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:604:8: mod= module_definition
					{
					DebugLocation(604, 11);
					PushFollow(Follow._module_definition_in_statement1872);
					mod=module_definition();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, mod.Tree);
					DebugLocation(604, 30);
					if (state.backtracking == 0)
					{
						doc.Add(mod.result);
					}

					}
					break;

				default:
					goto loop1;
				}
			}

			loop1:
				;

			} finally { DebugExitSubRule(1); }

			DebugLocation(604, 55);
			EOF1=(IToken)Match(input,EOF,Follow._EOF_in_statement1878); if (state.failed) return retval;
			if (state.backtracking == 0) {
			EOF1_tree = (CommonTree)adaptor.Create(EOF1);
			adaptor.AddChild(root_0, EOF1_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("statement", 1);
			LeaveRule("statement", 1);
			LeaveRule_statement();
		}
		DebugLocation(605, 1);
		} finally { DebugExitRule(GrammarFileName, "statement"); }
		return retval;

	}
	// $ANTLR end "statement"

	private sealed partial class module_definition_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public MibModule result;
		public module_definition_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_module_definition();
	partial void LeaveRule_module_definition();
	// $ANTLR start "module_definition"
	// Smi.g:610:1: module_definition returns [MibModule result] : name= module_identifier ( 'PIB-DEFINITIONS' | DEFINITIONS_KW ) ( ( EXPLICIT_KW | IMPLICIT_KW | AUTOMATIC_KW ) TAGS_KW )? ( EXTENSIBILITY_KW IMPLIED_KW )? ASSIGN_OP BEGIN_KW mod= module_body END_KW ;
	[GrammarRule("module_definition")]
	private SmiParser.module_definition_return module_definition()
	{
		EnterRule_module_definition();
		EnterRule("module_definition", 2);
		TraceIn("module_definition", 2);
		SmiParser.module_definition_return retval = new SmiParser.module_definition_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken set2 = default(IToken);
		IToken set3 = default(IToken);
		IToken TAGS_KW4 = default(IToken);
		IToken EXTENSIBILITY_KW5 = default(IToken);
		IToken IMPLIED_KW6 = default(IToken);
		IToken ASSIGN_OP7 = default(IToken);
		IToken BEGIN_KW8 = default(IToken);
		IToken END_KW9 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> name = default(AstParserRuleReturnScope<CommonTree, IToken>);
		SmiParser.module_body_return mod = default(SmiParser.module_body_return);

		CommonTree set2_tree = default(CommonTree);
		CommonTree set3_tree = default(CommonTree);
		CommonTree TAGS_KW4_tree = default(CommonTree);
		CommonTree EXTENSIBILITY_KW5_tree = default(CommonTree);
		CommonTree IMPLIED_KW6_tree = default(CommonTree);
		CommonTree ASSIGN_OP7_tree = default(CommonTree);
		CommonTree BEGIN_KW8_tree = default(CommonTree);
		CommonTree END_KW9_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "module_definition");
		DebugLocation(610, 4);
		try
		{
			// Smi.g:611:5: (name= module_identifier ( 'PIB-DEFINITIONS' | DEFINITIONS_KW ) ( ( EXPLICIT_KW | IMPLICIT_KW | AUTOMATIC_KW ) TAGS_KW )? ( EXTENSIBILITY_KW IMPLIED_KW )? ASSIGN_OP BEGIN_KW mod= module_body END_KW )
			DebugEnterAlt(1);
			// Smi.g:611:7: name= module_identifier ( 'PIB-DEFINITIONS' | DEFINITIONS_KW ) ( ( EXPLICIT_KW | IMPLICIT_KW | AUTOMATIC_KW ) TAGS_KW )? ( EXTENSIBILITY_KW IMPLIED_KW )? ASSIGN_OP BEGIN_KW mod= module_body END_KW
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(611, 11);
			PushFollow(Follow._module_identifier_in_module_definition1903);
			name=module_identifier();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, name.Tree);
			DebugLocation(611, 30);

			set2=(IToken)input.LT(1);
			if (input.LA(1)==DEFINITIONS_KW||input.LA(1)==169)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set2));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}

			DebugLocation(612, 3);
			// Smi.g:612:3: ( ( EXPLICIT_KW | IMPLICIT_KW | AUTOMATIC_KW ) TAGS_KW )?
			int alt2=2;
			try { DebugEnterSubRule(2);
			try { DebugEnterDecision(2, false);
			int LA2_1 = input.LA(1);

			if ((LA2_1==AUTOMATIC_KW||LA2_1==EXPLICIT_KW||LA2_1==IMPLICIT_KW))
			{
				alt2 = 1;
			}
			} finally { DebugExitDecision(2); }
			switch (alt2)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:612:5: ( EXPLICIT_KW | IMPLICIT_KW | AUTOMATIC_KW ) TAGS_KW
				{
				DebugLocation(612, 5);

				set3=(IToken)input.LT(1);
				if (input.LA(1)==AUTOMATIC_KW||input.LA(1)==EXPLICIT_KW||input.LA(1)==IMPLICIT_KW)
				{
					input.Consume();
					if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set3));
					state.errorRecovery=false;state.failed=false;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					DebugRecognitionException(mse);
					throw mse;
				}

				DebugLocation(612, 48);
				TAGS_KW4=(IToken)Match(input,TAGS_KW,Follow._TAGS_KW_in_module_definition1930); if (state.failed) return retval;
				if (state.backtracking == 0) {
				TAGS_KW4_tree = (CommonTree)adaptor.Create(TAGS_KW4);
				adaptor.AddChild(root_0, TAGS_KW4_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(2); }

			DebugLocation(613, 3);
			// Smi.g:613:3: ( EXTENSIBILITY_KW IMPLIED_KW )?
			int alt3=2;
			try { DebugEnterSubRule(3);
			try { DebugEnterDecision(3, false);
			int LA3_1 = input.LA(1);

			if ((LA3_1==EXTENSIBILITY_KW))
			{
				alt3 = 1;
			}
			} finally { DebugExitDecision(3); }
			switch (alt3)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:613:4: EXTENSIBILITY_KW IMPLIED_KW
				{
				DebugLocation(613, 4);
				EXTENSIBILITY_KW5=(IToken)Match(input,EXTENSIBILITY_KW,Follow._EXTENSIBILITY_KW_in_module_definition1939); if (state.failed) return retval;
				if (state.backtracking == 0) {
				EXTENSIBILITY_KW5_tree = (CommonTree)adaptor.Create(EXTENSIBILITY_KW5);
				adaptor.AddChild(root_0, EXTENSIBILITY_KW5_tree);
				}
				DebugLocation(613, 21);
				IMPLIED_KW6=(IToken)Match(input,IMPLIED_KW,Follow._IMPLIED_KW_in_module_definition1941); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IMPLIED_KW6_tree = (CommonTree)adaptor.Create(IMPLIED_KW6);
				adaptor.AddChild(root_0, IMPLIED_KW6_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(3); }

			DebugLocation(614, 3);
			ASSIGN_OP7=(IToken)Match(input,ASSIGN_OP,Follow._ASSIGN_OP_in_module_definition1947); if (state.failed) return retval;
			if (state.backtracking == 0) {
			ASSIGN_OP7_tree = (CommonTree)adaptor.Create(ASSIGN_OP7);
			adaptor.AddChild(root_0, ASSIGN_OP7_tree);
			}
			DebugLocation(614, 13);
			BEGIN_KW8=(IToken)Match(input,BEGIN_KW,Follow._BEGIN_KW_in_module_definition1949); if (state.failed) return retval;
			if (state.backtracking == 0) {
			BEGIN_KW8_tree = (CommonTree)adaptor.Create(BEGIN_KW8);
			adaptor.AddChild(root_0, BEGIN_KW8_tree);
			}
			DebugLocation(614, 25);
			PushFollow(Follow._module_body_in_module_definition1953);
			mod=module_body();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, mod.Tree);
			DebugLocation(614, 38);
			END_KW9=(IToken)Match(input,END_KW,Follow._END_KW_in_module_definition1955); if (state.failed) return retval;
			if (state.backtracking == 0) {
			END_KW9_tree = (CommonTree)adaptor.Create(END_KW9);
			adaptor.AddChild(root_0, END_KW9_tree);
			}
			DebugLocation(615, 3);
			if (state.backtracking == 0)
			{

						    retval.result = (mod!=null?mod.result:default(MibModule)); 
							retval.result.Name = (name!=null?input.ToString(name.Start,name.Stop):null);
						
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("module_definition", 2);
			LeaveRule("module_definition", 2);
			LeaveRule_module_definition();
		}
		DebugLocation(619, 4);
		} finally { DebugExitRule(GrammarFileName, "module_definition"); }
		return retval;

	}
	// $ANTLR end "module_definition"

	partial void EnterRule_module_identifier();
	partial void LeaveRule_module_identifier();
	// $ANTLR start "module_identifier"
	// Smi.g:621:1: module_identifier : UPPER ( obj_id_comp_lst )? ;
	[GrammarRule("module_identifier")]
	private AstParserRuleReturnScope<CommonTree, IToken> module_identifier()
	{
		EnterRule_module_identifier();
		EnterRule("module_identifier", 3);
		TraceIn("module_identifier", 3);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken UPPER10 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> obj_id_comp_lst11 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree UPPER10_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "module_identifier");
		DebugLocation(621, 44);
		try
		{
			// Smi.g:621:18: ( UPPER ( obj_id_comp_lst )? )
			DebugEnterAlt(1);
			// Smi.g:621:20: UPPER ( obj_id_comp_lst )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(621, 20);
			UPPER10=(IToken)Match(input,UPPER,Follow._UPPER_in_module_identifier1972); if (state.failed) return retval;
			if (state.backtracking == 0) {
			UPPER10_tree = (CommonTree)adaptor.Create(UPPER10);
			adaptor.AddChild(root_0, UPPER10_tree);
			}
			DebugLocation(621, 26);
			// Smi.g:621:26: ( obj_id_comp_lst )?
			int alt4=2;
			try { DebugEnterSubRule(4);
			try { DebugEnterDecision(4, false);
			int LA4_1 = input.LA(1);

			if ((LA4_1==L_BRACE))
			{
				alt4 = 1;
			}
			} finally { DebugExitDecision(4); }
			switch (alt4)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:621:27: obj_id_comp_lst
				{
				DebugLocation(621, 27);
				PushFollow(Follow._obj_id_comp_lst_in_module_identifier1975);
				obj_id_comp_lst11=obj_id_comp_lst();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, obj_id_comp_lst11.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(4); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("module_identifier", 3);
			LeaveRule("module_identifier", 3);
			LeaveRule_module_identifier();
		}
		DebugLocation(621, 44);
		} finally { DebugExitRule(GrammarFileName, "module_identifier"); }
		return retval;

	}
	// $ANTLR end "module_identifier"

	private sealed partial class module_body_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public MibModule result;
		public module_body_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_module_body();
	partial void LeaveRule_module_body();
	// $ANTLR start "module_body"
	// Smi.g:623:1: module_body returns [MibModule result] : (ex= exports )? (im= imports )? (a= assignment )* ;
	[GrammarRule("module_body")]
	private SmiParser.module_body_return module_body()
	{
		EnterRule_module_body();
		EnterRule("module_body", 4);
		TraceIn("module_body", 4);
		SmiParser.module_body_return retval = new SmiParser.module_body_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		SmiParser.exports_return ex = default(SmiParser.exports_return);
		SmiParser.imports_return im = default(SmiParser.imports_return);
		SmiParser.assignment_return a = default(SmiParser.assignment_return);

		try { DebugEnterRule(GrammarFileName, "module_body");
		DebugLocation(623, 55);
		try
		{
			// Smi.g:624:5: ( (ex= exports )? (im= imports )? (a= assignment )* )
			DebugEnterAlt(1);
			// Smi.g:624:7: (ex= exports )? (im= imports )? (a= assignment )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(624, 7);
			if (state.backtracking == 0)
			{
				 retval.result = new MibModule(); 
			}
			DebugLocation(625, 2);
			// Smi.g:625:2: (ex= exports )?
			int alt5=2;
			try { DebugEnterSubRule(5);
			try { DebugEnterDecision(5, false);
			int LA5_1 = input.LA(1);

			if ((LA5_1==EXPORTS_KW))
			{
				alt5 = 1;
			}
			} finally { DebugExitDecision(5); }
			switch (alt5)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:625:3: ex= exports
				{
				DebugLocation(625, 5);
				PushFollow(Follow._exports_in_module_body2000);
				ex=exports();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, ex.Tree);
				DebugLocation(625, 14);
				if (state.backtracking == 0)
				{
					 retval.result.Exports = (ex!=null?ex.result:default(Exports)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(5); }

			DebugLocation(626, 2);
			// Smi.g:626:2: (im= imports )?
			int alt6=2;
			try { DebugEnterSubRule(6);
			try { DebugEnterDecision(6, false);
			int LA6_1 = input.LA(1);

			if ((LA6_1==IMPORTS_KW))
			{
				alt6 = 1;
			}
			} finally { DebugExitDecision(6); }
			switch (alt6)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:626:3: im= imports
				{
				DebugLocation(626, 5);
				PushFollow(Follow._imports_in_module_body2011);
				im=imports();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, im.Tree);
				DebugLocation(626, 14);
				if (state.backtracking == 0)
				{
					 retval.result.Imports = (im!=null?im.result:default(Imports)); 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(6); }

			DebugLocation(627, 2);
			// Smi.g:627:2: (a= assignment )*
			try { DebugEnterSubRule(7);
			while (true)
			{
				int alt7=2;
				try { DebugEnterDecision(7, false);
				int LA7_1 = input.LA(1);

				if ((LA7_1==ERROR_KW||LA7_1==LOWER||LA7_1==OBJECT_KW||LA7_1==OPERATION_KW||LA7_1==UPPER||(LA7_1>=126 && LA7_1<=129)||(LA7_1>=131 && LA7_1<=134)||LA7_1==136||LA7_1==143||(LA7_1>=146 && LA7_1<=148)||(LA7_1>=158 && LA7_1<=161)||(LA7_1>=163 && LA7_1<=165)||LA7_1==174||LA7_1==176||LA7_1==178||(LA7_1>=181 && LA7_1<=183)||(LA7_1>=188 && LA7_1<=192)))
				{
					alt7 = 1;
				}


				} finally { DebugExitDecision(7); }
				switch ( alt7 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:627:3: a= assignment
					{
					DebugLocation(627, 4);
					PushFollow(Follow._assignment_in_module_body2022);
					a=assignment();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, a.Tree);
					DebugLocation(627, 16);
					if (state.backtracking == 0)
					{
						 retval.result.AddAssignment((a!=null?a.result:default(Assignment))); 
					}

					}
					break;

				default:
					goto loop7;
				}
			}

			loop7:
				;

			} finally { DebugExitSubRule(7); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("module_body", 4);
			LeaveRule("module_body", 4);
			LeaveRule_module_body();
		}
		DebugLocation(627, 55);
		} finally { DebugExitRule(GrammarFileName, "module_body"); }
		return retval;

	}
	// $ANTLR end "module_body"

	partial void EnterRule_obj_id_comp_lst();
	partial void LeaveRule_obj_id_comp_lst();
	// $ANTLR start "obj_id_comp_lst"
	// Smi.g:630:1: obj_id_comp_lst : L_BRACE ( ( LOWER ( LOWER | NUMBER ) )=> defined_value )? ( obj_id_component )+ R_BRACE ;
	[GrammarRule("obj_id_comp_lst")]
	private AstParserRuleReturnScope<CommonTree, IToken> obj_id_comp_lst()
	{
		EnterRule_obj_id_comp_lst();
		EnterRule("obj_id_comp_lst", 5);
		TraceIn("obj_id_comp_lst", 5);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE12 = default(IToken);
		IToken R_BRACE15 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> defined_value13 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> obj_id_component14 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree L_BRACE12_tree = default(CommonTree);
		CommonTree R_BRACE15_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "obj_id_comp_lst");
		DebugLocation(630, 95);
		try
		{
			// Smi.g:630:16: ( L_BRACE ( ( LOWER ( LOWER | NUMBER ) )=> defined_value )? ( obj_id_component )+ R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:630:18: L_BRACE ( ( LOWER ( LOWER | NUMBER ) )=> defined_value )? ( obj_id_component )+ R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(630, 18);
			L_BRACE12=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_obj_id_comp_lst2036); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE12_tree = (CommonTree)adaptor.Create(L_BRACE12);
			adaptor.AddChild(root_0, L_BRACE12_tree);
			}
			DebugLocation(630, 26);
			// Smi.g:630:26: ( ( LOWER ( LOWER | NUMBER ) )=> defined_value )?
			int alt8=2;
			try { DebugEnterSubRule(8);
			try { DebugEnterDecision(8, false);
			int LA8_1 = input.LA(1);

			if ((LA8_1==UPPER) && (EvaluatePredicate(synpred1_Smi_fragment)))
			{
				alt8 = 1;
			}
			else if ((LA8_1==LOWER))
			{
				int LA8_2 = input.LA(2);

				if ((EvaluatePredicate(synpred1_Smi_fragment)))
				{
					alt8 = 1;
				}
			}
			} finally { DebugExitDecision(8); }
			switch (alt8)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:630:27: ( LOWER ( LOWER | NUMBER ) )=> defined_value
				{
				DebugLocation(630, 53);
				PushFollow(Follow._defined_value_in_obj_id_comp_lst2051);
				defined_value13=defined_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, defined_value13.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(8); }

			DebugLocation(630, 69);
			// Smi.g:630:69: ( obj_id_component )+
			int cnt9=0;
			try { DebugEnterSubRule(9);
			while (true)
			{
				int alt9=2;
				try { DebugEnterDecision(9, false);
				int LA9_1 = input.LA(1);

				if ((LA9_1==LOWER||LA9_1==NUMBER))
				{
					alt9 = 1;
				}


				} finally { DebugExitDecision(9); }
				switch (alt9)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:630:70: obj_id_component
					{
					DebugLocation(630, 70);
					PushFollow(Follow._obj_id_component_in_obj_id_comp_lst2056);
					obj_id_component14=obj_id_component();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, obj_id_component14.Tree);

					}
					break;

				default:
					if (cnt9 >= 1)
						goto loop9;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee9 = new EarlyExitException( 9, input );
					DebugRecognitionException(eee9);
					throw eee9;
				}
				cnt9++;
			}
			loop9:
				;

			} finally { DebugExitSubRule(9); }

			DebugLocation(630, 89);
			R_BRACE15=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_obj_id_comp_lst2060); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE15_tree = (CommonTree)adaptor.Create(R_BRACE15);
			adaptor.AddChild(root_0, R_BRACE15_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("obj_id_comp_lst", 5);
			LeaveRule("obj_id_comp_lst", 5);
			LeaveRule_obj_id_comp_lst();
		}
		DebugLocation(630, 95);
		} finally { DebugExitRule(GrammarFileName, "obj_id_comp_lst"); }
		return retval;

	}
	// $ANTLR end "obj_id_comp_lst"

	partial void EnterRule_defined_value();
	partial void LeaveRule_defined_value();
	// $ANTLR start "defined_value"
	// Smi.g:633:11: protected defined_value : ( UPPER DOT )? LOWER ;
	[GrammarRule("defined_value")]
	protected AstParserRuleReturnScope<CommonTree, IToken> defined_value()
	{
		EnterRule_defined_value();
		EnterRule("defined_value", 6);
		TraceIn("defined_value", 6);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken UPPER16 = default(IToken);
		IToken DOT17 = default(IToken);
		IToken LOWER18 = default(IToken);

		CommonTree UPPER16_tree = default(CommonTree);
		CommonTree DOT17_tree = default(CommonTree);
		CommonTree LOWER18_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "defined_value");
		DebugLocation(633, 44);
		try
		{
			// Smi.g:633:24: ( ( UPPER DOT )? LOWER )
			DebugEnterAlt(1);
			// Smi.g:633:26: ( UPPER DOT )? LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(633, 26);
			// Smi.g:633:26: ( UPPER DOT )?
			int alt10=2;
			try { DebugEnterSubRule(10);
			try { DebugEnterDecision(10, false);
			int LA10_1 = input.LA(1);

			if ((LA10_1==UPPER))
			{
				alt10 = 1;
			}
			} finally { DebugExitDecision(10); }
			switch (alt10)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:633:27: UPPER DOT
				{
				DebugLocation(633, 27);
				UPPER16=(IToken)Match(input,UPPER,Follow._UPPER_in_defined_value2071); if (state.failed) return retval;
				if (state.backtracking == 0) {
				UPPER16_tree = (CommonTree)adaptor.Create(UPPER16);
				adaptor.AddChild(root_0, UPPER16_tree);
				}
				DebugLocation(633, 33);
				DOT17=(IToken)Match(input,DOT,Follow._DOT_in_defined_value2073); if (state.failed) return retval;
				if (state.backtracking == 0) {
				DOT17_tree = (CommonTree)adaptor.Create(DOT17);
				adaptor.AddChild(root_0, DOT17_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(10); }

			DebugLocation(633, 39);
			LOWER18=(IToken)Match(input,LOWER,Follow._LOWER_in_defined_value2077); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LOWER18_tree = (CommonTree)adaptor.Create(LOWER18);
			adaptor.AddChild(root_0, LOWER18_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("defined_value", 6);
			LeaveRule("defined_value", 6);
			LeaveRule_defined_value();
		}
		DebugLocation(633, 44);
		} finally { DebugExitRule(GrammarFileName, "defined_value"); }
		return retval;

	}
	// $ANTLR end "defined_value"

	partial void EnterRule_obj_id_component();
	partial void LeaveRule_obj_id_component();
	// $ANTLR start "obj_id_component"
	// Smi.g:636:1: obj_id_component : ( NUMBER | LOWER ( L_PAREN NUMBER R_PAREN )? );
	[GrammarRule("obj_id_component")]
	private AstParserRuleReturnScope<CommonTree, IToken> obj_id_component()
	{
		EnterRule_obj_id_component();
		EnterRule("obj_id_component", 7);
		TraceIn("obj_id_component", 7);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken NUMBER19 = default(IToken);
		IToken LOWER20 = default(IToken);
		IToken L_PAREN21 = default(IToken);
		IToken NUMBER22 = default(IToken);
		IToken R_PAREN23 = default(IToken);

		CommonTree NUMBER19_tree = default(CommonTree);
		CommonTree LOWER20_tree = default(CommonTree);
		CommonTree L_PAREN21_tree = default(CommonTree);
		CommonTree NUMBER22_tree = default(CommonTree);
		CommonTree R_PAREN23_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "obj_id_component");
		DebugLocation(636, 49);
		try
		{
			// Smi.g:636:17: ( NUMBER | LOWER ( L_PAREN NUMBER R_PAREN )? )
			int alt12=2;
			try { DebugEnterDecision(12, false);
			int LA12_1 = input.LA(1);

			if ((LA12_1==NUMBER))
			{
				alt12 = 1;
			}
			else if ((LA12_1==LOWER))
			{
				alt12 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 12, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(12); }
			switch (alt12)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:636:19: NUMBER
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(636, 19);
				NUMBER19=(IToken)Match(input,NUMBER,Follow._NUMBER_in_obj_id_component2087); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NUMBER19_tree = (CommonTree)adaptor.Create(NUMBER19);
				adaptor.AddChild(root_0, NUMBER19_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:637:19: LOWER ( L_PAREN NUMBER R_PAREN )?
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(637, 19);
				LOWER20=(IToken)Match(input,LOWER,Follow._LOWER_in_obj_id_component2108); if (state.failed) return retval;
				if (state.backtracking == 0) {
				LOWER20_tree = (CommonTree)adaptor.Create(LOWER20);
				adaptor.AddChild(root_0, LOWER20_tree);
				}
				DebugLocation(637, 25);
				// Smi.g:637:25: ( L_PAREN NUMBER R_PAREN )?
				int alt11=2;
				try { DebugEnterSubRule(11);
				try { DebugEnterDecision(11, false);
				int LA11_1 = input.LA(1);

				if ((LA11_1==L_PAREN))
				{
					alt11 = 1;
				}
				} finally { DebugExitDecision(11); }
				switch (alt11)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:637:26: L_PAREN NUMBER R_PAREN
					{
					DebugLocation(637, 26);
					L_PAREN21=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_obj_id_component2111); if (state.failed) return retval;
					if (state.backtracking == 0) {
					L_PAREN21_tree = (CommonTree)adaptor.Create(L_PAREN21);
					adaptor.AddChild(root_0, L_PAREN21_tree);
					}
					DebugLocation(637, 34);
					NUMBER22=(IToken)Match(input,NUMBER,Follow._NUMBER_in_obj_id_component2113); if (state.failed) return retval;
					if (state.backtracking == 0) {
					NUMBER22_tree = (CommonTree)adaptor.Create(NUMBER22);
					adaptor.AddChild(root_0, NUMBER22_tree);
					}
					DebugLocation(637, 41);
					R_PAREN23=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_obj_id_component2115); if (state.failed) return retval;
					if (state.backtracking == 0) {
					R_PAREN23_tree = (CommonTree)adaptor.Create(R_PAREN23);
					adaptor.AddChild(root_0, R_PAREN23_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(11); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("obj_id_component", 7);
			LeaveRule("obj_id_component", 7);
			LeaveRule_obj_id_component();
		}
		DebugLocation(637, 49);
		} finally { DebugExitRule(GrammarFileName, "obj_id_component"); }
		return retval;

	}
	// $ANTLR end "obj_id_component"

	partial void EnterRule_tag_default();
	partial void LeaveRule_tag_default();
	// $ANTLR start "tag_default"
	// Smi.g:643:1: tag_default : ( EXPLICIT_KW | IMPLICIT_KW | AUTOMATIC_KW );
	[GrammarRule("tag_default")]
	private AstParserRuleReturnScope<CommonTree, IToken> tag_default()
	{
		EnterRule_tag_default();
		EnterRule("tag_default", 8);
		TraceIn("tag_default", 8);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken set24 = default(IToken);

		CommonTree set24_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "tag_default");
		DebugLocation(643, 53);
		try
		{
			// Smi.g:643:12: ( EXPLICIT_KW | IMPLICIT_KW | AUTOMATIC_KW )
			DebugEnterAlt(1);
			// Smi.g:
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(643, 12);

			set24=(IToken)input.LT(1);
			if (input.LA(1)==AUTOMATIC_KW||input.LA(1)==EXPLICIT_KW||input.LA(1)==IMPLICIT_KW)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set24));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("tag_default", 8);
			LeaveRule("tag_default", 8);
			LeaveRule_tag_default();
		}
		DebugLocation(643, 53);
		} finally { DebugExitRule(GrammarFileName, "tag_default"); }
		return retval;

	}
	// $ANTLR end "tag_default"

	private sealed partial class exports_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public Exports result;
		public exports_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_exports();
	partial void LeaveRule_exports();
	// $ANTLR start "exports"
	// Smi.g:645:1: exports returns [Exports result] : EXPORTS_KW ( (sym= symbol_list )? | ALL_KW ) SEMI ;
	[GrammarRule("exports")]
	private SmiParser.exports_return exports()
	{
		EnterRule_exports();
		EnterRule("exports", 9);
		TraceIn("exports", 9);
		SmiParser.exports_return retval = new SmiParser.exports_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken EXPORTS_KW25 = default(IToken);
		IToken ALL_KW26 = default(IToken);
		IToken SEMI27 = default(IToken);
		SmiParser.symbol_list_return sym = default(SmiParser.symbol_list_return);

		CommonTree EXPORTS_KW25_tree = default(CommonTree);
		CommonTree ALL_KW26_tree = default(CommonTree);
		CommonTree SEMI27_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "exports");
		DebugLocation(645, 10);
		try
		{
			// Smi.g:646:5: ( EXPORTS_KW ( (sym= symbol_list )? | ALL_KW ) SEMI )
			DebugEnterAlt(1);
			// Smi.g:646:7: EXPORTS_KW ( (sym= symbol_list )? | ALL_KW ) SEMI
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(646, 7);
			if (state.backtracking == 0)
			{
				 retval.result = new Exports(); 
			}
			DebugLocation(647, 2);
			EXPORTS_KW25=(IToken)Match(input,EXPORTS_KW,Follow._EXPORTS_KW_in_exports2155); if (state.failed) return retval;
			if (state.backtracking == 0) {
			EXPORTS_KW25_tree = (CommonTree)adaptor.Create(EXPORTS_KW25);
			adaptor.AddChild(root_0, EXPORTS_KW25_tree);
			}
			DebugLocation(647, 13);
			// Smi.g:647:13: ( (sym= symbol_list )? | ALL_KW )
			int alt14=2;
			try { DebugEnterSubRule(14);
			try { DebugEnterDecision(14, false);
			int LA14_1 = input.LA(1);

			if ((LA14_1==ERROR_KW||LA14_1==LOWER||LA14_1==OBJECT_KW||LA14_1==OPERATION_KW||LA14_1==SEMI||LA14_1==UPPER||(LA14_1>=126 && LA14_1<=129)||(LA14_1>=131 && LA14_1<=134)||LA14_1==136||LA14_1==143||(LA14_1>=146 && LA14_1<=148)||(LA14_1>=158 && LA14_1<=161)||(LA14_1>=163 && LA14_1<=165)||LA14_1==174||LA14_1==176||LA14_1==178||(LA14_1>=181 && LA14_1<=183)||(LA14_1>=188 && LA14_1<=192)))
			{
				alt14 = 1;
			}
			else if ((LA14_1==ALL_KW))
			{
				alt14 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 14, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(14); }
			switch (alt14)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:648:6: (sym= symbol_list )?
				{
				DebugLocation(648, 6);
				// Smi.g:648:6: (sym= symbol_list )?
				int alt13=2;
				try { DebugEnterSubRule(13);
				try { DebugEnterDecision(13, false);
				int LA13_1 = input.LA(1);

				if ((LA13_1==ERROR_KW||LA13_1==LOWER||LA13_1==OBJECT_KW||LA13_1==OPERATION_KW||LA13_1==UPPER||(LA13_1>=126 && LA13_1<=129)||(LA13_1>=131 && LA13_1<=134)||LA13_1==136||LA13_1==143||(LA13_1>=146 && LA13_1<=148)||(LA13_1>=158 && LA13_1<=161)||(LA13_1>=163 && LA13_1<=165)||LA13_1==174||LA13_1==176||LA13_1==178||(LA13_1>=181 && LA13_1<=183)||(LA13_1>=188 && LA13_1<=192)))
				{
					alt13 = 1;
				}
				} finally { DebugExitDecision(13); }
				switch (alt13)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:648:7: sym= symbol_list
					{
					DebugLocation(648, 10);
					PushFollow(Follow._symbol_list_in_exports2167);
					sym=symbol_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, sym.Tree);
					DebugLocation(648, 23);
					if (state.backtracking == 0)
					{
						 retval.result.Add((sym!=null?input.ToString(sym.Start,sym.Stop):null)); 
					}

					}
					break;

				}
				} finally { DebugExitSubRule(13); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:649:5: ALL_KW
				{
				DebugLocation(649, 5);
				ALL_KW26=(IToken)Match(input,ALL_KW,Follow._ALL_KW_in_exports2178); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ALL_KW26_tree = (CommonTree)adaptor.Create(ALL_KW26);
				adaptor.AddChild(root_0, ALL_KW26_tree);
				}
				DebugLocation(649, 12);
				if (state.backtracking == 0)
				{
					 retval.result.AllExported = true; 
				}

				}
				break;

			}
			} finally { DebugExitSubRule(14); }

			DebugLocation(650, 7);
			SEMI27=(IToken)Match(input,SEMI,Follow._SEMI_in_exports2189); if (state.failed) return retval;
			if (state.backtracking == 0) {
			SEMI27_tree = (CommonTree)adaptor.Create(SEMI27);
			adaptor.AddChild(root_0, SEMI27_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("exports", 9);
			LeaveRule("exports", 9);
			LeaveRule_exports();
		}
		DebugLocation(650, 10);
		} finally { DebugExitRule(GrammarFileName, "exports"); }
		return retval;

	}
	// $ANTLR end "exports"

	private sealed partial class imports_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public Imports result;
		public imports_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_imports();
	partial void LeaveRule_imports();
	// $ANTLR start "imports"
	// Smi.g:652:1: imports returns [Imports result] : IMPORTS_KW (sym= symbols_from_module )* SEMI ;
	[GrammarRule("imports")]
	private SmiParser.imports_return imports()
	{
		EnterRule_imports();
		EnterRule("imports", 10);
		TraceIn("imports", 10);
		SmiParser.imports_return retval = new SmiParser.imports_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken IMPORTS_KW28 = default(IToken);
		IToken SEMI29 = default(IToken);
		SmiParser.symbols_from_module_return sym = default(SmiParser.symbols_from_module_return);

		CommonTree IMPORTS_KW28_tree = default(CommonTree);
		CommonTree SEMI29_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "imports");
		DebugLocation(652, 74);
		try
		{
			// Smi.g:653:5: ( IMPORTS_KW (sym= symbols_from_module )* SEMI )
			DebugEnterAlt(1);
			// Smi.g:653:7: IMPORTS_KW (sym= symbols_from_module )* SEMI
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(653, 7);
			if (state.backtracking == 0)
			{
				 retval.result = new Imports(); 
			}
			DebugLocation(654, 2);
			IMPORTS_KW28=(IToken)Match(input,IMPORTS_KW,Follow._IMPORTS_KW_in_imports2208); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IMPORTS_KW28_tree = (CommonTree)adaptor.Create(IMPORTS_KW28);
			adaptor.AddChild(root_0, IMPORTS_KW28_tree);
			}
			DebugLocation(654, 13);
			// Smi.g:654:13: (sym= symbols_from_module )*
			try { DebugEnterSubRule(15);
			while (true)
			{
				int alt15=2;
				try { DebugEnterDecision(15, false);
				int LA15_1 = input.LA(1);

				if ((LA15_1==ERROR_KW||LA15_1==LOWER||LA15_1==OBJECT_KW||LA15_1==OPERATION_KW||LA15_1==UPPER||(LA15_1>=126 && LA15_1<=129)||(LA15_1>=131 && LA15_1<=134)||LA15_1==136||LA15_1==143||(LA15_1>=146 && LA15_1<=148)||(LA15_1>=158 && LA15_1<=161)||(LA15_1>=163 && LA15_1<=165)||LA15_1==174||LA15_1==176||LA15_1==178||(LA15_1>=181 && LA15_1<=183)||(LA15_1>=188 && LA15_1<=192)))
				{
					alt15 = 1;
				}


				} finally { DebugExitDecision(15); }
				switch ( alt15 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:654:14: sym= symbols_from_module
					{
					DebugLocation(654, 17);
					PushFollow(Follow._symbols_from_module_in_imports2213);
					sym=symbols_from_module();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, sym.Tree);
					DebugLocation(654, 38);
					if (state.backtracking == 0)
					{
						 retval.result.Add((sym!=null?sym.result:default(Import))); 
					}

					}
					break;

				default:
					goto loop15;
				}
			}

			loop15:
				;

			} finally { DebugExitSubRule(15); }

			DebugLocation(654, 70);
			SEMI29=(IToken)Match(input,SEMI,Follow._SEMI_in_imports2219); if (state.failed) return retval;
			if (state.backtracking == 0) {
			SEMI29_tree = (CommonTree)adaptor.Create(SEMI29);
			adaptor.AddChild(root_0, SEMI29_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("imports", 10);
			LeaveRule("imports", 10);
			LeaveRule_imports();
		}
		DebugLocation(654, 74);
		} finally { DebugExitRule(GrammarFileName, "imports"); }
		return retval;

	}
	// $ANTLR end "imports"

	private sealed partial class assignment_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public Assignment result;
		public assignment_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_assignment();
	partial void LeaveRule_assignment();
	// $ANTLR start "assignment"
	// Smi.g:657:1: assignment returns [Assignment result] : ( UPPER ASSIGN_OP type | LOWER type ASSIGN_OP value | ( UPPER | macroName ) 'MACRO' ASSIGN_OP BEGIN_KW (~ ( END_KW ) )* END_KW );
	[GrammarRule("assignment")]
	private SmiParser.assignment_return assignment()
	{
		EnterRule_assignment();
		EnterRule("assignment", 11);
		TraceIn("assignment", 11);
		SmiParser.assignment_return retval = new SmiParser.assignment_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken UPPER30 = default(IToken);
		IToken ASSIGN_OP31 = default(IToken);
		IToken LOWER33 = default(IToken);
		IToken ASSIGN_OP35 = default(IToken);
		IToken UPPER37 = default(IToken);
		IToken string_literal39 = default(IToken);
		IToken ASSIGN_OP40 = default(IToken);
		IToken BEGIN_KW41 = default(IToken);
		IToken set42 = default(IToken);
		IToken END_KW43 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> type32 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> type34 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value36 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> macroName38 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree UPPER30_tree = default(CommonTree);
		CommonTree ASSIGN_OP31_tree = default(CommonTree);
		CommonTree LOWER33_tree = default(CommonTree);
		CommonTree ASSIGN_OP35_tree = default(CommonTree);
		CommonTree UPPER37_tree = default(CommonTree);
		CommonTree string_literal39_tree = default(CommonTree);
		CommonTree ASSIGN_OP40_tree = default(CommonTree);
		CommonTree BEGIN_KW41_tree = default(CommonTree);
		CommonTree set42_tree = default(CommonTree);
		CommonTree END_KW43_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "assignment");
		DebugLocation(657, 79);
		try
		{
			// Smi.g:658:5: ( UPPER ASSIGN_OP type | LOWER type ASSIGN_OP value | ( UPPER | macroName ) 'MACRO' ASSIGN_OP BEGIN_KW (~ ( END_KW ) )* END_KW )
			int alt18=3;
			try { DebugEnterDecision(18, false);
			switch (input.LA(1))
			{
			case UPPER:
				{
				int LA18_2 = input.LA(2);

				if ((LA18_2==ASSIGN_OP))
				{
					alt18 = 1;
				}
				else if ((LA18_2==153))
				{
					alt18 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 18, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case LOWER:
				{
				alt18 = 2;
				}
				break;
			case ERROR_KW:
			case OBJECT_KW:
			case OPERATION_KW:
			case 126:
			case 127:
			case 128:
			case 129:
			case 131:
			case 132:
			case 133:
			case 134:
			case 136:
			case 143:
			case 146:
			case 147:
			case 148:
			case 158:
			case 159:
			case 160:
			case 161:
			case 163:
			case 164:
			case 165:
			case 174:
			case 176:
			case 178:
			case 181:
			case 182:
			case 183:
			case 188:
			case 189:
			case 190:
			case 191:
			case 192:
				{
				alt18 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 18, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(18); }
			switch (alt18)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:658:7: UPPER ASSIGN_OP type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(658, 7);
				if (state.backtracking == 0)
				{
					 retval.result = new Assignment(); 
				}
				DebugLocation(659, 2);
				UPPER30=(IToken)Match(input,UPPER,Follow._UPPER_in_assignment2241); if (state.failed) return retval;
				if (state.backtracking == 0) {
				UPPER30_tree = (CommonTree)adaptor.Create(UPPER30);
				adaptor.AddChild(root_0, UPPER30_tree);
				}
				DebugLocation(659, 8);
				ASSIGN_OP31=(IToken)Match(input,ASSIGN_OP,Follow._ASSIGN_OP_in_assignment2243); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ASSIGN_OP31_tree = (CommonTree)adaptor.Create(ASSIGN_OP31);
				adaptor.AddChild(root_0, ASSIGN_OP31_tree);
				}
				DebugLocation(659, 18);
				PushFollow(Follow._type_in_assignment2245);
				type32=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type32.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:660:13: LOWER type ASSIGN_OP value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(660, 13);
				LOWER33=(IToken)Match(input,LOWER,Follow._LOWER_in_assignment2260); if (state.failed) return retval;
				if (state.backtracking == 0) {
				LOWER33_tree = (CommonTree)adaptor.Create(LOWER33);
				adaptor.AddChild(root_0, LOWER33_tree);
				}
				DebugLocation(660, 19);
				PushFollow(Follow._type_in_assignment2262);
				type34=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type34.Tree);
				DebugLocation(660, 24);
				ASSIGN_OP35=(IToken)Match(input,ASSIGN_OP,Follow._ASSIGN_OP_in_assignment2264); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ASSIGN_OP35_tree = (CommonTree)adaptor.Create(ASSIGN_OP35);
				adaptor.AddChild(root_0, ASSIGN_OP35_tree);
				}
				DebugLocation(660, 34);
				PushFollow(Follow._value_in_assignment2266);
				value36=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value36.Tree);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:661:13: ( UPPER | macroName ) 'MACRO' ASSIGN_OP BEGIN_KW (~ ( END_KW ) )* END_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(661, 13);
				// Smi.g:661:13: ( UPPER | macroName )
				int alt16=2;
				try { DebugEnterSubRule(16);
				try { DebugEnterDecision(16, false);
				int LA16_1 = input.LA(1);

				if ((LA16_1==UPPER))
				{
					alt16 = 1;
				}
				else if ((LA16_1==ERROR_KW||LA16_1==OBJECT_KW||LA16_1==OPERATION_KW||(LA16_1>=126 && LA16_1<=129)||(LA16_1>=131 && LA16_1<=134)||LA16_1==136||LA16_1==143||(LA16_1>=146 && LA16_1<=148)||(LA16_1>=158 && LA16_1<=161)||(LA16_1>=163 && LA16_1<=165)||LA16_1==174||LA16_1==176||LA16_1==178||(LA16_1>=181 && LA16_1<=183)||(LA16_1>=188 && LA16_1<=192)))
				{
					alt16 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 16, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(16); }
				switch (alt16)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:661:14: UPPER
					{
					DebugLocation(661, 14);
					UPPER37=(IToken)Match(input,UPPER,Follow._UPPER_in_assignment2282); if (state.failed) return retval;
					if (state.backtracking == 0) {
					UPPER37_tree = (CommonTree)adaptor.Create(UPPER37);
					adaptor.AddChild(root_0, UPPER37_tree);
					}

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// Smi.g:661:22: macroName
					{
					DebugLocation(661, 22);
					PushFollow(Follow._macroName_in_assignment2286);
					macroName38=macroName();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, macroName38.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(16); }

				DebugLocation(661, 33);
				string_literal39=(IToken)Match(input,153,Follow._153_in_assignment2289); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal39_tree = (CommonTree)adaptor.Create(string_literal39);
				adaptor.AddChild(root_0, string_literal39_tree);
				}
				DebugLocation(661, 41);
				ASSIGN_OP40=(IToken)Match(input,ASSIGN_OP,Follow._ASSIGN_OP_in_assignment2291); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ASSIGN_OP40_tree = (CommonTree)adaptor.Create(ASSIGN_OP40);
				adaptor.AddChild(root_0, ASSIGN_OP40_tree);
				}
				DebugLocation(661, 51);
				BEGIN_KW41=(IToken)Match(input,BEGIN_KW,Follow._BEGIN_KW_in_assignment2293); if (state.failed) return retval;
				if (state.backtracking == 0) {
				BEGIN_KW41_tree = (CommonTree)adaptor.Create(BEGIN_KW41);
				adaptor.AddChild(root_0, BEGIN_KW41_tree);
				}
				DebugLocation(661, 60);
				// Smi.g:661:60: (~ ( END_KW ) )*
				try { DebugEnterSubRule(17);
				while (true)
				{
					int alt17=2;
					try { DebugEnterDecision(17, false);
					int LA17_1 = input.LA(1);

					if (((LA17_1>=ABSENT_KW && LA17_1<=EMBEDDED_KW)||(LA17_1>=ENUMERATED_KW && LA17_1<=197)))
					{
						alt17 = 1;
					}


					} finally { DebugExitDecision(17); }
					switch ( alt17 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:
						{
						DebugLocation(661, 60);

						set42=(IToken)input.LT(1);
						if ((input.LA(1)>=ABSENT_KW && input.LA(1)<=EMBEDDED_KW)||(input.LA(1)>=ENUMERATED_KW && input.LA(1)<=197))
						{
							input.Consume();
							if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set42));
							state.errorRecovery=false;state.failed=false;
						}
						else
						{
							if (state.backtracking>0) {state.failed=true; return retval;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							DebugRecognitionException(mse);
							throw mse;
						}


						}
						break;

					default:
						goto loop17;
					}
				}

				loop17:
					;

				} finally { DebugExitSubRule(17); }

				DebugLocation(661, 73);
				END_KW43=(IToken)Match(input,END_KW,Follow._END_KW_in_assignment2303); if (state.failed) return retval;
				if (state.backtracking == 0) {
				END_KW43_tree = (CommonTree)adaptor.Create(END_KW43);
				adaptor.AddChild(root_0, END_KW43_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("assignment", 11);
			LeaveRule("assignment", 11);
			LeaveRule_assignment();
		}
		DebugLocation(661, 79);
		} finally { DebugExitRule(GrammarFileName, "assignment"); }
		return retval;

	}
	// $ANTLR end "assignment"

	private sealed partial class symbol_list_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public IList<string> result;
		public symbol_list_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_symbol_list();
	partial void LeaveRule_symbol_list();
	// $ANTLR start "symbol_list"
	// Smi.g:669:1: symbol_list returns [IList<string> result] :sym= symbol ( COMMA sym2= symbol )* ;
	[GrammarRule("symbol_list")]
	private SmiParser.symbol_list_return symbol_list()
	{
		EnterRule_symbol_list();
		EnterRule("symbol_list", 12);
		TraceIn("symbol_list", 12);
		SmiParser.symbol_list_return retval = new SmiParser.symbol_list_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMMA44 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> sym = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> sym2 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree COMMA44_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "symbol_list");
		DebugLocation(669, 52);
		try
		{
			// Smi.g:670:5: (sym= symbol ( COMMA sym2= symbol )* )
			DebugEnterAlt(1);
			// Smi.g:670:7: sym= symbol ( COMMA sym2= symbol )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(670, 7);
			if (state.backtracking == 0)
			{
				 retval.result = new List<string>(); 
			}
			DebugLocation(671, 5);
			PushFollow(Follow._symbol_in_symbol_list2331);
			sym=symbol();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, sym.Tree);
			DebugLocation(671, 13);
			if (state.backtracking == 0)
			{
				 retval.result.Add((sym!=null?input.ToString(sym.Start,sym.Stop):null)); 
			}
			DebugLocation(672, 3);
			// Smi.g:672:3: ( COMMA sym2= symbol )*
			try { DebugEnterSubRule(19);
			while (true)
			{
				int alt19=2;
				try { DebugEnterDecision(19, false);
				int LA19_1 = input.LA(1);

				if ((LA19_1==COMMA))
				{
					alt19 = 1;
				}


				} finally { DebugExitDecision(19); }
				switch ( alt19 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:672:4: COMMA sym2= symbol
					{
					DebugLocation(672, 4);
					COMMA44=(IToken)Match(input,COMMA,Follow._COMMA_in_symbol_list2338); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA44_tree = (CommonTree)adaptor.Create(COMMA44);
					adaptor.AddChild(root_0, COMMA44_tree);
					}
					DebugLocation(672, 14);
					PushFollow(Follow._symbol_in_symbol_list2342);
					sym2=symbol();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, sym2.Tree);
					DebugLocation(672, 22);
					if (state.backtracking == 0)
					{
						 retval.result.Add((sym2!=null?input.ToString(sym2.Start,sym2.Stop):null)); 
					}

					}
					break;

				default:
					goto loop19;
				}
			}

			loop19:
				;

			} finally { DebugExitSubRule(19); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("symbol_list", 12);
			LeaveRule("symbol_list", 12);
			LeaveRule_symbol_list();
		}
		DebugLocation(672, 52);
		} finally { DebugExitRule(GrammarFileName, "symbol_list"); }
		return retval;

	}
	// $ANTLR end "symbol_list"

	private sealed partial class symbols_from_module_return : AstParserRuleReturnScope<CommonTree, IToken>
	{
		public Import result;
		public symbols_from_module_return(SmiParser grammar) {OnCreated(grammar);}
		partial void OnCreated(SmiParser grammar);
	}

	partial void EnterRule_symbols_from_module();
	partial void LeaveRule_symbols_from_module();
	// $ANTLR start "symbols_from_module"
	// Smi.g:674:1: symbols_from_module returns [Import result] :syms= symbol_list FROM_KW mod= UPPER ( obj_id_comp_lst | ( defined_value )=> defined_value )? ;
	[GrammarRule("symbols_from_module")]
	private SmiParser.symbols_from_module_return symbols_from_module()
	{
		EnterRule_symbols_from_module();
		EnterRule("symbols_from_module", 13);
		TraceIn("symbols_from_module", 13);
		SmiParser.symbols_from_module_return retval = new SmiParser.symbols_from_module_return(this);
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken mod = default(IToken);
		IToken FROM_KW45 = default(IToken);
		SmiParser.symbol_list_return syms = default(SmiParser.symbol_list_return);
		AstParserRuleReturnScope<CommonTree, IToken> obj_id_comp_lst46 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> defined_value47 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree mod_tree = default(CommonTree);
		CommonTree FROM_KW45_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "symbols_from_module");
		DebugLocation(674, 27);
		try
		{
			// Smi.g:675:5: (syms= symbol_list FROM_KW mod= UPPER ( obj_id_comp_lst | ( defined_value )=> defined_value )? )
			DebugEnterAlt(1);
			// Smi.g:675:7: syms= symbol_list FROM_KW mod= UPPER ( obj_id_comp_lst | ( defined_value )=> defined_value )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(675, 7);
			if (state.backtracking == 0)
			{
				 retval.result = new Import(); 
			}
			DebugLocation(676, 6);
			PushFollow(Follow._symbol_list_in_symbols_from_module2368);
			syms=symbol_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, syms.Tree);
			DebugLocation(676, 19);
			if (state.backtracking == 0)
			{
				 retval.result.Symbols = (syms!=null?syms.result:default(IList<string>)); 
			}
			DebugLocation(677, 2);
			FROM_KW45=(IToken)Match(input,FROM_KW,Follow._FROM_KW_in_symbols_from_module2373); if (state.failed) return retval;
			if (state.backtracking == 0) {
			FROM_KW45_tree = (CommonTree)adaptor.Create(FROM_KW45);
			adaptor.AddChild(root_0, FROM_KW45_tree);
			}
			DebugLocation(677, 13);
			mod=(IToken)Match(input,UPPER,Follow._UPPER_in_symbols_from_module2377); if (state.failed) return retval;
			if (state.backtracking == 0) {
			mod_tree = (CommonTree)adaptor.Create(mod);
			adaptor.AddChild(root_0, mod_tree);
			}
			DebugLocation(677, 20);
			if (state.backtracking == 0)
			{
				 retval.result.Module = (mod!=null?mod.Text:null);
			}
			DebugLocation(678, 25);
			// Smi.g:678:25: ( obj_id_comp_lst | ( defined_value )=> defined_value )?
			int alt20=3;
			try { DebugEnterSubRule(20);
			try { DebugEnterDecision(20, false);
			switch (input.LA(1))
			{
			case L_BRACE:
				{
				alt20 = 1;
				}
				break;
			case UPPER:
				{
				int LA20_2 = input.LA(2);

				if ((LA20_2==DOT) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				}
				break;
			case LOWER:
				{
				int LA20_2 = input.LA(2);

				if ((LA20_2==SEMI) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==UPPER) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==LOWER) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==OPERATION_KW) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==ERROR_KW) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==136) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==192) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==134) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==133) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==146) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==148) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==147) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==189) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==190) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==181) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==OBJECT_KW) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==174) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==178) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==126) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==129) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==128) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==127) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==132) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==143) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==183) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==182) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==176) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				else if ((LA20_2==131||(LA20_2>=158 && LA20_2<=161)||(LA20_2>=163 && LA20_2<=165)||LA20_2==188||LA20_2==191) && (EvaluatePredicate(synpred2_Smi_fragment)))
				{
					alt20 = 2;
				}
				}
				break;
			}

			} finally { DebugExitDecision(20); }
			switch (alt20)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:678:27: obj_id_comp_lst
				{
				DebugLocation(678, 27);
				PushFollow(Follow._obj_id_comp_lst_in_symbols_from_module2407);
				obj_id_comp_lst46=obj_id_comp_lst();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, obj_id_comp_lst46.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:679:29: ( defined_value )=> defined_value
				{
				DebugLocation(679, 48);
				PushFollow(Follow._defined_value_in_symbols_from_module2444);
				defined_value47=defined_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, defined_value47.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(20); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("symbols_from_module", 13);
			LeaveRule("symbols_from_module", 13);
			LeaveRule_symbols_from_module();
		}
		DebugLocation(680, 27);
		} finally { DebugExitRule(GrammarFileName, "symbols_from_module"); }
		return retval;

	}
	// $ANTLR end "symbols_from_module"

	partial void EnterRule_symbol();
	partial void LeaveRule_symbol();
	// $ANTLR start "symbol"
	// Smi.g:682:1: symbol : ( UPPER | LOWER | macroName );
	[GrammarRule("symbol")]
	private AstParserRuleReturnScope<CommonTree, IToken> symbol()
	{
		EnterRule_symbol();
		EnterRule("symbol", 14);
		TraceIn("symbol", 14);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken UPPER48 = default(IToken);
		IToken LOWER49 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> macroName50 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree UPPER48_tree = default(CommonTree);
		CommonTree LOWER49_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "symbol");
		DebugLocation(682, 33);
		try
		{
			// Smi.g:682:7: ( UPPER | LOWER | macroName )
			int alt21=3;
			try { DebugEnterDecision(21, false);
			switch (input.LA(1))
			{
			case UPPER:
				{
				alt21 = 1;
				}
				break;
			case LOWER:
				{
				alt21 = 2;
				}
				break;
			case ERROR_KW:
			case OBJECT_KW:
			case OPERATION_KW:
			case 126:
			case 127:
			case 128:
			case 129:
			case 131:
			case 132:
			case 133:
			case 134:
			case 136:
			case 143:
			case 146:
			case 147:
			case 148:
			case 158:
			case 159:
			case 160:
			case 161:
			case 163:
			case 164:
			case 165:
			case 174:
			case 176:
			case 178:
			case 181:
			case 182:
			case 183:
			case 188:
			case 189:
			case 190:
			case 191:
			case 192:
				{
				alt21 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 21, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(21); }
			switch (alt21)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:682:9: UPPER
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(682, 9);
				UPPER48=(IToken)Match(input,UPPER,Follow._UPPER_in_symbol2480); if (state.failed) return retval;
				if (state.backtracking == 0) {
				UPPER48_tree = (CommonTree)adaptor.Create(UPPER48);
				adaptor.AddChild(root_0, UPPER48_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:682:17: LOWER
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(682, 17);
				LOWER49=(IToken)Match(input,LOWER,Follow._LOWER_in_symbol2484); if (state.failed) return retval;
				if (state.backtracking == 0) {
				LOWER49_tree = (CommonTree)adaptor.Create(LOWER49);
				adaptor.AddChild(root_0, LOWER49_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:682:25: macroName
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(682, 25);
				PushFollow(Follow._macroName_in_symbol2488);
				macroName50=macroName();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, macroName50.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("symbol", 14);
			LeaveRule("symbol", 14);
			LeaveRule_symbol();
		}
		DebugLocation(682, 33);
		} finally { DebugExitRule(GrammarFileName, "symbol"); }
		return retval;

	}
	// $ANTLR end "symbol"

	partial void EnterRule_macroName();
	partial void LeaveRule_macroName();
	// $ANTLR start "macroName"
	// Smi.g:684:1: macroName : ( OPERATION_KW | ERROR_KW | 'BIND' | 'UNBIND' | 'APPLICATION-SERVICE-ELEMENT' | 'APPLICATION-CONTEXT' | 'EXTENSION' | 'EXTENSIONS' | 'EXTENSION-ATTRIBUTE' | 'TOKEN' | 'TOKEN-DATA' | 'SECURITY-CATEGORY' | 'OBJECT' | 'PORT' | 'REFINE' | 'ABSTRACT-BIND' | 'ABSTRACT-UNBIND' | 'ABSTRACT-OPERATION' | 'ABSTRACT-ERROR' | 'ALGORITHM' | 'ENCRYPTED' | 'SIGNED' | 'SIGNATURE' | 'PROTECTED' | smi_macros );
	[GrammarRule("macroName")]
	private AstParserRuleReturnScope<CommonTree, IToken> macroName()
	{
		EnterRule_macroName();
		EnterRule("macroName", 15);
		TraceIn("macroName", 15);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken OPERATION_KW51 = default(IToken);
		IToken ERROR_KW52 = default(IToken);
		IToken string_literal53 = default(IToken);
		IToken string_literal54 = default(IToken);
		IToken string_literal55 = default(IToken);
		IToken string_literal56 = default(IToken);
		IToken string_literal57 = default(IToken);
		IToken string_literal58 = default(IToken);
		IToken string_literal59 = default(IToken);
		IToken string_literal60 = default(IToken);
		IToken string_literal61 = default(IToken);
		IToken string_literal62 = default(IToken);
		IToken string_literal63 = default(IToken);
		IToken string_literal64 = default(IToken);
		IToken string_literal65 = default(IToken);
		IToken string_literal66 = default(IToken);
		IToken string_literal67 = default(IToken);
		IToken string_literal68 = default(IToken);
		IToken string_literal69 = default(IToken);
		IToken string_literal70 = default(IToken);
		IToken string_literal71 = default(IToken);
		IToken string_literal72 = default(IToken);
		IToken string_literal73 = default(IToken);
		IToken string_literal74 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> smi_macros75 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree OPERATION_KW51_tree = default(CommonTree);
		CommonTree ERROR_KW52_tree = default(CommonTree);
		CommonTree string_literal53_tree = default(CommonTree);
		CommonTree string_literal54_tree = default(CommonTree);
		CommonTree string_literal55_tree = default(CommonTree);
		CommonTree string_literal56_tree = default(CommonTree);
		CommonTree string_literal57_tree = default(CommonTree);
		CommonTree string_literal58_tree = default(CommonTree);
		CommonTree string_literal59_tree = default(CommonTree);
		CommonTree string_literal60_tree = default(CommonTree);
		CommonTree string_literal61_tree = default(CommonTree);
		CommonTree string_literal62_tree = default(CommonTree);
		CommonTree string_literal63_tree = default(CommonTree);
		CommonTree string_literal64_tree = default(CommonTree);
		CommonTree string_literal65_tree = default(CommonTree);
		CommonTree string_literal66_tree = default(CommonTree);
		CommonTree string_literal67_tree = default(CommonTree);
		CommonTree string_literal68_tree = default(CommonTree);
		CommonTree string_literal69_tree = default(CommonTree);
		CommonTree string_literal70_tree = default(CommonTree);
		CommonTree string_literal71_tree = default(CommonTree);
		CommonTree string_literal72_tree = default(CommonTree);
		CommonTree string_literal73_tree = default(CommonTree);
		CommonTree string_literal74_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "macroName");
		DebugLocation(684, 14);
		try
		{
			// Smi.g:684:10: ( OPERATION_KW | ERROR_KW | 'BIND' | 'UNBIND' | 'APPLICATION-SERVICE-ELEMENT' | 'APPLICATION-CONTEXT' | 'EXTENSION' | 'EXTENSIONS' | 'EXTENSION-ATTRIBUTE' | 'TOKEN' | 'TOKEN-DATA' | 'SECURITY-CATEGORY' | 'OBJECT' | 'PORT' | 'REFINE' | 'ABSTRACT-BIND' | 'ABSTRACT-UNBIND' | 'ABSTRACT-OPERATION' | 'ABSTRACT-ERROR' | 'ALGORITHM' | 'ENCRYPTED' | 'SIGNED' | 'SIGNATURE' | 'PROTECTED' | smi_macros )
			int alt22=25;
			try { DebugEnterDecision(22, false);
			switch (input.LA(1))
			{
			case OPERATION_KW:
				{
				alt22 = 1;
				}
				break;
			case ERROR_KW:
				{
				alt22 = 2;
				}
				break;
			case 136:
				{
				alt22 = 3;
				}
				break;
			case 192:
				{
				alt22 = 4;
				}
				break;
			case 134:
				{
				alt22 = 5;
				}
				break;
			case 133:
				{
				alt22 = 6;
				}
				break;
			case 146:
				{
				alt22 = 7;
				}
				break;
			case 148:
				{
				alt22 = 8;
				}
				break;
			case 147:
				{
				alt22 = 9;
				}
				break;
			case 189:
				{
				alt22 = 10;
				}
				break;
			case 190:
				{
				alt22 = 11;
				}
				break;
			case 181:
				{
				alt22 = 12;
				}
				break;
			case OBJECT_KW:
				{
				alt22 = 13;
				}
				break;
			case 174:
				{
				alt22 = 14;
				}
				break;
			case 178:
				{
				alt22 = 15;
				}
				break;
			case 126:
				{
				alt22 = 16;
				}
				break;
			case 129:
				{
				alt22 = 17;
				}
				break;
			case 128:
				{
				alt22 = 18;
				}
				break;
			case 127:
				{
				alt22 = 19;
				}
				break;
			case 132:
				{
				alt22 = 20;
				}
				break;
			case 143:
				{
				alt22 = 21;
				}
				break;
			case 183:
				{
				alt22 = 22;
				}
				break;
			case 182:
				{
				alt22 = 23;
				}
				break;
			case 176:
				{
				alt22 = 24;
				}
				break;
			case 131:
			case 158:
			case 159:
			case 160:
			case 161:
			case 163:
			case 164:
			case 165:
			case 188:
			case 191:
				{
				alt22 = 25;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 22, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(22); }
			switch (alt22)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:684:12: OPERATION_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(684, 12);
				OPERATION_KW51=(IToken)Match(input,OPERATION_KW,Follow._OPERATION_KW_in_macroName2495); if (state.failed) return retval;
				if (state.backtracking == 0) {
				OPERATION_KW51_tree = (CommonTree)adaptor.Create(OPERATION_KW51);
				adaptor.AddChild(root_0, OPERATION_KW51_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:684:27: ERROR_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(684, 27);
				ERROR_KW52=(IToken)Match(input,ERROR_KW,Follow._ERROR_KW_in_macroName2499); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ERROR_KW52_tree = (CommonTree)adaptor.Create(ERROR_KW52);
				adaptor.AddChild(root_0, ERROR_KW52_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:684:39: 'BIND'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(684, 39);
				string_literal53=(IToken)Match(input,136,Follow._136_in_macroName2504); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal53_tree = (CommonTree)adaptor.Create(string_literal53);
				adaptor.AddChild(root_0, string_literal53_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Smi.g:684:48: 'UNBIND'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(684, 48);
				string_literal54=(IToken)Match(input,192,Follow._192_in_macroName2508); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal54_tree = (CommonTree)adaptor.Create(string_literal54);
				adaptor.AddChild(root_0, string_literal54_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Smi.g:685:12: 'APPLICATION-SERVICE-ELEMENT'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(685, 12);
				string_literal55=(IToken)Match(input,134,Follow._134_in_macroName2522); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal55_tree = (CommonTree)adaptor.Create(string_literal55);
				adaptor.AddChild(root_0, string_literal55_tree);
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// Smi.g:685:44: 'APPLICATION-CONTEXT'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(685, 44);
				string_literal56=(IToken)Match(input,133,Follow._133_in_macroName2526); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal56_tree = (CommonTree)adaptor.Create(string_literal56);
				adaptor.AddChild(root_0, string_literal56_tree);
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// Smi.g:685:68: 'EXTENSION'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(685, 68);
				string_literal57=(IToken)Match(input,146,Follow._146_in_macroName2530); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal57_tree = (CommonTree)adaptor.Create(string_literal57);
				adaptor.AddChild(root_0, string_literal57_tree);
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// Smi.g:686:12: 'EXTENSIONS'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(686, 12);
				string_literal58=(IToken)Match(input,148,Follow._148_in_macroName2544); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal58_tree = (CommonTree)adaptor.Create(string_literal58);
				adaptor.AddChild(root_0, string_literal58_tree);
				}

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// Smi.g:686:27: 'EXTENSION-ATTRIBUTE'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(686, 27);
				string_literal59=(IToken)Match(input,147,Follow._147_in_macroName2548); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal59_tree = (CommonTree)adaptor.Create(string_literal59);
				adaptor.AddChild(root_0, string_literal59_tree);
				}

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// Smi.g:686:51: 'TOKEN'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(686, 51);
				string_literal60=(IToken)Match(input,189,Follow._189_in_macroName2552); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal60_tree = (CommonTree)adaptor.Create(string_literal60);
				adaptor.AddChild(root_0, string_literal60_tree);
				}

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// Smi.g:686:61: 'TOKEN-DATA'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(686, 61);
				string_literal61=(IToken)Match(input,190,Follow._190_in_macroName2556); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal61_tree = (CommonTree)adaptor.Create(string_literal61);
				adaptor.AddChild(root_0, string_literal61_tree);
				}

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// Smi.g:687:5: 'SECURITY-CATEGORY'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(687, 5);
				string_literal62=(IToken)Match(input,181,Follow._181_in_macroName2563); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal62_tree = (CommonTree)adaptor.Create(string_literal62);
				adaptor.AddChild(root_0, string_literal62_tree);
				}

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// Smi.g:687:27: 'OBJECT'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(687, 27);
				string_literal63=(IToken)Match(input,OBJECT_KW,Follow._OBJECT_KW_in_macroName2567); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal63_tree = (CommonTree)adaptor.Create(string_literal63);
				adaptor.AddChild(root_0, string_literal63_tree);
				}

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// Smi.g:687:38: 'PORT'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(687, 38);
				string_literal64=(IToken)Match(input,174,Follow._174_in_macroName2571); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal64_tree = (CommonTree)adaptor.Create(string_literal64);
				adaptor.AddChild(root_0, string_literal64_tree);
				}

				}
				break;
			case 15:
				DebugEnterAlt(15);
				// Smi.g:687:47: 'REFINE'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(687, 47);
				string_literal65=(IToken)Match(input,178,Follow._178_in_macroName2575); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal65_tree = (CommonTree)adaptor.Create(string_literal65);
				adaptor.AddChild(root_0, string_literal65_tree);
				}

				}
				break;
			case 16:
				DebugEnterAlt(16);
				// Smi.g:687:58: 'ABSTRACT-BIND'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(687, 58);
				string_literal66=(IToken)Match(input,126,Follow._126_in_macroName2579); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal66_tree = (CommonTree)adaptor.Create(string_literal66);
				adaptor.AddChild(root_0, string_literal66_tree);
				}

				}
				break;
			case 17:
				DebugEnterAlt(17);
				// Smi.g:688:5: 'ABSTRACT-UNBIND'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(688, 5);
				string_literal67=(IToken)Match(input,129,Follow._129_in_macroName2586); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal67_tree = (CommonTree)adaptor.Create(string_literal67);
				adaptor.AddChild(root_0, string_literal67_tree);
				}

				}
				break;
			case 18:
				DebugEnterAlt(18);
				// Smi.g:688:25: 'ABSTRACT-OPERATION'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(688, 25);
				string_literal68=(IToken)Match(input,128,Follow._128_in_macroName2590); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal68_tree = (CommonTree)adaptor.Create(string_literal68);
				adaptor.AddChild(root_0, string_literal68_tree);
				}

				}
				break;
			case 19:
				DebugEnterAlt(19);
				// Smi.g:688:48: 'ABSTRACT-ERROR'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(688, 48);
				string_literal69=(IToken)Match(input,127,Follow._127_in_macroName2594); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal69_tree = (CommonTree)adaptor.Create(string_literal69);
				adaptor.AddChild(root_0, string_literal69_tree);
				}

				}
				break;
			case 20:
				DebugEnterAlt(20);
				// Smi.g:689:5: 'ALGORITHM'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(689, 5);
				string_literal70=(IToken)Match(input,132,Follow._132_in_macroName2601); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal70_tree = (CommonTree)adaptor.Create(string_literal70);
				adaptor.AddChild(root_0, string_literal70_tree);
				}

				}
				break;
			case 21:
				DebugEnterAlt(21);
				// Smi.g:689:19: 'ENCRYPTED'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(689, 19);
				string_literal71=(IToken)Match(input,143,Follow._143_in_macroName2605); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal71_tree = (CommonTree)adaptor.Create(string_literal71);
				adaptor.AddChild(root_0, string_literal71_tree);
				}

				}
				break;
			case 22:
				DebugEnterAlt(22);
				// Smi.g:689:33: 'SIGNED'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(689, 33);
				string_literal72=(IToken)Match(input,183,Follow._183_in_macroName2609); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal72_tree = (CommonTree)adaptor.Create(string_literal72);
				adaptor.AddChild(root_0, string_literal72_tree);
				}

				}
				break;
			case 23:
				DebugEnterAlt(23);
				// Smi.g:689:44: 'SIGNATURE'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(689, 44);
				string_literal73=(IToken)Match(input,182,Follow._182_in_macroName2613); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal73_tree = (CommonTree)adaptor.Create(string_literal73);
				adaptor.AddChild(root_0, string_literal73_tree);
				}

				}
				break;
			case 24:
				DebugEnterAlt(24);
				// Smi.g:689:58: 'PROTECTED'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(689, 58);
				string_literal74=(IToken)Match(input,176,Follow._176_in_macroName2617); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal74_tree = (CommonTree)adaptor.Create(string_literal74);
				adaptor.AddChild(root_0, string_literal74_tree);
				}

				}
				break;
			case 25:
				DebugEnterAlt(25);
				// Smi.g:690:5: smi_macros
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(690, 5);
				PushFollow(Follow._smi_macros_in_macroName2624);
				smi_macros75=smi_macros();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, smi_macros75.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("macroName", 15);
			LeaveRule("macroName", 15);
			LeaveRule_macroName();
		}
		DebugLocation(690, 14);
		} finally { DebugExitRule(GrammarFileName, "macroName"); }
		return retval;

	}
	// $ANTLR end "macroName"

	partial void EnterRule_type();
	partial void LeaveRule_type();
	// $ANTLR start "type"
	// Smi.g:692:1: type : ( built_in_type | defined_type | selection_type | macros_type | smi_type );
	[GrammarRule("type")]
	private AstParserRuleReturnScope<CommonTree, IToken> type()
	{
		EnterRule_type();
		EnterRule("type", 16);
		TraceIn("type", 16);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		AstParserRuleReturnScope<CommonTree, IToken> built_in_type76 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> defined_type77 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> selection_type78 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> macros_type79 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> smi_type80 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		try { DebugEnterRule(GrammarFileName, "type");
		DebugLocation(692, 76);
		try
		{
			// Smi.g:692:5: ( built_in_type | defined_type | selection_type | macros_type | smi_type )
			int alt23=5;
			try { DebugEnterDecision(23, false);
			switch (input.LA(1))
			{
			case ANY_KW:
			case BIT_KW:
			case BMP_STR_KW:
			case BOOLEAN_KW:
			case CHARACTER_KW:
			case CHOICE_KW:
			case EMBEDDED_KW:
			case ENUMERATED_KW:
			case EXTERNAL_KW:
			case GENERALIZED_TIME_KW:
			case GENERAL_STR_KW:
			case GRAPHIC_STR_KW:
			case IA5_STRING_KW:
			case ISO646_STR_KW:
			case NUMERIC_STR_KW:
			case PRINTABLE_STR_KW:
			case T61_STR_KW:
			case TELETEX_STR_KW:
			case UNIVERSAL_STR_KW:
			case UTC_TIME_KW:
			case UTF8_STR_KW:
			case VIDEOTEX_STR_KW:
			case VISIBLE_STR_KW:
				{
				alt23 = 1;
				}
				break;
			case INTEGER_KW:
			case L_BRACKET:
			case NULL_KW:
			case REAL_KW:
			case SEQUENCE_KW:
			case SET_KW:
			case 179:
				{
				alt23 = 1;
				}
				break;
			case OBJECT_KW:
				{
				int LA23_2 = input.LA(2);

				if ((LA23_2==IDENTIFIER_KW))
				{
					alt23 = 1;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 23, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case OCTET_KW:
				{
				int LA23_2 = input.LA(2);

				if ((LA23_2==STRING_KW))
				{
					alt23 = 1;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 23, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case UPPER:
				{
				alt23 = 2;
				}
				break;
			case LOWER:
				{
				alt23 = 3;
				}
				break;
			case ERROR_KW:
			case OPERATION_KW:
			case 131:
			case 158:
			case 159:
			case 160:
			case 161:
			case 163:
			case 164:
			case 165:
			case 188:
			case 191:
				{
				alt23 = 4;
				}
				break;
			case 137:
				{
				alt23 = 5;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 23, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(23); }
			switch (alt23)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:692:7: built_in_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(692, 7);
				PushFollow(Follow._built_in_type_in_type2631);
				built_in_type76=built_in_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, built_in_type76.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:692:23: defined_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(692, 23);
				PushFollow(Follow._defined_type_in_type2635);
				defined_type77=defined_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, defined_type77.Tree);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:692:38: selection_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(692, 38);
				PushFollow(Follow._selection_type_in_type2639);
				selection_type78=selection_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, selection_type78.Tree);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Smi.g:692:55: macros_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(692, 55);
				PushFollow(Follow._macros_type_in_type2643);
				macros_type79=macros_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, macros_type79.Tree);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Smi.g:692:69: smi_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(692, 69);
				PushFollow(Follow._smi_type_in_type2647);
				smi_type80=smi_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, smi_type80.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type", 16);
			LeaveRule("type", 16);
			LeaveRule_type();
		}
		DebugLocation(692, 76);
		} finally { DebugExitRule(GrammarFileName, "type"); }
		return retval;

	}
	// $ANTLR end "type"

	partial void EnterRule_value();
	partial void LeaveRule_value();
	// $ANTLR start "value"
	// Smi.g:694:1: value : ( ( TRUE_KW )=> TRUE_KW | ( FALSE_KW )=> FALSE_KW | ( NULL_KW )=> NULL_KW | ( C_STRING )=> C_STRING | ( defined_value )=> defined_value | ( signed_number )=> signed_number | ( choice_value )=> choice_value | ( sequence_value )=> sequence_value | ( sequenceof_value )=> sequenceof_value | ( cstr_value )=> cstr_value | ( obj_id_comp_lst )=> obj_id_comp_lst | ( PLUS_INFINITY_KW )=> PLUS_INFINITY_KW | ( MINUS_INFINITY_KW )=> MINUS_INFINITY_KW );
	[GrammarRule("value")]
	private AstParserRuleReturnScope<CommonTree, IToken> value()
	{
		EnterRule_value();
		EnterRule("value", 17);
		TraceIn("value", 17);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken TRUE_KW81 = default(IToken);
		IToken FALSE_KW82 = default(IToken);
		IToken NULL_KW83 = default(IToken);
		IToken C_STRING84 = default(IToken);
		IToken PLUS_INFINITY_KW92 = default(IToken);
		IToken MINUS_INFINITY_KW93 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> defined_value85 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> signed_number86 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> choice_value87 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> sequence_value88 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> sequenceof_value89 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> cstr_value90 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> obj_id_comp_lst91 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree TRUE_KW81_tree = default(CommonTree);
		CommonTree FALSE_KW82_tree = default(CommonTree);
		CommonTree NULL_KW83_tree = default(CommonTree);
		CommonTree C_STRING84_tree = default(CommonTree);
		CommonTree PLUS_INFINITY_KW92_tree = default(CommonTree);
		CommonTree MINUS_INFINITY_KW93_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "value");
		DebugLocation(694, 47);
		try
		{
			// Smi.g:694:6: ( ( TRUE_KW )=> TRUE_KW | ( FALSE_KW )=> FALSE_KW | ( NULL_KW )=> NULL_KW | ( C_STRING )=> C_STRING | ( defined_value )=> defined_value | ( signed_number )=> signed_number | ( choice_value )=> choice_value | ( sequence_value )=> sequence_value | ( sequenceof_value )=> sequenceof_value | ( cstr_value )=> cstr_value | ( obj_id_comp_lst )=> obj_id_comp_lst | ( PLUS_INFINITY_KW )=> PLUS_INFINITY_KW | ( MINUS_INFINITY_KW )=> MINUS_INFINITY_KW )
			int alt24=13;
			try { DebugEnterDecision(24, false);
			int LA24_1 = input.LA(1);

			if ((LA24_1==TRUE_KW) && (EvaluatePredicate(synpred3_Smi_fragment)))
			{
				alt24 = 1;
			}
			else if ((LA24_1==FALSE_KW) && (EvaluatePredicate(synpred4_Smi_fragment)))
			{
				alt24 = 2;
			}
			else if ((LA24_1==NULL_KW) && (EvaluatePredicate(synpred5_Smi_fragment)))
			{
				alt24 = 3;
			}
			else if ((LA24_1==C_STRING) && (EvaluatePredicate(synpred6_Smi_fragment)))
			{
				alt24 = 4;
			}
			else if ((LA24_1==UPPER) && (EvaluatePredicate(synpred7_Smi_fragment)))
			{
				alt24 = 5;
			}
			else if ((LA24_1==LOWER))
			{
				int LA24_2 = input.LA(2);

				if ((EvaluatePredicate(synpred7_Smi_fragment)))
				{
					alt24 = 5;
				}
				else if ((EvaluatePredicate(synpred9_Smi_fragment)))
				{
					alt24 = 7;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 24, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA24_1==MINUS) && (EvaluatePredicate(synpred8_Smi_fragment)))
			{
				alt24 = 6;
			}
			else if ((LA24_1==NUMBER) && (EvaluatePredicate(synpred8_Smi_fragment)))
			{
				alt24 = 6;
			}
			else if ((LA24_1==L_BRACE))
			{
				int LA24_2 = input.LA(2);

				if ((EvaluatePredicate(synpred10_Smi_fragment)))
				{
					alt24 = 8;
				}
				else if ((EvaluatePredicate(synpred11_Smi_fragment)))
				{
					alt24 = 9;
				}
				else if ((EvaluatePredicate(synpred12_Smi_fragment)))
				{
					alt24 = 10;
				}
				else if ((EvaluatePredicate(synpred13_Smi_fragment)))
				{
					alt24 = 11;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 24, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA24_1==H_STRING) && (EvaluatePredicate(synpred12_Smi_fragment)))
			{
				alt24 = 10;
			}
			else if ((LA24_1==B_STRING) && (EvaluatePredicate(synpred12_Smi_fragment)))
			{
				alt24 = 10;
			}
			else if ((LA24_1==PLUS_INFINITY_KW) && (EvaluatePredicate(synpred14_Smi_fragment)))
			{
				alt24 = 12;
			}
			else if ((LA24_1==MINUS_INFINITY_KW) && (EvaluatePredicate(synpred15_Smi_fragment)))
			{
				alt24 = 13;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 24, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(24); }
			switch (alt24)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:694:8: ( TRUE_KW )=> TRUE_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(694, 21);
				TRUE_KW81=(IToken)Match(input,TRUE_KW,Follow._TRUE_KW_in_value2660); if (state.failed) return retval;
				if (state.backtracking == 0) {
				TRUE_KW81_tree = (CommonTree)adaptor.Create(TRUE_KW81);
				adaptor.AddChild(root_0, TRUE_KW81_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:695:8: ( FALSE_KW )=> FALSE_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(695, 22);
				FALSE_KW82=(IToken)Match(input,FALSE_KW,Follow._FALSE_KW_in_value2676); if (state.failed) return retval;
				if (state.backtracking == 0) {
				FALSE_KW82_tree = (CommonTree)adaptor.Create(FALSE_KW82);
				adaptor.AddChild(root_0, FALSE_KW82_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:696:8: ( NULL_KW )=> NULL_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(696, 21);
				NULL_KW83=(IToken)Match(input,NULL_KW,Follow._NULL_KW_in_value2692); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NULL_KW83_tree = (CommonTree)adaptor.Create(NULL_KW83);
				adaptor.AddChild(root_0, NULL_KW83_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Smi.g:697:8: ( C_STRING )=> C_STRING
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(697, 22);
				C_STRING84=(IToken)Match(input,C_STRING,Follow._C_STRING_in_value2709); if (state.failed) return retval;
				if (state.backtracking == 0) {
				C_STRING84_tree = (CommonTree)adaptor.Create(C_STRING84);
				adaptor.AddChild(root_0, C_STRING84_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Smi.g:698:8: ( defined_value )=> defined_value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(698, 27);
				PushFollow(Follow._defined_value_in_value2725);
				defined_value85=defined_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, defined_value85.Tree);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// Smi.g:699:8: ( signed_number )=> signed_number
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(699, 27);
				PushFollow(Follow._signed_number_in_value2741);
				signed_number86=signed_number();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, signed_number86.Tree);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// Smi.g:700:8: ( choice_value )=> choice_value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(700, 26);
				PushFollow(Follow._choice_value_in_value2756);
				choice_value87=choice_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, choice_value87.Tree);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// Smi.g:701:8: ( sequence_value )=> sequence_value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(701, 28);
				PushFollow(Follow._sequence_value_in_value2772);
				sequence_value88=sequence_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, sequence_value88.Tree);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// Smi.g:702:8: ( sequenceof_value )=> sequenceof_value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(702, 30);
				PushFollow(Follow._sequenceof_value_in_value2788);
				sequenceof_value89=sequenceof_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, sequenceof_value89.Tree);

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// Smi.g:703:8: ( cstr_value )=> cstr_value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(703, 24);
				PushFollow(Follow._cstr_value_in_value2804);
				cstr_value90=cstr_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, cstr_value90.Tree);

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// Smi.g:704:8: ( obj_id_comp_lst )=> obj_id_comp_lst
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(704, 29);
				PushFollow(Follow._obj_id_comp_lst_in_value2820);
				obj_id_comp_lst91=obj_id_comp_lst();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, obj_id_comp_lst91.Tree);

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// Smi.g:705:8: ( PLUS_INFINITY_KW )=> PLUS_INFINITY_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(705, 30);
				PLUS_INFINITY_KW92=(IToken)Match(input,PLUS_INFINITY_KW,Follow._PLUS_INFINITY_KW_in_value2836); if (state.failed) return retval;
				if (state.backtracking == 0) {
				PLUS_INFINITY_KW92_tree = (CommonTree)adaptor.Create(PLUS_INFINITY_KW92);
				adaptor.AddChild(root_0, PLUS_INFINITY_KW92_tree);
				}

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// Smi.g:706:8: ( MINUS_INFINITY_KW )=> MINUS_INFINITY_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(706, 31);
				MINUS_INFINITY_KW93=(IToken)Match(input,MINUS_INFINITY_KW,Follow._MINUS_INFINITY_KW_in_value2852); if (state.failed) return retval;
				if (state.backtracking == 0) {
				MINUS_INFINITY_KW93_tree = (CommonTree)adaptor.Create(MINUS_INFINITY_KW93);
				adaptor.AddChild(root_0, MINUS_INFINITY_KW93_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("value", 17);
			LeaveRule("value", 17);
			LeaveRule_value();
		}
		DebugLocation(706, 47);
		} finally { DebugExitRule(GrammarFileName, "value"); }
		return retval;

	}
	// $ANTLR end "value"

	partial void EnterRule_built_in_type();
	partial void LeaveRule_built_in_type();
	// $ANTLR start "built_in_type"
	// Smi.g:708:1: built_in_type : ( any_type | bit_string_type | boolean_type | character_str_type | choice_type | embedded_type EMBEDDED_KW PDV_KW | enum_type | external_type | integer_type | null_type | object_identifier_type | octetString_type | real_type | relativeOid_type | sequence_type | sequenceof_type | set_type | setof_type | tagged_type );
	[GrammarRule("built_in_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> built_in_type()
	{
		EnterRule_built_in_type();
		EnterRule("built_in_type", 18);
		TraceIn("built_in_type", 18);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken EMBEDDED_KW100 = default(IToken);
		IToken PDV_KW101 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> any_type94 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> bit_string_type95 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> boolean_type96 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> character_str_type97 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> choice_type98 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> embedded_type99 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> enum_type102 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> external_type103 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> integer_type104 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> null_type105 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> object_identifier_type106 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> octetString_type107 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> real_type108 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> relativeOid_type109 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> sequence_type110 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> sequenceof_type111 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> set_type112 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> setof_type113 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> tagged_type114 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree EMBEDDED_KW100_tree = default(CommonTree);
		CommonTree PDV_KW101_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "built_in_type");
		DebugLocation(708, 19);
		try
		{
			// Smi.g:708:14: ( any_type | bit_string_type | boolean_type | character_str_type | choice_type | embedded_type EMBEDDED_KW PDV_KW | enum_type | external_type | integer_type | null_type | object_identifier_type | octetString_type | real_type | relativeOid_type | sequence_type | sequenceof_type | set_type | setof_type | tagged_type )
			int alt25=19;
			try { DebugEnterDecision(25, false);
			switch (input.LA(1))
			{
			case ANY_KW:
				{
				alt25 = 1;
				}
				break;
			case BIT_KW:
				{
				alt25 = 2;
				}
				break;
			case BOOLEAN_KW:
				{
				alt25 = 3;
				}
				break;
			case BMP_STR_KW:
			case CHARACTER_KW:
			case GENERALIZED_TIME_KW:
			case GENERAL_STR_KW:
			case GRAPHIC_STR_KW:
			case IA5_STRING_KW:
			case ISO646_STR_KW:
			case NUMERIC_STR_KW:
			case PRINTABLE_STR_KW:
			case T61_STR_KW:
			case TELETEX_STR_KW:
			case UNIVERSAL_STR_KW:
			case UTC_TIME_KW:
			case UTF8_STR_KW:
			case VIDEOTEX_STR_KW:
			case VISIBLE_STR_KW:
				{
				alt25 = 4;
				}
				break;
			case CHOICE_KW:
				{
				alt25 = 5;
				}
				break;
			case EMBEDDED_KW:
				{
				alt25 = 6;
				}
				break;
			case ENUMERATED_KW:
				{
				alt25 = 7;
				}
				break;
			case EXTERNAL_KW:
				{
				alt25 = 8;
				}
				break;
			case INTEGER_KW:
				{
				alt25 = 9;
				}
				break;
			case NULL_KW:
				{
				alt25 = 10;
				}
				break;
			case OBJECT_KW:
				{
				alt25 = 11;
				}
				break;
			case OCTET_KW:
				{
				alt25 = 12;
				}
				break;
			case REAL_KW:
				{
				alt25 = 13;
				}
				break;
			case 179:
				{
				alt25 = 14;
				}
				break;
			case SEQUENCE_KW:
				{
				int LA25_2 = input.LA(2);

				if ((LA25_2==L_BRACE))
				{
					alt25 = 15;
				}
				else if ((LA25_2==OF_KW||LA25_2==SIZE_KW))
				{
					alt25 = 16;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 25, 15, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case SET_KW:
				{
				int LA25_2 = input.LA(2);

				if ((LA25_2==L_BRACE))
				{
					alt25 = 17;
				}
				else if ((LA25_2==OF_KW||LA25_2==SIZE_KW))
				{
					alt25 = 18;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 25, 16, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case L_BRACKET:
				{
				alt25 = 19;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 25, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(25); }
			switch (alt25)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:708:16: any_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(708, 16);
				PushFollow(Follow._any_type_in_built_in_type2859);
				any_type94=any_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, any_type94.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:709:16: bit_string_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(709, 16);
				PushFollow(Follow._bit_string_type_in_built_in_type2877);
				bit_string_type95=bit_string_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, bit_string_type95.Tree);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:710:16: boolean_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(710, 16);
				PushFollow(Follow._boolean_type_in_built_in_type2895);
				boolean_type96=boolean_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, boolean_type96.Tree);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Smi.g:711:16: character_str_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(711, 16);
				PushFollow(Follow._character_str_type_in_built_in_type2913);
				character_str_type97=character_str_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, character_str_type97.Tree);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Smi.g:712:16: choice_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(712, 16);
				PushFollow(Follow._choice_type_in_built_in_type2931);
				choice_type98=choice_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, choice_type98.Tree);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// Smi.g:713:16: embedded_type EMBEDDED_KW PDV_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(713, 16);
				PushFollow(Follow._embedded_type_in_built_in_type2948);
				embedded_type99=embedded_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, embedded_type99.Tree);
				DebugLocation(713, 30);
				EMBEDDED_KW100=(IToken)Match(input,EMBEDDED_KW,Follow._EMBEDDED_KW_in_built_in_type2950); if (state.failed) return retval;
				if (state.backtracking == 0) {
				EMBEDDED_KW100_tree = (CommonTree)adaptor.Create(EMBEDDED_KW100);
				adaptor.AddChild(root_0, EMBEDDED_KW100_tree);
				}
				DebugLocation(713, 42);
				PDV_KW101=(IToken)Match(input,PDV_KW,Follow._PDV_KW_in_built_in_type2952); if (state.failed) return retval;
				if (state.backtracking == 0) {
				PDV_KW101_tree = (CommonTree)adaptor.Create(PDV_KW101);
				adaptor.AddChild(root_0, PDV_KW101_tree);
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// Smi.g:714:16: enum_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(714, 16);
				PushFollow(Follow._enum_type_in_built_in_type2970);
				enum_type102=enum_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enum_type102.Tree);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// Smi.g:715:16: external_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(715, 16);
				PushFollow(Follow._external_type_in_built_in_type2987);
				external_type103=external_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, external_type103.Tree);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// Smi.g:716:9: integer_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(716, 9);
				PushFollow(Follow._integer_type_in_built_in_type2997);
				integer_type104=integer_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, integer_type104.Tree);

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// Smi.g:717:9: null_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(717, 9);
				PushFollow(Follow._null_type_in_built_in_type3007);
				null_type105=null_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, null_type105.Tree);

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// Smi.g:718:9: object_identifier_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(718, 9);
				PushFollow(Follow._object_identifier_type_in_built_in_type3017);
				object_identifier_type106=object_identifier_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, object_identifier_type106.Tree);

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// Smi.g:719:9: octetString_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(719, 9);
				PushFollow(Follow._octetString_type_in_built_in_type3027);
				octetString_type107=octetString_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, octetString_type107.Tree);

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// Smi.g:720:9: real_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(720, 9);
				PushFollow(Follow._real_type_in_built_in_type3037);
				real_type108=real_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, real_type108.Tree);

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// Smi.g:721:9: relativeOid_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(721, 9);
				PushFollow(Follow._relativeOid_type_in_built_in_type3047);
				relativeOid_type109=relativeOid_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, relativeOid_type109.Tree);

				}
				break;
			case 15:
				DebugEnterAlt(15);
				// Smi.g:722:9: sequence_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(722, 9);
				PushFollow(Follow._sequence_type_in_built_in_type3057);
				sequence_type110=sequence_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, sequence_type110.Tree);

				}
				break;
			case 16:
				DebugEnterAlt(16);
				// Smi.g:723:9: sequenceof_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(723, 9);
				PushFollow(Follow._sequenceof_type_in_built_in_type3067);
				sequenceof_type111=sequenceof_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, sequenceof_type111.Tree);

				}
				break;
			case 17:
				DebugEnterAlt(17);
				// Smi.g:724:9: set_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(724, 9);
				PushFollow(Follow._set_type_in_built_in_type3077);
				set_type112=set_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, set_type112.Tree);

				}
				break;
			case 18:
				DebugEnterAlt(18);
				// Smi.g:725:9: setof_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(725, 9);
				PushFollow(Follow._setof_type_in_built_in_type3087);
				setof_type113=setof_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, setof_type113.Tree);

				}
				break;
			case 19:
				DebugEnterAlt(19);
				// Smi.g:726:9: tagged_type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(726, 9);
				PushFollow(Follow._tagged_type_in_built_in_type3097);
				tagged_type114=tagged_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, tagged_type114.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("built_in_type", 18);
			LeaveRule("built_in_type", 18);
			LeaveRule_built_in_type();
		}
		DebugLocation(726, 19);
		} finally { DebugExitRule(GrammarFileName, "built_in_type"); }
		return retval;

	}
	// $ANTLR end "built_in_type"

	partial void EnterRule_defined_type();
	partial void LeaveRule_defined_type();
	// $ANTLR start "defined_type"
	// Smi.g:728:1: defined_type : ( UPPER DOT )? UPPER ( constraint )? ;
	[GrammarRule("defined_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> defined_type()
	{
		EnterRule_defined_type();
		EnterRule("defined_type", 19);
		TraceIn("defined_type", 19);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken UPPER115 = default(IToken);
		IToken DOT116 = default(IToken);
		IToken UPPER117 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> constraint118 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree UPPER115_tree = default(CommonTree);
		CommonTree DOT116_tree = default(CommonTree);
		CommonTree UPPER117_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "defined_type");
		DebugLocation(728, 47);
		try
		{
			// Smi.g:728:13: ( ( UPPER DOT )? UPPER ( constraint )? )
			DebugEnterAlt(1);
			// Smi.g:728:15: ( UPPER DOT )? UPPER ( constraint )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(728, 15);
			// Smi.g:728:15: ( UPPER DOT )?
			int alt26=2;
			try { DebugEnterSubRule(26);
			try { DebugEnterDecision(26, false);
			int LA26_1 = input.LA(1);

			if ((LA26_1==UPPER))
			{
				int LA26_2 = input.LA(2);

				if ((LA26_2==DOT))
				{
					alt26 = 1;
				}
			}
			} finally { DebugExitDecision(26); }
			switch (alt26)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:728:16: UPPER DOT
				{
				DebugLocation(728, 16);
				UPPER115=(IToken)Match(input,UPPER,Follow._UPPER_in_defined_type3105); if (state.failed) return retval;
				if (state.backtracking == 0) {
				UPPER115_tree = (CommonTree)adaptor.Create(UPPER115);
				adaptor.AddChild(root_0, UPPER115_tree);
				}
				DebugLocation(728, 22);
				DOT116=(IToken)Match(input,DOT,Follow._DOT_in_defined_type3107); if (state.failed) return retval;
				if (state.backtracking == 0) {
				DOT116_tree = (CommonTree)adaptor.Create(DOT116);
				adaptor.AddChild(root_0, DOT116_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(26); }

			DebugLocation(728, 28);
			UPPER117=(IToken)Match(input,UPPER,Follow._UPPER_in_defined_type3111); if (state.failed) return retval;
			if (state.backtracking == 0) {
			UPPER117_tree = (CommonTree)adaptor.Create(UPPER117);
			adaptor.AddChild(root_0, UPPER117_tree);
			}
			DebugLocation(728, 34);
			// Smi.g:728:34: ( constraint )?
			int alt27=2;
			try { DebugEnterSubRule(27);
			try { DebugEnterDecision(27, false);
			int LA27_1 = input.LA(1);

			if ((LA27_1==L_PAREN))
			{
				alt27 = 1;
			}
			} finally { DebugExitDecision(27); }
			switch (alt27)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:728:35: constraint
				{
				DebugLocation(728, 35);
				PushFollow(Follow._constraint_in_defined_type3114);
				constraint118=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constraint118.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(27); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("defined_type", 19);
			LeaveRule("defined_type", 19);
			LeaveRule_defined_type();
		}
		DebugLocation(728, 47);
		} finally { DebugExitRule(GrammarFileName, "defined_type"); }
		return retval;

	}
	// $ANTLR end "defined_type"

	partial void EnterRule_selection_type();
	partial void LeaveRule_selection_type();
	// $ANTLR start "selection_type"
	// Smi.g:730:1: selection_type : LOWER LESS type ;
	[GrammarRule("selection_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> selection_type()
	{
		EnterRule_selection_type();
		EnterRule("selection_type", 20);
		TraceIn("selection_type", 20);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken LOWER119 = default(IToken);
		IToken LESS120 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> type121 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree LOWER119_tree = default(CommonTree);
		CommonTree LESS120_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "selection_type");
		DebugLocation(730, 31);
		try
		{
			// Smi.g:730:15: ( LOWER LESS type )
			DebugEnterAlt(1);
			// Smi.g:730:17: LOWER LESS type
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(730, 17);
			LOWER119=(IToken)Match(input,LOWER,Follow._LOWER_in_selection_type3124); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LOWER119_tree = (CommonTree)adaptor.Create(LOWER119);
			adaptor.AddChild(root_0, LOWER119_tree);
			}
			DebugLocation(730, 23);
			LESS120=(IToken)Match(input,LESS,Follow._LESS_in_selection_type3126); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LESS120_tree = (CommonTree)adaptor.Create(LESS120);
			adaptor.AddChild(root_0, LESS120_tree);
			}
			DebugLocation(730, 28);
			PushFollow(Follow._type_in_selection_type3128);
			type121=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type121.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("selection_type", 20);
			LeaveRule("selection_type", 20);
			LeaveRule_selection_type();
		}
		DebugLocation(730, 31);
		} finally { DebugExitRule(GrammarFileName, "selection_type"); }
		return retval;

	}
	// $ANTLR end "selection_type"

	partial void EnterRule_any_type();
	partial void LeaveRule_any_type();
	// $ANTLR start "any_type"
	// Smi.g:732:1: any_type : ANY_KW ( DEFINED_KW BY_KW LOWER )? ;
	[GrammarRule("any_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> any_type()
	{
		EnterRule_any_type();
		EnterRule("any_type", 21);
		TraceIn("any_type", 21);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken ANY_KW122 = default(IToken);
		IToken DEFINED_KW123 = default(IToken);
		IToken BY_KW124 = default(IToken);
		IToken LOWER125 = default(IToken);

		CommonTree ANY_KW122_tree = default(CommonTree);
		CommonTree DEFINED_KW123_tree = default(CommonTree);
		CommonTree BY_KW124_tree = default(CommonTree);
		CommonTree LOWER125_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "any_type");
		DebugLocation(732, 43);
		try
		{
			// Smi.g:732:9: ( ANY_KW ( DEFINED_KW BY_KW LOWER )? )
			DebugEnterAlt(1);
			// Smi.g:732:11: ANY_KW ( DEFINED_KW BY_KW LOWER )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(732, 11);
			ANY_KW122=(IToken)Match(input,ANY_KW,Follow._ANY_KW_in_any_type3135); if (state.failed) return retval;
			if (state.backtracking == 0) {
			ANY_KW122_tree = (CommonTree)adaptor.Create(ANY_KW122);
			adaptor.AddChild(root_0, ANY_KW122_tree);
			}
			DebugLocation(732, 18);
			// Smi.g:732:18: ( DEFINED_KW BY_KW LOWER )?
			int alt28=2;
			try { DebugEnterSubRule(28);
			try { DebugEnterDecision(28, false);
			int LA28_1 = input.LA(1);

			if ((LA28_1==DEFINED_KW))
			{
				alt28 = 1;
			}
			} finally { DebugExitDecision(28); }
			switch (alt28)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:732:19: DEFINED_KW BY_KW LOWER
				{
				DebugLocation(732, 19);
				DEFINED_KW123=(IToken)Match(input,DEFINED_KW,Follow._DEFINED_KW_in_any_type3138); if (state.failed) return retval;
				if (state.backtracking == 0) {
				DEFINED_KW123_tree = (CommonTree)adaptor.Create(DEFINED_KW123);
				adaptor.AddChild(root_0, DEFINED_KW123_tree);
				}
				DebugLocation(732, 30);
				BY_KW124=(IToken)Match(input,BY_KW,Follow._BY_KW_in_any_type3140); if (state.failed) return retval;
				if (state.backtracking == 0) {
				BY_KW124_tree = (CommonTree)adaptor.Create(BY_KW124);
				adaptor.AddChild(root_0, BY_KW124_tree);
				}
				DebugLocation(732, 36);
				LOWER125=(IToken)Match(input,LOWER,Follow._LOWER_in_any_type3142); if (state.failed) return retval;
				if (state.backtracking == 0) {
				LOWER125_tree = (CommonTree)adaptor.Create(LOWER125);
				adaptor.AddChild(root_0, LOWER125_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(28); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("any_type", 21);
			LeaveRule("any_type", 21);
			LeaveRule_any_type();
		}
		DebugLocation(732, 43);
		} finally { DebugExitRule(GrammarFileName, "any_type"); }
		return retval;

	}
	// $ANTLR end "any_type"

	partial void EnterRule_bit_string_type();
	partial void LeaveRule_bit_string_type();
	// $ANTLR start "bit_string_type"
	// Smi.g:735:1: bit_string_type : BIT_KW STRING_KW ( ( L_BRACE namedNumber )=> namedNumber_list )? ( constraint )? ;
	[GrammarRule("bit_string_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> bit_string_type()
	{
		EnterRule_bit_string_type();
		EnterRule("bit_string_type", 22);
		TraceIn("bit_string_type", 22);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken BIT_KW126 = default(IToken);
		IToken STRING_KW127 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> namedNumber_list128 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> constraint129 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree BIT_KW126_tree = default(CommonTree);
		CommonTree STRING_KW127_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "bit_string_type");
		DebugLocation(735, 93);
		try
		{
			// Smi.g:735:16: ( BIT_KW STRING_KW ( ( L_BRACE namedNumber )=> namedNumber_list )? ( constraint )? )
			DebugEnterAlt(1);
			// Smi.g:735:18: BIT_KW STRING_KW ( ( L_BRACE namedNumber )=> namedNumber_list )? ( constraint )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(735, 18);
			BIT_KW126=(IToken)Match(input,BIT_KW,Follow._BIT_KW_in_bit_string_type3154); if (state.failed) return retval;
			if (state.backtracking == 0) {
			BIT_KW126_tree = (CommonTree)adaptor.Create(BIT_KW126);
			adaptor.AddChild(root_0, BIT_KW126_tree);
			}
			DebugLocation(735, 25);
			STRING_KW127=(IToken)Match(input,STRING_KW,Follow._STRING_KW_in_bit_string_type3156); if (state.failed) return retval;
			if (state.backtracking == 0) {
			STRING_KW127_tree = (CommonTree)adaptor.Create(STRING_KW127);
			adaptor.AddChild(root_0, STRING_KW127_tree);
			}
			DebugLocation(735, 35);
			// Smi.g:735:35: ( ( L_BRACE namedNumber )=> namedNumber_list )?
			int alt29=2;
			try { DebugEnterSubRule(29);
			try { DebugEnterDecision(29, false);
			int LA29_1 = input.LA(1);

			if ((LA29_1==L_BRACE) && (EvaluatePredicate(synpred16_Smi_fragment)))
			{
				alt29 = 1;
			}
			} finally { DebugExitDecision(29); }
			switch (alt29)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:735:36: ( L_BRACE namedNumber )=> namedNumber_list
				{
				DebugLocation(735, 61);
				PushFollow(Follow._namedNumber_list_in_bit_string_type3167);
				namedNumber_list128=namedNumber_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, namedNumber_list128.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(29); }

			DebugLocation(735, 80);
			// Smi.g:735:80: ( constraint )?
			int alt30=2;
			try { DebugEnterSubRule(30);
			try { DebugEnterDecision(30, false);
			int LA30_1 = input.LA(1);

			if ((LA30_1==L_PAREN))
			{
				alt30 = 1;
			}
			} finally { DebugExitDecision(30); }
			switch (alt30)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:735:81: constraint
				{
				DebugLocation(735, 81);
				PushFollow(Follow._constraint_in_bit_string_type3172);
				constraint129=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constraint129.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(30); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("bit_string_type", 22);
			LeaveRule("bit_string_type", 22);
			LeaveRule_bit_string_type();
		}
		DebugLocation(735, 93);
		} finally { DebugExitRule(GrammarFileName, "bit_string_type"); }
		return retval;

	}
	// $ANTLR end "bit_string_type"

	partial void EnterRule_boolean_type();
	partial void LeaveRule_boolean_type();
	// $ANTLR start "boolean_type"
	// Smi.g:738:1: boolean_type : BOOLEAN_KW ;
	[GrammarRule("boolean_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> boolean_type()
	{
		EnterRule_boolean_type();
		EnterRule("boolean_type", 23);
		TraceIn("boolean_type", 23);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken BOOLEAN_KW130 = default(IToken);

		CommonTree BOOLEAN_KW130_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "boolean_type");
		DebugLocation(738, 24);
		try
		{
			// Smi.g:738:13: ( BOOLEAN_KW )
			DebugEnterAlt(1);
			// Smi.g:738:15: BOOLEAN_KW
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(738, 15);
			BOOLEAN_KW130=(IToken)Match(input,BOOLEAN_KW,Follow._BOOLEAN_KW_in_boolean_type3183); if (state.failed) return retval;
			if (state.backtracking == 0) {
			BOOLEAN_KW130_tree = (CommonTree)adaptor.Create(BOOLEAN_KW130);
			adaptor.AddChild(root_0, BOOLEAN_KW130_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("boolean_type", 23);
			LeaveRule("boolean_type", 23);
			LeaveRule_boolean_type();
		}
		DebugLocation(738, 24);
		} finally { DebugExitRule(GrammarFileName, "boolean_type"); }
		return retval;

	}
	// $ANTLR end "boolean_type"

	partial void EnterRule_character_str_type();
	partial void LeaveRule_character_str_type();
	// $ANTLR start "character_str_type"
	// Smi.g:740:1: character_str_type : ( CHARACTER_KW STRING_KW | character_set ( constraint )? );
	[GrammarRule("character_str_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> character_str_type()
	{
		EnterRule_character_str_type();
		EnterRule("character_str_type", 24);
		TraceIn("character_str_type", 24);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken CHARACTER_KW131 = default(IToken);
		IToken STRING_KW132 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> character_set133 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> constraint134 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree CHARACTER_KW131_tree = default(CommonTree);
		CommonTree STRING_KW132_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "character_str_type");
		DebugLocation(740, 73);
		try
		{
			// Smi.g:740:19: ( CHARACTER_KW STRING_KW | character_set ( constraint )? )
			int alt32=2;
			try { DebugEnterDecision(32, false);
			int LA32_1 = input.LA(1);

			if ((LA32_1==CHARACTER_KW))
			{
				alt32 = 1;
			}
			else if ((LA32_1==BMP_STR_KW||(LA32_1>=GENERALIZED_TIME_KW && LA32_1<=GRAPHIC_STR_KW)||LA32_1==IA5_STRING_KW||LA32_1==ISO646_STR_KW||LA32_1==NUMERIC_STR_KW||LA32_1==PRINTABLE_STR_KW||LA32_1==T61_STR_KW||LA32_1==TELETEX_STR_KW||LA32_1==UNIVERSAL_STR_KW||(LA32_1>=UTC_TIME_KW && LA32_1<=VISIBLE_STR_KW)))
			{
				alt32 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 32, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(32); }
			switch (alt32)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:740:21: CHARACTER_KW STRING_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(740, 21);
				CHARACTER_KW131=(IToken)Match(input,CHARACTER_KW,Follow._CHARACTER_KW_in_character_str_type3190); if (state.failed) return retval;
				if (state.backtracking == 0) {
				CHARACTER_KW131_tree = (CommonTree)adaptor.Create(CHARACTER_KW131);
				adaptor.AddChild(root_0, CHARACTER_KW131_tree);
				}
				DebugLocation(740, 34);
				STRING_KW132=(IToken)Match(input,STRING_KW,Follow._STRING_KW_in_character_str_type3192); if (state.failed) return retval;
				if (state.backtracking == 0) {
				STRING_KW132_tree = (CommonTree)adaptor.Create(STRING_KW132);
				adaptor.AddChild(root_0, STRING_KW132_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:740:46: character_set ( constraint )?
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(740, 46);
				PushFollow(Follow._character_set_in_character_str_type3196);
				character_set133=character_set();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, character_set133.Tree);
				DebugLocation(740, 60);
				// Smi.g:740:60: ( constraint )?
				int alt31=2;
				try { DebugEnterSubRule(31);
				try { DebugEnterDecision(31, false);
				int LA31_1 = input.LA(1);

				if ((LA31_1==L_PAREN))
				{
					alt31 = 1;
				}
				} finally { DebugExitDecision(31); }
				switch (alt31)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:740:61: constraint
					{
					DebugLocation(740, 61);
					PushFollow(Follow._constraint_in_character_str_type3199);
					constraint134=constraint();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, constraint134.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(31); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("character_str_type", 24);
			LeaveRule("character_str_type", 24);
			LeaveRule_character_str_type();
		}
		DebugLocation(740, 73);
		} finally { DebugExitRule(GrammarFileName, "character_str_type"); }
		return retval;

	}
	// $ANTLR end "character_str_type"

	partial void EnterRule_choice_type();
	partial void LeaveRule_choice_type();
	// $ANTLR start "choice_type"
	// Smi.g:742:1: choice_type : CHOICE_KW L_BRACE elementType_list R_BRACE ;
	[GrammarRule("choice_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> choice_type()
	{
		EnterRule_choice_type();
		EnterRule("choice_type", 25);
		TraceIn("choice_type", 25);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken CHOICE_KW135 = default(IToken);
		IToken L_BRACE136 = default(IToken);
		IToken R_BRACE138 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> elementType_list137 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree CHOICE_KW135_tree = default(CommonTree);
		CommonTree L_BRACE136_tree = default(CommonTree);
		CommonTree R_BRACE138_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "choice_type");
		DebugLocation(742, 55);
		try
		{
			// Smi.g:742:12: ( CHOICE_KW L_BRACE elementType_list R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:742:14: CHOICE_KW L_BRACE elementType_list R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(742, 14);
			CHOICE_KW135=(IToken)Match(input,CHOICE_KW,Follow._CHOICE_KW_in_choice_type3209); if (state.failed) return retval;
			if (state.backtracking == 0) {
			CHOICE_KW135_tree = (CommonTree)adaptor.Create(CHOICE_KW135);
			adaptor.AddChild(root_0, CHOICE_KW135_tree);
			}
			DebugLocation(742, 24);
			L_BRACE136=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_choice_type3211); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE136_tree = (CommonTree)adaptor.Create(L_BRACE136);
			adaptor.AddChild(root_0, L_BRACE136_tree);
			}
			DebugLocation(742, 32);
			PushFollow(Follow._elementType_list_in_choice_type3213);
			elementType_list137=elementType_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, elementType_list137.Tree);
			DebugLocation(742, 49);
			R_BRACE138=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_choice_type3215); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE138_tree = (CommonTree)adaptor.Create(R_BRACE138);
			adaptor.AddChild(root_0, R_BRACE138_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("choice_type", 25);
			LeaveRule("choice_type", 25);
			LeaveRule_choice_type();
		}
		DebugLocation(742, 55);
		} finally { DebugExitRule(GrammarFileName, "choice_type"); }
		return retval;

	}
	// $ANTLR end "choice_type"

	partial void EnterRule_embedded_type();
	partial void LeaveRule_embedded_type();
	// $ANTLR start "embedded_type"
	// Smi.g:744:1: embedded_type : EMBEDDED_KW PDV_KW ;
	[GrammarRule("embedded_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> embedded_type()
	{
		EnterRule_embedded_type();
		EnterRule("embedded_type", 26);
		TraceIn("embedded_type", 26);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken EMBEDDED_KW139 = default(IToken);
		IToken PDV_KW140 = default(IToken);

		CommonTree EMBEDDED_KW139_tree = default(CommonTree);
		CommonTree PDV_KW140_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "embedded_type");
		DebugLocation(744, 33);
		try
		{
			// Smi.g:744:14: ( EMBEDDED_KW PDV_KW )
			DebugEnterAlt(1);
			// Smi.g:744:16: EMBEDDED_KW PDV_KW
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(744, 16);
			EMBEDDED_KW139=(IToken)Match(input,EMBEDDED_KW,Follow._EMBEDDED_KW_in_embedded_type3222); if (state.failed) return retval;
			if (state.backtracking == 0) {
			EMBEDDED_KW139_tree = (CommonTree)adaptor.Create(EMBEDDED_KW139);
			adaptor.AddChild(root_0, EMBEDDED_KW139_tree);
			}
			DebugLocation(744, 28);
			PDV_KW140=(IToken)Match(input,PDV_KW,Follow._PDV_KW_in_embedded_type3224); if (state.failed) return retval;
			if (state.backtracking == 0) {
			PDV_KW140_tree = (CommonTree)adaptor.Create(PDV_KW140);
			adaptor.AddChild(root_0, PDV_KW140_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("embedded_type", 26);
			LeaveRule("embedded_type", 26);
			LeaveRule_embedded_type();
		}
		DebugLocation(744, 33);
		} finally { DebugExitRule(GrammarFileName, "embedded_type"); }
		return retval;

	}
	// $ANTLR end "embedded_type"

	partial void EnterRule_enum_type();
	partial void LeaveRule_enum_type();
	// $ANTLR start "enum_type"
	// Smi.g:746:1: enum_type : ENUMERATED_KW namedNumber_list ;
	[GrammarRule("enum_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> enum_type()
	{
		EnterRule_enum_type();
		EnterRule("enum_type", 27);
		TraceIn("enum_type", 27);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken ENUMERATED_KW141 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> namedNumber_list142 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree ENUMERATED_KW141_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "enum_type");
		DebugLocation(746, 41);
		try
		{
			// Smi.g:746:10: ( ENUMERATED_KW namedNumber_list )
			DebugEnterAlt(1);
			// Smi.g:746:12: ENUMERATED_KW namedNumber_list
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(746, 12);
			ENUMERATED_KW141=(IToken)Match(input,ENUMERATED_KW,Follow._ENUMERATED_KW_in_enum_type3231); if (state.failed) return retval;
			if (state.backtracking == 0) {
			ENUMERATED_KW141_tree = (CommonTree)adaptor.Create(ENUMERATED_KW141);
			adaptor.AddChild(root_0, ENUMERATED_KW141_tree);
			}
			DebugLocation(746, 26);
			PushFollow(Follow._namedNumber_list_in_enum_type3233);
			namedNumber_list142=namedNumber_list();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, namedNumber_list142.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enum_type", 27);
			LeaveRule("enum_type", 27);
			LeaveRule_enum_type();
		}
		DebugLocation(746, 41);
		} finally { DebugExitRule(GrammarFileName, "enum_type"); }
		return retval;

	}
	// $ANTLR end "enum_type"

	partial void EnterRule_external_type();
	partial void LeaveRule_external_type();
	// $ANTLR start "external_type"
	// Smi.g:748:1: external_type : EXTERNAL_KW ;
	[GrammarRule("external_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> external_type()
	{
		EnterRule_external_type();
		EnterRule("external_type", 28);
		TraceIn("external_type", 28);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken EXTERNAL_KW143 = default(IToken);

		CommonTree EXTERNAL_KW143_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "external_type");
		DebugLocation(748, 26);
		try
		{
			// Smi.g:748:14: ( EXTERNAL_KW )
			DebugEnterAlt(1);
			// Smi.g:748:16: EXTERNAL_KW
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(748, 16);
			EXTERNAL_KW143=(IToken)Match(input,EXTERNAL_KW,Follow._EXTERNAL_KW_in_external_type3240); if (state.failed) return retval;
			if (state.backtracking == 0) {
			EXTERNAL_KW143_tree = (CommonTree)adaptor.Create(EXTERNAL_KW143);
			adaptor.AddChild(root_0, EXTERNAL_KW143_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("external_type", 28);
			LeaveRule("external_type", 28);
			LeaveRule_external_type();
		}
		DebugLocation(748, 26);
		} finally { DebugExitRule(GrammarFileName, "external_type"); }
		return retval;

	}
	// $ANTLR end "external_type"

	partial void EnterRule_integer_type();
	partial void LeaveRule_integer_type();
	// $ANTLR start "integer_type"
	// Smi.g:751:1: integer_type : INTEGER_KW ( ( L_BRACE namedNumber )=> namedNumber_list | constraint )? ;
	[GrammarRule("integer_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> integer_type()
	{
		EnterRule_integer_type();
		EnterRule("integer_type", 29);
		TraceIn("integer_type", 29);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken INTEGER_KW144 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> namedNumber_list145 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> constraint146 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree INTEGER_KW144_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "integer_type");
		DebugLocation(751, 83);
		try
		{
			// Smi.g:751:13: ( INTEGER_KW ( ( L_BRACE namedNumber )=> namedNumber_list | constraint )? )
			DebugEnterAlt(1);
			// Smi.g:751:15: INTEGER_KW ( ( L_BRACE namedNumber )=> namedNumber_list | constraint )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(751, 15);
			INTEGER_KW144=(IToken)Match(input,INTEGER_KW,Follow._INTEGER_KW_in_integer_type3249); if (state.failed) return retval;
			if (state.backtracking == 0) {
			INTEGER_KW144_tree = (CommonTree)adaptor.Create(INTEGER_KW144);
			adaptor.AddChild(root_0, INTEGER_KW144_tree);
			}
			DebugLocation(751, 26);
			// Smi.g:751:26: ( ( L_BRACE namedNumber )=> namedNumber_list | constraint )?
			int alt33=3;
			try { DebugEnterSubRule(33);
			try { DebugEnterDecision(33, false);
			int LA33_1 = input.LA(1);

			if ((LA33_1==L_BRACE) && (EvaluatePredicate(synpred17_Smi_fragment)))
			{
				alt33 = 1;
			}
			else if ((LA33_1==L_PAREN))
			{
				alt33 = 2;
			}
			} finally { DebugExitDecision(33); }
			switch (alt33)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:751:27: ( L_BRACE namedNumber )=> namedNumber_list
				{
				DebugLocation(751, 52);
				PushFollow(Follow._namedNumber_list_in_integer_type3260);
				namedNumber_list145=namedNumber_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, namedNumber_list145.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:751:71: constraint
				{
				DebugLocation(751, 71);
				PushFollow(Follow._constraint_in_integer_type3264);
				constraint146=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constraint146.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(33); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("integer_type", 29);
			LeaveRule("integer_type", 29);
			LeaveRule_integer_type();
		}
		DebugLocation(751, 83);
		} finally { DebugExitRule(GrammarFileName, "integer_type"); }
		return retval;

	}
	// $ANTLR end "integer_type"

	partial void EnterRule_null_type();
	partial void LeaveRule_null_type();
	// $ANTLR start "null_type"
	// Smi.g:754:1: null_type : NULL_KW ;
	[GrammarRule("null_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> null_type()
	{
		EnterRule_null_type();
		EnterRule("null_type", 30);
		TraceIn("null_type", 30);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken NULL_KW147 = default(IToken);

		CommonTree NULL_KW147_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "null_type");
		DebugLocation(754, 18);
		try
		{
			// Smi.g:754:10: ( NULL_KW )
			DebugEnterAlt(1);
			// Smi.g:754:12: NULL_KW
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(754, 12);
			NULL_KW147=(IToken)Match(input,NULL_KW,Follow._NULL_KW_in_null_type3275); if (state.failed) return retval;
			if (state.backtracking == 0) {
			NULL_KW147_tree = (CommonTree)adaptor.Create(NULL_KW147);
			adaptor.AddChild(root_0, NULL_KW147_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("null_type", 30);
			LeaveRule("null_type", 30);
			LeaveRule_null_type();
		}
		DebugLocation(754, 18);
		} finally { DebugExitRule(GrammarFileName, "null_type"); }
		return retval;

	}
	// $ANTLR end "null_type"

	partial void EnterRule_object_identifier_type();
	partial void LeaveRule_object_identifier_type();
	// $ANTLR start "object_identifier_type"
	// Smi.g:756:1: object_identifier_type : OBJECT_KW IDENTIFIER_KW ;
	[GrammarRule("object_identifier_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> object_identifier_type()
	{
		EnterRule_object_identifier_type();
		EnterRule("object_identifier_type", 31);
		TraceIn("object_identifier_type", 31);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken OBJECT_KW148 = default(IToken);
		IToken IDENTIFIER_KW149 = default(IToken);

		CommonTree OBJECT_KW148_tree = default(CommonTree);
		CommonTree IDENTIFIER_KW149_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "object_identifier_type");
		DebugLocation(756, 47);
		try
		{
			// Smi.g:756:23: ( OBJECT_KW IDENTIFIER_KW )
			DebugEnterAlt(1);
			// Smi.g:756:25: OBJECT_KW IDENTIFIER_KW
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(756, 25);
			OBJECT_KW148=(IToken)Match(input,OBJECT_KW,Follow._OBJECT_KW_in_object_identifier_type3282); if (state.failed) return retval;
			if (state.backtracking == 0) {
			OBJECT_KW148_tree = (CommonTree)adaptor.Create(OBJECT_KW148);
			adaptor.AddChild(root_0, OBJECT_KW148_tree);
			}
			DebugLocation(756, 35);
			IDENTIFIER_KW149=(IToken)Match(input,IDENTIFIER_KW,Follow._IDENTIFIER_KW_in_object_identifier_type3284); if (state.failed) return retval;
			if (state.backtracking == 0) {
			IDENTIFIER_KW149_tree = (CommonTree)adaptor.Create(IDENTIFIER_KW149);
			adaptor.AddChild(root_0, IDENTIFIER_KW149_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("object_identifier_type", 31);
			LeaveRule("object_identifier_type", 31);
			LeaveRule_object_identifier_type();
		}
		DebugLocation(756, 47);
		} finally { DebugExitRule(GrammarFileName, "object_identifier_type"); }
		return retval;

	}
	// $ANTLR end "object_identifier_type"

	partial void EnterRule_octetString_type();
	partial void LeaveRule_octetString_type();
	// $ANTLR start "octetString_type"
	// Smi.g:758:1: octetString_type : OCTET_KW STRING_KW ( constraint )? ;
	[GrammarRule("octetString_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> octetString_type()
	{
		EnterRule_octetString_type();
		EnterRule("octetString_type", 32);
		TraceIn("octetString_type", 32);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken OCTET_KW150 = default(IToken);
		IToken STRING_KW151 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> constraint152 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree OCTET_KW150_tree = default(CommonTree);
		CommonTree STRING_KW151_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "octetString_type");
		DebugLocation(758, 51);
		try
		{
			// Smi.g:758:17: ( OCTET_KW STRING_KW ( constraint )? )
			DebugEnterAlt(1);
			// Smi.g:758:19: OCTET_KW STRING_KW ( constraint )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(758, 19);
			OCTET_KW150=(IToken)Match(input,OCTET_KW,Follow._OCTET_KW_in_octetString_type3291); if (state.failed) return retval;
			if (state.backtracking == 0) {
			OCTET_KW150_tree = (CommonTree)adaptor.Create(OCTET_KW150);
			adaptor.AddChild(root_0, OCTET_KW150_tree);
			}
			DebugLocation(758, 28);
			STRING_KW151=(IToken)Match(input,STRING_KW,Follow._STRING_KW_in_octetString_type3293); if (state.failed) return retval;
			if (state.backtracking == 0) {
			STRING_KW151_tree = (CommonTree)adaptor.Create(STRING_KW151);
			adaptor.AddChild(root_0, STRING_KW151_tree);
			}
			DebugLocation(758, 38);
			// Smi.g:758:38: ( constraint )?
			int alt34=2;
			try { DebugEnterSubRule(34);
			try { DebugEnterDecision(34, false);
			int LA34_1 = input.LA(1);

			if ((LA34_1==L_PAREN))
			{
				alt34 = 1;
			}
			} finally { DebugExitDecision(34); }
			switch (alt34)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:758:39: constraint
				{
				DebugLocation(758, 39);
				PushFollow(Follow._constraint_in_octetString_type3296);
				constraint152=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constraint152.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(34); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("octetString_type", 32);
			LeaveRule("octetString_type", 32);
			LeaveRule_octetString_type();
		}
		DebugLocation(758, 51);
		} finally { DebugExitRule(GrammarFileName, "octetString_type"); }
		return retval;

	}
	// $ANTLR end "octetString_type"

	partial void EnterRule_real_type();
	partial void LeaveRule_real_type();
	// $ANTLR start "real_type"
	// Smi.g:760:1: real_type : REAL_KW ;
	[GrammarRule("real_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> real_type()
	{
		EnterRule_real_type();
		EnterRule("real_type", 33);
		TraceIn("real_type", 33);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken REAL_KW153 = default(IToken);

		CommonTree REAL_KW153_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "real_type");
		DebugLocation(760, 18);
		try
		{
			// Smi.g:760:10: ( REAL_KW )
			DebugEnterAlt(1);
			// Smi.g:760:12: REAL_KW
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(760, 12);
			REAL_KW153=(IToken)Match(input,REAL_KW,Follow._REAL_KW_in_real_type3306); if (state.failed) return retval;
			if (state.backtracking == 0) {
			REAL_KW153_tree = (CommonTree)adaptor.Create(REAL_KW153);
			adaptor.AddChild(root_0, REAL_KW153_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("real_type", 33);
			LeaveRule("real_type", 33);
			LeaveRule_real_type();
		}
		DebugLocation(760, 18);
		} finally { DebugExitRule(GrammarFileName, "real_type"); }
		return retval;

	}
	// $ANTLR end "real_type"

	partial void EnterRule_relativeOid_type();
	partial void LeaveRule_relativeOid_type();
	// $ANTLR start "relativeOid_type"
	// Smi.g:763:1: relativeOid_type : 'RELATIVE-OID' ;
	[GrammarRule("relativeOid_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> relativeOid_type()
	{
		EnterRule_relativeOid_type();
		EnterRule("relativeOid_type", 34);
		TraceIn("relativeOid_type", 34);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal154 = default(IToken);

		CommonTree string_literal154_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "relativeOid_type");
		DebugLocation(763, 32);
		try
		{
			// Smi.g:763:17: ( 'RELATIVE-OID' )
			DebugEnterAlt(1);
			// Smi.g:763:19: 'RELATIVE-OID'
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(763, 19);
			string_literal154=(IToken)Match(input,179,Follow._179_in_relativeOid_type3315); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal154_tree = (CommonTree)adaptor.Create(string_literal154);
			adaptor.AddChild(root_0, string_literal154_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("relativeOid_type", 34);
			LeaveRule("relativeOid_type", 34);
			LeaveRule_relativeOid_type();
		}
		DebugLocation(763, 32);
		} finally { DebugExitRule(GrammarFileName, "relativeOid_type"); }
		return retval;

	}
	// $ANTLR end "relativeOid_type"

	partial void EnterRule_sequence_type();
	partial void LeaveRule_sequence_type();
	// $ANTLR start "sequence_type"
	// Smi.g:766:1: sequence_type : SEQUENCE_KW L_BRACE ( elementType_list )? R_BRACE ;
	[GrammarRule("sequence_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> sequence_type()
	{
		EnterRule_sequence_type();
		EnterRule("sequence_type", 35);
		TraceIn("sequence_type", 35);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken SEQUENCE_KW155 = default(IToken);
		IToken L_BRACE156 = default(IToken);
		IToken R_BRACE158 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> elementType_list157 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree SEQUENCE_KW155_tree = default(CommonTree);
		CommonTree L_BRACE156_tree = default(CommonTree);
		CommonTree R_BRACE158_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "sequence_type");
		DebugLocation(766, 63);
		try
		{
			// Smi.g:766:14: ( SEQUENCE_KW L_BRACE ( elementType_list )? R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:766:16: SEQUENCE_KW L_BRACE ( elementType_list )? R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(766, 16);
			SEQUENCE_KW155=(IToken)Match(input,SEQUENCE_KW,Follow._SEQUENCE_KW_in_sequence_type3323); if (state.failed) return retval;
			if (state.backtracking == 0) {
			SEQUENCE_KW155_tree = (CommonTree)adaptor.Create(SEQUENCE_KW155);
			adaptor.AddChild(root_0, SEQUENCE_KW155_tree);
			}
			DebugLocation(766, 28);
			L_BRACE156=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_sequence_type3325); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE156_tree = (CommonTree)adaptor.Create(L_BRACE156);
			adaptor.AddChild(root_0, L_BRACE156_tree);
			}
			DebugLocation(766, 36);
			// Smi.g:766:36: ( elementType_list )?
			int alt35=2;
			try { DebugEnterSubRule(35);
			try { DebugEnterDecision(35, false);
			int LA35_1 = input.LA(1);

			if ((LA35_1==COMPONENTS_KW||LA35_1==LOWER))
			{
				alt35 = 1;
			}
			} finally { DebugExitDecision(35); }
			switch (alt35)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:766:37: elementType_list
				{
				DebugLocation(766, 37);
				PushFollow(Follow._elementType_list_in_sequence_type3328);
				elementType_list157=elementType_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, elementType_list157.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(35); }

			DebugLocation(766, 56);
			R_BRACE158=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_sequence_type3332); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE158_tree = (CommonTree)adaptor.Create(R_BRACE158);
			adaptor.AddChild(root_0, R_BRACE158_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("sequence_type", 35);
			LeaveRule("sequence_type", 35);
			LeaveRule_sequence_type();
		}
		DebugLocation(766, 63);
		} finally { DebugExitRule(GrammarFileName, "sequence_type"); }
		return retval;

	}
	// $ANTLR end "sequence_type"

	partial void EnterRule_sequenceof_type();
	partial void LeaveRule_sequenceof_type();
	// $ANTLR start "sequenceof_type"
	// Smi.g:768:1: sequenceof_type : SEQUENCE_KW ( SIZE_KW constraint )? OF_KW type ;
	[GrammarRule("sequenceof_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> sequenceof_type()
	{
		EnterRule_sequenceof_type();
		EnterRule("sequenceof_type", 36);
		TraceIn("sequenceof_type", 36);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken SEQUENCE_KW159 = default(IToken);
		IToken SIZE_KW160 = default(IToken);
		IToken OF_KW162 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> constraint161 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> type163 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree SEQUENCE_KW159_tree = default(CommonTree);
		CommonTree SIZE_KW160_tree = default(CommonTree);
		CommonTree OF_KW162_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "sequenceof_type");
		DebugLocation(768, 61);
		try
		{
			// Smi.g:768:16: ( SEQUENCE_KW ( SIZE_KW constraint )? OF_KW type )
			DebugEnterAlt(1);
			// Smi.g:768:18: SEQUENCE_KW ( SIZE_KW constraint )? OF_KW type
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(768, 18);
			SEQUENCE_KW159=(IToken)Match(input,SEQUENCE_KW,Follow._SEQUENCE_KW_in_sequenceof_type3340); if (state.failed) return retval;
			if (state.backtracking == 0) {
			SEQUENCE_KW159_tree = (CommonTree)adaptor.Create(SEQUENCE_KW159);
			adaptor.AddChild(root_0, SEQUENCE_KW159_tree);
			}
			DebugLocation(768, 30);
			// Smi.g:768:30: ( SIZE_KW constraint )?
			int alt36=2;
			try { DebugEnterSubRule(36);
			try { DebugEnterDecision(36, false);
			int LA36_1 = input.LA(1);

			if ((LA36_1==SIZE_KW))
			{
				alt36 = 1;
			}
			} finally { DebugExitDecision(36); }
			switch (alt36)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:768:31: SIZE_KW constraint
				{
				DebugLocation(768, 31);
				SIZE_KW160=(IToken)Match(input,SIZE_KW,Follow._SIZE_KW_in_sequenceof_type3343); if (state.failed) return retval;
				if (state.backtracking == 0) {
				SIZE_KW160_tree = (CommonTree)adaptor.Create(SIZE_KW160);
				adaptor.AddChild(root_0, SIZE_KW160_tree);
				}
				DebugLocation(768, 39);
				PushFollow(Follow._constraint_in_sequenceof_type3345);
				constraint161=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constraint161.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(36); }

			DebugLocation(768, 52);
			OF_KW162=(IToken)Match(input,OF_KW,Follow._OF_KW_in_sequenceof_type3349); if (state.failed) return retval;
			if (state.backtracking == 0) {
			OF_KW162_tree = (CommonTree)adaptor.Create(OF_KW162);
			adaptor.AddChild(root_0, OF_KW162_tree);
			}
			DebugLocation(768, 58);
			PushFollow(Follow._type_in_sequenceof_type3351);
			type163=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type163.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("sequenceof_type", 36);
			LeaveRule("sequenceof_type", 36);
			LeaveRule_sequenceof_type();
		}
		DebugLocation(768, 61);
		} finally { DebugExitRule(GrammarFileName, "sequenceof_type"); }
		return retval;

	}
	// $ANTLR end "sequenceof_type"

	partial void EnterRule_set_type();
	partial void LeaveRule_set_type();
	// $ANTLR start "set_type"
	// Smi.g:770:1: set_type : SET_KW L_BRACE ( elementType_list )? R_BRACE ;
	[GrammarRule("set_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> set_type()
	{
		EnterRule_set_type();
		EnterRule("set_type", 37);
		TraceIn("set_type", 37);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken SET_KW164 = default(IToken);
		IToken L_BRACE165 = default(IToken);
		IToken R_BRACE167 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> elementType_list166 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree SET_KW164_tree = default(CommonTree);
		CommonTree L_BRACE165_tree = default(CommonTree);
		CommonTree R_BRACE167_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "set_type");
		DebugLocation(770, 52);
		try
		{
			// Smi.g:770:9: ( SET_KW L_BRACE ( elementType_list )? R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:770:11: SET_KW L_BRACE ( elementType_list )? R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(770, 11);
			SET_KW164=(IToken)Match(input,SET_KW,Follow._SET_KW_in_set_type3358); if (state.failed) return retval;
			if (state.backtracking == 0) {
			SET_KW164_tree = (CommonTree)adaptor.Create(SET_KW164);
			adaptor.AddChild(root_0, SET_KW164_tree);
			}
			DebugLocation(770, 18);
			L_BRACE165=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_set_type3360); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE165_tree = (CommonTree)adaptor.Create(L_BRACE165);
			adaptor.AddChild(root_0, L_BRACE165_tree);
			}
			DebugLocation(770, 26);
			// Smi.g:770:26: ( elementType_list )?
			int alt37=2;
			try { DebugEnterSubRule(37);
			try { DebugEnterDecision(37, false);
			int LA37_1 = input.LA(1);

			if ((LA37_1==COMPONENTS_KW||LA37_1==LOWER))
			{
				alt37 = 1;
			}
			} finally { DebugExitDecision(37); }
			switch (alt37)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:770:27: elementType_list
				{
				DebugLocation(770, 27);
				PushFollow(Follow._elementType_list_in_set_type3363);
				elementType_list166=elementType_list();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, elementType_list166.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(37); }

			DebugLocation(770, 46);
			R_BRACE167=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_set_type3367); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE167_tree = (CommonTree)adaptor.Create(R_BRACE167);
			adaptor.AddChild(root_0, R_BRACE167_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("set_type", 37);
			LeaveRule("set_type", 37);
			LeaveRule_set_type();
		}
		DebugLocation(770, 52);
		} finally { DebugExitRule(GrammarFileName, "set_type"); }
		return retval;

	}
	// $ANTLR end "set_type"

	partial void EnterRule_setof_type();
	partial void LeaveRule_setof_type();
	// $ANTLR start "setof_type"
	// Smi.g:772:1: setof_type : SET_KW ( SIZE_KW constraint )? OF_KW type ;
	[GrammarRule("setof_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> setof_type()
	{
		EnterRule_setof_type();
		EnterRule("setof_type", 38);
		TraceIn("setof_type", 38);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken SET_KW168 = default(IToken);
		IToken SIZE_KW169 = default(IToken);
		IToken OF_KW171 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> constraint170 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> type172 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree SET_KW168_tree = default(CommonTree);
		CommonTree SIZE_KW169_tree = default(CommonTree);
		CommonTree OF_KW171_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "setof_type");
		DebugLocation(772, 51);
		try
		{
			// Smi.g:772:11: ( SET_KW ( SIZE_KW constraint )? OF_KW type )
			DebugEnterAlt(1);
			// Smi.g:772:13: SET_KW ( SIZE_KW constraint )? OF_KW type
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(772, 13);
			SET_KW168=(IToken)Match(input,SET_KW,Follow._SET_KW_in_setof_type3374); if (state.failed) return retval;
			if (state.backtracking == 0) {
			SET_KW168_tree = (CommonTree)adaptor.Create(SET_KW168);
			adaptor.AddChild(root_0, SET_KW168_tree);
			}
			DebugLocation(772, 20);
			// Smi.g:772:20: ( SIZE_KW constraint )?
			int alt38=2;
			try { DebugEnterSubRule(38);
			try { DebugEnterDecision(38, false);
			int LA38_1 = input.LA(1);

			if ((LA38_1==SIZE_KW))
			{
				alt38 = 1;
			}
			} finally { DebugExitDecision(38); }
			switch (alt38)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:772:21: SIZE_KW constraint
				{
				DebugLocation(772, 21);
				SIZE_KW169=(IToken)Match(input,SIZE_KW,Follow._SIZE_KW_in_setof_type3377); if (state.failed) return retval;
				if (state.backtracking == 0) {
				SIZE_KW169_tree = (CommonTree)adaptor.Create(SIZE_KW169);
				adaptor.AddChild(root_0, SIZE_KW169_tree);
				}
				DebugLocation(772, 29);
				PushFollow(Follow._constraint_in_setof_type3379);
				constraint170=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constraint170.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(38); }

			DebugLocation(772, 42);
			OF_KW171=(IToken)Match(input,OF_KW,Follow._OF_KW_in_setof_type3383); if (state.failed) return retval;
			if (state.backtracking == 0) {
			OF_KW171_tree = (CommonTree)adaptor.Create(OF_KW171);
			adaptor.AddChild(root_0, OF_KW171_tree);
			}
			DebugLocation(772, 48);
			PushFollow(Follow._type_in_setof_type3385);
			type172=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type172.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("setof_type", 38);
			LeaveRule("setof_type", 38);
			LeaveRule_setof_type();
		}
		DebugLocation(772, 51);
		} finally { DebugExitRule(GrammarFileName, "setof_type"); }
		return retval;

	}
	// $ANTLR end "setof_type"

	partial void EnterRule_tagged_type();
	partial void LeaveRule_tagged_type();
	// $ANTLR start "tagged_type"
	// Smi.g:774:1: tagged_type : tag ( tag_default )? type ;
	[GrammarRule("tagged_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> tagged_type()
	{
		EnterRule_tagged_type();
		EnterRule("tagged_type", 39);
		TraceIn("tagged_type", 39);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		AstParserRuleReturnScope<CommonTree, IToken> tag173 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> tag_default174 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> type175 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		try { DebugEnterRule(GrammarFileName, "tagged_type");
		DebugLocation(774, 36);
		try
		{
			// Smi.g:774:12: ( tag ( tag_default )? type )
			DebugEnterAlt(1);
			// Smi.g:774:14: tag ( tag_default )? type
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(774, 14);
			PushFollow(Follow._tag_in_tagged_type3392);
			tag173=tag();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, tag173.Tree);
			DebugLocation(774, 18);
			// Smi.g:774:18: ( tag_default )?
			int alt39=2;
			try { DebugEnterSubRule(39);
			try { DebugEnterDecision(39, false);
			int LA39_1 = input.LA(1);

			if ((LA39_1==AUTOMATIC_KW||LA39_1==EXPLICIT_KW||LA39_1==IMPLICIT_KW))
			{
				alt39 = 1;
			}
			} finally { DebugExitDecision(39); }
			switch (alt39)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:774:19: tag_default
				{
				DebugLocation(774, 19);
				PushFollow(Follow._tag_default_in_tagged_type3395);
				tag_default174=tag_default();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, tag_default174.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(39); }

			DebugLocation(774, 33);
			PushFollow(Follow._type_in_tagged_type3399);
			type175=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type175.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("tagged_type", 39);
			LeaveRule("tagged_type", 39);
			LeaveRule_tagged_type();
		}
		DebugLocation(774, 36);
		} finally { DebugExitRule(GrammarFileName, "tagged_type"); }
		return retval;

	}
	// $ANTLR end "tagged_type"

	partial void EnterRule_namedNumber_list();
	partial void LeaveRule_namedNumber_list();
	// $ANTLR start "namedNumber_list"
	// Smi.g:776:1: namedNumber_list : L_BRACE namedNumber ( COMMA namedNumber )* R_BRACE ;
	[GrammarRule("namedNumber_list")]
	private AstParserRuleReturnScope<CommonTree, IToken> namedNumber_list()
	{
		EnterRule_namedNumber_list();
		EnterRule("namedNumber_list", 40);
		TraceIn("namedNumber_list", 40);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE176 = default(IToken);
		IToken COMMA178 = default(IToken);
		IToken R_BRACE180 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> namedNumber177 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> namedNumber179 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree L_BRACE176_tree = default(CommonTree);
		CommonTree COMMA178_tree = default(CommonTree);
		CommonTree R_BRACE180_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "namedNumber_list");
		DebugLocation(776, 66);
		try
		{
			// Smi.g:776:17: ( L_BRACE namedNumber ( COMMA namedNumber )* R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:776:19: L_BRACE namedNumber ( COMMA namedNumber )* R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(776, 19);
			L_BRACE176=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_namedNumber_list3406); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE176_tree = (CommonTree)adaptor.Create(L_BRACE176);
			adaptor.AddChild(root_0, L_BRACE176_tree);
			}
			DebugLocation(776, 27);
			PushFollow(Follow._namedNumber_in_namedNumber_list3408);
			namedNumber177=namedNumber();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, namedNumber177.Tree);
			DebugLocation(776, 39);
			// Smi.g:776:39: ( COMMA namedNumber )*
			try { DebugEnterSubRule(40);
			while (true)
			{
				int alt40=2;
				try { DebugEnterDecision(40, false);
				int LA40_1 = input.LA(1);

				if ((LA40_1==COMMA))
				{
					alt40 = 1;
				}


				} finally { DebugExitDecision(40); }
				switch ( alt40 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:776:40: COMMA namedNumber
					{
					DebugLocation(776, 40);
					COMMA178=(IToken)Match(input,COMMA,Follow._COMMA_in_namedNumber_list3411); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA178_tree = (CommonTree)adaptor.Create(COMMA178);
					adaptor.AddChild(root_0, COMMA178_tree);
					}
					DebugLocation(776, 46);
					PushFollow(Follow._namedNumber_in_namedNumber_list3413);
					namedNumber179=namedNumber();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, namedNumber179.Tree);

					}
					break;

				default:
					goto loop40;
				}
			}

			loop40:
				;

			} finally { DebugExitSubRule(40); }

			DebugLocation(776, 60);
			R_BRACE180=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_namedNumber_list3417); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE180_tree = (CommonTree)adaptor.Create(R_BRACE180);
			adaptor.AddChild(root_0, R_BRACE180_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namedNumber_list", 40);
			LeaveRule("namedNumber_list", 40);
			LeaveRule_namedNumber_list();
		}
		DebugLocation(776, 66);
		} finally { DebugExitRule(GrammarFileName, "namedNumber_list"); }
		return retval;

	}
	// $ANTLR end "namedNumber_list"

	partial void EnterRule_constraint();
	partial void LeaveRule_constraint();
	// $ANTLR start "constraint"
	// Smi.g:778:1: constraint : L_PAREN ( element_set_specs )? ( exception_spec )? R_PAREN ;
	[GrammarRule("constraint")]
	private AstParserRuleReturnScope<CommonTree, IToken> constraint()
	{
		EnterRule_constraint();
		EnterRule("constraint", 41);
		TraceIn("constraint", 41);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_PAREN181 = default(IToken);
		IToken R_PAREN184 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> element_set_specs182 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> exception_spec183 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree L_PAREN181_tree = default(CommonTree);
		CommonTree R_PAREN184_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "constraint");
		DebugLocation(778, 66);
		try
		{
			// Smi.g:778:11: ( L_PAREN ( element_set_specs )? ( exception_spec )? R_PAREN )
			DebugEnterAlt(1);
			// Smi.g:778:13: L_PAREN ( element_set_specs )? ( exception_spec )? R_PAREN
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(778, 13);
			L_PAREN181=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_constraint3424); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_PAREN181_tree = (CommonTree)adaptor.Create(L_PAREN181);
			adaptor.AddChild(root_0, L_PAREN181_tree);
			}
			DebugLocation(778, 21);
			// Smi.g:778:21: ( element_set_specs )?
			int alt41=2;
			try { DebugEnterSubRule(41);
			try { DebugEnterDecision(41, false);
			int LA41_1 = input.LA(1);

			if (((LA41_1>=ALL_KW && LA41_1<=ANY_KW)||(LA41_1>=BIT_KW && LA41_1<=BOOLEAN_KW)||(LA41_1>=B_STRING && LA41_1<=CHARACTER_KW)||LA41_1==CHOICE_KW||LA41_1==C_STRING||LA41_1==EMBEDDED_KW||LA41_1==ENUMERATED_KW||LA41_1==ERROR_KW||(LA41_1>=EXTERNAL_KW && LA41_1<=GRAPHIC_STR_KW)||(LA41_1>=H_STRING && LA41_1<=IA5_STRING_KW)||LA41_1==INCLUDES_KW||LA41_1==INTEGER_KW||LA41_1==ISO646_STR_KW||(LA41_1>=LOWER && LA41_1<=L_PAREN)||(LA41_1>=MINUS && LA41_1<=NUMERIC_STR_KW)||(LA41_1>=OBJECT_KW && LA41_1<=OCTET_KW)||LA41_1==OPERATION_KW||LA41_1==PATTERN_KW||LA41_1==PLUS_INFINITY_KW||LA41_1==PRINTABLE_STR_KW||LA41_1==REAL_KW||(LA41_1>=SEQUENCE_KW && LA41_1<=SET_KW)||LA41_1==SIZE_KW||LA41_1==T61_STR_KW||(LA41_1>=TELETEX_STR_KW && LA41_1<=TRUE_KW)||(LA41_1>=UNIVERSAL_STR_KW && LA41_1<=WITH_KW)||LA41_1==131||LA41_1==137||(LA41_1>=158 && LA41_1<=161)||(LA41_1>=163 && LA41_1<=165)||LA41_1==179||LA41_1==188||LA41_1==191))
			{
				alt41 = 1;
			}
			} finally { DebugExitDecision(41); }
			switch (alt41)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:778:22: element_set_specs
				{
				DebugLocation(778, 22);
				PushFollow(Follow._element_set_specs_in_constraint3427);
				element_set_specs182=element_set_specs();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, element_set_specs182.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(41); }

			DebugLocation(778, 42);
			// Smi.g:778:42: ( exception_spec )?
			int alt42=2;
			try { DebugEnterSubRule(42);
			try { DebugEnterDecision(42, false);
			int LA42_1 = input.LA(1);

			if ((LA42_1==EXCLAMATION))
			{
				alt42 = 1;
			}
			} finally { DebugExitDecision(42); }
			switch (alt42)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:778:43: exception_spec
				{
				DebugLocation(778, 43);
				PushFollow(Follow._exception_spec_in_constraint3432);
				exception_spec183=exception_spec();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, exception_spec183.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(42); }

			DebugLocation(778, 60);
			R_PAREN184=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_constraint3436); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_PAREN184_tree = (CommonTree)adaptor.Create(R_PAREN184);
			adaptor.AddChild(root_0, R_PAREN184_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constraint", 41);
			LeaveRule("constraint", 41);
			LeaveRule_constraint();
		}
		DebugLocation(778, 66);
		} finally { DebugExitRule(GrammarFileName, "constraint"); }
		return retval;

	}
	// $ANTLR end "constraint"

	partial void EnterRule_character_set();
	partial void LeaveRule_character_set();
	// $ANTLR start "character_set"
	// Smi.g:780:1: character_set : ( BMP_STR_KW | GENERALIZED_TIME_KW | GENERAL_STR_KW | GRAPHIC_STR_KW | IA5_STRING_KW | ISO646_STR_KW | NUMERIC_STR_KW | PRINTABLE_STR_KW | TELETEX_STR_KW | T61_STR_KW | UNIVERSAL_STR_KW | UTF8_STR_KW | UTC_TIME_KW | VIDEOTEX_STR_KW | VISIBLE_STR_KW );
	[GrammarRule("character_set")]
	private AstParserRuleReturnScope<CommonTree, IToken> character_set()
	{
		EnterRule_character_set();
		EnterRule("character_set", 42);
		TraceIn("character_set", 42);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken set185 = default(IToken);

		CommonTree set185_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "character_set");
		DebugLocation(780, 61);
		try
		{
			// Smi.g:780:14: ( BMP_STR_KW | GENERALIZED_TIME_KW | GENERAL_STR_KW | GRAPHIC_STR_KW | IA5_STRING_KW | ISO646_STR_KW | NUMERIC_STR_KW | PRINTABLE_STR_KW | TELETEX_STR_KW | T61_STR_KW | UNIVERSAL_STR_KW | UTF8_STR_KW | UTC_TIME_KW | VIDEOTEX_STR_KW | VISIBLE_STR_KW )
			DebugEnterAlt(1);
			// Smi.g:
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(780, 14);

			set185=(IToken)input.LT(1);
			if (input.LA(1)==BMP_STR_KW||(input.LA(1)>=GENERALIZED_TIME_KW && input.LA(1)<=GRAPHIC_STR_KW)||input.LA(1)==IA5_STRING_KW||input.LA(1)==ISO646_STR_KW||input.LA(1)==NUMERIC_STR_KW||input.LA(1)==PRINTABLE_STR_KW||input.LA(1)==T61_STR_KW||input.LA(1)==TELETEX_STR_KW||input.LA(1)==UNIVERSAL_STR_KW||(input.LA(1)>=UTC_TIME_KW && input.LA(1)<=VISIBLE_STR_KW))
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set185));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("character_set", 42);
			LeaveRule("character_set", 42);
			LeaveRule_character_set();
		}
		DebugLocation(783, 61);
		} finally { DebugExitRule(GrammarFileName, "character_set"); }
		return retval;

	}
	// $ANTLR end "character_set"

	partial void EnterRule_elementType_list();
	partial void LeaveRule_elementType_list();
	// $ANTLR start "elementType_list"
	// Smi.g:785:1: elementType_list : elementType ( COMMA elementType )* ;
	[GrammarRule("elementType_list")]
	private AstParserRuleReturnScope<CommonTree, IToken> elementType_list()
	{
		EnterRule_elementType_list();
		EnterRule("elementType_list", 43);
		TraceIn("elementType_list", 43);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMMA187 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> elementType186 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> elementType188 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree COMMA187_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "elementType_list");
		DebugLocation(785, 51);
		try
		{
			// Smi.g:785:17: ( elementType ( COMMA elementType )* )
			DebugEnterAlt(1);
			// Smi.g:785:19: elementType ( COMMA elementType )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(785, 19);
			PushFollow(Follow._elementType_in_elementType_list3545);
			elementType186=elementType();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, elementType186.Tree);
			DebugLocation(785, 31);
			// Smi.g:785:31: ( COMMA elementType )*
			try { DebugEnterSubRule(43);
			while (true)
			{
				int alt43=2;
				try { DebugEnterDecision(43, false);
				int LA43_1 = input.LA(1);

				if ((LA43_1==COMMA))
				{
					alt43 = 1;
				}


				} finally { DebugExitDecision(43); }
				switch ( alt43 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:785:32: COMMA elementType
					{
					DebugLocation(785, 32);
					COMMA187=(IToken)Match(input,COMMA,Follow._COMMA_in_elementType_list3548); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA187_tree = (CommonTree)adaptor.Create(COMMA187);
					adaptor.AddChild(root_0, COMMA187_tree);
					}
					DebugLocation(785, 38);
					PushFollow(Follow._elementType_in_elementType_list3550);
					elementType188=elementType();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, elementType188.Tree);

					}
					break;

				default:
					goto loop43;
				}
			}

			loop43:
				;

			} finally { DebugExitSubRule(43); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("elementType_list", 43);
			LeaveRule("elementType_list", 43);
			LeaveRule_elementType_list();
		}
		DebugLocation(785, 51);
		} finally { DebugExitRule(GrammarFileName, "elementType_list"); }
		return retval;

	}
	// $ANTLR end "elementType_list"

	partial void EnterRule_tag();
	partial void LeaveRule_tag();
	// $ANTLR start "tag"
	// Smi.g:787:1: tag : L_BRACKET ( clazz )? class_NUMBER R_BRACKET ;
	[GrammarRule("tag")]
	private AstParserRuleReturnScope<CommonTree, IToken> tag()
	{
		EnterRule_tag();
		EnterRule("tag", 44);
		TraceIn("tag", 44);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACKET189 = default(IToken);
		IToken R_BRACKET192 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> clazz190 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> class_NUMBER191 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree L_BRACKET189_tree = default(CommonTree);
		CommonTree R_BRACKET192_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "tag");
		DebugLocation(787, 46);
		try
		{
			// Smi.g:787:4: ( L_BRACKET ( clazz )? class_NUMBER R_BRACKET )
			DebugEnterAlt(1);
			// Smi.g:787:6: L_BRACKET ( clazz )? class_NUMBER R_BRACKET
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(787, 6);
			L_BRACKET189=(IToken)Match(input,L_BRACKET,Follow._L_BRACKET_in_tag3560); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACKET189_tree = (CommonTree)adaptor.Create(L_BRACKET189);
			adaptor.AddChild(root_0, L_BRACKET189_tree);
			}
			DebugLocation(787, 16);
			// Smi.g:787:16: ( clazz )?
			int alt44=2;
			try { DebugEnterSubRule(44);
			try { DebugEnterDecision(44, false);
			int LA44_1 = input.LA(1);

			if ((LA44_1==APPLICATION_KW||LA44_1==PRIVATE_KW||LA44_1==UNIVERSAL_KW))
			{
				alt44 = 1;
			}
			} finally { DebugExitDecision(44); }
			switch (alt44)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:787:17: clazz
				{
				DebugLocation(787, 17);
				PushFollow(Follow._clazz_in_tag3563);
				clazz190=clazz();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, clazz190.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(44); }

			DebugLocation(787, 25);
			PushFollow(Follow._class_NUMBER_in_tag3567);
			class_NUMBER191=class_NUMBER();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, class_NUMBER191.Tree);
			DebugLocation(787, 38);
			R_BRACKET192=(IToken)Match(input,R_BRACKET,Follow._R_BRACKET_in_tag3569); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACKET192_tree = (CommonTree)adaptor.Create(R_BRACKET192);
			adaptor.AddChild(root_0, R_BRACKET192_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("tag", 44);
			LeaveRule("tag", 44);
			LeaveRule_tag();
		}
		DebugLocation(787, 46);
		} finally { DebugExitRule(GrammarFileName, "tag"); }
		return retval;

	}
	// $ANTLR end "tag"

	partial void EnterRule_clazz();
	partial void LeaveRule_clazz();
	// $ANTLR start "clazz"
	// Smi.g:789:1: clazz : ( UNIVERSAL_KW | APPLICATION_KW | PRIVATE_KW );
	[GrammarRule("clazz")]
	private AstParserRuleReturnScope<CommonTree, IToken> clazz()
	{
		EnterRule_clazz();
		EnterRule("clazz", 45);
		TraceIn("clazz", 45);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken set193 = default(IToken);

		CommonTree set193_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "clazz");
		DebugLocation(789, 49);
		try
		{
			// Smi.g:789:6: ( UNIVERSAL_KW | APPLICATION_KW | PRIVATE_KW )
			DebugEnterAlt(1);
			// Smi.g:
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(789, 6);

			set193=(IToken)input.LT(1);
			if (input.LA(1)==APPLICATION_KW||input.LA(1)==PRIVATE_KW||input.LA(1)==UNIVERSAL_KW)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set193));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("clazz", 45);
			LeaveRule("clazz", 45);
			LeaveRule_clazz();
		}
		DebugLocation(789, 49);
		} finally { DebugExitRule(GrammarFileName, "clazz"); }
		return retval;

	}
	// $ANTLR end "clazz"

	partial void EnterRule_class_NUMBER();
	partial void LeaveRule_class_NUMBER();
	// $ANTLR start "class_NUMBER"
	// Smi.g:792:1: class_NUMBER : ( NUMBER | defined_value );
	[GrammarRule("class_NUMBER")]
	private AstParserRuleReturnScope<CommonTree, IToken> class_NUMBER()
	{
		EnterRule_class_NUMBER();
		EnterRule("class_NUMBER", 46);
		TraceIn("class_NUMBER", 46);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken NUMBER194 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> defined_value195 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree NUMBER194_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "class_NUMBER");
		DebugLocation(792, 36);
		try
		{
			// Smi.g:792:13: ( NUMBER | defined_value )
			int alt45=2;
			try { DebugEnterDecision(45, false);
			int LA45_1 = input.LA(1);

			if ((LA45_1==NUMBER))
			{
				alt45 = 1;
			}
			else if ((LA45_1==LOWER||LA45_1==UPPER))
			{
				alt45 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 45, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(45); }
			switch (alt45)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:792:15: NUMBER
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(792, 15);
				NUMBER194=(IToken)Match(input,NUMBER,Follow._NUMBER_in_class_NUMBER3593); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NUMBER194_tree = (CommonTree)adaptor.Create(NUMBER194);
				adaptor.AddChild(root_0, NUMBER194_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:792:24: defined_value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(792, 24);
				PushFollow(Follow._defined_value_in_class_NUMBER3597);
				defined_value195=defined_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, defined_value195.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("class_NUMBER", 46);
			LeaveRule("class_NUMBER", 46);
			LeaveRule_class_NUMBER();
		}
		DebugLocation(792, 36);
		} finally { DebugExitRule(GrammarFileName, "class_NUMBER"); }
		return retval;

	}
	// $ANTLR end "class_NUMBER"

	partial void EnterRule_operation_macro();
	partial void LeaveRule_operation_macro();
	// $ANTLR start "operation_macro"
	// Smi.g:795:1: operation_macro : 'OPERATION' ( ARGUMENT_KW ( ( LOWER )=> LOWER )? type )? ( ( RESULT_KW )=> RESULT_KW ( ( LOWER )=> ( ( LOWER )=> LOWER )? type )? )? ( ( ERRORS_KW )=> ERRORS_KW L_BRACE ( operation_errorlist )? R_BRACE )? ( ( LINKED_KW )=> LINKED_KW L_BRACE ( linkedOp_list )? R_BRACE )? ;
	[GrammarRule("operation_macro")]
	private AstParserRuleReturnScope<CommonTree, IToken> operation_macro()
	{
		EnterRule_operation_macro();
		EnterRule("operation_macro", 47);
		TraceIn("operation_macro", 47);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal196 = default(IToken);
		IToken ARGUMENT_KW197 = default(IToken);
		IToken LOWER198 = default(IToken);
		IToken RESULT_KW200 = default(IToken);
		IToken LOWER201 = default(IToken);
		IToken ERRORS_KW203 = default(IToken);
		IToken L_BRACE204 = default(IToken);
		IToken R_BRACE206 = default(IToken);
		IToken LINKED_KW207 = default(IToken);
		IToken L_BRACE208 = default(IToken);
		IToken R_BRACE210 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> type199 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> type202 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> operation_errorlist205 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> linkedOp_list209 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree string_literal196_tree = default(CommonTree);
		CommonTree ARGUMENT_KW197_tree = default(CommonTree);
		CommonTree LOWER198_tree = default(CommonTree);
		CommonTree RESULT_KW200_tree = default(CommonTree);
		CommonTree LOWER201_tree = default(CommonTree);
		CommonTree ERRORS_KW203_tree = default(CommonTree);
		CommonTree L_BRACE204_tree = default(CommonTree);
		CommonTree R_BRACE206_tree = default(CommonTree);
		CommonTree LINKED_KW207_tree = default(CommonTree);
		CommonTree L_BRACE208_tree = default(CommonTree);
		CommonTree R_BRACE210_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "operation_macro");
		DebugLocation(795, 83);
		try
		{
			// Smi.g:795:16: ( 'OPERATION' ( ARGUMENT_KW ( ( LOWER )=> LOWER )? type )? ( ( RESULT_KW )=> RESULT_KW ( ( LOWER )=> ( ( LOWER )=> LOWER )? type )? )? ( ( ERRORS_KW )=> ERRORS_KW L_BRACE ( operation_errorlist )? R_BRACE )? ( ( LINKED_KW )=> LINKED_KW L_BRACE ( linkedOp_list )? R_BRACE )? )
			DebugEnterAlt(1);
			// Smi.g:795:18: 'OPERATION' ( ARGUMENT_KW ( ( LOWER )=> LOWER )? type )? ( ( RESULT_KW )=> RESULT_KW ( ( LOWER )=> ( ( LOWER )=> LOWER )? type )? )? ( ( ERRORS_KW )=> ERRORS_KW L_BRACE ( operation_errorlist )? R_BRACE )? ( ( LINKED_KW )=> LINKED_KW L_BRACE ( linkedOp_list )? R_BRACE )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(795, 18);
			string_literal196=(IToken)Match(input,OPERATION_KW,Follow._OPERATION_KW_in_operation_macro3606); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal196_tree = (CommonTree)adaptor.Create(string_literal196);
			adaptor.AddChild(root_0, string_literal196_tree);
			}
			DebugLocation(795, 30);
			// Smi.g:795:30: ( ARGUMENT_KW ( ( LOWER )=> LOWER )? type )?
			int alt47=2;
			try { DebugEnterSubRule(47);
			try { DebugEnterDecision(47, false);
			int LA47_1 = input.LA(1);

			if ((LA47_1==ARGUMENT_KW))
			{
				alt47 = 1;
			}
			} finally { DebugExitDecision(47); }
			switch (alt47)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:795:31: ARGUMENT_KW ( ( LOWER )=> LOWER )? type
				{
				DebugLocation(795, 31);
				ARGUMENT_KW197=(IToken)Match(input,ARGUMENT_KW,Follow._ARGUMENT_KW_in_operation_macro3609); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ARGUMENT_KW197_tree = (CommonTree)adaptor.Create(ARGUMENT_KW197);
				adaptor.AddChild(root_0, ARGUMENT_KW197_tree);
				}
				DebugLocation(795, 43);
				// Smi.g:795:43: ( ( LOWER )=> LOWER )?
				int alt46=2;
				try { DebugEnterSubRule(46);
				try { DebugEnterDecision(46, false);
				int LA46_1 = input.LA(1);

				if ((LA46_1==LOWER))
				{
					int LA46_2 = input.LA(2);

					if ((LA46_2==ANY_KW) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==BIT_KW) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==BOOLEAN_KW) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==CHARACTER_KW) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==BMP_STR_KW||(LA46_2>=GENERALIZED_TIME_KW && LA46_2<=GRAPHIC_STR_KW)||LA46_2==IA5_STRING_KW||LA46_2==ISO646_STR_KW||LA46_2==NUMERIC_STR_KW||LA46_2==PRINTABLE_STR_KW||LA46_2==T61_STR_KW||LA46_2==TELETEX_STR_KW||LA46_2==UNIVERSAL_STR_KW||(LA46_2>=UTC_TIME_KW && LA46_2<=VISIBLE_STR_KW)) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==CHOICE_KW) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==EMBEDDED_KW) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==ENUMERATED_KW) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==EXTERNAL_KW) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==INTEGER_KW) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==NULL_KW) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==OBJECT_KW) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==OCTET_KW) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==REAL_KW) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==179) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==SEQUENCE_KW) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==SET_KW) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==L_BRACKET) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==UPPER) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==LOWER) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==OPERATION_KW) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==ERROR_KW) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==165) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==159) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==164) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==161) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==188) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==163) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==160) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==158) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==131) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==191) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
					else if ((LA46_2==137) && (EvaluatePredicate(synpred18_Smi_fragment)))
					{
						alt46 = 1;
					}
				}
				} finally { DebugExitDecision(46); }
				switch (alt46)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:795:44: ( LOWER )=> LOWER
					{
					DebugLocation(795, 55);
					LOWER198=(IToken)Match(input,LOWER,Follow._LOWER_in_operation_macro3618); if (state.failed) return retval;
					if (state.backtracking == 0) {
					LOWER198_tree = (CommonTree)adaptor.Create(LOWER198);
					adaptor.AddChild(root_0, LOWER198_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(46); }

				DebugLocation(795, 63);
				PushFollow(Follow._type_in_operation_macro3622);
				type199=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type199.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(47); }

			DebugLocation(796, 21);
			// Smi.g:796:21: ( ( RESULT_KW )=> RESULT_KW ( ( LOWER )=> ( ( LOWER )=> LOWER )? type )? )?
			int alt50=2;
			try { DebugEnterSubRule(50);
			try { DebugEnterDecision(50, false);
			int LA50_1 = input.LA(1);

			if ((LA50_1==RESULT_KW))
			{
				int LA50_2 = input.LA(2);

				if ((EvaluatePredicate(synpred19_Smi_fragment)))
				{
					alt50 = 1;
				}
			}
			} finally { DebugExitDecision(50); }
			switch (alt50)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:796:23: ( RESULT_KW )=> RESULT_KW ( ( LOWER )=> ( ( LOWER )=> LOWER )? type )?
				{
				DebugLocation(796, 38);
				RESULT_KW200=(IToken)Match(input,RESULT_KW,Follow._RESULT_KW_in_operation_macro3656); if (state.failed) return retval;
				if (state.backtracking == 0) {
				RESULT_KW200_tree = (CommonTree)adaptor.Create(RESULT_KW200);
				adaptor.AddChild(root_0, RESULT_KW200_tree);
				}
				DebugLocation(797, 25);
				// Smi.g:797:25: ( ( LOWER )=> ( ( LOWER )=> LOWER )? type )?
				int alt49=2;
				try { DebugEnterSubRule(49);
				try { DebugEnterDecision(49, false);
				try
				{
					alt49 = dfa49.Predict(input);
				}
				catch (NoViableAltException nvae)
				{
					DebugRecognitionException(nvae);
					throw;
				}
				} finally { DebugExitDecision(49); }
				switch (alt49)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:797:26: ( LOWER )=> ( ( LOWER )=> LOWER )? type
					{
					DebugLocation(797, 37);
					// Smi.g:797:37: ( ( LOWER )=> LOWER )?
					int alt48=2;
					try { DebugEnterSubRule(48);
					try { DebugEnterDecision(48, false);
					int LA48_1 = input.LA(1);

					if ((LA48_1==LOWER))
					{
						int LA48_2 = input.LA(2);

						if ((LA48_2==ANY_KW) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==BIT_KW) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==BOOLEAN_KW) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==CHARACTER_KW) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==BMP_STR_KW||(LA48_2>=GENERALIZED_TIME_KW && LA48_2<=GRAPHIC_STR_KW)||LA48_2==IA5_STRING_KW||LA48_2==ISO646_STR_KW||LA48_2==NUMERIC_STR_KW||LA48_2==PRINTABLE_STR_KW||LA48_2==T61_STR_KW||LA48_2==TELETEX_STR_KW||LA48_2==UNIVERSAL_STR_KW||(LA48_2>=UTC_TIME_KW && LA48_2<=VISIBLE_STR_KW)) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==CHOICE_KW) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==EMBEDDED_KW) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==ENUMERATED_KW) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==EXTERNAL_KW) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==INTEGER_KW) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==NULL_KW) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==OBJECT_KW) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==OCTET_KW) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==REAL_KW) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==179) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==SEQUENCE_KW) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==SET_KW) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==L_BRACKET) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==UPPER) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==LOWER) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==OPERATION_KW) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==ERROR_KW) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==165) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==159) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==164) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==161) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==188) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==163) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==160) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==158) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==131) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==191) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
						else if ((LA48_2==137) && (EvaluatePredicate(synpred21_Smi_fragment)))
						{
							alt48 = 1;
						}
					}
					} finally { DebugExitDecision(48); }
					switch (alt48)
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:797:38: ( LOWER )=> LOWER
						{
						DebugLocation(797, 49);
						LOWER201=(IToken)Match(input,LOWER,Follow._LOWER_in_operation_macro3697); if (state.failed) return retval;
						if (state.backtracking == 0) {
						LOWER201_tree = (CommonTree)adaptor.Create(LOWER201);
						adaptor.AddChild(root_0, LOWER201_tree);
						}

						}
						break;

					}
					} finally { DebugExitSubRule(48); }

					DebugLocation(797, 57);
					PushFollow(Follow._type_in_operation_macro3701);
					type202=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type202.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(49); }


				}
				break;

			}
			} finally { DebugExitSubRule(50); }

			DebugLocation(799, 21);
			// Smi.g:799:21: ( ( ERRORS_KW )=> ERRORS_KW L_BRACE ( operation_errorlist )? R_BRACE )?
			int alt52=2;
			try { DebugEnterSubRule(52);
			try { DebugEnterDecision(52, false);
			int LA52_1 = input.LA(1);

			if ((LA52_1==ERRORS_KW))
			{
				int LA52_2 = input.LA(2);

				if ((EvaluatePredicate(synpred22_Smi_fragment)))
				{
					alt52 = 1;
				}
			}
			} finally { DebugExitDecision(52); }
			switch (alt52)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:799:23: ( ERRORS_KW )=> ERRORS_KW L_BRACE ( operation_errorlist )? R_BRACE
				{
				DebugLocation(799, 38);
				ERRORS_KW203=(IToken)Match(input,ERRORS_KW,Follow._ERRORS_KW_in_operation_macro3743); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ERRORS_KW203_tree = (CommonTree)adaptor.Create(ERRORS_KW203);
				adaptor.AddChild(root_0, ERRORS_KW203_tree);
				}
				DebugLocation(799, 48);
				L_BRACE204=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_operation_macro3745); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE204_tree = (CommonTree)adaptor.Create(L_BRACE204);
				adaptor.AddChild(root_0, L_BRACE204_tree);
				}
				DebugLocation(799, 56);
				// Smi.g:799:56: ( operation_errorlist )?
				int alt51=2;
				try { DebugEnterSubRule(51);
				try { DebugEnterDecision(51, false);
				int LA51_1 = input.LA(1);

				if ((LA51_1==ANY_KW||(LA51_1>=BIT_KW && LA51_1<=BOOLEAN_KW)||(LA51_1>=B_STRING && LA51_1<=CHARACTER_KW)||LA51_1==CHOICE_KW||LA51_1==C_STRING||LA51_1==EMBEDDED_KW||LA51_1==ENUMERATED_KW||LA51_1==ERROR_KW||(LA51_1>=EXTERNAL_KW && LA51_1<=FALSE_KW)||(LA51_1>=GENERALIZED_TIME_KW && LA51_1<=GRAPHIC_STR_KW)||(LA51_1>=H_STRING && LA51_1<=IA5_STRING_KW)||LA51_1==INTEGER_KW||LA51_1==ISO646_STR_KW||(LA51_1>=LOWER && LA51_1<=L_BRACKET)||(LA51_1>=MINUS && LA51_1<=MINUS_INFINITY_KW)||(LA51_1>=NULL_KW && LA51_1<=NUMERIC_STR_KW)||(LA51_1>=OBJECT_KW && LA51_1<=OCTET_KW)||LA51_1==OPERATION_KW||LA51_1==PLUS_INFINITY_KW||LA51_1==PRINTABLE_STR_KW||LA51_1==REAL_KW||(LA51_1>=SEQUENCE_KW && LA51_1<=SET_KW)||LA51_1==T61_STR_KW||(LA51_1>=TELETEX_STR_KW && LA51_1<=TRUE_KW)||(LA51_1>=UNIVERSAL_STR_KW && LA51_1<=VISIBLE_STR_KW)||LA51_1==131||LA51_1==137||(LA51_1>=158 && LA51_1<=161)||(LA51_1>=163 && LA51_1<=165)||LA51_1==179||LA51_1==188||LA51_1==191))
				{
					alt51 = 1;
				}
				} finally { DebugExitDecision(51); }
				switch (alt51)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:799:57: operation_errorlist
					{
					DebugLocation(799, 57);
					PushFollow(Follow._operation_errorlist_in_operation_macro3748);
					operation_errorlist205=operation_errorlist();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, operation_errorlist205.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(51); }

				DebugLocation(799, 79);
				R_BRACE206=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_operation_macro3752); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE206_tree = (CommonTree)adaptor.Create(R_BRACE206);
				adaptor.AddChild(root_0, R_BRACE206_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(52); }

			DebugLocation(800, 21);
			// Smi.g:800:21: ( ( LINKED_KW )=> LINKED_KW L_BRACE ( linkedOp_list )? R_BRACE )?
			int alt54=2;
			try { DebugEnterSubRule(54);
			try { DebugEnterDecision(54, false);
			int LA54_1 = input.LA(1);

			if ((LA54_1==LINKED_KW))
			{
				int LA54_2 = input.LA(2);

				if ((EvaluatePredicate(synpred23_Smi_fragment)))
				{
					alt54 = 1;
				}
			}
			} finally { DebugExitDecision(54); }
			switch (alt54)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:800:23: ( LINKED_KW )=> LINKED_KW L_BRACE ( linkedOp_list )? R_BRACE
				{
				DebugLocation(800, 38);
				LINKED_KW207=(IToken)Match(input,LINKED_KW,Follow._LINKED_KW_in_operation_macro3786); if (state.failed) return retval;
				if (state.backtracking == 0) {
				LINKED_KW207_tree = (CommonTree)adaptor.Create(LINKED_KW207);
				adaptor.AddChild(root_0, LINKED_KW207_tree);
				}
				DebugLocation(800, 48);
				L_BRACE208=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_operation_macro3788); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE208_tree = (CommonTree)adaptor.Create(L_BRACE208);
				adaptor.AddChild(root_0, L_BRACE208_tree);
				}
				DebugLocation(800, 56);
				// Smi.g:800:56: ( linkedOp_list )?
				int alt53=2;
				try { DebugEnterSubRule(53);
				try { DebugEnterDecision(53, false);
				int LA53_1 = input.LA(1);

				if ((LA53_1==ANY_KW||(LA53_1>=BIT_KW && LA53_1<=BOOLEAN_KW)||(LA53_1>=B_STRING && LA53_1<=CHARACTER_KW)||LA53_1==CHOICE_KW||LA53_1==C_STRING||LA53_1==EMBEDDED_KW||LA53_1==ENUMERATED_KW||LA53_1==ERROR_KW||(LA53_1>=EXTERNAL_KW && LA53_1<=FALSE_KW)||(LA53_1>=GENERALIZED_TIME_KW && LA53_1<=GRAPHIC_STR_KW)||(LA53_1>=H_STRING && LA53_1<=IA5_STRING_KW)||LA53_1==INTEGER_KW||LA53_1==ISO646_STR_KW||(LA53_1>=LOWER && LA53_1<=L_BRACKET)||(LA53_1>=MINUS && LA53_1<=MINUS_INFINITY_KW)||(LA53_1>=NULL_KW && LA53_1<=NUMERIC_STR_KW)||(LA53_1>=OBJECT_KW && LA53_1<=OCTET_KW)||LA53_1==OPERATION_KW||LA53_1==PLUS_INFINITY_KW||LA53_1==PRINTABLE_STR_KW||LA53_1==REAL_KW||(LA53_1>=SEQUENCE_KW && LA53_1<=SET_KW)||LA53_1==T61_STR_KW||(LA53_1>=TELETEX_STR_KW && LA53_1<=TRUE_KW)||(LA53_1>=UNIVERSAL_STR_KW && LA53_1<=VISIBLE_STR_KW)||LA53_1==131||LA53_1==137||(LA53_1>=158 && LA53_1<=161)||(LA53_1>=163 && LA53_1<=165)||LA53_1==179||LA53_1==188||LA53_1==191))
				{
					alt53 = 1;
				}
				} finally { DebugExitDecision(53); }
				switch (alt53)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:800:57: linkedOp_list
					{
					DebugLocation(800, 57);
					PushFollow(Follow._linkedOp_list_in_operation_macro3791);
					linkedOp_list209=linkedOp_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, linkedOp_list209.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(53); }

				DebugLocation(800, 73);
				R_BRACE210=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_operation_macro3795); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE210_tree = (CommonTree)adaptor.Create(R_BRACE210);
				adaptor.AddChild(root_0, R_BRACE210_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(54); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("operation_macro", 47);
			LeaveRule("operation_macro", 47);
			LeaveRule_operation_macro();
		}
		DebugLocation(800, 83);
		} finally { DebugExitRule(GrammarFileName, "operation_macro"); }
		return retval;

	}
	// $ANTLR end "operation_macro"

	partial void EnterRule_error_macro();
	partial void LeaveRule_error_macro();
	// $ANTLR start "error_macro"
	// Smi.g:810:1: error_macro : ERROR_KW ( PARAMETER_KW ( ( LOWER )=> LOWER )? type )? ;
	[GrammarRule("error_macro")]
	private AstParserRuleReturnScope<CommonTree, IToken> error_macro()
	{
		EnterRule_error_macro();
		EnterRule("error_macro", 48);
		TraceIn("error_macro", 48);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken ERROR_KW211 = default(IToken);
		IToken PARAMETER_KW212 = default(IToken);
		IToken LOWER213 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> type214 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree ERROR_KW211_tree = default(CommonTree);
		CommonTree PARAMETER_KW212_tree = default(CommonTree);
		CommonTree LOWER213_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "error_macro");
		DebugLocation(810, 65);
		try
		{
			// Smi.g:810:12: ( ERROR_KW ( PARAMETER_KW ( ( LOWER )=> LOWER )? type )? )
			DebugEnterAlt(1);
			// Smi.g:810:14: ERROR_KW ( PARAMETER_KW ( ( LOWER )=> LOWER )? type )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(810, 14);
			ERROR_KW211=(IToken)Match(input,ERROR_KW,Follow._ERROR_KW_in_error_macro3815); if (state.failed) return retval;
			if (state.backtracking == 0) {
			ERROR_KW211_tree = (CommonTree)adaptor.Create(ERROR_KW211);
			adaptor.AddChild(root_0, ERROR_KW211_tree);
			}
			DebugLocation(810, 23);
			// Smi.g:810:23: ( PARAMETER_KW ( ( LOWER )=> LOWER )? type )?
			int alt56=2;
			try { DebugEnterSubRule(56);
			try { DebugEnterDecision(56, false);
			int LA56_1 = input.LA(1);

			if ((LA56_1==PARAMETER_KW))
			{
				alt56 = 1;
			}
			} finally { DebugExitDecision(56); }
			switch (alt56)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:810:25: PARAMETER_KW ( ( LOWER )=> LOWER )? type
				{
				DebugLocation(810, 25);
				PARAMETER_KW212=(IToken)Match(input,PARAMETER_KW,Follow._PARAMETER_KW_in_error_macro3819); if (state.failed) return retval;
				if (state.backtracking == 0) {
				PARAMETER_KW212_tree = (CommonTree)adaptor.Create(PARAMETER_KW212);
				adaptor.AddChild(root_0, PARAMETER_KW212_tree);
				}
				DebugLocation(810, 38);
				// Smi.g:810:38: ( ( LOWER )=> LOWER )?
				int alt55=2;
				try { DebugEnterSubRule(55);
				try { DebugEnterDecision(55, false);
				int LA55_1 = input.LA(1);

				if ((LA55_1==LOWER))
				{
					int LA55_2 = input.LA(2);

					if ((LA55_2==ANY_KW) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==BIT_KW) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==BOOLEAN_KW) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==CHARACTER_KW) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==BMP_STR_KW||(LA55_2>=GENERALIZED_TIME_KW && LA55_2<=GRAPHIC_STR_KW)||LA55_2==IA5_STRING_KW||LA55_2==ISO646_STR_KW||LA55_2==NUMERIC_STR_KW||LA55_2==PRINTABLE_STR_KW||LA55_2==T61_STR_KW||LA55_2==TELETEX_STR_KW||LA55_2==UNIVERSAL_STR_KW||(LA55_2>=UTC_TIME_KW && LA55_2<=VISIBLE_STR_KW)) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==CHOICE_KW) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==EMBEDDED_KW) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==ENUMERATED_KW) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==EXTERNAL_KW) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==INTEGER_KW) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==NULL_KW) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==OBJECT_KW) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==OCTET_KW) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==REAL_KW) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==179) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==SEQUENCE_KW) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==SET_KW) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==L_BRACKET) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==UPPER) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==LOWER) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==OPERATION_KW) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==ERROR_KW) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==165) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==159) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==164) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==161) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==188) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==163) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==160) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==158) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==131) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==191) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
					else if ((LA55_2==137) && (EvaluatePredicate(synpred24_Smi_fragment)))
					{
						alt55 = 1;
					}
				}
				} finally { DebugExitDecision(55); }
				switch (alt55)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:810:39: ( LOWER )=> LOWER
					{
					DebugLocation(810, 50);
					LOWER213=(IToken)Match(input,LOWER,Follow._LOWER_in_error_macro3828); if (state.failed) return retval;
					if (state.backtracking == 0) {
					LOWER213_tree = (CommonTree)adaptor.Create(LOWER213);
					adaptor.AddChild(root_0, LOWER213_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(55); }

				DebugLocation(810, 58);
				PushFollow(Follow._type_in_error_macro3832);
				type214=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type214.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(56); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("error_macro", 48);
			LeaveRule("error_macro", 48);
			LeaveRule_error_macro();
		}
		DebugLocation(810, 65);
		} finally { DebugExitRule(GrammarFileName, "error_macro"); }
		return retval;

	}
	// $ANTLR end "error_macro"

	partial void EnterRule_macros_type();
	partial void LeaveRule_macros_type();
	// $ANTLR start "macros_type"
	// Smi.g:817:1: macros_type : ( operation_macro | error_macro | objecttype_macro | moduleidentity_macro | objectidentity_macro | notificationtype_macro | textualconvention_macro | objectgroup_macro | notificationgroup_macro | modulecompliance_macro | agentcapabilities_macro | traptype_macro );
	[GrammarRule("macros_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> macros_type()
	{
		EnterRule_macros_type();
		EnterRule("macros_type", 49);
		TraceIn("macros_type", 49);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		AstParserRuleReturnScope<CommonTree, IToken> operation_macro215 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> error_macro216 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro217 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> moduleidentity_macro218 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> objectidentity_macro219 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> notificationtype_macro220 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> textualconvention_macro221 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> objectgroup_macro222 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> notificationgroup_macro223 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro224 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> agentcapabilities_macro225 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> traptype_macro226 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		try { DebugEnterRule(GrammarFileName, "macros_type");
		DebugLocation(817, 53);
		try
		{
			// Smi.g:817:12: ( operation_macro | error_macro | objecttype_macro | moduleidentity_macro | objectidentity_macro | notificationtype_macro | textualconvention_macro | objectgroup_macro | notificationgroup_macro | modulecompliance_macro | agentcapabilities_macro | traptype_macro )
			int alt57=12;
			try { DebugEnterDecision(57, false);
			switch (input.LA(1))
			{
			case OPERATION_KW:
				{
				alt57 = 1;
				}
				break;
			case ERROR_KW:
				{
				alt57 = 2;
				}
				break;
			case 165:
				{
				alt57 = 3;
				}
				break;
			case 159:
				{
				alt57 = 4;
				}
				break;
			case 164:
				{
				alt57 = 5;
				}
				break;
			case 161:
				{
				alt57 = 6;
				}
				break;
			case 188:
				{
				alt57 = 7;
				}
				break;
			case 163:
				{
				alt57 = 8;
				}
				break;
			case 160:
				{
				alt57 = 9;
				}
				break;
			case 158:
				{
				alt57 = 10;
				}
				break;
			case 131:
				{
				alt57 = 11;
				}
				break;
			case 191:
				{
				alt57 = 12;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 57, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(57); }
			switch (alt57)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:817:14: operation_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(817, 14);
				PushFollow(Follow._operation_macro_in_macros_type3850);
				operation_macro215=operation_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, operation_macro215.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:817:32: error_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(817, 32);
				PushFollow(Follow._error_macro_in_macros_type3854);
				error_macro216=error_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, error_macro216.Tree);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:817:46: objecttype_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(817, 46);
				PushFollow(Follow._objecttype_macro_in_macros_type3858);
				objecttype_macro217=objecttype_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, objecttype_macro217.Tree);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Smi.g:817:65: moduleidentity_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(817, 65);
				PushFollow(Follow._moduleidentity_macro_in_macros_type3862);
				moduleidentity_macro218=moduleidentity_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, moduleidentity_macro218.Tree);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Smi.g:818:14: objectidentity_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(818, 14);
				PushFollow(Follow._objectidentity_macro_in_macros_type3878);
				objectidentity_macro219=objectidentity_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, objectidentity_macro219.Tree);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// Smi.g:818:37: notificationtype_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(818, 37);
				PushFollow(Follow._notificationtype_macro_in_macros_type3882);
				notificationtype_macro220=notificationtype_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, notificationtype_macro220.Tree);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// Smi.g:818:62: textualconvention_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(818, 62);
				PushFollow(Follow._textualconvention_macro_in_macros_type3886);
				textualconvention_macro221=textualconvention_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, textualconvention_macro221.Tree);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// Smi.g:819:14: objectgroup_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(819, 14);
				PushFollow(Follow._objectgroup_macro_in_macros_type3902);
				objectgroup_macro222=objectgroup_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, objectgroup_macro222.Tree);

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// Smi.g:819:34: notificationgroup_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(819, 34);
				PushFollow(Follow._notificationgroup_macro_in_macros_type3906);
				notificationgroup_macro223=notificationgroup_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, notificationgroup_macro223.Tree);

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// Smi.g:819:60: modulecompliance_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(819, 60);
				PushFollow(Follow._modulecompliance_macro_in_macros_type3910);
				modulecompliance_macro224=modulecompliance_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, modulecompliance_macro224.Tree);

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// Smi.g:820:14: agentcapabilities_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(820, 14);
				PushFollow(Follow._agentcapabilities_macro_in_macros_type3926);
				agentcapabilities_macro225=agentcapabilities_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, agentcapabilities_macro225.Tree);

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// Smi.g:820:40: traptype_macro
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(820, 40);
				PushFollow(Follow._traptype_macro_in_macros_type3930);
				traptype_macro226=traptype_macro();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, traptype_macro226.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("macros_type", 49);
			LeaveRule("macros_type", 49);
			LeaveRule_macros_type();
		}
		DebugLocation(820, 53);
		} finally { DebugExitRule(GrammarFileName, "macros_type"); }
		return retval;

	}
	// $ANTLR end "macros_type"

	partial void EnterRule_smi_macros();
	partial void LeaveRule_smi_macros();
	// $ANTLR start "smi_macros"
	// Smi.g:822:1: smi_macros : ( 'OBJECT-TYPE' | 'MODULE-IDENTITY' | 'OBJECT-IDENTITY' | 'NOTIFICATION-TYPE' | 'TEXTUAL-CONVENTION' | 'OBJECT-GROUP' | 'NOTIFICATION-GROUP' | 'MODULE-COMPLIANCE' | 'AGENT-CAPABILITIES' | 'TRAP-TYPE' );
	[GrammarRule("smi_macros")]
	private AstParserRuleReturnScope<CommonTree, IToken> smi_macros()
	{
		EnterRule_smi_macros();
		EnterRule("smi_macros", 50);
		TraceIn("smi_macros", 50);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken set227 = default(IToken);

		CommonTree set227_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "smi_macros");
		DebugLocation(822, 45);
		try
		{
			// Smi.g:822:11: ( 'OBJECT-TYPE' | 'MODULE-IDENTITY' | 'OBJECT-IDENTITY' | 'NOTIFICATION-TYPE' | 'TEXTUAL-CONVENTION' | 'OBJECT-GROUP' | 'NOTIFICATION-GROUP' | 'MODULE-COMPLIANCE' | 'AGENT-CAPABILITIES' | 'TRAP-TYPE' )
			DebugEnterAlt(1);
			// Smi.g:
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(822, 11);

			set227=(IToken)input.LT(1);
			if (input.LA(1)==131||(input.LA(1)>=158 && input.LA(1)<=161)||(input.LA(1)>=163 && input.LA(1)<=165)||input.LA(1)==188||input.LA(1)==191)
			{
				input.Consume();
				if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set227));
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("smi_macros", 50);
			LeaveRule("smi_macros", 50);
			LeaveRule_smi_macros();
		}
		DebugLocation(824, 45);
		} finally { DebugExitRule(GrammarFileName, "smi_macros"); }
		return retval;

	}
	// $ANTLR end "smi_macros"

	partial void EnterRule_smi_type();
	partial void LeaveRule_smi_type();
	// $ANTLR start "smi_type"
	// Smi.g:828:1: smi_type : ( 'BITS' | INTEGER_KW | OCTET_KW STRING_KW | OBJECT_KW IDENTIFIER_KW | UPPER );
	[GrammarRule("smi_type")]
	private AstParserRuleReturnScope<CommonTree, IToken> smi_type()
	{
		EnterRule_smi_type();
		EnterRule("smi_type", 51);
		TraceIn("smi_type", 51);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal228 = default(IToken);
		IToken INTEGER_KW229 = default(IToken);
		IToken OCTET_KW230 = default(IToken);
		IToken STRING_KW231 = default(IToken);
		IToken OBJECT_KW232 = default(IToken);
		IToken IDENTIFIER_KW233 = default(IToken);
		IToken UPPER234 = default(IToken);

		CommonTree string_literal228_tree = default(CommonTree);
		CommonTree INTEGER_KW229_tree = default(CommonTree);
		CommonTree OCTET_KW230_tree = default(CommonTree);
		CommonTree STRING_KW231_tree = default(CommonTree);
		CommonTree OBJECT_KW232_tree = default(CommonTree);
		CommonTree IDENTIFIER_KW233_tree = default(CommonTree);
		CommonTree UPPER234_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "smi_type");
		DebugLocation(828, 84);
		try
		{
			// Smi.g:828:9: ( 'BITS' | INTEGER_KW | OCTET_KW STRING_KW | OBJECT_KW IDENTIFIER_KW | UPPER )
			int alt58=5;
			try { DebugEnterDecision(58, false);
			switch (input.LA(1))
			{
			case 137:
				{
				alt58 = 1;
				}
				break;
			case INTEGER_KW:
				{
				alt58 = 2;
				}
				break;
			case OCTET_KW:
				{
				alt58 = 3;
				}
				break;
			case OBJECT_KW:
				{
				alt58 = 4;
				}
				break;
			case UPPER:
				{
				alt58 = 5;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 58, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(58); }
			switch (alt58)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:828:11: 'BITS'
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(828, 11);
				string_literal228=(IToken)Match(input,137,Follow._137_in_smi_type4004); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal228_tree = (CommonTree)adaptor.Create(string_literal228);
				adaptor.AddChild(root_0, string_literal228_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:828:20: INTEGER_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(828, 20);
				INTEGER_KW229=(IToken)Match(input,INTEGER_KW,Follow._INTEGER_KW_in_smi_type4008); if (state.failed) return retval;
				if (state.backtracking == 0) {
				INTEGER_KW229_tree = (CommonTree)adaptor.Create(INTEGER_KW229);
				adaptor.AddChild(root_0, INTEGER_KW229_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:828:33: OCTET_KW STRING_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(828, 33);
				OCTET_KW230=(IToken)Match(input,OCTET_KW,Follow._OCTET_KW_in_smi_type4012); if (state.failed) return retval;
				if (state.backtracking == 0) {
				OCTET_KW230_tree = (CommonTree)adaptor.Create(OCTET_KW230);
				adaptor.AddChild(root_0, OCTET_KW230_tree);
				}
				DebugLocation(828, 42);
				STRING_KW231=(IToken)Match(input,STRING_KW,Follow._STRING_KW_in_smi_type4014); if (state.failed) return retval;
				if (state.backtracking == 0) {
				STRING_KW231_tree = (CommonTree)adaptor.Create(STRING_KW231);
				adaptor.AddChild(root_0, STRING_KW231_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Smi.g:828:54: OBJECT_KW IDENTIFIER_KW
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(828, 54);
				OBJECT_KW232=(IToken)Match(input,OBJECT_KW,Follow._OBJECT_KW_in_smi_type4018); if (state.failed) return retval;
				if (state.backtracking == 0) {
				OBJECT_KW232_tree = (CommonTree)adaptor.Create(OBJECT_KW232);
				adaptor.AddChild(root_0, OBJECT_KW232_tree);
				}
				DebugLocation(828, 64);
				IDENTIFIER_KW233=(IToken)Match(input,IDENTIFIER_KW,Follow._IDENTIFIER_KW_in_smi_type4020); if (state.failed) return retval;
				if (state.backtracking == 0) {
				IDENTIFIER_KW233_tree = (CommonTree)adaptor.Create(IDENTIFIER_KW233);
				adaptor.AddChild(root_0, IDENTIFIER_KW233_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Smi.g:828:80: UPPER
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(828, 80);
				UPPER234=(IToken)Match(input,UPPER,Follow._UPPER_in_smi_type4024); if (state.failed) return retval;
				if (state.backtracking == 0) {
				UPPER234_tree = (CommonTree)adaptor.Create(UPPER234);
				adaptor.AddChild(root_0, UPPER234_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("smi_type", 51);
			LeaveRule("smi_type", 51);
			LeaveRule_smi_type();
		}
		DebugLocation(828, 84);
		} finally { DebugExitRule(GrammarFileName, "smi_type"); }
		return retval;

	}
	// $ANTLR end "smi_type"

	partial void EnterRule_smi_subtyping();
	partial void LeaveRule_smi_subtyping();
	// $ANTLR start "smi_subtyping"
	// Smi.g:834:1: smi_subtyping : ( L_PAREN subtype_range ( BAR subtype_range )* R_PAREN | L_PAREN 'SIZE' L_PAREN subtype_range ( BAR subtype_range )* R_PAREN R_PAREN );
	[GrammarRule("smi_subtyping")]
	private AstParserRuleReturnScope<CommonTree, IToken> smi_subtyping()
	{
		EnterRule_smi_subtyping();
		EnterRule("smi_subtyping", 52);
		TraceIn("smi_subtyping", 52);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_PAREN235 = default(IToken);
		IToken BAR237 = default(IToken);
		IToken R_PAREN239 = default(IToken);
		IToken L_PAREN240 = default(IToken);
		IToken string_literal241 = default(IToken);
		IToken L_PAREN242 = default(IToken);
		IToken BAR244 = default(IToken);
		IToken R_PAREN246 = default(IToken);
		IToken R_PAREN247 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> subtype_range236 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> subtype_range238 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> subtype_range243 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> subtype_range245 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree L_PAREN235_tree = default(CommonTree);
		CommonTree BAR237_tree = default(CommonTree);
		CommonTree R_PAREN239_tree = default(CommonTree);
		CommonTree L_PAREN240_tree = default(CommonTree);
		CommonTree string_literal241_tree = default(CommonTree);
		CommonTree L_PAREN242_tree = default(CommonTree);
		CommonTree BAR244_tree = default(CommonTree);
		CommonTree R_PAREN246_tree = default(CommonTree);
		CommonTree R_PAREN247_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "smi_subtyping");
		DebugLocation(834, 88);
		try
		{
			// Smi.g:834:14: ( L_PAREN subtype_range ( BAR subtype_range )* R_PAREN | L_PAREN 'SIZE' L_PAREN subtype_range ( BAR subtype_range )* R_PAREN R_PAREN )
			int alt61=2;
			try { DebugEnterDecision(61, false);
			int LA61_1 = input.LA(1);

			if ((LA61_1==L_PAREN))
			{
				int LA61_2 = input.LA(2);

				if ((LA61_2==SIZE_KW))
				{
					alt61 = 2;
				}
				else if ((LA61_2==B_STRING||LA61_2==H_STRING||LA61_2==MINUS||LA61_2==NUMBER))
				{
					alt61 = 1;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 61, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 61, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(61); }
			switch (alt61)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:834:16: L_PAREN subtype_range ( BAR subtype_range )* R_PAREN
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(834, 16);
				L_PAREN235=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_smi_subtyping4038); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_PAREN235_tree = (CommonTree)adaptor.Create(L_PAREN235);
				adaptor.AddChild(root_0, L_PAREN235_tree);
				}
				DebugLocation(834, 24);
				PushFollow(Follow._subtype_range_in_smi_subtyping4040);
				subtype_range236=subtype_range();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, subtype_range236.Tree);
				DebugLocation(834, 38);
				// Smi.g:834:38: ( BAR subtype_range )*
				try { DebugEnterSubRule(59);
				while (true)
				{
					int alt59=2;
					try { DebugEnterDecision(59, false);
					int LA59_1 = input.LA(1);

					if ((LA59_1==BAR))
					{
						alt59 = 1;
					}


					} finally { DebugExitDecision(59); }
					switch ( alt59 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:834:39: BAR subtype_range
						{
						DebugLocation(834, 39);
						BAR237=(IToken)Match(input,BAR,Follow._BAR_in_smi_subtyping4043); if (state.failed) return retval;
						if (state.backtracking == 0) {
						BAR237_tree = (CommonTree)adaptor.Create(BAR237);
						adaptor.AddChild(root_0, BAR237_tree);
						}
						DebugLocation(834, 43);
						PushFollow(Follow._subtype_range_in_smi_subtyping4045);
						subtype_range238=subtype_range();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, subtype_range238.Tree);

						}
						break;

					default:
						goto loop59;
					}
				}

				loop59:
					;

				} finally { DebugExitSubRule(59); }

				DebugLocation(834, 59);
				R_PAREN239=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_smi_subtyping4049); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_PAREN239_tree = (CommonTree)adaptor.Create(R_PAREN239);
				adaptor.AddChild(root_0, R_PAREN239_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:835:16: L_PAREN 'SIZE' L_PAREN subtype_range ( BAR subtype_range )* R_PAREN R_PAREN
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(835, 16);
				L_PAREN240=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_smi_subtyping4066); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_PAREN240_tree = (CommonTree)adaptor.Create(L_PAREN240);
				adaptor.AddChild(root_0, L_PAREN240_tree);
				}
				DebugLocation(835, 24);
				string_literal241=(IToken)Match(input,SIZE_KW,Follow._SIZE_KW_in_smi_subtyping4068); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal241_tree = (CommonTree)adaptor.Create(string_literal241);
				adaptor.AddChild(root_0, string_literal241_tree);
				}
				DebugLocation(835, 31);
				L_PAREN242=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_smi_subtyping4070); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_PAREN242_tree = (CommonTree)adaptor.Create(L_PAREN242);
				adaptor.AddChild(root_0, L_PAREN242_tree);
				}
				DebugLocation(835, 39);
				PushFollow(Follow._subtype_range_in_smi_subtyping4072);
				subtype_range243=subtype_range();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, subtype_range243.Tree);
				DebugLocation(835, 53);
				// Smi.g:835:53: ( BAR subtype_range )*
				try { DebugEnterSubRule(60);
				while (true)
				{
					int alt60=2;
					try { DebugEnterDecision(60, false);
					int LA60_1 = input.LA(1);

					if ((LA60_1==BAR))
					{
						alt60 = 1;
					}


					} finally { DebugExitDecision(60); }
					switch ( alt60 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:835:54: BAR subtype_range
						{
						DebugLocation(835, 54);
						BAR244=(IToken)Match(input,BAR,Follow._BAR_in_smi_subtyping4075); if (state.failed) return retval;
						if (state.backtracking == 0) {
						BAR244_tree = (CommonTree)adaptor.Create(BAR244);
						adaptor.AddChild(root_0, BAR244_tree);
						}
						DebugLocation(835, 58);
						PushFollow(Follow._subtype_range_in_smi_subtyping4077);
						subtype_range245=subtype_range();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, subtype_range245.Tree);

						}
						break;

					default:
						goto loop60;
					}
				}

				loop60:
					;

				} finally { DebugExitSubRule(60); }

				DebugLocation(835, 74);
				R_PAREN246=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_smi_subtyping4081); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_PAREN246_tree = (CommonTree)adaptor.Create(R_PAREN246);
				adaptor.AddChild(root_0, R_PAREN246_tree);
				}
				DebugLocation(835, 82);
				R_PAREN247=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_smi_subtyping4083); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_PAREN247_tree = (CommonTree)adaptor.Create(R_PAREN247);
				adaptor.AddChild(root_0, R_PAREN247_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("smi_subtyping", 52);
			LeaveRule("smi_subtyping", 52);
			LeaveRule_smi_subtyping();
		}
		DebugLocation(835, 88);
		} finally { DebugExitRule(GrammarFileName, "smi_subtyping"); }
		return retval;

	}
	// $ANTLR end "smi_subtyping"

	partial void EnterRule_subtype_range();
	partial void LeaveRule_subtype_range();
	// $ANTLR start "subtype_range"
	// Smi.g:836:1: subtype_range : subtype_value ( DOTDOT subtype_value )? ;
	[GrammarRule("subtype_range")]
	private AstParserRuleReturnScope<CommonTree, IToken> subtype_range()
	{
		EnterRule_subtype_range();
		EnterRule("subtype_range", 53);
		TraceIn("subtype_range", 53);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken DOTDOT249 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> subtype_value248 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> subtype_value250 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree DOTDOT249_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "subtype_range");
		DebugLocation(836, 53);
		try
		{
			// Smi.g:836:14: ( subtype_value ( DOTDOT subtype_value )? )
			DebugEnterAlt(1);
			// Smi.g:836:16: subtype_value ( DOTDOT subtype_value )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(836, 16);
			PushFollow(Follow._subtype_value_in_subtype_range4089);
			subtype_value248=subtype_value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, subtype_value248.Tree);
			DebugLocation(836, 30);
			// Smi.g:836:30: ( DOTDOT subtype_value )?
			int alt62=2;
			try { DebugEnterSubRule(62);
			try { DebugEnterDecision(62, false);
			int LA62_1 = input.LA(1);

			if ((LA62_1==DOTDOT))
			{
				alt62 = 1;
			}
			} finally { DebugExitDecision(62); }
			switch (alt62)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:836:31: DOTDOT subtype_value
				{
				DebugLocation(836, 31);
				DOTDOT249=(IToken)Match(input,DOTDOT,Follow._DOTDOT_in_subtype_range4092); if (state.failed) return retval;
				if (state.backtracking == 0) {
				DOTDOT249_tree = (CommonTree)adaptor.Create(DOTDOT249);
				adaptor.AddChild(root_0, DOTDOT249_tree);
				}
				DebugLocation(836, 38);
				PushFollow(Follow._subtype_value_in_subtype_range4094);
				subtype_value250=subtype_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, subtype_value250.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(62); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("subtype_range", 53);
			LeaveRule("subtype_range", 53);
			LeaveRule_subtype_range();
		}
		DebugLocation(836, 53);
		} finally { DebugExitRule(GrammarFileName, "subtype_range"); }
		return retval;

	}
	// $ANTLR end "subtype_range"

	partial void EnterRule_subtype_value();
	partial void LeaveRule_subtype_value();
	// $ANTLR start "subtype_value"
	// Smi.g:837:1: subtype_value : ( ( MINUS )? NUMBER | B_STRING | H_STRING );
	[GrammarRule("subtype_value")]
	private AstParserRuleReturnScope<CommonTree, IToken> subtype_value()
	{
		EnterRule_subtype_value();
		EnterRule("subtype_value", 54);
		TraceIn("subtype_value", 54);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken MINUS251 = default(IToken);
		IToken NUMBER252 = default(IToken);
		IToken B_STRING253 = default(IToken);
		IToken H_STRING254 = default(IToken);

		CommonTree MINUS251_tree = default(CommonTree);
		CommonTree NUMBER252_tree = default(CommonTree);
		CommonTree B_STRING253_tree = default(CommonTree);
		CommonTree H_STRING254_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "subtype_value");
		DebugLocation(837, 52);
		try
		{
			// Smi.g:837:14: ( ( MINUS )? NUMBER | B_STRING | H_STRING )
			int alt64=3;
			try { DebugEnterDecision(64, false);
			switch (input.LA(1))
			{
			case MINUS:
			case NUMBER:
				{
				alt64 = 1;
				}
				break;
			case B_STRING:
				{
				alt64 = 2;
				}
				break;
			case H_STRING:
				{
				alt64 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 64, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(64); }
			switch (alt64)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:837:16: ( MINUS )? NUMBER
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(837, 16);
				// Smi.g:837:16: ( MINUS )?
				int alt63=2;
				try { DebugEnterSubRule(63);
				try { DebugEnterDecision(63, false);
				int LA63_1 = input.LA(1);

				if ((LA63_1==MINUS))
				{
					alt63 = 1;
				}
				} finally { DebugExitDecision(63); }
				switch (alt63)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:837:17: MINUS
					{
					DebugLocation(837, 17);
					MINUS251=(IToken)Match(input,MINUS,Follow._MINUS_in_subtype_value4104); if (state.failed) return retval;
					if (state.backtracking == 0) {
					MINUS251_tree = (CommonTree)adaptor.Create(MINUS251);
					adaptor.AddChild(root_0, MINUS251_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(63); }

				DebugLocation(837, 25);
				NUMBER252=(IToken)Match(input,NUMBER,Follow._NUMBER_in_subtype_value4108); if (state.failed) return retval;
				if (state.backtracking == 0) {
				NUMBER252_tree = (CommonTree)adaptor.Create(NUMBER252);
				adaptor.AddChild(root_0, NUMBER252_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:837:34: B_STRING
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(837, 34);
				B_STRING253=(IToken)Match(input,B_STRING,Follow._B_STRING_in_subtype_value4112); if (state.failed) return retval;
				if (state.backtracking == 0) {
				B_STRING253_tree = (CommonTree)adaptor.Create(B_STRING253);
				adaptor.AddChild(root_0, B_STRING253_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:837:45: H_STRING
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(837, 45);
				H_STRING254=(IToken)Match(input,H_STRING,Follow._H_STRING_in_subtype_value4116); if (state.failed) return retval;
				if (state.backtracking == 0) {
				H_STRING254_tree = (CommonTree)adaptor.Create(H_STRING254);
				adaptor.AddChild(root_0, H_STRING254_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("subtype_value", 54);
			LeaveRule("subtype_value", 54);
			LeaveRule_subtype_value();
		}
		DebugLocation(837, 52);
		} finally { DebugExitRule(GrammarFileName, "subtype_value"); }
		return retval;

	}
	// $ANTLR end "subtype_value"

	partial void EnterRule_objecttype_macro();
	partial void LeaveRule_objecttype_macro();
	// $ANTLR start "objecttype_macro"
	// Smi.g:840:1: objecttype_macro : 'OBJECT-TYPE' 'SYNTAX' ( ( smi_type L_BRACE )=> smi_type objecttype_macro_namedbits | ( smi_type )=> smi_type ( smi_subtyping )? | type ) ( 'UNITS' C_STRING )? ( ( 'MAX-ACCESS' | 'ACCESS' ) objecttype_macro_accesstypes | 'PIB-ACCESS' objecttype_macro_pibaccess )? ( 'PIB-REFERENCES' L_BRACE value R_BRACE )? ( 'PIB-TAG' L_BRACE value R_BRACE )? 'STATUS' objecttype_macro_statustypes ( ( 'DESCRIPTION' )=> 'DESCRIPTION' C_STRING )? ( 'INSTALL-ERRORS' L_BRACE objecttype_macro_error ( COMMA objecttype_macro_error )* R_BRACE )? ( 'REFERENCE' C_STRING )? ( (~ ( 'PIB-INDEX' ) )=> 'INDEX' objecttype_macro_index | 'AUGMENTS' objecttype_macro_augments | 'PIB-INDEX' L_BRACE value R_BRACE | 'EXTENDS' L_BRACE value R_BRACE )? ( 'INDEX' objecttype_macro_index )? ( 'UNIQUENESS' L_BRACE ( value ( COMMA value )* )? R_BRACE )? ( ( 'DEFVAL' )=> 'DEFVAL' L_BRACE ( ( L_BRACE LOWER ( COMMA | R_BRACE ) )=> objecttype_macro_bitsvalue | value ) R_BRACE )? ;
	[GrammarRule("objecttype_macro")]
	private AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro()
	{
		EnterRule_objecttype_macro();
		EnterRule("objecttype_macro", 55);
		TraceIn("objecttype_macro", 55);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal255 = default(IToken);
		IToken string_literal256 = default(IToken);
		IToken string_literal262 = default(IToken);
		IToken C_STRING263 = default(IToken);
		IToken set264 = default(IToken);
		IToken string_literal266 = default(IToken);
		IToken string_literal268 = default(IToken);
		IToken L_BRACE269 = default(IToken);
		IToken R_BRACE271 = default(IToken);
		IToken string_literal272 = default(IToken);
		IToken L_BRACE273 = default(IToken);
		IToken R_BRACE275 = default(IToken);
		IToken string_literal276 = default(IToken);
		IToken string_literal278 = default(IToken);
		IToken C_STRING279 = default(IToken);
		IToken string_literal280 = default(IToken);
		IToken L_BRACE281 = default(IToken);
		IToken COMMA283 = default(IToken);
		IToken R_BRACE285 = default(IToken);
		IToken string_literal286 = default(IToken);
		IToken C_STRING287 = default(IToken);
		IToken string_literal288 = default(IToken);
		IToken string_literal290 = default(IToken);
		IToken string_literal292 = default(IToken);
		IToken L_BRACE293 = default(IToken);
		IToken R_BRACE295 = default(IToken);
		IToken string_literal296 = default(IToken);
		IToken L_BRACE297 = default(IToken);
		IToken R_BRACE299 = default(IToken);
		IToken string_literal300 = default(IToken);
		IToken string_literal302 = default(IToken);
		IToken L_BRACE303 = default(IToken);
		IToken COMMA305 = default(IToken);
		IToken R_BRACE307 = default(IToken);
		IToken string_literal308 = default(IToken);
		IToken L_BRACE309 = default(IToken);
		IToken R_BRACE312 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> smi_type257 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_namedbits258 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> smi_type259 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> smi_subtyping260 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> type261 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_accesstypes265 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_pibaccess267 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value270 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value274 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_statustypes277 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_error282 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_error284 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_index289 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_augments291 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value294 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value298 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_index301 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value304 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value306 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_bitsvalue310 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value311 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree string_literal255_tree = default(CommonTree);
		CommonTree string_literal256_tree = default(CommonTree);
		CommonTree string_literal262_tree = default(CommonTree);
		CommonTree C_STRING263_tree = default(CommonTree);
		CommonTree set264_tree = default(CommonTree);
		CommonTree string_literal266_tree = default(CommonTree);
		CommonTree string_literal268_tree = default(CommonTree);
		CommonTree L_BRACE269_tree = default(CommonTree);
		CommonTree R_BRACE271_tree = default(CommonTree);
		CommonTree string_literal272_tree = default(CommonTree);
		CommonTree L_BRACE273_tree = default(CommonTree);
		CommonTree R_BRACE275_tree = default(CommonTree);
		CommonTree string_literal276_tree = default(CommonTree);
		CommonTree string_literal278_tree = default(CommonTree);
		CommonTree C_STRING279_tree = default(CommonTree);
		CommonTree string_literal280_tree = default(CommonTree);
		CommonTree L_BRACE281_tree = default(CommonTree);
		CommonTree COMMA283_tree = default(CommonTree);
		CommonTree R_BRACE285_tree = default(CommonTree);
		CommonTree string_literal286_tree = default(CommonTree);
		CommonTree C_STRING287_tree = default(CommonTree);
		CommonTree string_literal288_tree = default(CommonTree);
		CommonTree string_literal290_tree = default(CommonTree);
		CommonTree string_literal292_tree = default(CommonTree);
		CommonTree L_BRACE293_tree = default(CommonTree);
		CommonTree R_BRACE295_tree = default(CommonTree);
		CommonTree string_literal296_tree = default(CommonTree);
		CommonTree L_BRACE297_tree = default(CommonTree);
		CommonTree R_BRACE299_tree = default(CommonTree);
		CommonTree string_literal300_tree = default(CommonTree);
		CommonTree string_literal302_tree = default(CommonTree);
		CommonTree L_BRACE303_tree = default(CommonTree);
		CommonTree COMMA305_tree = default(CommonTree);
		CommonTree R_BRACE307_tree = default(CommonTree);
		CommonTree string_literal308_tree = default(CommonTree);
		CommonTree L_BRACE309_tree = default(CommonTree);
		CommonTree R_BRACE312_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro");
		DebugLocation(840, 31);
		try
		{
			// Smi.g:840:17: ( 'OBJECT-TYPE' 'SYNTAX' ( ( smi_type L_BRACE )=> smi_type objecttype_macro_namedbits | ( smi_type )=> smi_type ( smi_subtyping )? | type ) ( 'UNITS' C_STRING )? ( ( 'MAX-ACCESS' | 'ACCESS' ) objecttype_macro_accesstypes | 'PIB-ACCESS' objecttype_macro_pibaccess )? ( 'PIB-REFERENCES' L_BRACE value R_BRACE )? ( 'PIB-TAG' L_BRACE value R_BRACE )? 'STATUS' objecttype_macro_statustypes ( ( 'DESCRIPTION' )=> 'DESCRIPTION' C_STRING )? ( 'INSTALL-ERRORS' L_BRACE objecttype_macro_error ( COMMA objecttype_macro_error )* R_BRACE )? ( 'REFERENCE' C_STRING )? ( (~ ( 'PIB-INDEX' ) )=> 'INDEX' objecttype_macro_index | 'AUGMENTS' objecttype_macro_augments | 'PIB-INDEX' L_BRACE value R_BRACE | 'EXTENDS' L_BRACE value R_BRACE )? ( 'INDEX' objecttype_macro_index )? ( 'UNIQUENESS' L_BRACE ( value ( COMMA value )* )? R_BRACE )? ( ( 'DEFVAL' )=> 'DEFVAL' L_BRACE ( ( L_BRACE LOWER ( COMMA | R_BRACE ) )=> objecttype_macro_bitsvalue | value ) R_BRACE )? )
			DebugEnterAlt(1);
			// Smi.g:840:19: 'OBJECT-TYPE' 'SYNTAX' ( ( smi_type L_BRACE )=> smi_type objecttype_macro_namedbits | ( smi_type )=> smi_type ( smi_subtyping )? | type ) ( 'UNITS' C_STRING )? ( ( 'MAX-ACCESS' | 'ACCESS' ) objecttype_macro_accesstypes | 'PIB-ACCESS' objecttype_macro_pibaccess )? ( 'PIB-REFERENCES' L_BRACE value R_BRACE )? ( 'PIB-TAG' L_BRACE value R_BRACE )? 'STATUS' objecttype_macro_statustypes ( ( 'DESCRIPTION' )=> 'DESCRIPTION' C_STRING )? ( 'INSTALL-ERRORS' L_BRACE objecttype_macro_error ( COMMA objecttype_macro_error )* R_BRACE )? ( 'REFERENCE' C_STRING )? ( (~ ( 'PIB-INDEX' ) )=> 'INDEX' objecttype_macro_index | 'AUGMENTS' objecttype_macro_augments | 'PIB-INDEX' L_BRACE value R_BRACE | 'EXTENDS' L_BRACE value R_BRACE )? ( 'INDEX' objecttype_macro_index )? ( 'UNIQUENESS' L_BRACE ( value ( COMMA value )* )? R_BRACE )? ( ( 'DEFVAL' )=> 'DEFVAL' L_BRACE ( ( L_BRACE LOWER ( COMMA | R_BRACE ) )=> objecttype_macro_bitsvalue | value ) R_BRACE )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(840, 19);
			string_literal255=(IToken)Match(input,165,Follow._165_in_objecttype_macro4125); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal255_tree = (CommonTree)adaptor.Create(string_literal255);
			adaptor.AddChild(root_0, string_literal255_tree);
			}
			DebugLocation(840, 33);
			string_literal256=(IToken)Match(input,187,Follow._187_in_objecttype_macro4127); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal256_tree = (CommonTree)adaptor.Create(string_literal256);
			adaptor.AddChild(root_0, string_literal256_tree);
			}
			DebugLocation(841, 21);
			// Smi.g:841:21: ( ( smi_type L_BRACE )=> smi_type objecttype_macro_namedbits | ( smi_type )=> smi_type ( smi_subtyping )? | type )
			int alt66=3;
			try { DebugEnterSubRule(66);
			try { DebugEnterDecision(66, false);
			switch (input.LA(1))
			{
			case 137:
				{
				int LA66_2 = input.LA(2);

				if ((LA66_2==L_BRACE) && (EvaluatePredicate(synpred25_Smi_fragment)))
				{
					alt66 = 1;
				}
				else if ((EvaluatePredicate(synpred26_Smi_fragment)))
				{
					alt66 = 2;
				}
				else if ((true))
				{
					alt66 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 66, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case INTEGER_KW:
				{
				int LA66_2 = input.LA(2);

				if ((LA66_2==L_BRACE) && (EvaluatePredicate(synpred25_Smi_fragment)))
				{
					alt66 = 1;
				}
				else if ((EvaluatePredicate(synpred26_Smi_fragment)))
				{
					alt66 = 2;
				}
				else if ((true))
				{
					alt66 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 66, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case OCTET_KW:
				{
				int LA66_2 = input.LA(2);

				if ((LA66_2==STRING_KW))
				{
					int LA66_3 = input.LA(3);

					if ((LA66_3==L_BRACE) && (EvaluatePredicate(synpred25_Smi_fragment)))
					{
						alt66 = 1;
					}
					else if ((EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt66 = 2;
					}
					else if ((true))
					{
						alt66 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 66, 9, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 66, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case OBJECT_KW:
				{
				int LA66_2 = input.LA(2);

				if ((LA66_2==IDENTIFIER_KW))
				{
					int LA66_3 = input.LA(3);

					if ((LA66_3==L_BRACE) && (EvaluatePredicate(synpred25_Smi_fragment)))
					{
						alt66 = 1;
					}
					else if ((EvaluatePredicate(synpred26_Smi_fragment)))
					{
						alt66 = 2;
					}
					else if ((true))
					{
						alt66 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 66, 10, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 66, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case UPPER:
				{
				int LA66_2 = input.LA(2);

				if ((LA66_2==L_BRACE) && (EvaluatePredicate(synpred25_Smi_fragment)))
				{
					alt66 = 1;
				}
				else if ((EvaluatePredicate(synpred26_Smi_fragment)))
				{
					alt66 = 2;
				}
				else if ((true))
				{
					alt66 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 66, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ANY_KW:
			case BIT_KW:
			case BMP_STR_KW:
			case BOOLEAN_KW:
			case CHARACTER_KW:
			case CHOICE_KW:
			case EMBEDDED_KW:
			case ENUMERATED_KW:
			case ERROR_KW:
			case EXTERNAL_KW:
			case GENERALIZED_TIME_KW:
			case GENERAL_STR_KW:
			case GRAPHIC_STR_KW:
			case IA5_STRING_KW:
			case ISO646_STR_KW:
			case LOWER:
			case L_BRACKET:
			case NULL_KW:
			case NUMERIC_STR_KW:
			case OPERATION_KW:
			case PRINTABLE_STR_KW:
			case REAL_KW:
			case SEQUENCE_KW:
			case SET_KW:
			case T61_STR_KW:
			case TELETEX_STR_KW:
			case UNIVERSAL_STR_KW:
			case UTC_TIME_KW:
			case UTF8_STR_KW:
			case VIDEOTEX_STR_KW:
			case VISIBLE_STR_KW:
			case 131:
			case 158:
			case 159:
			case 160:
			case 161:
			case 163:
			case 164:
			case 165:
			case 179:
			case 188:
			case 191:
				{
				alt66 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 66, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(66); }
			switch (alt66)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:841:23: ( smi_type L_BRACE )=> smi_type objecttype_macro_namedbits
				{
				DebugLocation(841, 45);
				PushFollow(Follow._smi_type_in_objecttype_macro4160);
				smi_type257=smi_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, smi_type257.Tree);
				DebugLocation(841, 54);
				PushFollow(Follow._objecttype_macro_namedbits_in_objecttype_macro4162);
				objecttype_macro_namedbits258=objecttype_macro_namedbits();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, objecttype_macro_namedbits258.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:842:24: ( smi_type )=> smi_type ( smi_subtyping )?
				{
				DebugLocation(842, 38);
				PushFollow(Follow._smi_type_in_objecttype_macro4194);
				smi_type259=smi_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, smi_type259.Tree);
				DebugLocation(842, 47);
				// Smi.g:842:47: ( smi_subtyping )?
				int alt65=2;
				try { DebugEnterSubRule(65);
				try { DebugEnterDecision(65, false);
				int LA65_1 = input.LA(1);

				if ((LA65_1==L_PAREN))
				{
					alt65 = 1;
				}
				} finally { DebugExitDecision(65); }
				switch (alt65)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:842:48: smi_subtyping
					{
					DebugLocation(842, 48);
					PushFollow(Follow._smi_subtyping_in_objecttype_macro4197);
					smi_subtyping260=smi_subtyping();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, smi_subtyping260.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(65); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:843:24: type
				{
				DebugLocation(843, 24);
				PushFollow(Follow._type_in_objecttype_macro4224);
				type261=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type261.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(66); }

			DebugLocation(845, 19);
			// Smi.g:845:19: ( 'UNITS' C_STRING )?
			int alt67=2;
			try { DebugEnterSubRule(67);
			try { DebugEnterDecision(67, false);
			int LA67_1 = input.LA(1);

			if ((LA67_1==194))
			{
				alt67 = 1;
			}
			} finally { DebugExitDecision(67); }
			switch (alt67)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:845:20: 'UNITS' C_STRING
				{
				DebugLocation(845, 20);
				string_literal262=(IToken)Match(input,194,Follow._194_in_objecttype_macro4268); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal262_tree = (CommonTree)adaptor.Create(string_literal262);
				adaptor.AddChild(root_0, string_literal262_tree);
				}
				DebugLocation(845, 28);
				C_STRING263=(IToken)Match(input,C_STRING,Follow._C_STRING_in_objecttype_macro4270); if (state.failed) return retval;
				if (state.backtracking == 0) {
				C_STRING263_tree = (CommonTree)adaptor.Create(C_STRING263);
				adaptor.AddChild(root_0, C_STRING263_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(67); }

			DebugLocation(846, 19);
			// Smi.g:846:19: ( ( 'MAX-ACCESS' | 'ACCESS' ) objecttype_macro_accesstypes | 'PIB-ACCESS' objecttype_macro_pibaccess )?
			int alt68=3;
			try { DebugEnterSubRule(68);
			try { DebugEnterDecision(68, false);
			int LA68_1 = input.LA(1);

			if ((LA68_1==130||LA68_1==155))
			{
				alt68 = 1;
			}
			else if ((LA68_1==168))
			{
				alt68 = 2;
			}
			} finally { DebugExitDecision(68); }
			switch (alt68)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:846:21: ( 'MAX-ACCESS' | 'ACCESS' ) objecttype_macro_accesstypes
				{
				DebugLocation(846, 21);

				set264=(IToken)input.LT(1);
				if (input.LA(1)==130||input.LA(1)==155)
				{
					input.Consume();
					if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set264));
					state.errorRecovery=false;state.failed=false;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					DebugRecognitionException(mse);
					throw mse;
				}

				DebugLocation(846, 47);
				PushFollow(Follow._objecttype_macro_accesstypes_in_objecttype_macro4303);
				objecttype_macro_accesstypes265=objecttype_macro_accesstypes();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, objecttype_macro_accesstypes265.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:847:22: 'PIB-ACCESS' objecttype_macro_pibaccess
				{
				DebugLocation(847, 22);
				string_literal266=(IToken)Match(input,168,Follow._168_in_objecttype_macro4327); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal266_tree = (CommonTree)adaptor.Create(string_literal266);
				adaptor.AddChild(root_0, string_literal266_tree);
				}
				DebugLocation(847, 35);
				PushFollow(Follow._objecttype_macro_pibaccess_in_objecttype_macro4329);
				objecttype_macro_pibaccess267=objecttype_macro_pibaccess();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, objecttype_macro_pibaccess267.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(68); }

			DebugLocation(848, 19);
			// Smi.g:848:19: ( 'PIB-REFERENCES' L_BRACE value R_BRACE )?
			int alt69=2;
			try { DebugEnterSubRule(69);
			try { DebugEnterDecision(69, false);
			int LA69_1 = input.LA(1);

			if ((LA69_1==172))
			{
				alt69 = 1;
			}
			} finally { DebugExitDecision(69); }
			switch (alt69)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:848:20: 'PIB-REFERENCES' L_BRACE value R_BRACE
				{
				DebugLocation(848, 20);
				string_literal268=(IToken)Match(input,172,Follow._172_in_objecttype_macro4367); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal268_tree = (CommonTree)adaptor.Create(string_literal268);
				adaptor.AddChild(root_0, string_literal268_tree);
				}
				DebugLocation(848, 37);
				L_BRACE269=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro4369); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE269_tree = (CommonTree)adaptor.Create(L_BRACE269);
				adaptor.AddChild(root_0, L_BRACE269_tree);
				}
				DebugLocation(848, 45);
				PushFollow(Follow._value_in_objecttype_macro4371);
				value270=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value270.Tree);
				DebugLocation(848, 51);
				R_BRACE271=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro4373); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE271_tree = (CommonTree)adaptor.Create(R_BRACE271);
				adaptor.AddChild(root_0, R_BRACE271_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(69); }

			DebugLocation(849, 19);
			// Smi.g:849:19: ( 'PIB-TAG' L_BRACE value R_BRACE )?
			int alt70=2;
			try { DebugEnterSubRule(70);
			try { DebugEnterDecision(70, false);
			int LA70_1 = input.LA(1);

			if ((LA70_1==173))
			{
				alt70 = 1;
			}
			} finally { DebugExitDecision(70); }
			switch (alt70)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:849:20: 'PIB-TAG' L_BRACE value R_BRACE
				{
				DebugLocation(849, 20);
				string_literal272=(IToken)Match(input,173,Follow._173_in_objecttype_macro4414); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal272_tree = (CommonTree)adaptor.Create(string_literal272);
				adaptor.AddChild(root_0, string_literal272_tree);
				}
				DebugLocation(849, 30);
				L_BRACE273=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro4416); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE273_tree = (CommonTree)adaptor.Create(L_BRACE273);
				adaptor.AddChild(root_0, L_BRACE273_tree);
				}
				DebugLocation(849, 38);
				PushFollow(Follow._value_in_objecttype_macro4418);
				value274=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value274.Tree);
				DebugLocation(849, 44);
				R_BRACE275=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro4420); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE275_tree = (CommonTree)adaptor.Create(R_BRACE275);
				adaptor.AddChild(root_0, R_BRACE275_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(70); }

			DebugLocation(850, 19);
			string_literal276=(IToken)Match(input,184,Follow._184_in_objecttype_macro4467); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal276_tree = (CommonTree)adaptor.Create(string_literal276);
			adaptor.AddChild(root_0, string_literal276_tree);
			}
			DebugLocation(850, 28);
			PushFollow(Follow._objecttype_macro_statustypes_in_objecttype_macro4469);
			objecttype_macro_statustypes277=objecttype_macro_statustypes();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, objecttype_macro_statustypes277.Tree);
			DebugLocation(851, 19);
			// Smi.g:851:19: ( ( 'DESCRIPTION' )=> 'DESCRIPTION' C_STRING )?
			int alt71=2;
			try { DebugEnterSubRule(71);
			try { DebugEnterDecision(71, false);
			int LA71_1 = input.LA(1);

			if ((LA71_1==141))
			{
				int LA71_2 = input.LA(2);

				if ((LA71_2==C_STRING))
				{
					int LA71_3 = input.LA(3);

					if ((EvaluatePredicate(synpred27_Smi_fragment)))
					{
						alt71 = 1;
					}
				}
			}
			} finally { DebugExitDecision(71); }
			switch (alt71)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:851:21: ( 'DESCRIPTION' )=> 'DESCRIPTION' C_STRING
				{
				DebugLocation(851, 40);
				string_literal278=(IToken)Match(input,141,Follow._141_in_objecttype_macro4498); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal278_tree = (CommonTree)adaptor.Create(string_literal278);
				adaptor.AddChild(root_0, string_literal278_tree);
				}
				DebugLocation(851, 54);
				C_STRING279=(IToken)Match(input,C_STRING,Follow._C_STRING_in_objecttype_macro4500); if (state.failed) return retval;
				if (state.backtracking == 0) {
				C_STRING279_tree = (CommonTree)adaptor.Create(C_STRING279);
				adaptor.AddChild(root_0, C_STRING279_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(71); }

			DebugLocation(852, 19);
			// Smi.g:852:19: ( 'INSTALL-ERRORS' L_BRACE objecttype_macro_error ( COMMA objecttype_macro_error )* R_BRACE )?
			int alt73=2;
			try { DebugEnterSubRule(73);
			try { DebugEnterDecision(73, false);
			int LA73_1 = input.LA(1);

			if ((LA73_1==151))
			{
				alt73 = 1;
			}
			} finally { DebugExitDecision(73); }
			switch (alt73)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:852:20: 'INSTALL-ERRORS' L_BRACE objecttype_macro_error ( COMMA objecttype_macro_error )* R_BRACE
				{
				DebugLocation(852, 20);
				string_literal280=(IToken)Match(input,151,Follow._151_in_objecttype_macro4556); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal280_tree = (CommonTree)adaptor.Create(string_literal280);
				adaptor.AddChild(root_0, string_literal280_tree);
				}
				DebugLocation(852, 37);
				L_BRACE281=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro4558); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE281_tree = (CommonTree)adaptor.Create(L_BRACE281);
				adaptor.AddChild(root_0, L_BRACE281_tree);
				}
				DebugLocation(852, 45);
				PushFollow(Follow._objecttype_macro_error_in_objecttype_macro4560);
				objecttype_macro_error282=objecttype_macro_error();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, objecttype_macro_error282.Tree);
				DebugLocation(852, 68);
				// Smi.g:852:68: ( COMMA objecttype_macro_error )*
				try { DebugEnterSubRule(72);
				while (true)
				{
					int alt72=2;
					try { DebugEnterDecision(72, false);
					int LA72_1 = input.LA(1);

					if ((LA72_1==COMMA))
					{
						alt72 = 1;
					}


					} finally { DebugExitDecision(72); }
					switch ( alt72 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:852:69: COMMA objecttype_macro_error
						{
						DebugLocation(852, 69);
						COMMA283=(IToken)Match(input,COMMA,Follow._COMMA_in_objecttype_macro4563); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA283_tree = (CommonTree)adaptor.Create(COMMA283);
						adaptor.AddChild(root_0, COMMA283_tree);
						}
						DebugLocation(852, 75);
						PushFollow(Follow._objecttype_macro_error_in_objecttype_macro4565);
						objecttype_macro_error284=objecttype_macro_error();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, objecttype_macro_error284.Tree);

						}
						break;

					default:
						goto loop72;
					}
				}

				loop72:
					;

				} finally { DebugExitSubRule(72); }

				DebugLocation(852, 100);
				R_BRACE285=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro4569); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE285_tree = (CommonTree)adaptor.Create(R_BRACE285);
				adaptor.AddChild(root_0, R_BRACE285_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(73); }

			DebugLocation(853, 5);
			// Smi.g:853:5: ( 'REFERENCE' C_STRING )?
			int alt74=2;
			try { DebugEnterSubRule(74);
			try { DebugEnterDecision(74, false);
			int LA74_1 = input.LA(1);

			if ((LA74_1==177))
			{
				alt74 = 1;
			}
			} finally { DebugExitDecision(74); }
			switch (alt74)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:853:7: 'REFERENCE' C_STRING
				{
				DebugLocation(853, 7);
				string_literal286=(IToken)Match(input,177,Follow._177_in_objecttype_macro4584); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal286_tree = (CommonTree)adaptor.Create(string_literal286);
				adaptor.AddChild(root_0, string_literal286_tree);
				}
				DebugLocation(853, 19);
				C_STRING287=(IToken)Match(input,C_STRING,Follow._C_STRING_in_objecttype_macro4586); if (state.failed) return retval;
				if (state.backtracking == 0) {
				C_STRING287_tree = (CommonTree)adaptor.Create(C_STRING287);
				adaptor.AddChild(root_0, C_STRING287_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(74); }

			DebugLocation(854, 5);
			// Smi.g:854:5: ( (~ ( 'PIB-INDEX' ) )=> 'INDEX' objecttype_macro_index | 'AUGMENTS' objecttype_macro_augments | 'PIB-INDEX' L_BRACE value R_BRACE | 'EXTENDS' L_BRACE value R_BRACE )?
			int alt75=5;
			try { DebugEnterSubRule(75);
			try { DebugEnterDecision(75, false);
			try
			{
				alt75 = dfa75.Predict(input);
			}
			catch (NoViableAltException nvae)
			{
				DebugRecognitionException(nvae);
				throw;
			}
			} finally { DebugExitDecision(75); }
			switch (alt75)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:854:7: (~ ( 'PIB-INDEX' ) )=> 'INDEX' objecttype_macro_index
				{
				DebugLocation(854, 27);
				string_literal288=(IToken)Match(input,150,Follow._150_in_objecttype_macro4607); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal288_tree = (CommonTree)adaptor.Create(string_literal288);
				adaptor.AddChild(root_0, string_literal288_tree);
				}
				DebugLocation(854, 35);
				PushFollow(Follow._objecttype_macro_index_in_objecttype_macro4609);
				objecttype_macro_index289=objecttype_macro_index();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, objecttype_macro_index289.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:855:23: 'AUGMENTS' objecttype_macro_augments
				{
				DebugLocation(855, 23);
				string_literal290=(IToken)Match(input,135,Follow._135_in_objecttype_macro4634); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal290_tree = (CommonTree)adaptor.Create(string_literal290);
				adaptor.AddChild(root_0, string_literal290_tree);
				}
				DebugLocation(855, 34);
				PushFollow(Follow._objecttype_macro_augments_in_objecttype_macro4636);
				objecttype_macro_augments291=objecttype_macro_augments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, objecttype_macro_augments291.Tree);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:856:23: 'PIB-INDEX' L_BRACE value R_BRACE
				{
				DebugLocation(856, 23);
				string_literal292=(IToken)Match(input,170,Follow._170_in_objecttype_macro4661); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal292_tree = (CommonTree)adaptor.Create(string_literal292);
				adaptor.AddChild(root_0, string_literal292_tree);
				}
				DebugLocation(856, 35);
				L_BRACE293=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro4663); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE293_tree = (CommonTree)adaptor.Create(L_BRACE293);
				adaptor.AddChild(root_0, L_BRACE293_tree);
				}
				DebugLocation(856, 43);
				PushFollow(Follow._value_in_objecttype_macro4665);
				value294=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value294.Tree);
				DebugLocation(856, 49);
				R_BRACE295=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro4667); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE295_tree = (CommonTree)adaptor.Create(R_BRACE295);
				adaptor.AddChild(root_0, R_BRACE295_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Smi.g:857:23: 'EXTENDS' L_BRACE value R_BRACE
				{
				DebugLocation(857, 23);
				string_literal296=(IToken)Match(input,145,Follow._145_in_objecttype_macro4713); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal296_tree = (CommonTree)adaptor.Create(string_literal296);
				adaptor.AddChild(root_0, string_literal296_tree);
				}
				DebugLocation(857, 33);
				L_BRACE297=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro4715); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE297_tree = (CommonTree)adaptor.Create(L_BRACE297);
				adaptor.AddChild(root_0, L_BRACE297_tree);
				}
				DebugLocation(857, 41);
				PushFollow(Follow._value_in_objecttype_macro4717);
				value298=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value298.Tree);
				DebugLocation(857, 47);
				R_BRACE299=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro4719); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE299_tree = (CommonTree)adaptor.Create(R_BRACE299);
				adaptor.AddChild(root_0, R_BRACE299_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(75); }

			DebugLocation(859, 19);
			// Smi.g:859:19: ( 'INDEX' objecttype_macro_index )?
			int alt76=2;
			try { DebugEnterSubRule(76);
			try { DebugEnterDecision(76, false);
			int LA76_1 = input.LA(1);

			if ((LA76_1==150))
			{
				alt76 = 1;
			}
			} finally { DebugExitDecision(76); }
			switch (alt76)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:859:21: 'INDEX' objecttype_macro_index
				{
				DebugLocation(859, 21);
				string_literal300=(IToken)Match(input,150,Follow._150_in_objecttype_macro4787); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal300_tree = (CommonTree)adaptor.Create(string_literal300);
				adaptor.AddChild(root_0, string_literal300_tree);
				}
				DebugLocation(859, 29);
				PushFollow(Follow._objecttype_macro_index_in_objecttype_macro4789);
				objecttype_macro_index301=objecttype_macro_index();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, objecttype_macro_index301.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(76); }

			DebugLocation(860, 19);
			// Smi.g:860:19: ( 'UNIQUENESS' L_BRACE ( value ( COMMA value )* )? R_BRACE )?
			int alt79=2;
			try { DebugEnterSubRule(79);
			try { DebugEnterDecision(79, false);
			int LA79_1 = input.LA(1);

			if ((LA79_1==193))
			{
				alt79 = 1;
			}
			} finally { DebugExitDecision(79); }
			switch (alt79)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:860:21: 'UNIQUENESS' L_BRACE ( value ( COMMA value )* )? R_BRACE
				{
				DebugLocation(860, 21);
				string_literal302=(IToken)Match(input,193,Follow._193_in_objecttype_macro4838); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal302_tree = (CommonTree)adaptor.Create(string_literal302);
				adaptor.AddChild(root_0, string_literal302_tree);
				}
				DebugLocation(860, 34);
				L_BRACE303=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro4840); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE303_tree = (CommonTree)adaptor.Create(L_BRACE303);
				adaptor.AddChild(root_0, L_BRACE303_tree);
				}
				DebugLocation(860, 42);
				// Smi.g:860:42: ( value ( COMMA value )* )?
				int alt78=2;
				try { DebugEnterSubRule(78);
				try { DebugEnterDecision(78, false);
				int LA78_1 = input.LA(1);

				if ((LA78_1==B_STRING||LA78_1==C_STRING||LA78_1==FALSE_KW||LA78_1==H_STRING||(LA78_1>=LOWER && LA78_1<=L_BRACE)||(LA78_1>=MINUS && LA78_1<=MINUS_INFINITY_KW)||(LA78_1>=NULL_KW && LA78_1<=NUMBER)||LA78_1==PLUS_INFINITY_KW||LA78_1==TRUE_KW||LA78_1==UPPER))
				{
					alt78 = 1;
				}
				} finally { DebugExitDecision(78); }
				switch (alt78)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:860:43: value ( COMMA value )*
					{
					DebugLocation(860, 43);
					PushFollow(Follow._value_in_objecttype_macro4843);
					value304=value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, value304.Tree);
					DebugLocation(860, 49);
					// Smi.g:860:49: ( COMMA value )*
					try { DebugEnterSubRule(77);
					while (true)
					{
						int alt77=2;
						try { DebugEnterDecision(77, false);
						int LA77_1 = input.LA(1);

						if ((LA77_1==COMMA))
						{
							alt77 = 1;
						}


						} finally { DebugExitDecision(77); }
						switch ( alt77 )
						{
						case 1:
							DebugEnterAlt(1);
							// Smi.g:860:50: COMMA value
							{
							DebugLocation(860, 50);
							COMMA305=(IToken)Match(input,COMMA,Follow._COMMA_in_objecttype_macro4846); if (state.failed) return retval;
							if (state.backtracking == 0) {
							COMMA305_tree = (CommonTree)adaptor.Create(COMMA305);
							adaptor.AddChild(root_0, COMMA305_tree);
							}
							DebugLocation(860, 56);
							PushFollow(Follow._value_in_objecttype_macro4848);
							value306=value();
							PopFollow();
							if (state.failed) return retval;
							if (state.backtracking == 0) adaptor.AddChild(root_0, value306.Tree);

							}
							break;

						default:
							goto loop77;
						}
					}

					loop77:
						;

					} finally { DebugExitSubRule(77); }


					}
					break;

				}
				} finally { DebugExitSubRule(78); }

				DebugLocation(860, 67);
				R_BRACE307=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro4855); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE307_tree = (CommonTree)adaptor.Create(R_BRACE307);
				adaptor.AddChild(root_0, R_BRACE307_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(79); }

			DebugLocation(861, 5);
			// Smi.g:861:5: ( ( 'DEFVAL' )=> 'DEFVAL' L_BRACE ( ( L_BRACE LOWER ( COMMA | R_BRACE ) )=> objecttype_macro_bitsvalue | value ) R_BRACE )?
			int alt81=2;
			try { DebugEnterSubRule(81);
			try { DebugEnterDecision(81, false);
			int LA81_1 = input.LA(1);

			if ((LA81_1==140))
			{
				int LA81_2 = input.LA(2);

				if ((EvaluatePredicate(synpred29_Smi_fragment)))
				{
					alt81 = 1;
				}
			}
			} finally { DebugExitDecision(81); }
			switch (alt81)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:861:7: ( 'DEFVAL' )=> 'DEFVAL' L_BRACE ( ( L_BRACE LOWER ( COMMA | R_BRACE ) )=> objecttype_macro_bitsvalue | value ) R_BRACE
				{
				DebugLocation(861, 21);
				string_literal308=(IToken)Match(input,140,Follow._140_in_objecttype_macro4894); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal308_tree = (CommonTree)adaptor.Create(string_literal308);
				adaptor.AddChild(root_0, string_literal308_tree);
				}
				DebugLocation(861, 30);
				L_BRACE309=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro4896); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE309_tree = (CommonTree)adaptor.Create(L_BRACE309);
				adaptor.AddChild(root_0, L_BRACE309_tree);
				}
				DebugLocation(862, 21);
				// Smi.g:862:21: ( ( L_BRACE LOWER ( COMMA | R_BRACE ) )=> objecttype_macro_bitsvalue | value )
				int alt80=2;
				try { DebugEnterSubRule(80);
				try { DebugEnterDecision(80, false);
				try
				{
					alt80 = dfa80.Predict(input);
				}
				catch (NoViableAltException nvae)
				{
					DebugRecognitionException(nvae);
					throw;
				}
				} finally { DebugExitDecision(80); }
				switch (alt80)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:862:23: ( L_BRACE LOWER ( COMMA | R_BRACE ) )=> objecttype_macro_bitsvalue
					{
					DebugLocation(862, 60);
					PushFollow(Follow._objecttype_macro_bitsvalue_in_objecttype_macro4937);
					objecttype_macro_bitsvalue310=objecttype_macro_bitsvalue();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, objecttype_macro_bitsvalue310.Tree);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// Smi.g:863:26: value
					{
					DebugLocation(863, 26);
					PushFollow(Follow._value_in_objecttype_macro4964);
					value311=value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, value311.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(80); }

				DebugLocation(864, 21);
				R_BRACE312=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro4988); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE312_tree = (CommonTree)adaptor.Create(R_BRACE312);
				adaptor.AddChild(root_0, R_BRACE312_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(81); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("objecttype_macro", 55);
			LeaveRule("objecttype_macro", 55);
			LeaveRule_objecttype_macro();
		}
		DebugLocation(864, 31);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro"

	partial void EnterRule_objecttype_macro_accesstypes();
	partial void LeaveRule_objecttype_macro_accesstypes();
	// $ANTLR start "objecttype_macro_accesstypes"
	// Smi.g:865:11: protected objecttype_macro_accesstypes : l= LOWER ;
	[GrammarRule("objecttype_macro_accesstypes")]
	protected AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_accesstypes()
	{
		EnterRule_objecttype_macro_accesstypes();
		EnterRule("objecttype_macro_accesstypes", 56);
		TraceIn("objecttype_macro_accesstypes", 56);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro_accesstypes");
		DebugLocation(865, 111);
		try
		{
			// Smi.g:865:39: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:865:41: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(865, 42);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_objecttype_macro_accesstypes5002); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(866, 41);
			if (state.backtracking == 0)
			{
				if (l.Text == ("read-only") || l.Text == ("read-write") 
				                                            || l.Text == ("write-only") || l.Text == ("read-create") 
				                                            || l.Text == ("not-accessible") || l.Text == ("accessible-for-notify"))
				                                            {/*DOSOMETHING*/} else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("objecttype_macro_accesstypes", 56);
			LeaveRule("objecttype_macro_accesstypes", 56);
			LeaveRule_objecttype_macro_accesstypes();
		}
		DebugLocation(869, 111);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro_accesstypes"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro_accesstypes"

	partial void EnterRule_objecttype_macro_pibaccess();
	partial void LeaveRule_objecttype_macro_pibaccess();
	// $ANTLR start "objecttype_macro_pibaccess"
	// Smi.g:870:11: protected objecttype_macro_pibaccess : l= LOWER ;
	[GrammarRule("objecttype_macro_pibaccess")]
	protected AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_pibaccess()
	{
		EnterRule_objecttype_macro_pibaccess();
		EnterRule("objecttype_macro_pibaccess", 57);
		TraceIn("objecttype_macro_pibaccess", 57);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro_pibaccess");
		DebugLocation(870, 111);
		try
		{
			// Smi.g:870:37: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:870:39: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(870, 40);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_objecttype_macro_pibaccess5055); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(871, 41);
			if (state.backtracking == 0)
			{
				if (l.Text == ("install") 
				                                            || l.Text == ("notify") 
				                                            || l.Text == ("install-notify") 
				                                            || l.Text == ("report-only"))
				                                            {/*DOSOMETHING*/} else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("objecttype_macro_pibaccess", 57);
			LeaveRule("objecttype_macro_pibaccess", 57);
			LeaveRule_objecttype_macro_pibaccess();
		}
		DebugLocation(875, 111);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro_pibaccess"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro_pibaccess"

	partial void EnterRule_objecttype_macro_statustypes();
	partial void LeaveRule_objecttype_macro_statustypes();
	// $ANTLR start "objecttype_macro_statustypes"
	// Smi.g:876:11: protected objecttype_macro_statustypes : l= LOWER ;
	[GrammarRule("objecttype_macro_statustypes")]
	protected AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_statustypes()
	{
		EnterRule_objecttype_macro_statustypes();
		EnterRule("objecttype_macro_statustypes", 58);
		TraceIn("objecttype_macro_statustypes", 58);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro_statustypes");
		DebugLocation(876, 111);
		try
		{
			// Smi.g:876:39: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:876:41: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(876, 42);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_objecttype_macro_statustypes5108); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(877, 41);
			if (state.backtracking == 0)
			{
				if (l.Text == ("mandatory") 
				                                            || l.Text == ("optional") 
				                                            || l.Text == ("obsolete") 
				                                            || l.Text == ("current") 
				                                            || l.Text == ("deprecated"))
				                                            {/*DOSOMETHING*/} else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("objecttype_macro_statustypes", 58);
			LeaveRule("objecttype_macro_statustypes", 58);
			LeaveRule_objecttype_macro_statustypes();
		}
		DebugLocation(882, 111);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro_statustypes"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro_statustypes"

	partial void EnterRule_objecttype_macro_index();
	partial void LeaveRule_objecttype_macro_index();
	// $ANTLR start "objecttype_macro_index"
	// Smi.g:885:1: objecttype_macro_index : L_BRACE objecttype_macro_indextype ( COMMA objecttype_macro_indextype )* R_BRACE ;
	[GrammarRule("objecttype_macro_index")]
	private AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_index()
	{
		EnterRule_objecttype_macro_index();
		EnterRule("objecttype_macro_index", 59);
		TraceIn("objecttype_macro_index", 59);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE313 = default(IToken);
		IToken COMMA315 = default(IToken);
		IToken R_BRACE317 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_indextype314 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_indextype316 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree L_BRACE313_tree = default(CommonTree);
		CommonTree COMMA315_tree = default(CommonTree);
		CommonTree R_BRACE317_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro_index");
		DebugLocation(885, 102);
		try
		{
			// Smi.g:885:23: ( L_BRACE objecttype_macro_indextype ( COMMA objecttype_macro_indextype )* R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:885:25: L_BRACE objecttype_macro_indextype ( COMMA objecttype_macro_indextype )* R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(885, 25);
			L_BRACE313=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro_index5158); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE313_tree = (CommonTree)adaptor.Create(L_BRACE313);
			adaptor.AddChild(root_0, L_BRACE313_tree);
			}
			DebugLocation(885, 33);
			PushFollow(Follow._objecttype_macro_indextype_in_objecttype_macro_index5160);
			objecttype_macro_indextype314=objecttype_macro_indextype();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, objecttype_macro_indextype314.Tree);
			DebugLocation(885, 60);
			// Smi.g:885:60: ( COMMA objecttype_macro_indextype )*
			try { DebugEnterSubRule(82);
			while (true)
			{
				int alt82=2;
				try { DebugEnterDecision(82, false);
				int LA82_1 = input.LA(1);

				if ((LA82_1==COMMA))
				{
					alt82 = 1;
				}


				} finally { DebugExitDecision(82); }
				switch ( alt82 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:885:61: COMMA objecttype_macro_indextype
					{
					DebugLocation(885, 61);
					COMMA315=(IToken)Match(input,COMMA,Follow._COMMA_in_objecttype_macro_index5163); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA315_tree = (CommonTree)adaptor.Create(COMMA315);
					adaptor.AddChild(root_0, COMMA315_tree);
					}
					DebugLocation(885, 67);
					PushFollow(Follow._objecttype_macro_indextype_in_objecttype_macro_index5165);
					objecttype_macro_indextype316=objecttype_macro_indextype();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, objecttype_macro_indextype316.Tree);

					}
					break;

				default:
					goto loop82;
				}
			}

			loop82:
				;

			} finally { DebugExitSubRule(82); }

			DebugLocation(885, 96);
			R_BRACE317=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro_index5169); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE317_tree = (CommonTree)adaptor.Create(R_BRACE317);
			adaptor.AddChild(root_0, R_BRACE317_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("objecttype_macro_index", 59);
			LeaveRule("objecttype_macro_index", 59);
			LeaveRule_objecttype_macro_index();
		}
		DebugLocation(885, 102);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro_index"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro_index"

	partial void EnterRule_objecttype_macro_indextype();
	partial void LeaveRule_objecttype_macro_indextype();
	// $ANTLR start "objecttype_macro_indextype"
	// Smi.g:886:1: objecttype_macro_indextype : ( 'IMPLIED' )? value ;
	[GrammarRule("objecttype_macro_indextype")]
	private AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_indextype()
	{
		EnterRule_objecttype_macro_indextype();
		EnterRule("objecttype_macro_indextype", 60);
		TraceIn("objecttype_macro_indextype", 60);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal318 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> value319 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree string_literal318_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro_indextype");
		DebugLocation(886, 46);
		try
		{
			// Smi.g:886:27: ( ( 'IMPLIED' )? value )
			DebugEnterAlt(1);
			// Smi.g:886:29: ( 'IMPLIED' )? value
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(886, 29);
			// Smi.g:886:29: ( 'IMPLIED' )?
			int alt83=2;
			try { DebugEnterSubRule(83);
			try { DebugEnterDecision(83, false);
			int LA83_1 = input.LA(1);

			if ((LA83_1==IMPLIED_KW))
			{
				alt83 = 1;
			}
			} finally { DebugExitDecision(83); }
			switch (alt83)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:886:30: 'IMPLIED'
				{
				DebugLocation(886, 30);
				string_literal318=(IToken)Match(input,IMPLIED_KW,Follow._IMPLIED_KW_in_objecttype_macro_indextype5183); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal318_tree = (CommonTree)adaptor.Create(string_literal318);
				adaptor.AddChild(root_0, string_literal318_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(83); }

			DebugLocation(886, 42);
			PushFollow(Follow._value_in_objecttype_macro_indextype5187);
			value319=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, value319.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("objecttype_macro_indextype", 60);
			LeaveRule("objecttype_macro_indextype", 60);
			LeaveRule_objecttype_macro_indextype();
		}
		DebugLocation(886, 46);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro_indextype"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro_indextype"

	partial void EnterRule_objecttype_macro_augments();
	partial void LeaveRule_objecttype_macro_augments();
	// $ANTLR start "objecttype_macro_augments"
	// Smi.g:887:1: objecttype_macro_augments : L_BRACE value R_BRACE ;
	[GrammarRule("objecttype_macro_augments")]
	private AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_augments()
	{
		EnterRule_objecttype_macro_augments();
		EnterRule("objecttype_macro_augments", 61);
		TraceIn("objecttype_macro_augments", 61);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE320 = default(IToken);
		IToken R_BRACE322 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> value321 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree L_BRACE320_tree = default(CommonTree);
		CommonTree R_BRACE322_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro_augments");
		DebugLocation(887, 48);
		try
		{
			// Smi.g:887:26: ( L_BRACE value R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:887:28: L_BRACE value R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(887, 28);
			L_BRACE320=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro_augments5193); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE320_tree = (CommonTree)adaptor.Create(L_BRACE320);
			adaptor.AddChild(root_0, L_BRACE320_tree);
			}
			DebugLocation(887, 36);
			PushFollow(Follow._value_in_objecttype_macro_augments5195);
			value321=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, value321.Tree);
			DebugLocation(887, 42);
			R_BRACE322=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro_augments5197); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE322_tree = (CommonTree)adaptor.Create(R_BRACE322);
			adaptor.AddChild(root_0, R_BRACE322_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("objecttype_macro_augments", 61);
			LeaveRule("objecttype_macro_augments", 61);
			LeaveRule_objecttype_macro_augments();
		}
		DebugLocation(887, 48);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro_augments"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro_augments"

	partial void EnterRule_objecttype_macro_namedbits();
	partial void LeaveRule_objecttype_macro_namedbits();
	// $ANTLR start "objecttype_macro_namedbits"
	// Smi.g:889:1: objecttype_macro_namedbits : L_BRACE ( LOWER ) L_PAREN NUMBER R_PAREN ( COMMA ( LOWER ) L_PAREN NUMBER R_PAREN )* R_BRACE ;
	[GrammarRule("objecttype_macro_namedbits")]
	private AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_namedbits()
	{
		EnterRule_objecttype_macro_namedbits();
		EnterRule("objecttype_macro_namedbits", 62);
		TraceIn("objecttype_macro_namedbits", 62);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE323 = default(IToken);
		IToken LOWER324 = default(IToken);
		IToken L_PAREN325 = default(IToken);
		IToken NUMBER326 = default(IToken);
		IToken R_PAREN327 = default(IToken);
		IToken COMMA328 = default(IToken);
		IToken LOWER329 = default(IToken);
		IToken L_PAREN330 = default(IToken);
		IToken NUMBER331 = default(IToken);
		IToken R_PAREN332 = default(IToken);
		IToken R_BRACE333 = default(IToken);

		CommonTree L_BRACE323_tree = default(CommonTree);
		CommonTree LOWER324_tree = default(CommonTree);
		CommonTree L_PAREN325_tree = default(CommonTree);
		CommonTree NUMBER326_tree = default(CommonTree);
		CommonTree R_PAREN327_tree = default(CommonTree);
		CommonTree COMMA328_tree = default(CommonTree);
		CommonTree LOWER329_tree = default(CommonTree);
		CommonTree L_PAREN330_tree = default(CommonTree);
		CommonTree NUMBER331_tree = default(CommonTree);
		CommonTree R_PAREN332_tree = default(CommonTree);
		CommonTree R_BRACE333_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro_namedbits");
		DebugLocation(889, 114);
		try
		{
			// Smi.g:889:27: ( L_BRACE ( LOWER ) L_PAREN NUMBER R_PAREN ( COMMA ( LOWER ) L_PAREN NUMBER R_PAREN )* R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:889:29: L_BRACE ( LOWER ) L_PAREN NUMBER R_PAREN ( COMMA ( LOWER ) L_PAREN NUMBER R_PAREN )* R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(889, 29);
			L_BRACE323=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro_namedbits5207); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE323_tree = (CommonTree)adaptor.Create(L_BRACE323);
			adaptor.AddChild(root_0, L_BRACE323_tree);
			}
			DebugLocation(889, 37);
			// Smi.g:889:37: ( LOWER )
			DebugEnterAlt(1);
			// Smi.g:889:38: LOWER
			{
			DebugLocation(889, 38);
			LOWER324=(IToken)Match(input,LOWER,Follow._LOWER_in_objecttype_macro_namedbits5210); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LOWER324_tree = (CommonTree)adaptor.Create(LOWER324);
			adaptor.AddChild(root_0, LOWER324_tree);
			}

			}

			DebugLocation(889, 45);
			L_PAREN325=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_objecttype_macro_namedbits5213); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_PAREN325_tree = (CommonTree)adaptor.Create(L_PAREN325);
			adaptor.AddChild(root_0, L_PAREN325_tree);
			}
			DebugLocation(889, 53);
			NUMBER326=(IToken)Match(input,NUMBER,Follow._NUMBER_in_objecttype_macro_namedbits5215); if (state.failed) return retval;
			if (state.backtracking == 0) {
			NUMBER326_tree = (CommonTree)adaptor.Create(NUMBER326);
			adaptor.AddChild(root_0, NUMBER326_tree);
			}
			DebugLocation(889, 60);
			R_PAREN327=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_objecttype_macro_namedbits5217); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_PAREN327_tree = (CommonTree)adaptor.Create(R_PAREN327);
			adaptor.AddChild(root_0, R_PAREN327_tree);
			}
			DebugLocation(889, 68);
			// Smi.g:889:68: ( COMMA ( LOWER ) L_PAREN NUMBER R_PAREN )*
			try { DebugEnterSubRule(84);
			while (true)
			{
				int alt84=2;
				try { DebugEnterDecision(84, false);
				int LA84_1 = input.LA(1);

				if ((LA84_1==COMMA))
				{
					alt84 = 1;
				}


				} finally { DebugExitDecision(84); }
				switch ( alt84 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:889:69: COMMA ( LOWER ) L_PAREN NUMBER R_PAREN
					{
					DebugLocation(889, 69);
					COMMA328=(IToken)Match(input,COMMA,Follow._COMMA_in_objecttype_macro_namedbits5220); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA328_tree = (CommonTree)adaptor.Create(COMMA328);
					adaptor.AddChild(root_0, COMMA328_tree);
					}
					DebugLocation(889, 75);
					// Smi.g:889:75: ( LOWER )
					DebugEnterAlt(1);
					// Smi.g:889:76: LOWER
					{
					DebugLocation(889, 76);
					LOWER329=(IToken)Match(input,LOWER,Follow._LOWER_in_objecttype_macro_namedbits5223); if (state.failed) return retval;
					if (state.backtracking == 0) {
					LOWER329_tree = (CommonTree)adaptor.Create(LOWER329);
					adaptor.AddChild(root_0, LOWER329_tree);
					}

					}

					DebugLocation(889, 83);
					L_PAREN330=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_objecttype_macro_namedbits5226); if (state.failed) return retval;
					if (state.backtracking == 0) {
					L_PAREN330_tree = (CommonTree)adaptor.Create(L_PAREN330);
					adaptor.AddChild(root_0, L_PAREN330_tree);
					}
					DebugLocation(889, 91);
					NUMBER331=(IToken)Match(input,NUMBER,Follow._NUMBER_in_objecttype_macro_namedbits5228); if (state.failed) return retval;
					if (state.backtracking == 0) {
					NUMBER331_tree = (CommonTree)adaptor.Create(NUMBER331);
					adaptor.AddChild(root_0, NUMBER331_tree);
					}
					DebugLocation(889, 98);
					R_PAREN332=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_objecttype_macro_namedbits5230); if (state.failed) return retval;
					if (state.backtracking == 0) {
					R_PAREN332_tree = (CommonTree)adaptor.Create(R_PAREN332);
					adaptor.AddChild(root_0, R_PAREN332_tree);
					}

					}
					break;

				default:
					goto loop84;
				}
			}

			loop84:
				;

			} finally { DebugExitSubRule(84); }

			DebugLocation(889, 108);
			R_BRACE333=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro_namedbits5234); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE333_tree = (CommonTree)adaptor.Create(R_BRACE333);
			adaptor.AddChild(root_0, R_BRACE333_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("objecttype_macro_namedbits", 62);
			LeaveRule("objecttype_macro_namedbits", 62);
			LeaveRule_objecttype_macro_namedbits();
		}
		DebugLocation(889, 114);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro_namedbits"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro_namedbits"

	partial void EnterRule_objecttype_macro_bitsvalue();
	partial void LeaveRule_objecttype_macro_bitsvalue();
	// $ANTLR start "objecttype_macro_bitsvalue"
	// Smi.g:890:1: objecttype_macro_bitsvalue : L_BRACE LOWER ( COMMA LOWER )* R_BRACE ;
	[GrammarRule("objecttype_macro_bitsvalue")]
	private AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_bitsvalue()
	{
		EnterRule_objecttype_macro_bitsvalue();
		EnterRule("objecttype_macro_bitsvalue", 63);
		TraceIn("objecttype_macro_bitsvalue", 63);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE334 = default(IToken);
		IToken LOWER335 = default(IToken);
		IToken COMMA336 = default(IToken);
		IToken LOWER337 = default(IToken);
		IToken R_BRACE338 = default(IToken);

		CommonTree L_BRACE334_tree = default(CommonTree);
		CommonTree LOWER335_tree = default(CommonTree);
		CommonTree COMMA336_tree = default(CommonTree);
		CommonTree LOWER337_tree = default(CommonTree);
		CommonTree R_BRACE338_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro_bitsvalue");
		DebugLocation(890, 64);
		try
		{
			// Smi.g:890:27: ( L_BRACE LOWER ( COMMA LOWER )* R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:890:29: L_BRACE LOWER ( COMMA LOWER )* R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(890, 29);
			L_BRACE334=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objecttype_macro_bitsvalue5245); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE334_tree = (CommonTree)adaptor.Create(L_BRACE334);
			adaptor.AddChild(root_0, L_BRACE334_tree);
			}
			DebugLocation(890, 37);
			LOWER335=(IToken)Match(input,LOWER,Follow._LOWER_in_objecttype_macro_bitsvalue5247); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LOWER335_tree = (CommonTree)adaptor.Create(LOWER335);
			adaptor.AddChild(root_0, LOWER335_tree);
			}
			DebugLocation(890, 43);
			// Smi.g:890:43: ( COMMA LOWER )*
			try { DebugEnterSubRule(85);
			while (true)
			{
				int alt85=2;
				try { DebugEnterDecision(85, false);
				int LA85_1 = input.LA(1);

				if ((LA85_1==COMMA))
				{
					alt85 = 1;
				}


				} finally { DebugExitDecision(85); }
				switch ( alt85 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:890:44: COMMA LOWER
					{
					DebugLocation(890, 44);
					COMMA336=(IToken)Match(input,COMMA,Follow._COMMA_in_objecttype_macro_bitsvalue5250); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA336_tree = (CommonTree)adaptor.Create(COMMA336);
					adaptor.AddChild(root_0, COMMA336_tree);
					}
					DebugLocation(890, 50);
					LOWER337=(IToken)Match(input,LOWER,Follow._LOWER_in_objecttype_macro_bitsvalue5252); if (state.failed) return retval;
					if (state.backtracking == 0) {
					LOWER337_tree = (CommonTree)adaptor.Create(LOWER337);
					adaptor.AddChild(root_0, LOWER337_tree);
					}

					}
					break;

				default:
					goto loop85;
				}
			}

			loop85:
				;

			} finally { DebugExitSubRule(85); }

			DebugLocation(890, 58);
			R_BRACE338=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objecttype_macro_bitsvalue5256); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE338_tree = (CommonTree)adaptor.Create(R_BRACE338);
			adaptor.AddChild(root_0, R_BRACE338_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("objecttype_macro_bitsvalue", 63);
			LeaveRule("objecttype_macro_bitsvalue", 63);
			LeaveRule_objecttype_macro_bitsvalue();
		}
		DebugLocation(890, 64);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro_bitsvalue"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro_bitsvalue"

	partial void EnterRule_objecttype_macro_error();
	partial void LeaveRule_objecttype_macro_error();
	// $ANTLR start "objecttype_macro_error"
	// Smi.g:891:1: objecttype_macro_error : LOWER L_PAREN NUMBER R_PAREN ;
	[GrammarRule("objecttype_macro_error")]
	private AstParserRuleReturnScope<CommonTree, IToken> objecttype_macro_error()
	{
		EnterRule_objecttype_macro_error();
		EnterRule("objecttype_macro_error", 64);
		TraceIn("objecttype_macro_error", 64);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken LOWER339 = default(IToken);
		IToken L_PAREN340 = default(IToken);
		IToken NUMBER341 = default(IToken);
		IToken R_PAREN342 = default(IToken);

		CommonTree LOWER339_tree = default(CommonTree);
		CommonTree L_PAREN340_tree = default(CommonTree);
		CommonTree NUMBER341_tree = default(CommonTree);
		CommonTree R_PAREN342_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objecttype_macro_error");
		DebugLocation(891, 52);
		try
		{
			// Smi.g:891:23: ( LOWER L_PAREN NUMBER R_PAREN )
			DebugEnterAlt(1);
			// Smi.g:891:25: LOWER L_PAREN NUMBER R_PAREN
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(891, 25);
			LOWER339=(IToken)Match(input,LOWER,Follow._LOWER_in_objecttype_macro_error5267); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LOWER339_tree = (CommonTree)adaptor.Create(LOWER339);
			adaptor.AddChild(root_0, LOWER339_tree);
			}
			DebugLocation(891, 31);
			L_PAREN340=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_objecttype_macro_error5269); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_PAREN340_tree = (CommonTree)adaptor.Create(L_PAREN340);
			adaptor.AddChild(root_0, L_PAREN340_tree);
			}
			DebugLocation(891, 39);
			NUMBER341=(IToken)Match(input,NUMBER,Follow._NUMBER_in_objecttype_macro_error5271); if (state.failed) return retval;
			if (state.backtracking == 0) {
			NUMBER341_tree = (CommonTree)adaptor.Create(NUMBER341);
			adaptor.AddChild(root_0, NUMBER341_tree);
			}
			DebugLocation(891, 46);
			R_PAREN342=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_objecttype_macro_error5273); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_PAREN342_tree = (CommonTree)adaptor.Create(R_PAREN342);
			adaptor.AddChild(root_0, R_PAREN342_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("objecttype_macro_error", 64);
			LeaveRule("objecttype_macro_error", 64);
			LeaveRule_objecttype_macro_error();
		}
		DebugLocation(891, 52);
		} finally { DebugExitRule(GrammarFileName, "objecttype_macro_error"); }
		return retval;

	}
	// $ANTLR end "objecttype_macro_error"

	partial void EnterRule_moduleidentity_macro();
	partial void LeaveRule_moduleidentity_macro();
	// $ANTLR start "moduleidentity_macro"
	// Smi.g:894:1: moduleidentity_macro : 'MODULE-IDENTITY' ( 'SUBJECT-CATEGORIES' L_BRACE moduleidentity_macro_categories R_BRACE )? 'LAST-UPDATED' C_STRING 'ORGANIZATION' C_STRING 'CONTACT-INFO' C_STRING 'DESCRIPTION' C_STRING ( moduleidentity_macro_revision )* ;
	[GrammarRule("moduleidentity_macro")]
	private AstParserRuleReturnScope<CommonTree, IToken> moduleidentity_macro()
	{
		EnterRule_moduleidentity_macro();
		EnterRule("moduleidentity_macro", 65);
		TraceIn("moduleidentity_macro", 65);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal343 = default(IToken);
		IToken string_literal344 = default(IToken);
		IToken L_BRACE345 = default(IToken);
		IToken R_BRACE347 = default(IToken);
		IToken string_literal348 = default(IToken);
		IToken C_STRING349 = default(IToken);
		IToken string_literal350 = default(IToken);
		IToken C_STRING351 = default(IToken);
		IToken string_literal352 = default(IToken);
		IToken C_STRING353 = default(IToken);
		IToken string_literal354 = default(IToken);
		IToken C_STRING355 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> moduleidentity_macro_categories346 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> moduleidentity_macro_revision356 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree string_literal343_tree = default(CommonTree);
		CommonTree string_literal344_tree = default(CommonTree);
		CommonTree L_BRACE345_tree = default(CommonTree);
		CommonTree R_BRACE347_tree = default(CommonTree);
		CommonTree string_literal348_tree = default(CommonTree);
		CommonTree C_STRING349_tree = default(CommonTree);
		CommonTree string_literal350_tree = default(CommonTree);
		CommonTree C_STRING351_tree = default(CommonTree);
		CommonTree string_literal352_tree = default(CommonTree);
		CommonTree C_STRING353_tree = default(CommonTree);
		CommonTree string_literal354_tree = default(CommonTree);
		CommonTree C_STRING355_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "moduleidentity_macro");
		DebugLocation(894, 80);
		try
		{
			// Smi.g:894:21: ( 'MODULE-IDENTITY' ( 'SUBJECT-CATEGORIES' L_BRACE moduleidentity_macro_categories R_BRACE )? 'LAST-UPDATED' C_STRING 'ORGANIZATION' C_STRING 'CONTACT-INFO' C_STRING 'DESCRIPTION' C_STRING ( moduleidentity_macro_revision )* )
			DebugEnterAlt(1);
			// Smi.g:894:23: 'MODULE-IDENTITY' ( 'SUBJECT-CATEGORIES' L_BRACE moduleidentity_macro_categories R_BRACE )? 'LAST-UPDATED' C_STRING 'ORGANIZATION' C_STRING 'CONTACT-INFO' C_STRING 'DESCRIPTION' C_STRING ( moduleidentity_macro_revision )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(894, 23);
			string_literal343=(IToken)Match(input,159,Follow._159_in_moduleidentity_macro5282); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal343_tree = (CommonTree)adaptor.Create(string_literal343);
			adaptor.AddChild(root_0, string_literal343_tree);
			}
			DebugLocation(895, 25);
			// Smi.g:895:25: ( 'SUBJECT-CATEGORIES' L_BRACE moduleidentity_macro_categories R_BRACE )?
			int alt86=2;
			try { DebugEnterSubRule(86);
			try { DebugEnterDecision(86, false);
			int LA86_1 = input.LA(1);

			if ((LA86_1==185))
			{
				alt86 = 1;
			}
			} finally { DebugExitDecision(86); }
			switch (alt86)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:895:26: 'SUBJECT-CATEGORIES' L_BRACE moduleidentity_macro_categories R_BRACE
				{
				DebugLocation(895, 26);
				string_literal344=(IToken)Match(input,185,Follow._185_in_moduleidentity_macro5310); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal344_tree = (CommonTree)adaptor.Create(string_literal344);
				adaptor.AddChild(root_0, string_literal344_tree);
				}
				DebugLocation(895, 47);
				L_BRACE345=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_moduleidentity_macro5312); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE345_tree = (CommonTree)adaptor.Create(L_BRACE345);
				adaptor.AddChild(root_0, L_BRACE345_tree);
				}
				DebugLocation(895, 55);
				PushFollow(Follow._moduleidentity_macro_categories_in_moduleidentity_macro5314);
				moduleidentity_macro_categories346=moduleidentity_macro_categories();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, moduleidentity_macro_categories346.Tree);
				DebugLocation(895, 87);
				R_BRACE347=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_moduleidentity_macro5316); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE347_tree = (CommonTree)adaptor.Create(R_BRACE347);
				adaptor.AddChild(root_0, R_BRACE347_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(86); }

			DebugLocation(896, 25);
			string_literal348=(IToken)Match(input,152,Follow._152_in_moduleidentity_macro5346); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal348_tree = (CommonTree)adaptor.Create(string_literal348);
			adaptor.AddChild(root_0, string_literal348_tree);
			}
			DebugLocation(896, 40);
			C_STRING349=(IToken)Match(input,C_STRING,Follow._C_STRING_in_moduleidentity_macro5348); if (state.failed) return retval;
			if (state.backtracking == 0) {
			C_STRING349_tree = (CommonTree)adaptor.Create(C_STRING349);
			adaptor.AddChild(root_0, C_STRING349_tree);
			}
			DebugLocation(896, 49);
			string_literal350=(IToken)Match(input,167,Follow._167_in_moduleidentity_macro5350); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal350_tree = (CommonTree)adaptor.Create(string_literal350);
			adaptor.AddChild(root_0, string_literal350_tree);
			}
			DebugLocation(896, 64);
			C_STRING351=(IToken)Match(input,C_STRING,Follow._C_STRING_in_moduleidentity_macro5352); if (state.failed) return retval;
			if (state.backtracking == 0) {
			C_STRING351_tree = (CommonTree)adaptor.Create(C_STRING351);
			adaptor.AddChild(root_0, C_STRING351_tree);
			}
			DebugLocation(896, 73);
			string_literal352=(IToken)Match(input,138,Follow._138_in_moduleidentity_macro5354); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal352_tree = (CommonTree)adaptor.Create(string_literal352);
			adaptor.AddChild(root_0, string_literal352_tree);
			}
			DebugLocation(896, 88);
			C_STRING353=(IToken)Match(input,C_STRING,Follow._C_STRING_in_moduleidentity_macro5356); if (state.failed) return retval;
			if (state.backtracking == 0) {
			C_STRING353_tree = (CommonTree)adaptor.Create(C_STRING353);
			adaptor.AddChild(root_0, C_STRING353_tree);
			}
			DebugLocation(897, 25);
			string_literal354=(IToken)Match(input,141,Follow._141_in_moduleidentity_macro5383); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal354_tree = (CommonTree)adaptor.Create(string_literal354);
			adaptor.AddChild(root_0, string_literal354_tree);
			}
			DebugLocation(897, 39);
			C_STRING355=(IToken)Match(input,C_STRING,Follow._C_STRING_in_moduleidentity_macro5385); if (state.failed) return retval;
			if (state.backtracking == 0) {
			C_STRING355_tree = (CommonTree)adaptor.Create(C_STRING355);
			adaptor.AddChild(root_0, C_STRING355_tree);
			}
			DebugLocation(897, 48);
			// Smi.g:897:48: ( moduleidentity_macro_revision )*
			try { DebugEnterSubRule(87);
			while (true)
			{
				int alt87=2;
				try { DebugEnterDecision(87, false);
				int LA87_1 = input.LA(1);

				if ((LA87_1==180))
				{
					alt87 = 1;
				}


				} finally { DebugExitDecision(87); }
				switch ( alt87 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:897:49: moduleidentity_macro_revision
					{
					DebugLocation(897, 49);
					PushFollow(Follow._moduleidentity_macro_revision_in_moduleidentity_macro5388);
					moduleidentity_macro_revision356=moduleidentity_macro_revision();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, moduleidentity_macro_revision356.Tree);

					}
					break;

				default:
					goto loop87;
				}
			}

			loop87:
				;

			} finally { DebugExitSubRule(87); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("moduleidentity_macro", 65);
			LeaveRule("moduleidentity_macro", 65);
			LeaveRule_moduleidentity_macro();
		}
		DebugLocation(897, 80);
		} finally { DebugExitRule(GrammarFileName, "moduleidentity_macro"); }
		return retval;

	}
	// $ANTLR end "moduleidentity_macro"

	partial void EnterRule_moduleidentity_macro_revision();
	partial void LeaveRule_moduleidentity_macro_revision();
	// $ANTLR start "moduleidentity_macro_revision"
	// Smi.g:898:1: moduleidentity_macro_revision : 'REVISION' C_STRING 'DESCRIPTION' C_STRING ;
	[GrammarRule("moduleidentity_macro_revision")]
	private AstParserRuleReturnScope<CommonTree, IToken> moduleidentity_macro_revision()
	{
		EnterRule_moduleidentity_macro_revision();
		EnterRule("moduleidentity_macro_revision", 66);
		TraceIn("moduleidentity_macro_revision", 66);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal357 = default(IToken);
		IToken C_STRING358 = default(IToken);
		IToken string_literal359 = default(IToken);
		IToken C_STRING360 = default(IToken);

		CommonTree string_literal357_tree = default(CommonTree);
		CommonTree C_STRING358_tree = default(CommonTree);
		CommonTree string_literal359_tree = default(CommonTree);
		CommonTree C_STRING360_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "moduleidentity_macro_revision");
		DebugLocation(898, 73);
		try
		{
			// Smi.g:898:30: ( 'REVISION' C_STRING 'DESCRIPTION' C_STRING )
			DebugEnterAlt(1);
			// Smi.g:898:32: 'REVISION' C_STRING 'DESCRIPTION' C_STRING
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(898, 32);
			string_literal357=(IToken)Match(input,180,Follow._180_in_moduleidentity_macro_revision5397); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal357_tree = (CommonTree)adaptor.Create(string_literal357);
			adaptor.AddChild(root_0, string_literal357_tree);
			}
			DebugLocation(898, 43);
			C_STRING358=(IToken)Match(input,C_STRING,Follow._C_STRING_in_moduleidentity_macro_revision5399); if (state.failed) return retval;
			if (state.backtracking == 0) {
			C_STRING358_tree = (CommonTree)adaptor.Create(C_STRING358);
			adaptor.AddChild(root_0, C_STRING358_tree);
			}
			DebugLocation(898, 52);
			string_literal359=(IToken)Match(input,141,Follow._141_in_moduleidentity_macro_revision5401); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal359_tree = (CommonTree)adaptor.Create(string_literal359);
			adaptor.AddChild(root_0, string_literal359_tree);
			}
			DebugLocation(898, 66);
			C_STRING360=(IToken)Match(input,C_STRING,Follow._C_STRING_in_moduleidentity_macro_revision5403); if (state.failed) return retval;
			if (state.backtracking == 0) {
			C_STRING360_tree = (CommonTree)adaptor.Create(C_STRING360);
			adaptor.AddChild(root_0, C_STRING360_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("moduleidentity_macro_revision", 66);
			LeaveRule("moduleidentity_macro_revision", 66);
			LeaveRule_moduleidentity_macro_revision();
		}
		DebugLocation(898, 73);
		} finally { DebugExitRule(GrammarFileName, "moduleidentity_macro_revision"); }
		return retval;

	}
	// $ANTLR end "moduleidentity_macro_revision"

	partial void EnterRule_moduleidentity_macro_categories();
	partial void LeaveRule_moduleidentity_macro_categories();
	// $ANTLR start "moduleidentity_macro_categories"
	// Smi.g:899:1: moduleidentity_macro_categories : (l= LOWER | moduleidentity_macro_categoryid ( COMMA moduleidentity_macro_categoryid )* );
	[GrammarRule("moduleidentity_macro_categories")]
	private AstParserRuleReturnScope<CommonTree, IToken> moduleidentity_macro_categories()
	{
		EnterRule_moduleidentity_macro_categories();
		EnterRule("moduleidentity_macro_categories", 67);
		TraceIn("moduleidentity_macro_categories", 67);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);
		IToken COMMA362 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> moduleidentity_macro_categoryid361 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> moduleidentity_macro_categoryid363 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree l_tree = default(CommonTree);
		CommonTree COMMA362_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "moduleidentity_macro_categories");
		DebugLocation(899, 105);
		try
		{
			// Smi.g:899:32: (l= LOWER | moduleidentity_macro_categoryid ( COMMA moduleidentity_macro_categoryid )* )
			int alt89=2;
			try { DebugEnterDecision(89, false);
			int LA89_1 = input.LA(1);

			if ((LA89_1==LOWER))
			{
				int LA89_2 = input.LA(2);

				if ((LA89_2==L_PAREN))
				{
					alt89 = 2;
				}
				else if ((LA89_2==R_BRACE))
				{
					alt89 = 1;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 89, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 89, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(89); }
			switch (alt89)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:899:34: l= LOWER
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(899, 35);
				l=(IToken)Match(input,LOWER,Follow._LOWER_in_moduleidentity_macro_categories5412); if (state.failed) return retval;
				if (state.backtracking == 0) {
				l_tree = (CommonTree)adaptor.Create(l);
				adaptor.AddChild(root_0, l_tree);
				}
				DebugLocation(899, 42);
				if (state.backtracking == 0)
				{
					if (l.Text !=  ("all")) {throw new SemanticException ("(invalid)");}
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:900:34: moduleidentity_macro_categoryid ( COMMA moduleidentity_macro_categoryid )*
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(900, 34);
				PushFollow(Follow._moduleidentity_macro_categoryid_in_moduleidentity_macro_categories5450);
				moduleidentity_macro_categoryid361=moduleidentity_macro_categoryid();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, moduleidentity_macro_categoryid361.Tree);
				DebugLocation(900, 66);
				// Smi.g:900:66: ( COMMA moduleidentity_macro_categoryid )*
				try { DebugEnterSubRule(88);
				while (true)
				{
					int alt88=2;
					try { DebugEnterDecision(88, false);
					int LA88_1 = input.LA(1);

					if ((LA88_1==COMMA))
					{
						alt88 = 1;
					}


					} finally { DebugExitDecision(88); }
					switch ( alt88 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:900:67: COMMA moduleidentity_macro_categoryid
						{
						DebugLocation(900, 67);
						COMMA362=(IToken)Match(input,COMMA,Follow._COMMA_in_moduleidentity_macro_categories5453); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA362_tree = (CommonTree)adaptor.Create(COMMA362);
						adaptor.AddChild(root_0, COMMA362_tree);
						}
						DebugLocation(900, 73);
						PushFollow(Follow._moduleidentity_macro_categoryid_in_moduleidentity_macro_categories5455);
						moduleidentity_macro_categoryid363=moduleidentity_macro_categoryid();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, moduleidentity_macro_categoryid363.Tree);

						}
						break;

					default:
						goto loop88;
					}
				}

				loop88:
					;

				} finally { DebugExitSubRule(88); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("moduleidentity_macro_categories", 67);
			LeaveRule("moduleidentity_macro_categories", 67);
			LeaveRule_moduleidentity_macro_categories();
		}
		DebugLocation(900, 105);
		} finally { DebugExitRule(GrammarFileName, "moduleidentity_macro_categories"); }
		return retval;

	}
	// $ANTLR end "moduleidentity_macro_categories"

	partial void EnterRule_moduleidentity_macro_categoryid();
	partial void LeaveRule_moduleidentity_macro_categoryid();
	// $ANTLR start "moduleidentity_macro_categoryid"
	// Smi.g:901:1: moduleidentity_macro_categoryid : LOWER L_PAREN NUMBER R_PAREN ;
	[GrammarRule("moduleidentity_macro_categoryid")]
	private AstParserRuleReturnScope<CommonTree, IToken> moduleidentity_macro_categoryid()
	{
		EnterRule_moduleidentity_macro_categoryid();
		EnterRule("moduleidentity_macro_categoryid", 68);
		TraceIn("moduleidentity_macro_categoryid", 68);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken LOWER364 = default(IToken);
		IToken L_PAREN365 = default(IToken);
		IToken NUMBER366 = default(IToken);
		IToken R_PAREN367 = default(IToken);

		CommonTree LOWER364_tree = default(CommonTree);
		CommonTree L_PAREN365_tree = default(CommonTree);
		CommonTree NUMBER366_tree = default(CommonTree);
		CommonTree R_PAREN367_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "moduleidentity_macro_categoryid");
		DebugLocation(901, 61);
		try
		{
			// Smi.g:901:32: ( LOWER L_PAREN NUMBER R_PAREN )
			DebugEnterAlt(1);
			// Smi.g:901:34: LOWER L_PAREN NUMBER R_PAREN
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(901, 34);
			LOWER364=(IToken)Match(input,LOWER,Follow._LOWER_in_moduleidentity_macro_categoryid5463); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LOWER364_tree = (CommonTree)adaptor.Create(LOWER364);
			adaptor.AddChild(root_0, LOWER364_tree);
			}
			DebugLocation(901, 40);
			L_PAREN365=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_moduleidentity_macro_categoryid5465); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_PAREN365_tree = (CommonTree)adaptor.Create(L_PAREN365);
			adaptor.AddChild(root_0, L_PAREN365_tree);
			}
			DebugLocation(901, 48);
			NUMBER366=(IToken)Match(input,NUMBER,Follow._NUMBER_in_moduleidentity_macro_categoryid5467); if (state.failed) return retval;
			if (state.backtracking == 0) {
			NUMBER366_tree = (CommonTree)adaptor.Create(NUMBER366);
			adaptor.AddChild(root_0, NUMBER366_tree);
			}
			DebugLocation(901, 55);
			R_PAREN367=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_moduleidentity_macro_categoryid5469); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_PAREN367_tree = (CommonTree)adaptor.Create(R_PAREN367);
			adaptor.AddChild(root_0, R_PAREN367_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("moduleidentity_macro_categoryid", 68);
			LeaveRule("moduleidentity_macro_categoryid", 68);
			LeaveRule_moduleidentity_macro_categoryid();
		}
		DebugLocation(901, 61);
		} finally { DebugExitRule(GrammarFileName, "moduleidentity_macro_categoryid"); }
		return retval;

	}
	// $ANTLR end "moduleidentity_macro_categoryid"

	partial void EnterRule_objectidentity_macro();
	partial void LeaveRule_objectidentity_macro();
	// $ANTLR start "objectidentity_macro"
	// Smi.g:904:1: objectidentity_macro : 'OBJECT-IDENTITY' 'STATUS' objectidentity_macro_statustypes 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )? ;
	[GrammarRule("objectidentity_macro")]
	private AstParserRuleReturnScope<CommonTree, IToken> objectidentity_macro()
	{
		EnterRule_objectidentity_macro();
		EnterRule("objectidentity_macro", 69);
		TraceIn("objectidentity_macro", 69);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal368 = default(IToken);
		IToken string_literal369 = default(IToken);
		IToken string_literal371 = default(IToken);
		IToken C_STRING372 = default(IToken);
		IToken string_literal373 = default(IToken);
		IToken C_STRING374 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> objectidentity_macro_statustypes370 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree string_literal368_tree = default(CommonTree);
		CommonTree string_literal369_tree = default(CommonTree);
		CommonTree string_literal371_tree = default(CommonTree);
		CommonTree C_STRING372_tree = default(CommonTree);
		CommonTree string_literal373_tree = default(CommonTree);
		CommonTree C_STRING374_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objectidentity_macro");
		DebugLocation(904, 129);
		try
		{
			// Smi.g:904:21: ( 'OBJECT-IDENTITY' 'STATUS' objectidentity_macro_statustypes 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )? )
			DebugEnterAlt(1);
			// Smi.g:904:23: 'OBJECT-IDENTITY' 'STATUS' objectidentity_macro_statustypes 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(904, 23);
			string_literal368=(IToken)Match(input,164,Follow._164_in_objectidentity_macro5479); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal368_tree = (CommonTree)adaptor.Create(string_literal368);
			adaptor.AddChild(root_0, string_literal368_tree);
			}
			DebugLocation(904, 41);
			string_literal369=(IToken)Match(input,184,Follow._184_in_objectidentity_macro5481); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal369_tree = (CommonTree)adaptor.Create(string_literal369);
			adaptor.AddChild(root_0, string_literal369_tree);
			}
			DebugLocation(904, 50);
			PushFollow(Follow._objectidentity_macro_statustypes_in_objectidentity_macro5483);
			objectidentity_macro_statustypes370=objectidentity_macro_statustypes();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, objectidentity_macro_statustypes370.Tree);
			DebugLocation(904, 83);
			string_literal371=(IToken)Match(input,141,Follow._141_in_objectidentity_macro5485); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal371_tree = (CommonTree)adaptor.Create(string_literal371);
			adaptor.AddChild(root_0, string_literal371_tree);
			}
			DebugLocation(904, 97);
			C_STRING372=(IToken)Match(input,C_STRING,Follow._C_STRING_in_objectidentity_macro5487); if (state.failed) return retval;
			if (state.backtracking == 0) {
			C_STRING372_tree = (CommonTree)adaptor.Create(C_STRING372);
			adaptor.AddChild(root_0, C_STRING372_tree);
			}
			DebugLocation(904, 106);
			// Smi.g:904:106: ( 'REFERENCE' C_STRING )?
			int alt90=2;
			try { DebugEnterSubRule(90);
			try { DebugEnterDecision(90, false);
			int LA90_1 = input.LA(1);

			if ((LA90_1==177))
			{
				alt90 = 1;
			}
			} finally { DebugExitDecision(90); }
			switch (alt90)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:904:107: 'REFERENCE' C_STRING
				{
				DebugLocation(904, 107);
				string_literal373=(IToken)Match(input,177,Follow._177_in_objectidentity_macro5490); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal373_tree = (CommonTree)adaptor.Create(string_literal373);
				adaptor.AddChild(root_0, string_literal373_tree);
				}
				DebugLocation(904, 119);
				C_STRING374=(IToken)Match(input,C_STRING,Follow._C_STRING_in_objectidentity_macro5492); if (state.failed) return retval;
				if (state.backtracking == 0) {
				C_STRING374_tree = (CommonTree)adaptor.Create(C_STRING374);
				adaptor.AddChild(root_0, C_STRING374_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(90); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("objectidentity_macro", 69);
			LeaveRule("objectidentity_macro", 69);
			LeaveRule_objectidentity_macro();
		}
		DebugLocation(904, 129);
		} finally { DebugExitRule(GrammarFileName, "objectidentity_macro"); }
		return retval;

	}
	// $ANTLR end "objectidentity_macro"

	partial void EnterRule_objectidentity_macro_statustypes();
	partial void LeaveRule_objectidentity_macro_statustypes();
	// $ANTLR start "objectidentity_macro_statustypes"
	// Smi.g:905:11: protected objectidentity_macro_statustypes : l= LOWER ;
	[GrammarRule("objectidentity_macro_statustypes")]
	protected AstParserRuleReturnScope<CommonTree, IToken> objectidentity_macro_statustypes()
	{
		EnterRule_objectidentity_macro_statustypes();
		EnterRule("objectidentity_macro_statustypes", 70);
		TraceIn("objectidentity_macro_statustypes", 70);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objectidentity_macro_statustypes");
		DebugLocation(905, 111);
		try
		{
			// Smi.g:905:43: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:905:45: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(905, 46);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_objectidentity_macro_statustypes5505); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(906, 41);
			if (state.backtracking == 0)
			{
				if (l.Text == ("current") 
				                                                || l.Text == ("deprecated") 
				                                                || l.Text == ("obsolete"))
				                                            {/*DOSOMETHING*/} else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("objectidentity_macro_statustypes", 70);
			LeaveRule("objectidentity_macro_statustypes", 70);
			LeaveRule_objectidentity_macro_statustypes();
		}
		DebugLocation(909, 111);
		} finally { DebugExitRule(GrammarFileName, "objectidentity_macro_statustypes"); }
		return retval;

	}
	// $ANTLR end "objectidentity_macro_statustypes"

	partial void EnterRule_notificationtype_macro();
	partial void LeaveRule_notificationtype_macro();
	// $ANTLR start "notificationtype_macro"
	// Smi.g:913:1: notificationtype_macro : 'NOTIFICATION-TYPE' ( 'OBJECTS' L_BRACE value ( COMMA value )* R_BRACE )? 'STATUS' notificationtype_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )? ;
	[GrammarRule("notificationtype_macro")]
	private AstParserRuleReturnScope<CommonTree, IToken> notificationtype_macro()
	{
		EnterRule_notificationtype_macro();
		EnterRule("notificationtype_macro", 71);
		TraceIn("notificationtype_macro", 71);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal375 = default(IToken);
		IToken string_literal376 = default(IToken);
		IToken L_BRACE377 = default(IToken);
		IToken COMMA379 = default(IToken);
		IToken R_BRACE381 = default(IToken);
		IToken string_literal382 = default(IToken);
		IToken string_literal384 = default(IToken);
		IToken C_STRING385 = default(IToken);
		IToken string_literal386 = default(IToken);
		IToken C_STRING387 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> value378 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value380 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> notificationtype_macro_status383 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree string_literal375_tree = default(CommonTree);
		CommonTree string_literal376_tree = default(CommonTree);
		CommonTree L_BRACE377_tree = default(CommonTree);
		CommonTree COMMA379_tree = default(CommonTree);
		CommonTree R_BRACE381_tree = default(CommonTree);
		CommonTree string_literal382_tree = default(CommonTree);
		CommonTree string_literal384_tree = default(CommonTree);
		CommonTree C_STRING385_tree = default(CommonTree);
		CommonTree string_literal386_tree = default(CommonTree);
		CommonTree C_STRING387_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "notificationtype_macro");
		DebugLocation(913, 130);
		try
		{
			// Smi.g:913:23: ( 'NOTIFICATION-TYPE' ( 'OBJECTS' L_BRACE value ( COMMA value )* R_BRACE )? 'STATUS' notificationtype_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )? )
			DebugEnterAlt(1);
			// Smi.g:913:25: 'NOTIFICATION-TYPE' ( 'OBJECTS' L_BRACE value ( COMMA value )* R_BRACE )? 'STATUS' notificationtype_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(913, 25);
			string_literal375=(IToken)Match(input,161,Follow._161_in_notificationtype_macro5558); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal375_tree = (CommonTree)adaptor.Create(string_literal375);
			adaptor.AddChild(root_0, string_literal375_tree);
			}
			DebugLocation(913, 45);
			// Smi.g:913:45: ( 'OBJECTS' L_BRACE value ( COMMA value )* R_BRACE )?
			int alt92=2;
			try { DebugEnterSubRule(92);
			try { DebugEnterDecision(92, false);
			int LA92_1 = input.LA(1);

			if ((LA92_1==166))
			{
				alt92 = 1;
			}
			} finally { DebugExitDecision(92); }
			switch (alt92)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:913:46: 'OBJECTS' L_BRACE value ( COMMA value )* R_BRACE
				{
				DebugLocation(913, 46);
				string_literal376=(IToken)Match(input,166,Follow._166_in_notificationtype_macro5561); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal376_tree = (CommonTree)adaptor.Create(string_literal376);
				adaptor.AddChild(root_0, string_literal376_tree);
				}
				DebugLocation(913, 56);
				L_BRACE377=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_notificationtype_macro5563); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE377_tree = (CommonTree)adaptor.Create(L_BRACE377);
				adaptor.AddChild(root_0, L_BRACE377_tree);
				}
				DebugLocation(913, 64);
				PushFollow(Follow._value_in_notificationtype_macro5565);
				value378=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value378.Tree);
				DebugLocation(913, 70);
				// Smi.g:913:70: ( COMMA value )*
				try { DebugEnterSubRule(91);
				while (true)
				{
					int alt91=2;
					try { DebugEnterDecision(91, false);
					int LA91_1 = input.LA(1);

					if ((LA91_1==COMMA))
					{
						alt91 = 1;
					}


					} finally { DebugExitDecision(91); }
					switch ( alt91 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:913:71: COMMA value
						{
						DebugLocation(913, 71);
						COMMA379=(IToken)Match(input,COMMA,Follow._COMMA_in_notificationtype_macro5568); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA379_tree = (CommonTree)adaptor.Create(COMMA379);
						adaptor.AddChild(root_0, COMMA379_tree);
						}
						DebugLocation(913, 77);
						PushFollow(Follow._value_in_notificationtype_macro5570);
						value380=value();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, value380.Tree);

						}
						break;

					default:
						goto loop91;
					}
				}

				loop91:
					;

				} finally { DebugExitSubRule(91); }

				DebugLocation(913, 85);
				R_BRACE381=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_notificationtype_macro5574); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE381_tree = (CommonTree)adaptor.Create(R_BRACE381);
				adaptor.AddChild(root_0, R_BRACE381_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(92); }

			DebugLocation(914, 45);
			string_literal382=(IToken)Match(input,184,Follow._184_in_notificationtype_macro5623); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal382_tree = (CommonTree)adaptor.Create(string_literal382);
			adaptor.AddChild(root_0, string_literal382_tree);
			}
			DebugLocation(914, 54);
			PushFollow(Follow._notificationtype_macro_status_in_notificationtype_macro5625);
			notificationtype_macro_status383=notificationtype_macro_status();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, notificationtype_macro_status383.Tree);
			DebugLocation(914, 84);
			string_literal384=(IToken)Match(input,141,Follow._141_in_notificationtype_macro5627); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal384_tree = (CommonTree)adaptor.Create(string_literal384);
			adaptor.AddChild(root_0, string_literal384_tree);
			}
			DebugLocation(914, 98);
			C_STRING385=(IToken)Match(input,C_STRING,Follow._C_STRING_in_notificationtype_macro5629); if (state.failed) return retval;
			if (state.backtracking == 0) {
			C_STRING385_tree = (CommonTree)adaptor.Create(C_STRING385);
			adaptor.AddChild(root_0, C_STRING385_tree);
			}
			DebugLocation(914, 107);
			// Smi.g:914:107: ( 'REFERENCE' C_STRING )?
			int alt93=2;
			try { DebugEnterSubRule(93);
			try { DebugEnterDecision(93, false);
			int LA93_1 = input.LA(1);

			if ((LA93_1==177))
			{
				alt93 = 1;
			}
			} finally { DebugExitDecision(93); }
			switch (alt93)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:914:108: 'REFERENCE' C_STRING
				{
				DebugLocation(914, 108);
				string_literal386=(IToken)Match(input,177,Follow._177_in_notificationtype_macro5632); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal386_tree = (CommonTree)adaptor.Create(string_literal386);
				adaptor.AddChild(root_0, string_literal386_tree);
				}
				DebugLocation(914, 120);
				C_STRING387=(IToken)Match(input,C_STRING,Follow._C_STRING_in_notificationtype_macro5634); if (state.failed) return retval;
				if (state.backtracking == 0) {
				C_STRING387_tree = (CommonTree)adaptor.Create(C_STRING387);
				adaptor.AddChild(root_0, C_STRING387_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(93); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("notificationtype_macro", 71);
			LeaveRule("notificationtype_macro", 71);
			LeaveRule_notificationtype_macro();
		}
		DebugLocation(914, 130);
		} finally { DebugExitRule(GrammarFileName, "notificationtype_macro"); }
		return retval;

	}
	// $ANTLR end "notificationtype_macro"

	partial void EnterRule_notificationtype_macro_status();
	partial void LeaveRule_notificationtype_macro_status();
	// $ANTLR start "notificationtype_macro_status"
	// Smi.g:915:11: protected notificationtype_macro_status : l= LOWER ;
	[GrammarRule("notificationtype_macro_status")]
	protected AstParserRuleReturnScope<CommonTree, IToken> notificationtype_macro_status()
	{
		EnterRule_notificationtype_macro_status();
		EnterRule("notificationtype_macro_status", 72);
		TraceIn("notificationtype_macro_status", 72);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "notificationtype_macro_status");
		DebugLocation(915, 111);
		try
		{
			// Smi.g:915:40: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:915:42: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(915, 43);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_notificationtype_macro_status5647); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(916, 41);
			if (state.backtracking == 0)
			{
				if (l.Text == ("current") 
				                                                || l.Text == ("deprecated") 
				                                                || l.Text == ("obsolete"))
				                                            {/*DOSOMETHING*/} else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("notificationtype_macro_status", 72);
			LeaveRule("notificationtype_macro_status", 72);
			LeaveRule_notificationtype_macro_status();
		}
		DebugLocation(919, 111);
		} finally { DebugExitRule(GrammarFileName, "notificationtype_macro_status"); }
		return retval;

	}
	// $ANTLR end "notificationtype_macro_status"

	partial void EnterRule_textualconvention_macro();
	partial void LeaveRule_textualconvention_macro();
	// $ANTLR start "textualconvention_macro"
	// Smi.g:922:1: textualconvention_macro : 'TEXTUAL-CONVENTION' ( 'DISPLAY-HINT' C_STRING )? 'STATUS' textualconvention_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )? 'SYNTAX' ( ( smi_type L_BRACE )=> smi_type L_BRACE textualconvention_macro_namedbit ( COMMA textualconvention_macro_namedbit )* R_BRACE | type ) ;
	[GrammarRule("textualconvention_macro")]
	private AstParserRuleReturnScope<CommonTree, IToken> textualconvention_macro()
	{
		EnterRule_textualconvention_macro();
		EnterRule("textualconvention_macro", 73);
		TraceIn("textualconvention_macro", 73);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal388 = default(IToken);
		IToken string_literal389 = default(IToken);
		IToken C_STRING390 = default(IToken);
		IToken string_literal391 = default(IToken);
		IToken string_literal393 = default(IToken);
		IToken C_STRING394 = default(IToken);
		IToken string_literal395 = default(IToken);
		IToken C_STRING396 = default(IToken);
		IToken string_literal397 = default(IToken);
		IToken L_BRACE399 = default(IToken);
		IToken COMMA401 = default(IToken);
		IToken R_BRACE403 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> textualconvention_macro_status392 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> smi_type398 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> textualconvention_macro_namedbit400 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> textualconvention_macro_namedbit402 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> type404 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree string_literal388_tree = default(CommonTree);
		CommonTree string_literal389_tree = default(CommonTree);
		CommonTree C_STRING390_tree = default(CommonTree);
		CommonTree string_literal391_tree = default(CommonTree);
		CommonTree string_literal393_tree = default(CommonTree);
		CommonTree C_STRING394_tree = default(CommonTree);
		CommonTree string_literal395_tree = default(CommonTree);
		CommonTree C_STRING396_tree = default(CommonTree);
		CommonTree string_literal397_tree = default(CommonTree);
		CommonTree L_BRACE399_tree = default(CommonTree);
		CommonTree COMMA401_tree = default(CommonTree);
		CommonTree R_BRACE403_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "textualconvention_macro");
		DebugLocation(922, 93);
		try
		{
			// Smi.g:922:24: ( 'TEXTUAL-CONVENTION' ( 'DISPLAY-HINT' C_STRING )? 'STATUS' textualconvention_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )? 'SYNTAX' ( ( smi_type L_BRACE )=> smi_type L_BRACE textualconvention_macro_namedbit ( COMMA textualconvention_macro_namedbit )* R_BRACE | type ) )
			DebugEnterAlt(1);
			// Smi.g:922:26: 'TEXTUAL-CONVENTION' ( 'DISPLAY-HINT' C_STRING )? 'STATUS' textualconvention_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )? 'SYNTAX' ( ( smi_type L_BRACE )=> smi_type L_BRACE textualconvention_macro_namedbit ( COMMA textualconvention_macro_namedbit )* R_BRACE | type )
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(922, 26);
			string_literal388=(IToken)Match(input,188,Follow._188_in_textualconvention_macro5699); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal388_tree = (CommonTree)adaptor.Create(string_literal388);
			adaptor.AddChild(root_0, string_literal388_tree);
			}
			DebugLocation(922, 47);
			// Smi.g:922:47: ( 'DISPLAY-HINT' C_STRING )?
			int alt94=2;
			try { DebugEnterSubRule(94);
			try { DebugEnterDecision(94, false);
			int LA94_1 = input.LA(1);

			if ((LA94_1==142))
			{
				alt94 = 1;
			}
			} finally { DebugExitDecision(94); }
			switch (alt94)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:922:48: 'DISPLAY-HINT' C_STRING
				{
				DebugLocation(922, 48);
				string_literal389=(IToken)Match(input,142,Follow._142_in_textualconvention_macro5702); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal389_tree = (CommonTree)adaptor.Create(string_literal389);
				adaptor.AddChild(root_0, string_literal389_tree);
				}
				DebugLocation(922, 63);
				C_STRING390=(IToken)Match(input,C_STRING,Follow._C_STRING_in_textualconvention_macro5704); if (state.failed) return retval;
				if (state.backtracking == 0) {
				C_STRING390_tree = (CommonTree)adaptor.Create(C_STRING390);
				adaptor.AddChild(root_0, C_STRING390_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(94); }

			DebugLocation(923, 29);
			string_literal391=(IToken)Match(input,184,Follow._184_in_textualconvention_macro5737); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal391_tree = (CommonTree)adaptor.Create(string_literal391);
			adaptor.AddChild(root_0, string_literal391_tree);
			}
			DebugLocation(923, 38);
			PushFollow(Follow._textualconvention_macro_status_in_textualconvention_macro5739);
			textualconvention_macro_status392=textualconvention_macro_status();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, textualconvention_macro_status392.Tree);
			DebugLocation(924, 29);
			string_literal393=(IToken)Match(input,141,Follow._141_in_textualconvention_macro5770); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal393_tree = (CommonTree)adaptor.Create(string_literal393);
			adaptor.AddChild(root_0, string_literal393_tree);
			}
			DebugLocation(924, 43);
			C_STRING394=(IToken)Match(input,C_STRING,Follow._C_STRING_in_textualconvention_macro5772); if (state.failed) return retval;
			if (state.backtracking == 0) {
			C_STRING394_tree = (CommonTree)adaptor.Create(C_STRING394);
			adaptor.AddChild(root_0, C_STRING394_tree);
			}
			DebugLocation(925, 29);
			// Smi.g:925:29: ( 'REFERENCE' C_STRING )?
			int alt95=2;
			try { DebugEnterSubRule(95);
			try { DebugEnterDecision(95, false);
			int LA95_1 = input.LA(1);

			if ((LA95_1==177))
			{
				alt95 = 1;
			}
			} finally { DebugExitDecision(95); }
			switch (alt95)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:925:30: 'REFERENCE' C_STRING
				{
				DebugLocation(925, 30);
				string_literal395=(IToken)Match(input,177,Follow._177_in_textualconvention_macro5804); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal395_tree = (CommonTree)adaptor.Create(string_literal395);
				adaptor.AddChild(root_0, string_literal395_tree);
				}
				DebugLocation(925, 42);
				C_STRING396=(IToken)Match(input,C_STRING,Follow._C_STRING_in_textualconvention_macro5806); if (state.failed) return retval;
				if (state.backtracking == 0) {
				C_STRING396_tree = (CommonTree)adaptor.Create(C_STRING396);
				adaptor.AddChild(root_0, C_STRING396_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(95); }

			DebugLocation(926, 29);
			string_literal397=(IToken)Match(input,187,Follow._187_in_textualconvention_macro5839); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal397_tree = (CommonTree)adaptor.Create(string_literal397);
			adaptor.AddChild(root_0, string_literal397_tree);
			}
			DebugLocation(926, 38);
			// Smi.g:926:38: ( ( smi_type L_BRACE )=> smi_type L_BRACE textualconvention_macro_namedbit ( COMMA textualconvention_macro_namedbit )* R_BRACE | type )
			int alt97=2;
			try { DebugEnterSubRule(97);
			try { DebugEnterDecision(97, false);
			try
			{
				alt97 = dfa97.Predict(input);
			}
			catch (NoViableAltException nvae)
			{
				DebugRecognitionException(nvae);
				throw;
			}
			} finally { DebugExitDecision(97); }
			switch (alt97)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:926:40: ( smi_type L_BRACE )=> smi_type L_BRACE textualconvention_macro_namedbit ( COMMA textualconvention_macro_namedbit )* R_BRACE
				{
				DebugLocation(926, 62);
				PushFollow(Follow._smi_type_in_textualconvention_macro5851);
				smi_type398=smi_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, smi_type398.Tree);
				DebugLocation(926, 71);
				L_BRACE399=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_textualconvention_macro5853); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE399_tree = (CommonTree)adaptor.Create(L_BRACE399);
				adaptor.AddChild(root_0, L_BRACE399_tree);
				}
				DebugLocation(926, 79);
				PushFollow(Follow._textualconvention_macro_namedbit_in_textualconvention_macro5855);
				textualconvention_macro_namedbit400=textualconvention_macro_namedbit();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, textualconvention_macro_namedbit400.Tree);
				DebugLocation(927, 37);
				// Smi.g:927:37: ( COMMA textualconvention_macro_namedbit )*
				try { DebugEnterSubRule(96);
				while (true)
				{
					int alt96=2;
					try { DebugEnterDecision(96, false);
					int LA96_1 = input.LA(1);

					if ((LA96_1==COMMA))
					{
						alt96 = 1;
					}


					} finally { DebugExitDecision(96); }
					switch ( alt96 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:927:38: COMMA textualconvention_macro_namedbit
						{
						DebugLocation(927, 38);
						COMMA401=(IToken)Match(input,COMMA,Follow._COMMA_in_textualconvention_macro5895); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA401_tree = (CommonTree)adaptor.Create(COMMA401);
						adaptor.AddChild(root_0, COMMA401_tree);
						}
						DebugLocation(927, 44);
						PushFollow(Follow._textualconvention_macro_namedbit_in_textualconvention_macro5897);
						textualconvention_macro_namedbit402=textualconvention_macro_namedbit();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, textualconvention_macro_namedbit402.Tree);

						}
						break;

					default:
						goto loop96;
					}
				}

				loop96:
					;

				} finally { DebugExitSubRule(96); }

				DebugLocation(927, 79);
				R_BRACE403=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_textualconvention_macro5901); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE403_tree = (CommonTree)adaptor.Create(R_BRACE403);
				adaptor.AddChild(root_0, R_BRACE403_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:927:89: type
				{
				DebugLocation(927, 89);
				PushFollow(Follow._type_in_textualconvention_macro5905);
				type404=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type404.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(97); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("textualconvention_macro", 73);
			LeaveRule("textualconvention_macro", 73);
			LeaveRule_textualconvention_macro();
		}
		DebugLocation(927, 93);
		} finally { DebugExitRule(GrammarFileName, "textualconvention_macro"); }
		return retval;

	}
	// $ANTLR end "textualconvention_macro"

	partial void EnterRule_textualconvention_macro_status();
	partial void LeaveRule_textualconvention_macro_status();
	// $ANTLR start "textualconvention_macro_status"
	// Smi.g:928:10: fragment textualconvention_macro_status : l= LOWER ;
	[GrammarRule("textualconvention_macro_status")]
	private AstParserRuleReturnScope<CommonTree, IToken> textualconvention_macro_status()
	{
		EnterRule_textualconvention_macro_status();
		EnterRule("textualconvention_macro_status", 74);
		TraceIn("textualconvention_macro_status", 74);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "textualconvention_macro_status");
		DebugLocation(928, 111);
		try
		{
			// Smi.g:928:40: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:928:42: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(928, 43);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_textualconvention_macro_status5916); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(929, 41);
			if (state.backtracking == 0)
			{
				if (l.Text == ("current") 
				                                                || l.Text == ("deprecated") 
				                                                || l.Text == ("obsolete"))
				                                            {/*DOSOMETHING*/} else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("textualconvention_macro_status", 74);
			LeaveRule("textualconvention_macro_status", 74);
			LeaveRule_textualconvention_macro_status();
		}
		DebugLocation(932, 111);
		} finally { DebugExitRule(GrammarFileName, "textualconvention_macro_status"); }
		return retval;

	}
	// $ANTLR end "textualconvention_macro_status"

	partial void EnterRule_textualconvention_macro_namedbit();
	partial void LeaveRule_textualconvention_macro_namedbit();
	// $ANTLR start "textualconvention_macro_namedbit"
	// Smi.g:933:1: textualconvention_macro_namedbit : LOWER L_PAREN ( MINUS )? NUMBER R_PAREN ;
	[GrammarRule("textualconvention_macro_namedbit")]
	private AstParserRuleReturnScope<CommonTree, IToken> textualconvention_macro_namedbit()
	{
		EnterRule_textualconvention_macro_namedbit();
		EnterRule("textualconvention_macro_namedbit", 75);
		TraceIn("textualconvention_macro_namedbit", 75);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken LOWER405 = default(IToken);
		IToken L_PAREN406 = default(IToken);
		IToken MINUS407 = default(IToken);
		IToken NUMBER408 = default(IToken);
		IToken R_PAREN409 = default(IToken);

		CommonTree LOWER405_tree = default(CommonTree);
		CommonTree L_PAREN406_tree = default(CommonTree);
		CommonTree MINUS407_tree = default(CommonTree);
		CommonTree NUMBER408_tree = default(CommonTree);
		CommonTree R_PAREN409_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "textualconvention_macro_namedbit");
		DebugLocation(933, 71);
		try
		{
			// Smi.g:933:33: ( LOWER L_PAREN ( MINUS )? NUMBER R_PAREN )
			DebugEnterAlt(1);
			// Smi.g:933:35: LOWER L_PAREN ( MINUS )? NUMBER R_PAREN
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(933, 35);
			LOWER405=(IToken)Match(input,LOWER,Follow._LOWER_in_textualconvention_macro_namedbit5965); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LOWER405_tree = (CommonTree)adaptor.Create(LOWER405);
			adaptor.AddChild(root_0, LOWER405_tree);
			}
			DebugLocation(933, 41);
			L_PAREN406=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_textualconvention_macro_namedbit5967); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_PAREN406_tree = (CommonTree)adaptor.Create(L_PAREN406);
			adaptor.AddChild(root_0, L_PAREN406_tree);
			}
			DebugLocation(933, 49);
			// Smi.g:933:49: ( MINUS )?
			int alt98=2;
			try { DebugEnterSubRule(98);
			try { DebugEnterDecision(98, false);
			int LA98_1 = input.LA(1);

			if ((LA98_1==MINUS))
			{
				alt98 = 1;
			}
			} finally { DebugExitDecision(98); }
			switch (alt98)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:933:50: MINUS
				{
				DebugLocation(933, 50);
				MINUS407=(IToken)Match(input,MINUS,Follow._MINUS_in_textualconvention_macro_namedbit5970); if (state.failed) return retval;
				if (state.backtracking == 0) {
				MINUS407_tree = (CommonTree)adaptor.Create(MINUS407);
				adaptor.AddChild(root_0, MINUS407_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(98); }

			DebugLocation(933, 58);
			NUMBER408=(IToken)Match(input,NUMBER,Follow._NUMBER_in_textualconvention_macro_namedbit5974); if (state.failed) return retval;
			if (state.backtracking == 0) {
			NUMBER408_tree = (CommonTree)adaptor.Create(NUMBER408);
			adaptor.AddChild(root_0, NUMBER408_tree);
			}
			DebugLocation(933, 65);
			R_PAREN409=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_textualconvention_macro_namedbit5976); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_PAREN409_tree = (CommonTree)adaptor.Create(R_PAREN409);
			adaptor.AddChild(root_0, R_PAREN409_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("textualconvention_macro_namedbit", 75);
			LeaveRule("textualconvention_macro_namedbit", 75);
			LeaveRule_textualconvention_macro_namedbit();
		}
		DebugLocation(933, 71);
		} finally { DebugExitRule(GrammarFileName, "textualconvention_macro_namedbit"); }
		return retval;

	}
	// $ANTLR end "textualconvention_macro_namedbit"

	partial void EnterRule_objectgroup_macro();
	partial void LeaveRule_objectgroup_macro();
	// $ANTLR start "objectgroup_macro"
	// Smi.g:936:1: objectgroup_macro : 'OBJECT-GROUP' 'OBJECTS' L_BRACE value ( COMMA value )* R_BRACE 'STATUS' objectgroup_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )? ;
	[GrammarRule("objectgroup_macro")]
	private AstParserRuleReturnScope<CommonTree, IToken> objectgroup_macro()
	{
		EnterRule_objectgroup_macro();
		EnterRule("objectgroup_macro", 76);
		TraceIn("objectgroup_macro", 76);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal410 = default(IToken);
		IToken string_literal411 = default(IToken);
		IToken L_BRACE412 = default(IToken);
		IToken COMMA414 = default(IToken);
		IToken R_BRACE416 = default(IToken);
		IToken string_literal417 = default(IToken);
		IToken string_literal419 = default(IToken);
		IToken C_STRING420 = default(IToken);
		IToken string_literal421 = default(IToken);
		IToken C_STRING422 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> value413 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value415 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> objectgroup_macro_status418 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree string_literal410_tree = default(CommonTree);
		CommonTree string_literal411_tree = default(CommonTree);
		CommonTree L_BRACE412_tree = default(CommonTree);
		CommonTree COMMA414_tree = default(CommonTree);
		CommonTree R_BRACE416_tree = default(CommonTree);
		CommonTree string_literal417_tree = default(CommonTree);
		CommonTree string_literal419_tree = default(CommonTree);
		CommonTree C_STRING420_tree = default(CommonTree);
		CommonTree string_literal421_tree = default(CommonTree);
		CommonTree C_STRING422_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objectgroup_macro");
		DebugLocation(936, 105);
		try
		{
			// Smi.g:936:18: ( 'OBJECT-GROUP' 'OBJECTS' L_BRACE value ( COMMA value )* R_BRACE 'STATUS' objectgroup_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )? )
			DebugEnterAlt(1);
			// Smi.g:936:20: 'OBJECT-GROUP' 'OBJECTS' L_BRACE value ( COMMA value )* R_BRACE 'STATUS' objectgroup_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(936, 20);
			string_literal410=(IToken)Match(input,163,Follow._163_in_objectgroup_macro5985); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal410_tree = (CommonTree)adaptor.Create(string_literal410);
			adaptor.AddChild(root_0, string_literal410_tree);
			}
			DebugLocation(936, 35);
			string_literal411=(IToken)Match(input,166,Follow._166_in_objectgroup_macro5987); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal411_tree = (CommonTree)adaptor.Create(string_literal411);
			adaptor.AddChild(root_0, string_literal411_tree);
			}
			DebugLocation(936, 45);
			L_BRACE412=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_objectgroup_macro5989); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE412_tree = (CommonTree)adaptor.Create(L_BRACE412);
			adaptor.AddChild(root_0, L_BRACE412_tree);
			}
			DebugLocation(936, 53);
			PushFollow(Follow._value_in_objectgroup_macro5991);
			value413=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, value413.Tree);
			DebugLocation(936, 59);
			// Smi.g:936:59: ( COMMA value )*
			try { DebugEnterSubRule(99);
			while (true)
			{
				int alt99=2;
				try { DebugEnterDecision(99, false);
				int LA99_1 = input.LA(1);

				if ((LA99_1==COMMA))
				{
					alt99 = 1;
				}


				} finally { DebugExitDecision(99); }
				switch ( alt99 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:936:60: COMMA value
					{
					DebugLocation(936, 60);
					COMMA414=(IToken)Match(input,COMMA,Follow._COMMA_in_objectgroup_macro5994); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA414_tree = (CommonTree)adaptor.Create(COMMA414);
					adaptor.AddChild(root_0, COMMA414_tree);
					}
					DebugLocation(936, 66);
					PushFollow(Follow._value_in_objectgroup_macro5996);
					value415=value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, value415.Tree);

					}
					break;

				default:
					goto loop99;
				}
			}

			loop99:
				;

			} finally { DebugExitSubRule(99); }

			DebugLocation(936, 74);
			R_BRACE416=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_objectgroup_macro6000); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE416_tree = (CommonTree)adaptor.Create(R_BRACE416);
			adaptor.AddChild(root_0, R_BRACE416_tree);
			}
			DebugLocation(937, 25);
			string_literal417=(IToken)Match(input,184,Follow._184_in_objectgroup_macro6027); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal417_tree = (CommonTree)adaptor.Create(string_literal417);
			adaptor.AddChild(root_0, string_literal417_tree);
			}
			DebugLocation(937, 34);
			PushFollow(Follow._objectgroup_macro_status_in_objectgroup_macro6029);
			objectgroup_macro_status418=objectgroup_macro_status();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, objectgroup_macro_status418.Tree);
			DebugLocation(937, 59);
			string_literal419=(IToken)Match(input,141,Follow._141_in_objectgroup_macro6031); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal419_tree = (CommonTree)adaptor.Create(string_literal419);
			adaptor.AddChild(root_0, string_literal419_tree);
			}
			DebugLocation(937, 73);
			C_STRING420=(IToken)Match(input,C_STRING,Follow._C_STRING_in_objectgroup_macro6033); if (state.failed) return retval;
			if (state.backtracking == 0) {
			C_STRING420_tree = (CommonTree)adaptor.Create(C_STRING420);
			adaptor.AddChild(root_0, C_STRING420_tree);
			}
			DebugLocation(937, 82);
			// Smi.g:937:82: ( 'REFERENCE' C_STRING )?
			int alt100=2;
			try { DebugEnterSubRule(100);
			try { DebugEnterDecision(100, false);
			int LA100_1 = input.LA(1);

			if ((LA100_1==177))
			{
				alt100 = 1;
			}
			} finally { DebugExitDecision(100); }
			switch (alt100)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:937:83: 'REFERENCE' C_STRING
				{
				DebugLocation(937, 83);
				string_literal421=(IToken)Match(input,177,Follow._177_in_objectgroup_macro6036); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal421_tree = (CommonTree)adaptor.Create(string_literal421);
				adaptor.AddChild(root_0, string_literal421_tree);
				}
				DebugLocation(937, 95);
				C_STRING422=(IToken)Match(input,C_STRING,Follow._C_STRING_in_objectgroup_macro6038); if (state.failed) return retval;
				if (state.backtracking == 0) {
				C_STRING422_tree = (CommonTree)adaptor.Create(C_STRING422);
				adaptor.AddChild(root_0, C_STRING422_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(100); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("objectgroup_macro", 76);
			LeaveRule("objectgroup_macro", 76);
			LeaveRule_objectgroup_macro();
		}
		DebugLocation(937, 105);
		} finally { DebugExitRule(GrammarFileName, "objectgroup_macro"); }
		return retval;

	}
	// $ANTLR end "objectgroup_macro"

	partial void EnterRule_objectgroup_macro_status();
	partial void LeaveRule_objectgroup_macro_status();
	// $ANTLR start "objectgroup_macro_status"
	// Smi.g:938:1: objectgroup_macro_status : l= LOWER ;
	[GrammarRule("objectgroup_macro_status")]
	private AstParserRuleReturnScope<CommonTree, IToken> objectgroup_macro_status()
	{
		EnterRule_objectgroup_macro_status();
		EnterRule("objectgroup_macro_status", 77);
		TraceIn("objectgroup_macro_status", 77);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "objectgroup_macro_status");
		DebugLocation(938, 111);
		try
		{
			// Smi.g:938:25: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:938:27: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(938, 28);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_objectgroup_macro_status6049); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(939, 41);
			if (state.backtracking == 0)
			{
				if (l.Text == ("current") 
				                                                || l.Text == ("deprecated") 
				                                                || l.Text == ("obsolete"))
				                                            {/*DOSOMETHING*/} else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("objectgroup_macro_status", 77);
			LeaveRule("objectgroup_macro_status", 77);
			LeaveRule_objectgroup_macro_status();
		}
		DebugLocation(942, 111);
		} finally { DebugExitRule(GrammarFileName, "objectgroup_macro_status"); }
		return retval;

	}
	// $ANTLR end "objectgroup_macro_status"

	partial void EnterRule_notificationgroup_macro();
	partial void LeaveRule_notificationgroup_macro();
	// $ANTLR start "notificationgroup_macro"
	// Smi.g:945:1: notificationgroup_macro : 'NOTIFICATION-GROUP' 'NOTIFICATIONS' L_BRACE value ( COMMA value )* R_BRACE 'STATUS' notificationgroup_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )? ;
	[GrammarRule("notificationgroup_macro")]
	private AstParserRuleReturnScope<CommonTree, IToken> notificationgroup_macro()
	{
		EnterRule_notificationgroup_macro();
		EnterRule("notificationgroup_macro", 78);
		TraceIn("notificationgroup_macro", 78);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal423 = default(IToken);
		IToken string_literal424 = default(IToken);
		IToken L_BRACE425 = default(IToken);
		IToken COMMA427 = default(IToken);
		IToken R_BRACE429 = default(IToken);
		IToken string_literal430 = default(IToken);
		IToken string_literal432 = default(IToken);
		IToken C_STRING433 = default(IToken);
		IToken string_literal434 = default(IToken);
		IToken C_STRING435 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> value426 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value428 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> notificationgroup_macro_status431 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree string_literal423_tree = default(CommonTree);
		CommonTree string_literal424_tree = default(CommonTree);
		CommonTree L_BRACE425_tree = default(CommonTree);
		CommonTree COMMA427_tree = default(CommonTree);
		CommonTree R_BRACE429_tree = default(CommonTree);
		CommonTree string_literal430_tree = default(CommonTree);
		CommonTree string_literal432_tree = default(CommonTree);
		CommonTree C_STRING433_tree = default(CommonTree);
		CommonTree string_literal434_tree = default(CommonTree);
		CommonTree C_STRING435_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "notificationgroup_macro");
		DebugLocation(945, 111);
		try
		{
			// Smi.g:945:24: ( 'NOTIFICATION-GROUP' 'NOTIFICATIONS' L_BRACE value ( COMMA value )* R_BRACE 'STATUS' notificationgroup_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )? )
			DebugEnterAlt(1);
			// Smi.g:945:26: 'NOTIFICATION-GROUP' 'NOTIFICATIONS' L_BRACE value ( COMMA value )* R_BRACE 'STATUS' notificationgroup_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(945, 26);
			string_literal423=(IToken)Match(input,160,Follow._160_in_notificationgroup_macro6101); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal423_tree = (CommonTree)adaptor.Create(string_literal423);
			adaptor.AddChild(root_0, string_literal423_tree);
			}
			DebugLocation(945, 47);
			string_literal424=(IToken)Match(input,162,Follow._162_in_notificationgroup_macro6103); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal424_tree = (CommonTree)adaptor.Create(string_literal424);
			adaptor.AddChild(root_0, string_literal424_tree);
			}
			DebugLocation(945, 63);
			L_BRACE425=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_notificationgroup_macro6105); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE425_tree = (CommonTree)adaptor.Create(L_BRACE425);
			adaptor.AddChild(root_0, L_BRACE425_tree);
			}
			DebugLocation(945, 71);
			PushFollow(Follow._value_in_notificationgroup_macro6107);
			value426=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, value426.Tree);
			DebugLocation(945, 77);
			// Smi.g:945:77: ( COMMA value )*
			try { DebugEnterSubRule(101);
			while (true)
			{
				int alt101=2;
				try { DebugEnterDecision(101, false);
				int LA101_1 = input.LA(1);

				if ((LA101_1==COMMA))
				{
					alt101 = 1;
				}


				} finally { DebugExitDecision(101); }
				switch ( alt101 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:945:78: COMMA value
					{
					DebugLocation(945, 78);
					COMMA427=(IToken)Match(input,COMMA,Follow._COMMA_in_notificationgroup_macro6110); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA427_tree = (CommonTree)adaptor.Create(COMMA427);
					adaptor.AddChild(root_0, COMMA427_tree);
					}
					DebugLocation(945, 84);
					PushFollow(Follow._value_in_notificationgroup_macro6112);
					value428=value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, value428.Tree);

					}
					break;

				default:
					goto loop101;
				}
			}

			loop101:
				;

			} finally { DebugExitSubRule(101); }

			DebugLocation(945, 92);
			R_BRACE429=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_notificationgroup_macro6116); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE429_tree = (CommonTree)adaptor.Create(R_BRACE429);
			adaptor.AddChild(root_0, R_BRACE429_tree);
			}
			DebugLocation(946, 25);
			string_literal430=(IToken)Match(input,184,Follow._184_in_notificationgroup_macro6143); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal430_tree = (CommonTree)adaptor.Create(string_literal430);
			adaptor.AddChild(root_0, string_literal430_tree);
			}
			DebugLocation(946, 34);
			PushFollow(Follow._notificationgroup_macro_status_in_notificationgroup_macro6145);
			notificationgroup_macro_status431=notificationgroup_macro_status();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, notificationgroup_macro_status431.Tree);
			DebugLocation(946, 65);
			string_literal432=(IToken)Match(input,141,Follow._141_in_notificationgroup_macro6147); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal432_tree = (CommonTree)adaptor.Create(string_literal432);
			adaptor.AddChild(root_0, string_literal432_tree);
			}
			DebugLocation(946, 79);
			C_STRING433=(IToken)Match(input,C_STRING,Follow._C_STRING_in_notificationgroup_macro6149); if (state.failed) return retval;
			if (state.backtracking == 0) {
			C_STRING433_tree = (CommonTree)adaptor.Create(C_STRING433);
			adaptor.AddChild(root_0, C_STRING433_tree);
			}
			DebugLocation(946, 88);
			// Smi.g:946:88: ( 'REFERENCE' C_STRING )?
			int alt102=2;
			try { DebugEnterSubRule(102);
			try { DebugEnterDecision(102, false);
			int LA102_1 = input.LA(1);

			if ((LA102_1==177))
			{
				alt102 = 1;
			}
			} finally { DebugExitDecision(102); }
			switch (alt102)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:946:89: 'REFERENCE' C_STRING
				{
				DebugLocation(946, 89);
				string_literal434=(IToken)Match(input,177,Follow._177_in_notificationgroup_macro6152); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal434_tree = (CommonTree)adaptor.Create(string_literal434);
				adaptor.AddChild(root_0, string_literal434_tree);
				}
				DebugLocation(946, 101);
				C_STRING435=(IToken)Match(input,C_STRING,Follow._C_STRING_in_notificationgroup_macro6154); if (state.failed) return retval;
				if (state.backtracking == 0) {
				C_STRING435_tree = (CommonTree)adaptor.Create(C_STRING435);
				adaptor.AddChild(root_0, C_STRING435_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(102); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("notificationgroup_macro", 78);
			LeaveRule("notificationgroup_macro", 78);
			LeaveRule_notificationgroup_macro();
		}
		DebugLocation(946, 111);
		} finally { DebugExitRule(GrammarFileName, "notificationgroup_macro"); }
		return retval;

	}
	// $ANTLR end "notificationgroup_macro"

	partial void EnterRule_notificationgroup_macro_status();
	partial void LeaveRule_notificationgroup_macro_status();
	// $ANTLR start "notificationgroup_macro_status"
	// Smi.g:947:1: notificationgroup_macro_status : l= LOWER ;
	[GrammarRule("notificationgroup_macro_status")]
	private AstParserRuleReturnScope<CommonTree, IToken> notificationgroup_macro_status()
	{
		EnterRule_notificationgroup_macro_status();
		EnterRule("notificationgroup_macro_status", 79);
		TraceIn("notificationgroup_macro_status", 79);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "notificationgroup_macro_status");
		DebugLocation(947, 111);
		try
		{
			// Smi.g:947:31: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:947:33: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(947, 34);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_notificationgroup_macro_status6165); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(948, 41);
			if (state.backtracking == 0)
			{
				if (l.Text == ("current") 
				                                                || l.Text == ("deprecated") 
				                                                || l.Text == ("obsolete"))
				                                            {/*DOSOMETHING*/} else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("notificationgroup_macro_status", 79);
			LeaveRule("notificationgroup_macro_status", 79);
			LeaveRule_notificationgroup_macro_status();
		}
		DebugLocation(951, 111);
		} finally { DebugExitRule(GrammarFileName, "notificationgroup_macro_status"); }
		return retval;

	}
	// $ANTLR end "notificationgroup_macro_status"

	partial void EnterRule_modulecompliance_macro();
	partial void LeaveRule_modulecompliance_macro();
	// $ANTLR start "modulecompliance_macro"
	// Smi.g:954:1: modulecompliance_macro : 'MODULE-COMPLIANCE' 'STATUS' modulecompliance_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )? ( modulecompliance_macro_module )+ ;
	[GrammarRule("modulecompliance_macro")]
	private AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro()
	{
		EnterRule_modulecompliance_macro();
		EnterRule("modulecompliance_macro", 80);
		TraceIn("modulecompliance_macro", 80);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal436 = default(IToken);
		IToken string_literal437 = default(IToken);
		IToken string_literal439 = default(IToken);
		IToken C_STRING440 = default(IToken);
		IToken string_literal441 = default(IToken);
		IToken C_STRING442 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro_status438 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro_module443 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree string_literal436_tree = default(CommonTree);
		CommonTree string_literal437_tree = default(CommonTree);
		CommonTree string_literal439_tree = default(CommonTree);
		CommonTree C_STRING440_tree = default(CommonTree);
		CommonTree string_literal441_tree = default(CommonTree);
		CommonTree C_STRING442_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "modulecompliance_macro");
		DebugLocation(954, 104);
		try
		{
			// Smi.g:954:23: ( 'MODULE-COMPLIANCE' 'STATUS' modulecompliance_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )? ( modulecompliance_macro_module )+ )
			DebugEnterAlt(1);
			// Smi.g:954:25: 'MODULE-COMPLIANCE' 'STATUS' modulecompliance_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )? ( modulecompliance_macro_module )+
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(954, 25);
			string_literal436=(IToken)Match(input,158,Follow._158_in_modulecompliance_macro6217); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal436_tree = (CommonTree)adaptor.Create(string_literal436);
			adaptor.AddChild(root_0, string_literal436_tree);
			}
			DebugLocation(954, 45);
			string_literal437=(IToken)Match(input,184,Follow._184_in_modulecompliance_macro6219); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal437_tree = (CommonTree)adaptor.Create(string_literal437);
			adaptor.AddChild(root_0, string_literal437_tree);
			}
			DebugLocation(954, 54);
			PushFollow(Follow._modulecompliance_macro_status_in_modulecompliance_macro6221);
			modulecompliance_macro_status438=modulecompliance_macro_status();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modulecompliance_macro_status438.Tree);
			DebugLocation(955, 25);
			string_literal439=(IToken)Match(input,141,Follow._141_in_modulecompliance_macro6247); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal439_tree = (CommonTree)adaptor.Create(string_literal439);
			adaptor.AddChild(root_0, string_literal439_tree);
			}
			DebugLocation(955, 39);
			C_STRING440=(IToken)Match(input,C_STRING,Follow._C_STRING_in_modulecompliance_macro6249); if (state.failed) return retval;
			if (state.backtracking == 0) {
			C_STRING440_tree = (CommonTree)adaptor.Create(C_STRING440);
			adaptor.AddChild(root_0, C_STRING440_tree);
			}
			DebugLocation(955, 48);
			// Smi.g:955:48: ( 'REFERENCE' C_STRING )?
			int alt103=2;
			try { DebugEnterSubRule(103);
			try { DebugEnterDecision(103, false);
			int LA103_1 = input.LA(1);

			if ((LA103_1==177))
			{
				alt103 = 1;
			}
			} finally { DebugExitDecision(103); }
			switch (alt103)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:955:49: 'REFERENCE' C_STRING
				{
				DebugLocation(955, 49);
				string_literal441=(IToken)Match(input,177,Follow._177_in_modulecompliance_macro6252); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal441_tree = (CommonTree)adaptor.Create(string_literal441);
				adaptor.AddChild(root_0, string_literal441_tree);
				}
				DebugLocation(955, 61);
				C_STRING442=(IToken)Match(input,C_STRING,Follow._C_STRING_in_modulecompliance_macro6254); if (state.failed) return retval;
				if (state.backtracking == 0) {
				C_STRING442_tree = (CommonTree)adaptor.Create(C_STRING442);
				adaptor.AddChild(root_0, C_STRING442_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(103); }

			DebugLocation(955, 72);
			// Smi.g:955:72: ( modulecompliance_macro_module )+
			int cnt104=0;
			try { DebugEnterSubRule(104);
			while (true)
			{
				int alt104=2;
				try { DebugEnterDecision(104, false);
				int LA104_1 = input.LA(1);

				if ((LA104_1==157))
				{
					alt104 = 1;
				}


				} finally { DebugExitDecision(104); }
				switch (alt104)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:955:73: modulecompliance_macro_module
					{
					DebugLocation(955, 73);
					PushFollow(Follow._modulecompliance_macro_module_in_modulecompliance_macro6259);
					modulecompliance_macro_module443=modulecompliance_macro_module();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modulecompliance_macro_module443.Tree);

					}
					break;

				default:
					if (cnt104 >= 1)
						goto loop104;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee104 = new EarlyExitException( 104, input );
					DebugRecognitionException(eee104);
					throw eee104;
				}
				cnt104++;
			}
			loop104:
				;

			} finally { DebugExitSubRule(104); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("modulecompliance_macro", 80);
			LeaveRule("modulecompliance_macro", 80);
			LeaveRule_modulecompliance_macro();
		}
		DebugLocation(955, 104);
		} finally { DebugExitRule(GrammarFileName, "modulecompliance_macro"); }
		return retval;

	}
	// $ANTLR end "modulecompliance_macro"

	partial void EnterRule_modulecompliance_macro_status();
	partial void LeaveRule_modulecompliance_macro_status();
	// $ANTLR start "modulecompliance_macro_status"
	// Smi.g:956:1: modulecompliance_macro_status : l= LOWER ;
	[GrammarRule("modulecompliance_macro_status")]
	private AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro_status()
	{
		EnterRule_modulecompliance_macro_status();
		EnterRule("modulecompliance_macro_status", 81);
		TraceIn("modulecompliance_macro_status", 81);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "modulecompliance_macro_status");
		DebugLocation(956, 111);
		try
		{
			// Smi.g:956:30: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:956:32: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(956, 33);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_modulecompliance_macro_status6270); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(957, 41);
			if (state.backtracking == 0)
			{
				if (l.Text == ("current") 
				                                                || l.Text == ("deprecated") 
				                                                || l.Text == ("obsolete"))
				                                            {/*DOSOMETHING*/} else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("modulecompliance_macro_status", 81);
			LeaveRule("modulecompliance_macro_status", 81);
			LeaveRule_modulecompliance_macro_status();
		}
		DebugLocation(960, 111);
		} finally { DebugExitRule(GrammarFileName, "modulecompliance_macro_status"); }
		return retval;

	}
	// $ANTLR end "modulecompliance_macro_status"

	partial void EnterRule_modulecompliance_macro_module();
	partial void LeaveRule_modulecompliance_macro_module();
	// $ANTLR start "modulecompliance_macro_module"
	// Smi.g:961:1: modulecompliance_macro_module : 'MODULE' ( ( UPPER )=> UPPER ( ( value )=> value )? )? ( 'MANDATORY-GROUPS' L_BRACE value ( COMMA value )* R_BRACE )? ( modulecompliance_macro_compliance )* ;
	[GrammarRule("modulecompliance_macro_module")]
	private AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro_module()
	{
		EnterRule_modulecompliance_macro_module();
		EnterRule("modulecompliance_macro_module", 82);
		TraceIn("modulecompliance_macro_module", 82);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal444 = default(IToken);
		IToken UPPER445 = default(IToken);
		IToken string_literal447 = default(IToken);
		IToken L_BRACE448 = default(IToken);
		IToken COMMA450 = default(IToken);
		IToken R_BRACE452 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> value446 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value449 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value451 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro_compliance453 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree string_literal444_tree = default(CommonTree);
		CommonTree UPPER445_tree = default(CommonTree);
		CommonTree string_literal447_tree = default(CommonTree);
		CommonTree L_BRACE448_tree = default(CommonTree);
		CommonTree COMMA450_tree = default(CommonTree);
		CommonTree R_BRACE452_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "modulecompliance_macro_module");
		DebugLocation(961, 69);
		try
		{
			// Smi.g:961:30: ( 'MODULE' ( ( UPPER )=> UPPER ( ( value )=> value )? )? ( 'MANDATORY-GROUPS' L_BRACE value ( COMMA value )* R_BRACE )? ( modulecompliance_macro_compliance )* )
			DebugEnterAlt(1);
			// Smi.g:961:32: 'MODULE' ( ( UPPER )=> UPPER ( ( value )=> value )? )? ( 'MANDATORY-GROUPS' L_BRACE value ( COMMA value )* R_BRACE )? ( modulecompliance_macro_compliance )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(961, 32);
			string_literal444=(IToken)Match(input,157,Follow._157_in_modulecompliance_macro_module6318); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal444_tree = (CommonTree)adaptor.Create(string_literal444);
			adaptor.AddChild(root_0, string_literal444_tree);
			}
			DebugLocation(961, 41);
			// Smi.g:961:41: ( ( UPPER )=> UPPER ( ( value )=> value )? )?
			int alt106=2;
			try { DebugEnterSubRule(106);
			try { DebugEnterDecision(106, false);
			try
			{
				alt106 = dfa106.Predict(input);
			}
			catch (NoViableAltException nvae)
			{
				DebugRecognitionException(nvae);
				throw;
			}
			} finally { DebugExitDecision(106); }
			switch (alt106)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:961:42: ( UPPER )=> UPPER ( ( value )=> value )?
				{
				DebugLocation(961, 53);
				UPPER445=(IToken)Match(input,UPPER,Follow._UPPER_in_modulecompliance_macro_module6327); if (state.failed) return retval;
				if (state.backtracking == 0) {
				UPPER445_tree = (CommonTree)adaptor.Create(UPPER445);
				adaptor.AddChild(root_0, UPPER445_tree);
				}
				DebugLocation(961, 59);
				// Smi.g:961:59: ( ( value )=> value )?
				int alt105=2;
				try { DebugEnterSubRule(105);
				try { DebugEnterDecision(105, false);
				try
				{
					alt105 = dfa105.Predict(input);
				}
				catch (NoViableAltException nvae)
				{
					DebugRecognitionException(nvae);
					throw;
				}
				} finally { DebugExitDecision(105); }
				switch (alt105)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:961:60: ( value )=> value
					{
					DebugLocation(961, 71);
					PushFollow(Follow._value_in_modulecompliance_macro_module6336);
					value446=value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, value446.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(105); }


				}
				break;

			}
			} finally { DebugExitSubRule(106); }

			DebugLocation(962, 33);
			// Smi.g:962:33: ( 'MANDATORY-GROUPS' L_BRACE value ( COMMA value )* R_BRACE )?
			int alt108=2;
			try { DebugEnterSubRule(108);
			try { DebugEnterDecision(108, false);
			int LA108_1 = input.LA(1);

			if ((LA108_1==154))
			{
				alt108 = 1;
			}
			} finally { DebugExitDecision(108); }
			switch (alt108)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:962:34: 'MANDATORY-GROUPS' L_BRACE value ( COMMA value )* R_BRACE
				{
				DebugLocation(962, 34);
				string_literal447=(IToken)Match(input,154,Follow._154_in_modulecompliance_macro_module6377); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal447_tree = (CommonTree)adaptor.Create(string_literal447);
				adaptor.AddChild(root_0, string_literal447_tree);
				}
				DebugLocation(962, 53);
				L_BRACE448=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_modulecompliance_macro_module6379); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE448_tree = (CommonTree)adaptor.Create(L_BRACE448);
				adaptor.AddChild(root_0, L_BRACE448_tree);
				}
				DebugLocation(962, 61);
				PushFollow(Follow._value_in_modulecompliance_macro_module6381);
				value449=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value449.Tree);
				DebugLocation(962, 67);
				// Smi.g:962:67: ( COMMA value )*
				try { DebugEnterSubRule(107);
				while (true)
				{
					int alt107=2;
					try { DebugEnterDecision(107, false);
					int LA107_1 = input.LA(1);

					if ((LA107_1==COMMA))
					{
						alt107 = 1;
					}


					} finally { DebugExitDecision(107); }
					switch ( alt107 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:962:68: COMMA value
						{
						DebugLocation(962, 68);
						COMMA450=(IToken)Match(input,COMMA,Follow._COMMA_in_modulecompliance_macro_module6384); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA450_tree = (CommonTree)adaptor.Create(COMMA450);
						adaptor.AddChild(root_0, COMMA450_tree);
						}
						DebugLocation(962, 74);
						PushFollow(Follow._value_in_modulecompliance_macro_module6386);
						value451=value();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, value451.Tree);

						}
						break;

					default:
						goto loop107;
					}
				}

				loop107:
					;

				} finally { DebugExitSubRule(107); }

				DebugLocation(962, 82);
				R_BRACE452=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_modulecompliance_macro_module6390); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE452_tree = (CommonTree)adaptor.Create(R_BRACE452);
				adaptor.AddChild(root_0, R_BRACE452_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(108); }

			DebugLocation(963, 33);
			// Smi.g:963:33: ( modulecompliance_macro_compliance )*
			try { DebugEnterSubRule(109);
			while (true)
			{
				int alt109=2;
				try { DebugEnterDecision(109, false);
				int LA109_1 = input.LA(1);

				if ((LA109_1==OBJECT_KW))
				{
					int LA109_2 = input.LA(2);

					if ((LA109_2==B_STRING||LA109_2==C_STRING||LA109_2==FALSE_KW||LA109_2==H_STRING||(LA109_2>=LOWER && LA109_2<=L_BRACE)||(LA109_2>=MINUS && LA109_2<=MINUS_INFINITY_KW)||(LA109_2>=NULL_KW && LA109_2<=NUMBER)||LA109_2==PLUS_INFINITY_KW||LA109_2==TRUE_KW||LA109_2==UPPER))
					{
						alt109 = 1;
					}


				}
				else if ((LA109_1==149))
				{
					alt109 = 1;
				}


				} finally { DebugExitDecision(109); }
				switch ( alt109 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:963:34: modulecompliance_macro_compliance
					{
					DebugLocation(963, 34);
					PushFollow(Follow._modulecompliance_macro_compliance_in_modulecompliance_macro_module6427);
					modulecompliance_macro_compliance453=modulecompliance_macro_compliance();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modulecompliance_macro_compliance453.Tree);

					}
					break;

				default:
					goto loop109;
				}
			}

			loop109:
				;

			} finally { DebugExitSubRule(109); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("modulecompliance_macro_module", 82);
			LeaveRule("modulecompliance_macro_module", 82);
			LeaveRule_modulecompliance_macro_module();
		}
		DebugLocation(963, 69);
		} finally { DebugExitRule(GrammarFileName, "modulecompliance_macro_module"); }
		return retval;

	}
	// $ANTLR end "modulecompliance_macro_module"

	partial void EnterRule_modulecompliance_macro_compliance();
	partial void LeaveRule_modulecompliance_macro_compliance();
	// $ANTLR start "modulecompliance_macro_compliance"
	// Smi.g:964:1: modulecompliance_macro_compliance : ( 'GROUP' value 'DESCRIPTION' C_STRING | 'OBJECT' value ( 'SYNTAX' modulecompliance_macro_syntax )? ( 'WRITE-SYNTAX' modulecompliance_macro_syntax )? ( 'MIN-ACCESS' modulecompliance_macro_access )? ( 'PIB-MIN-ACCESS' modulecompliance_macro_pibaccess )? 'DESCRIPTION' C_STRING );
	[GrammarRule("modulecompliance_macro_compliance")]
	private AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro_compliance()
	{
		EnterRule_modulecompliance_macro_compliance();
		EnterRule("modulecompliance_macro_compliance", 83);
		TraceIn("modulecompliance_macro_compliance", 83);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal454 = default(IToken);
		IToken string_literal456 = default(IToken);
		IToken C_STRING457 = default(IToken);
		IToken string_literal458 = default(IToken);
		IToken string_literal460 = default(IToken);
		IToken string_literal462 = default(IToken);
		IToken string_literal464 = default(IToken);
		IToken string_literal466 = default(IToken);
		IToken string_literal468 = default(IToken);
		IToken C_STRING469 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> value455 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value459 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro_syntax461 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro_syntax463 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro_access465 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro_pibaccess467 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree string_literal454_tree = default(CommonTree);
		CommonTree string_literal456_tree = default(CommonTree);
		CommonTree C_STRING457_tree = default(CommonTree);
		CommonTree string_literal458_tree = default(CommonTree);
		CommonTree string_literal460_tree = default(CommonTree);
		CommonTree string_literal462_tree = default(CommonTree);
		CommonTree string_literal464_tree = default(CommonTree);
		CommonTree string_literal466_tree = default(CommonTree);
		CommonTree string_literal468_tree = default(CommonTree);
		CommonTree C_STRING469_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "modulecompliance_macro_compliance");
		DebugLocation(964, 58);
		try
		{
			// Smi.g:964:34: ( 'GROUP' value 'DESCRIPTION' C_STRING | 'OBJECT' value ( 'SYNTAX' modulecompliance_macro_syntax )? ( 'WRITE-SYNTAX' modulecompliance_macro_syntax )? ( 'MIN-ACCESS' modulecompliance_macro_access )? ( 'PIB-MIN-ACCESS' modulecompliance_macro_pibaccess )? 'DESCRIPTION' C_STRING )
			int alt114=2;
			try { DebugEnterDecision(114, false);
			int LA114_1 = input.LA(1);

			if ((LA114_1==149))
			{
				alt114 = 1;
			}
			else if ((LA114_1==OBJECT_KW))
			{
				alt114 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 114, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(114); }
			switch (alt114)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:964:36: 'GROUP' value 'DESCRIPTION' C_STRING
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(964, 36);
				string_literal454=(IToken)Match(input,149,Follow._149_in_modulecompliance_macro_compliance6436); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal454_tree = (CommonTree)adaptor.Create(string_literal454);
				adaptor.AddChild(root_0, string_literal454_tree);
				}
				DebugLocation(964, 44);
				PushFollow(Follow._value_in_modulecompliance_macro_compliance6438);
				value455=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value455.Tree);
				DebugLocation(964, 50);
				string_literal456=(IToken)Match(input,141,Follow._141_in_modulecompliance_macro_compliance6440); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal456_tree = (CommonTree)adaptor.Create(string_literal456);
				adaptor.AddChild(root_0, string_literal456_tree);
				}
				DebugLocation(964, 64);
				C_STRING457=(IToken)Match(input,C_STRING,Follow._C_STRING_in_modulecompliance_macro_compliance6442); if (state.failed) return retval;
				if (state.backtracking == 0) {
				C_STRING457_tree = (CommonTree)adaptor.Create(C_STRING457);
				adaptor.AddChild(root_0, C_STRING457_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:965:36: 'OBJECT' value ( 'SYNTAX' modulecompliance_macro_syntax )? ( 'WRITE-SYNTAX' modulecompliance_macro_syntax )? ( 'MIN-ACCESS' modulecompliance_macro_access )? ( 'PIB-MIN-ACCESS' modulecompliance_macro_pibaccess )? 'DESCRIPTION' C_STRING
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(965, 36);
				string_literal458=(IToken)Match(input,OBJECT_KW,Follow._OBJECT_KW_in_modulecompliance_macro_compliance6479); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal458_tree = (CommonTree)adaptor.Create(string_literal458);
				adaptor.AddChild(root_0, string_literal458_tree);
				}
				DebugLocation(965, 45);
				PushFollow(Follow._value_in_modulecompliance_macro_compliance6481);
				value459=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value459.Tree);
				DebugLocation(966, 37);
				// Smi.g:966:37: ( 'SYNTAX' modulecompliance_macro_syntax )?
				int alt110=2;
				try { DebugEnterSubRule(110);
				try { DebugEnterDecision(110, false);
				int LA110_1 = input.LA(1);

				if ((LA110_1==187))
				{
					alt110 = 1;
				}
				} finally { DebugExitDecision(110); }
				switch (alt110)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:966:38: 'SYNTAX' modulecompliance_macro_syntax
					{
					DebugLocation(966, 38);
					string_literal460=(IToken)Match(input,187,Follow._187_in_modulecompliance_macro_compliance6521); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal460_tree = (CommonTree)adaptor.Create(string_literal460);
					adaptor.AddChild(root_0, string_literal460_tree);
					}
					DebugLocation(966, 47);
					PushFollow(Follow._modulecompliance_macro_syntax_in_modulecompliance_macro_compliance6523);
					modulecompliance_macro_syntax461=modulecompliance_macro_syntax();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modulecompliance_macro_syntax461.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(110); }

				DebugLocation(967, 37);
				// Smi.g:967:37: ( 'WRITE-SYNTAX' modulecompliance_macro_syntax )?
				int alt111=2;
				try { DebugEnterSubRule(111);
				try { DebugEnterDecision(111, false);
				int LA111_1 = input.LA(1);

				if ((LA111_1==197))
				{
					alt111 = 1;
				}
				} finally { DebugExitDecision(111); }
				switch (alt111)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:967:38: 'WRITE-SYNTAX' modulecompliance_macro_syntax
					{
					DebugLocation(967, 38);
					string_literal462=(IToken)Match(input,197,Follow._197_in_modulecompliance_macro_compliance6565); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal462_tree = (CommonTree)adaptor.Create(string_literal462);
					adaptor.AddChild(root_0, string_literal462_tree);
					}
					DebugLocation(967, 53);
					PushFollow(Follow._modulecompliance_macro_syntax_in_modulecompliance_macro_compliance6567);
					modulecompliance_macro_syntax463=modulecompliance_macro_syntax();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modulecompliance_macro_syntax463.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(111); }

				DebugLocation(968, 37);
				// Smi.g:968:37: ( 'MIN-ACCESS' modulecompliance_macro_access )?
				int alt112=2;
				try { DebugEnterSubRule(112);
				try { DebugEnterDecision(112, false);
				int LA112_1 = input.LA(1);

				if ((LA112_1==156))
				{
					alt112 = 1;
				}
				} finally { DebugExitDecision(112); }
				switch (alt112)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:968:38: 'MIN-ACCESS' modulecompliance_macro_access
					{
					DebugLocation(968, 38);
					string_literal464=(IToken)Match(input,156,Follow._156_in_modulecompliance_macro_compliance6614); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal464_tree = (CommonTree)adaptor.Create(string_literal464);
					adaptor.AddChild(root_0, string_literal464_tree);
					}
					DebugLocation(968, 51);
					PushFollow(Follow._modulecompliance_macro_access_in_modulecompliance_macro_compliance6616);
					modulecompliance_macro_access465=modulecompliance_macro_access();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modulecompliance_macro_access465.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(112); }

				DebugLocation(969, 37);
				// Smi.g:969:37: ( 'PIB-MIN-ACCESS' modulecompliance_macro_pibaccess )?
				int alt113=2;
				try { DebugEnterSubRule(113);
				try { DebugEnterDecision(113, false);
				int LA113_1 = input.LA(1);

				if ((LA113_1==171))
				{
					alt113 = 1;
				}
				} finally { DebugExitDecision(113); }
				switch (alt113)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:969:38: 'PIB-MIN-ACCESS' modulecompliance_macro_pibaccess
					{
					DebugLocation(969, 38);
					string_literal466=(IToken)Match(input,171,Follow._171_in_modulecompliance_macro_compliance6658); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal466_tree = (CommonTree)adaptor.Create(string_literal466);
					adaptor.AddChild(root_0, string_literal466_tree);
					}
					DebugLocation(969, 55);
					PushFollow(Follow._modulecompliance_macro_pibaccess_in_modulecompliance_macro_compliance6660);
					modulecompliance_macro_pibaccess467=modulecompliance_macro_pibaccess();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modulecompliance_macro_pibaccess467.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(113); }

				DebugLocation(970, 37);
				string_literal468=(IToken)Match(input,141,Follow._141_in_modulecompliance_macro_compliance6705); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal468_tree = (CommonTree)adaptor.Create(string_literal468);
				adaptor.AddChild(root_0, string_literal468_tree);
				}
				DebugLocation(970, 51);
				C_STRING469=(IToken)Match(input,C_STRING,Follow._C_STRING_in_modulecompliance_macro_compliance6707); if (state.failed) return retval;
				if (state.backtracking == 0) {
				C_STRING469_tree = (CommonTree)adaptor.Create(C_STRING469);
				adaptor.AddChild(root_0, C_STRING469_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("modulecompliance_macro_compliance", 83);
			LeaveRule("modulecompliance_macro_compliance", 83);
			LeaveRule_modulecompliance_macro_compliance();
		}
		DebugLocation(970, 58);
		} finally { DebugExitRule(GrammarFileName, "modulecompliance_macro_compliance"); }
		return retval;

	}
	// $ANTLR end "modulecompliance_macro_compliance"

	partial void EnterRule_modulecompliance_macro_syntax();
	partial void LeaveRule_modulecompliance_macro_syntax();
	// $ANTLR start "modulecompliance_macro_syntax"
	// Smi.g:971:1: modulecompliance_macro_syntax : ( ( smi_type L_BRACE )=> smi_type L_BRACE modulecompliance_macro_namedbit ( COMMA modulecompliance_macro_namedbit )* R_BRACE | ( smi_type )=> smi_type ( smi_subtyping )? | type );
	[GrammarRule("modulecompliance_macro_syntax")]
	private AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro_syntax()
	{
		EnterRule_modulecompliance_macro_syntax();
		EnterRule("modulecompliance_macro_syntax", 84);
		TraceIn("modulecompliance_macro_syntax", 84);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE471 = default(IToken);
		IToken COMMA473 = default(IToken);
		IToken R_BRACE475 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> smi_type470 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro_namedbit472 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro_namedbit474 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> smi_type476 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> smi_subtyping477 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> type478 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree L_BRACE471_tree = default(CommonTree);
		CommonTree COMMA473_tree = default(CommonTree);
		CommonTree R_BRACE475_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "modulecompliance_macro_syntax");
		DebugLocation(971, 35);
		try
		{
			// Smi.g:971:30: ( ( smi_type L_BRACE )=> smi_type L_BRACE modulecompliance_macro_namedbit ( COMMA modulecompliance_macro_namedbit )* R_BRACE | ( smi_type )=> smi_type ( smi_subtyping )? | type )
			int alt117=3;
			try { DebugEnterDecision(117, false);
			switch (input.LA(1))
			{
			case 137:
				{
				int LA117_2 = input.LA(2);

				if ((LA117_2==L_BRACE) && (EvaluatePredicate(synpred34_Smi_fragment)))
				{
					alt117 = 1;
				}
				else if ((EvaluatePredicate(synpred35_Smi_fragment)))
				{
					alt117 = 2;
				}
				else if ((true))
				{
					alt117 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 117, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case INTEGER_KW:
				{
				int LA117_2 = input.LA(2);

				if ((LA117_2==L_BRACE) && (EvaluatePredicate(synpred34_Smi_fragment)))
				{
					alt117 = 1;
				}
				else if ((EvaluatePredicate(synpred35_Smi_fragment)))
				{
					alt117 = 2;
				}
				else if ((true))
				{
					alt117 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 117, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case OCTET_KW:
				{
				int LA117_2 = input.LA(2);

				if ((LA117_2==STRING_KW))
				{
					int LA117_3 = input.LA(3);

					if ((LA117_3==L_BRACE) && (EvaluatePredicate(synpred34_Smi_fragment)))
					{
						alt117 = 1;
					}
					else if ((EvaluatePredicate(synpred35_Smi_fragment)))
					{
						alt117 = 2;
					}
					else if ((true))
					{
						alt117 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 117, 9, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 117, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case OBJECT_KW:
				{
				int LA117_2 = input.LA(2);

				if ((LA117_2==IDENTIFIER_KW))
				{
					int LA117_3 = input.LA(3);

					if ((LA117_3==L_BRACE) && (EvaluatePredicate(synpred34_Smi_fragment)))
					{
						alt117 = 1;
					}
					else if ((EvaluatePredicate(synpred35_Smi_fragment)))
					{
						alt117 = 2;
					}
					else if ((true))
					{
						alt117 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 117, 10, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 117, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case UPPER:
				{
				int LA117_2 = input.LA(2);

				if ((LA117_2==L_BRACE) && (EvaluatePredicate(synpred34_Smi_fragment)))
				{
					alt117 = 1;
				}
				else if ((EvaluatePredicate(synpred35_Smi_fragment)))
				{
					alt117 = 2;
				}
				else if ((true))
				{
					alt117 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 117, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ANY_KW:
			case BIT_KW:
			case BMP_STR_KW:
			case BOOLEAN_KW:
			case CHARACTER_KW:
			case CHOICE_KW:
			case EMBEDDED_KW:
			case ENUMERATED_KW:
			case ERROR_KW:
			case EXTERNAL_KW:
			case GENERALIZED_TIME_KW:
			case GENERAL_STR_KW:
			case GRAPHIC_STR_KW:
			case IA5_STRING_KW:
			case ISO646_STR_KW:
			case LOWER:
			case L_BRACKET:
			case NULL_KW:
			case NUMERIC_STR_KW:
			case OPERATION_KW:
			case PRINTABLE_STR_KW:
			case REAL_KW:
			case SEQUENCE_KW:
			case SET_KW:
			case T61_STR_KW:
			case TELETEX_STR_KW:
			case UNIVERSAL_STR_KW:
			case UTC_TIME_KW:
			case UTF8_STR_KW:
			case VIDEOTEX_STR_KW:
			case VISIBLE_STR_KW:
			case 131:
			case 158:
			case 159:
			case 160:
			case 161:
			case 163:
			case 164:
			case 165:
			case 179:
			case 188:
			case 191:
				{
				alt117 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 117, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(117); }
			switch (alt117)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:971:32: ( smi_type L_BRACE )=> smi_type L_BRACE modulecompliance_macro_namedbit ( COMMA modulecompliance_macro_namedbit )* R_BRACE
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(971, 54);
				PushFollow(Follow._smi_type_in_modulecompliance_macro_syntax6721);
				smi_type470=smi_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, smi_type470.Tree);
				DebugLocation(971, 63);
				L_BRACE471=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_modulecompliance_macro_syntax6723); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE471_tree = (CommonTree)adaptor.Create(L_BRACE471);
				adaptor.AddChild(root_0, L_BRACE471_tree);
				}
				DebugLocation(971, 71);
				PushFollow(Follow._modulecompliance_macro_namedbit_in_modulecompliance_macro_syntax6725);
				modulecompliance_macro_namedbit472=modulecompliance_macro_namedbit();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, modulecompliance_macro_namedbit472.Tree);
				DebugLocation(971, 103);
				// Smi.g:971:103: ( COMMA modulecompliance_macro_namedbit )*
				try { DebugEnterSubRule(115);
				while (true)
				{
					int alt115=2;
					try { DebugEnterDecision(115, false);
					int LA115_1 = input.LA(1);

					if ((LA115_1==COMMA))
					{
						alt115 = 1;
					}


					} finally { DebugExitDecision(115); }
					switch ( alt115 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:971:104: COMMA modulecompliance_macro_namedbit
						{
						DebugLocation(971, 104);
						COMMA473=(IToken)Match(input,COMMA,Follow._COMMA_in_modulecompliance_macro_syntax6728); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA473_tree = (CommonTree)adaptor.Create(COMMA473);
						adaptor.AddChild(root_0, COMMA473_tree);
						}
						DebugLocation(971, 110);
						PushFollow(Follow._modulecompliance_macro_namedbit_in_modulecompliance_macro_syntax6730);
						modulecompliance_macro_namedbit474=modulecompliance_macro_namedbit();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, modulecompliance_macro_namedbit474.Tree);

						}
						break;

					default:
						goto loop115;
					}
				}

				loop115:
					;

				} finally { DebugExitSubRule(115); }

				DebugLocation(971, 144);
				R_BRACE475=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_modulecompliance_macro_syntax6734); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE475_tree = (CommonTree)adaptor.Create(R_BRACE475);
				adaptor.AddChild(root_0, R_BRACE475_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:972:32: ( smi_type )=> smi_type ( smi_subtyping )?
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(972, 46);
				PushFollow(Follow._smi_type_in_modulecompliance_macro_syntax6773);
				smi_type476=smi_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, smi_type476.Tree);
				DebugLocation(972, 55);
				// Smi.g:972:55: ( smi_subtyping )?
				int alt116=2;
				try { DebugEnterSubRule(116);
				try { DebugEnterDecision(116, false);
				int LA116_1 = input.LA(1);

				if ((LA116_1==L_PAREN))
				{
					alt116 = 1;
				}
				} finally { DebugExitDecision(116); }
				switch (alt116)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:972:56: smi_subtyping
					{
					DebugLocation(972, 56);
					PushFollow(Follow._smi_subtyping_in_modulecompliance_macro_syntax6776);
					smi_subtyping477=smi_subtyping();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, smi_subtyping477.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(116); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:973:32: type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(973, 32);
				PushFollow(Follow._type_in_modulecompliance_macro_syntax6811);
				type478=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type478.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("modulecompliance_macro_syntax", 84);
			LeaveRule("modulecompliance_macro_syntax", 84);
			LeaveRule_modulecompliance_macro_syntax();
		}
		DebugLocation(973, 35);
		} finally { DebugExitRule(GrammarFileName, "modulecompliance_macro_syntax"); }
		return retval;

	}
	// $ANTLR end "modulecompliance_macro_syntax"

	partial void EnterRule_modulecompliance_macro_namedbit();
	partial void LeaveRule_modulecompliance_macro_namedbit();
	// $ANTLR start "modulecompliance_macro_namedbit"
	// Smi.g:974:1: modulecompliance_macro_namedbit : LOWER L_PAREN NUMBER R_PAREN ;
	[GrammarRule("modulecompliance_macro_namedbit")]
	private AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro_namedbit()
	{
		EnterRule_modulecompliance_macro_namedbit();
		EnterRule("modulecompliance_macro_namedbit", 85);
		TraceIn("modulecompliance_macro_namedbit", 85);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken LOWER479 = default(IToken);
		IToken L_PAREN480 = default(IToken);
		IToken NUMBER481 = default(IToken);
		IToken R_PAREN482 = default(IToken);

		CommonTree LOWER479_tree = default(CommonTree);
		CommonTree L_PAREN480_tree = default(CommonTree);
		CommonTree NUMBER481_tree = default(CommonTree);
		CommonTree R_PAREN482_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "modulecompliance_macro_namedbit");
		DebugLocation(974, 61);
		try
		{
			// Smi.g:974:32: ( LOWER L_PAREN NUMBER R_PAREN )
			DebugEnterAlt(1);
			// Smi.g:974:34: LOWER L_PAREN NUMBER R_PAREN
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(974, 34);
			LOWER479=(IToken)Match(input,LOWER,Follow._LOWER_in_modulecompliance_macro_namedbit6817); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LOWER479_tree = (CommonTree)adaptor.Create(LOWER479);
			adaptor.AddChild(root_0, LOWER479_tree);
			}
			DebugLocation(974, 40);
			L_PAREN480=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_modulecompliance_macro_namedbit6819); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_PAREN480_tree = (CommonTree)adaptor.Create(L_PAREN480);
			adaptor.AddChild(root_0, L_PAREN480_tree);
			}
			DebugLocation(974, 48);
			NUMBER481=(IToken)Match(input,NUMBER,Follow._NUMBER_in_modulecompliance_macro_namedbit6821); if (state.failed) return retval;
			if (state.backtracking == 0) {
			NUMBER481_tree = (CommonTree)adaptor.Create(NUMBER481);
			adaptor.AddChild(root_0, NUMBER481_tree);
			}
			DebugLocation(974, 55);
			R_PAREN482=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_modulecompliance_macro_namedbit6823); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_PAREN482_tree = (CommonTree)adaptor.Create(R_PAREN482);
			adaptor.AddChild(root_0, R_PAREN482_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("modulecompliance_macro_namedbit", 85);
			LeaveRule("modulecompliance_macro_namedbit", 85);
			LeaveRule_modulecompliance_macro_namedbit();
		}
		DebugLocation(974, 61);
		} finally { DebugExitRule(GrammarFileName, "modulecompliance_macro_namedbit"); }
		return retval;

	}
	// $ANTLR end "modulecompliance_macro_namedbit"

	partial void EnterRule_modulecompliance_macro_access();
	partial void LeaveRule_modulecompliance_macro_access();
	// $ANTLR start "modulecompliance_macro_access"
	// Smi.g:975:1: modulecompliance_macro_access : l= LOWER ;
	[GrammarRule("modulecompliance_macro_access")]
	private AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro_access()
	{
		EnterRule_modulecompliance_macro_access();
		EnterRule("modulecompliance_macro_access", 86);
		TraceIn("modulecompliance_macro_access", 86);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "modulecompliance_macro_access");
		DebugLocation(975, 111);
		try
		{
			// Smi.g:975:30: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:975:32: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(975, 33);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_modulecompliance_macro_access6831); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(976, 41);
			if (state.backtracking == 0)
			{
				if (l.Text == ("not-accessible") 
				                                                || l.Text == ("accessible-for-notify") 
				                                                || l.Text == ("read-only")
				                                                || l.Text == ("read-write")
				                                                || l.Text == ("read-create"))
				                                            {/*DOSOMETHING*/} else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("modulecompliance_macro_access", 86);
			LeaveRule("modulecompliance_macro_access", 86);
			LeaveRule_modulecompliance_macro_access();
		}
		DebugLocation(981, 111);
		} finally { DebugExitRule(GrammarFileName, "modulecompliance_macro_access"); }
		return retval;

	}
	// $ANTLR end "modulecompliance_macro_access"

	partial void EnterRule_modulecompliance_macro_pibaccess();
	partial void LeaveRule_modulecompliance_macro_pibaccess();
	// $ANTLR start "modulecompliance_macro_pibaccess"
	// Smi.g:982:1: modulecompliance_macro_pibaccess : l= LOWER ;
	[GrammarRule("modulecompliance_macro_pibaccess")]
	private AstParserRuleReturnScope<CommonTree, IToken> modulecompliance_macro_pibaccess()
	{
		EnterRule_modulecompliance_macro_pibaccess();
		EnterRule("modulecompliance_macro_pibaccess", 87);
		TraceIn("modulecompliance_macro_pibaccess", 87);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "modulecompliance_macro_pibaccess");
		DebugLocation(982, 111);
		try
		{
			// Smi.g:982:33: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:982:35: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(982, 36);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_modulecompliance_macro_pibaccess6881); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(983, 41);
			if (state.backtracking == 0)
			{
				if (l.Text == ("not-accessible") 
				                                                || l.Text == ("install") 
				                                                || l.Text == ("notify")
				                                                || l.Text == ("install-notify")
				                                                || l.Text == ("report-only"))
				                                            {/*DOSOMETHING*/} else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("modulecompliance_macro_pibaccess", 87);
			LeaveRule("modulecompliance_macro_pibaccess", 87);
			LeaveRule_modulecompliance_macro_pibaccess();
		}
		DebugLocation(988, 111);
		} finally { DebugExitRule(GrammarFileName, "modulecompliance_macro_pibaccess"); }
		return retval;

	}
	// $ANTLR end "modulecompliance_macro_pibaccess"

	partial void EnterRule_agentcapabilities_macro();
	partial void LeaveRule_agentcapabilities_macro();
	// $ANTLR start "agentcapabilities_macro"
	// Smi.g:991:1: agentcapabilities_macro : 'AGENT-CAPABILITIES' 'PRODUCT-RELEASE' C_STRING 'STATUS' agentcapabilities_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )? ( agentcapabilities_macro_module )* ;
	[GrammarRule("agentcapabilities_macro")]
	private AstParserRuleReturnScope<CommonTree, IToken> agentcapabilities_macro()
	{
		EnterRule_agentcapabilities_macro();
		EnterRule("agentcapabilities_macro", 88);
		TraceIn("agentcapabilities_macro", 88);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal483 = default(IToken);
		IToken string_literal484 = default(IToken);
		IToken C_STRING485 = default(IToken);
		IToken string_literal486 = default(IToken);
		IToken string_literal488 = default(IToken);
		IToken C_STRING489 = default(IToken);
		IToken string_literal490 = default(IToken);
		IToken C_STRING491 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> agentcapabilities_macro_status487 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> agentcapabilities_macro_module492 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree string_literal483_tree = default(CommonTree);
		CommonTree string_literal484_tree = default(CommonTree);
		CommonTree C_STRING485_tree = default(CommonTree);
		CommonTree string_literal486_tree = default(CommonTree);
		CommonTree string_literal488_tree = default(CommonTree);
		CommonTree C_STRING489_tree = default(CommonTree);
		CommonTree string_literal490_tree = default(CommonTree);
		CommonTree C_STRING491_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "agentcapabilities_macro");
		DebugLocation(991, 105);
		try
		{
			// Smi.g:991:24: ( 'AGENT-CAPABILITIES' 'PRODUCT-RELEASE' C_STRING 'STATUS' agentcapabilities_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )? ( agentcapabilities_macro_module )* )
			DebugEnterAlt(1);
			// Smi.g:991:26: 'AGENT-CAPABILITIES' 'PRODUCT-RELEASE' C_STRING 'STATUS' agentcapabilities_macro_status 'DESCRIPTION' C_STRING ( 'REFERENCE' C_STRING )? ( agentcapabilities_macro_module )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(991, 26);
			string_literal483=(IToken)Match(input,131,Follow._131_in_agentcapabilities_macro6932); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal483_tree = (CommonTree)adaptor.Create(string_literal483);
			adaptor.AddChild(root_0, string_literal483_tree);
			}
			DebugLocation(991, 47);
			string_literal484=(IToken)Match(input,175,Follow._175_in_agentcapabilities_macro6934); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal484_tree = (CommonTree)adaptor.Create(string_literal484);
			adaptor.AddChild(root_0, string_literal484_tree);
			}
			DebugLocation(991, 65);
			C_STRING485=(IToken)Match(input,C_STRING,Follow._C_STRING_in_agentcapabilities_macro6936); if (state.failed) return retval;
			if (state.backtracking == 0) {
			C_STRING485_tree = (CommonTree)adaptor.Create(C_STRING485);
			adaptor.AddChild(root_0, C_STRING485_tree);
			}
			DebugLocation(991, 74);
			string_literal486=(IToken)Match(input,184,Follow._184_in_agentcapabilities_macro6938); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal486_tree = (CommonTree)adaptor.Create(string_literal486);
			adaptor.AddChild(root_0, string_literal486_tree);
			}
			DebugLocation(991, 83);
			PushFollow(Follow._agentcapabilities_macro_status_in_agentcapabilities_macro6940);
			agentcapabilities_macro_status487=agentcapabilities_macro_status();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, agentcapabilities_macro_status487.Tree);
			DebugLocation(992, 26);
			string_literal488=(IToken)Match(input,141,Follow._141_in_agentcapabilities_macro6967); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal488_tree = (CommonTree)adaptor.Create(string_literal488);
			adaptor.AddChild(root_0, string_literal488_tree);
			}
			DebugLocation(992, 40);
			C_STRING489=(IToken)Match(input,C_STRING,Follow._C_STRING_in_agentcapabilities_macro6969); if (state.failed) return retval;
			if (state.backtracking == 0) {
			C_STRING489_tree = (CommonTree)adaptor.Create(C_STRING489);
			adaptor.AddChild(root_0, C_STRING489_tree);
			}
			DebugLocation(992, 49);
			// Smi.g:992:49: ( 'REFERENCE' C_STRING )?
			int alt118=2;
			try { DebugEnterSubRule(118);
			try { DebugEnterDecision(118, false);
			int LA118_1 = input.LA(1);

			if ((LA118_1==177))
			{
				alt118 = 1;
			}
			} finally { DebugExitDecision(118); }
			switch (alt118)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:992:50: 'REFERENCE' C_STRING
				{
				DebugLocation(992, 50);
				string_literal490=(IToken)Match(input,177,Follow._177_in_agentcapabilities_macro6972); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal490_tree = (CommonTree)adaptor.Create(string_literal490);
				adaptor.AddChild(root_0, string_literal490_tree);
				}
				DebugLocation(992, 62);
				C_STRING491=(IToken)Match(input,C_STRING,Follow._C_STRING_in_agentcapabilities_macro6974); if (state.failed) return retval;
				if (state.backtracking == 0) {
				C_STRING491_tree = (CommonTree)adaptor.Create(C_STRING491);
				adaptor.AddChild(root_0, C_STRING491_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(118); }

			DebugLocation(992, 73);
			// Smi.g:992:73: ( agentcapabilities_macro_module )*
			try { DebugEnterSubRule(119);
			while (true)
			{
				int alt119=2;
				try { DebugEnterDecision(119, false);
				int LA119_1 = input.LA(1);

				if ((LA119_1==186))
				{
					alt119 = 1;
				}


				} finally { DebugExitDecision(119); }
				switch ( alt119 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:992:74: agentcapabilities_macro_module
					{
					DebugLocation(992, 74);
					PushFollow(Follow._agentcapabilities_macro_module_in_agentcapabilities_macro6979);
					agentcapabilities_macro_module492=agentcapabilities_macro_module();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, agentcapabilities_macro_module492.Tree);

					}
					break;

				default:
					goto loop119;
				}
			}

			loop119:
				;

			} finally { DebugExitSubRule(119); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("agentcapabilities_macro", 88);
			LeaveRule("agentcapabilities_macro", 88);
			LeaveRule_agentcapabilities_macro();
		}
		DebugLocation(992, 105);
		} finally { DebugExitRule(GrammarFileName, "agentcapabilities_macro"); }
		return retval;

	}
	// $ANTLR end "agentcapabilities_macro"

	partial void EnterRule_agentcapabilities_macro_status();
	partial void LeaveRule_agentcapabilities_macro_status();
	// $ANTLR start "agentcapabilities_macro_status"
	// Smi.g:993:1: agentcapabilities_macro_status : l= LOWER ;
	[GrammarRule("agentcapabilities_macro_status")]
	private AstParserRuleReturnScope<CommonTree, IToken> agentcapabilities_macro_status()
	{
		EnterRule_agentcapabilities_macro_status();
		EnterRule("agentcapabilities_macro_status", 89);
		TraceIn("agentcapabilities_macro_status", 89);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "agentcapabilities_macro_status");
		DebugLocation(993, 111);
		try
		{
			// Smi.g:993:31: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:993:33: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(993, 34);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_agentcapabilities_macro_status6989); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(994, 41);
			if (state.backtracking == 0)
			{
				if (l.Text == ("current") 
				                                                || l.Text == ("obsolete"))
				                                            {/*DOSOMETHING*/} else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("agentcapabilities_macro_status", 89);
			LeaveRule("agentcapabilities_macro_status", 89);
			LeaveRule_agentcapabilities_macro_status();
		}
		DebugLocation(996, 111);
		} finally { DebugExitRule(GrammarFileName, "agentcapabilities_macro_status"); }
		return retval;

	}
	// $ANTLR end "agentcapabilities_macro_status"

	partial void EnterRule_agentcapabilities_macro_module();
	partial void LeaveRule_agentcapabilities_macro_module();
	// $ANTLR start "agentcapabilities_macro_module"
	// Smi.g:997:1: agentcapabilities_macro_module : 'SUPPORTS' LOWER ( value )? 'INCLUDES' L_BRACE value ( COMMA value )* R_BRACE ( agentcapabilities_macro_variation )* ;
	[GrammarRule("agentcapabilities_macro_module")]
	private AstParserRuleReturnScope<CommonTree, IToken> agentcapabilities_macro_module()
	{
		EnterRule_agentcapabilities_macro_module();
		EnterRule("agentcapabilities_macro_module", 90);
		TraceIn("agentcapabilities_macro_module", 90);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal493 = default(IToken);
		IToken LOWER494 = default(IToken);
		IToken string_literal496 = default(IToken);
		IToken L_BRACE497 = default(IToken);
		IToken COMMA499 = default(IToken);
		IToken R_BRACE501 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> value495 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value498 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value500 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> agentcapabilities_macro_variation502 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree string_literal493_tree = default(CommonTree);
		CommonTree LOWER494_tree = default(CommonTree);
		CommonTree string_literal496_tree = default(CommonTree);
		CommonTree L_BRACE497_tree = default(CommonTree);
		CommonTree COMMA499_tree = default(CommonTree);
		CommonTree R_BRACE501_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "agentcapabilities_macro_module");
		DebugLocation(997, 68);
		try
		{
			// Smi.g:997:31: ( 'SUPPORTS' LOWER ( value )? 'INCLUDES' L_BRACE value ( COMMA value )* R_BRACE ( agentcapabilities_macro_variation )* )
			DebugEnterAlt(1);
			// Smi.g:997:33: 'SUPPORTS' LOWER ( value )? 'INCLUDES' L_BRACE value ( COMMA value )* R_BRACE ( agentcapabilities_macro_variation )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(997, 33);
			string_literal493=(IToken)Match(input,186,Follow._186_in_agentcapabilities_macro_module7037); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal493_tree = (CommonTree)adaptor.Create(string_literal493);
			adaptor.AddChild(root_0, string_literal493_tree);
			}
			DebugLocation(997, 44);
			LOWER494=(IToken)Match(input,LOWER,Follow._LOWER_in_agentcapabilities_macro_module7039); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LOWER494_tree = (CommonTree)adaptor.Create(LOWER494);
			adaptor.AddChild(root_0, LOWER494_tree);
			}
			DebugLocation(997, 50);
			// Smi.g:997:50: ( value )?
			int alt120=2;
			try { DebugEnterSubRule(120);
			try { DebugEnterDecision(120, false);
			int LA120_1 = input.LA(1);

			if ((LA120_1==B_STRING||LA120_1==C_STRING||LA120_1==FALSE_KW||LA120_1==H_STRING||(LA120_1>=LOWER && LA120_1<=L_BRACE)||(LA120_1>=MINUS && LA120_1<=MINUS_INFINITY_KW)||(LA120_1>=NULL_KW && LA120_1<=NUMBER)||LA120_1==PLUS_INFINITY_KW||LA120_1==TRUE_KW||LA120_1==UPPER))
			{
				alt120 = 1;
			}
			} finally { DebugExitDecision(120); }
			switch (alt120)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:997:51: value
				{
				DebugLocation(997, 51);
				PushFollow(Follow._value_in_agentcapabilities_macro_module7042);
				value495=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value495.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(120); }

			DebugLocation(998, 33);
			string_literal496=(IToken)Match(input,INCLUDES_KW,Follow._INCLUDES_KW_in_agentcapabilities_macro_module7079); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal496_tree = (CommonTree)adaptor.Create(string_literal496);
			adaptor.AddChild(root_0, string_literal496_tree);
			}
			DebugLocation(998, 44);
			L_BRACE497=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_agentcapabilities_macro_module7081); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE497_tree = (CommonTree)adaptor.Create(L_BRACE497);
			adaptor.AddChild(root_0, L_BRACE497_tree);
			}
			DebugLocation(998, 52);
			PushFollow(Follow._value_in_agentcapabilities_macro_module7083);
			value498=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, value498.Tree);
			DebugLocation(998, 58);
			// Smi.g:998:58: ( COMMA value )*
			try { DebugEnterSubRule(121);
			while (true)
			{
				int alt121=2;
				try { DebugEnterDecision(121, false);
				int LA121_1 = input.LA(1);

				if ((LA121_1==COMMA))
				{
					alt121 = 1;
				}


				} finally { DebugExitDecision(121); }
				switch ( alt121 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:998:59: COMMA value
					{
					DebugLocation(998, 59);
					COMMA499=(IToken)Match(input,COMMA,Follow._COMMA_in_agentcapabilities_macro_module7086); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA499_tree = (CommonTree)adaptor.Create(COMMA499);
					adaptor.AddChild(root_0, COMMA499_tree);
					}
					DebugLocation(998, 65);
					PushFollow(Follow._value_in_agentcapabilities_macro_module7088);
					value500=value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, value500.Tree);

					}
					break;

				default:
					goto loop121;
				}
			}

			loop121:
				;

			} finally { DebugExitSubRule(121); }

			DebugLocation(998, 73);
			R_BRACE501=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_agentcapabilities_macro_module7092); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE501_tree = (CommonTree)adaptor.Create(R_BRACE501);
			adaptor.AddChild(root_0, R_BRACE501_tree);
			}
			DebugLocation(999, 33);
			// Smi.g:999:33: ( agentcapabilities_macro_variation )*
			try { DebugEnterSubRule(122);
			while (true)
			{
				int alt122=2;
				try { DebugEnterDecision(122, false);
				int LA122_1 = input.LA(1);

				if ((LA122_1==196))
				{
					alt122 = 1;
				}


				} finally { DebugExitDecision(122); }
				switch ( alt122 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:999:34: agentcapabilities_macro_variation
					{
					DebugLocation(999, 34);
					PushFollow(Follow._agentcapabilities_macro_variation_in_agentcapabilities_macro_module7128);
					agentcapabilities_macro_variation502=agentcapabilities_macro_variation();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, agentcapabilities_macro_variation502.Tree);

					}
					break;

				default:
					goto loop122;
				}
			}

			loop122:
				;

			} finally { DebugExitSubRule(122); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("agentcapabilities_macro_module", 90);
			LeaveRule("agentcapabilities_macro_module", 90);
			LeaveRule_agentcapabilities_macro_module();
		}
		DebugLocation(999, 68);
		} finally { DebugExitRule(GrammarFileName, "agentcapabilities_macro_module"); }
		return retval;

	}
	// $ANTLR end "agentcapabilities_macro_module"

	partial void EnterRule_agentcapabilities_macro_variation();
	partial void LeaveRule_agentcapabilities_macro_variation();
	// $ANTLR start "agentcapabilities_macro_variation"
	// Smi.g:1000:1: agentcapabilities_macro_variation : 'VARIATION' value ( 'SYNTAX' agentcapabilities_macro_syntax )? ( 'WRITE-SYNTAX' agentcapabilities_macro_syntax )? ( 'ACCESS' agentcapabilities_macro_access )? ( 'CREATION-REQUIRES' L_BRACE value ( COMMA value )* R_BRACE )? ( 'DEFVAL' L_BRACE ( ( L_BRACE ( LOWER | COMMA | R_BRACE ) )=> L_BRACE ( LOWER )? ( COMMA LOWER )* R_BRACE | value ) )? 'DESCRIPTION' C_STRING ;
	[GrammarRule("agentcapabilities_macro_variation")]
	private AstParserRuleReturnScope<CommonTree, IToken> agentcapabilities_macro_variation()
	{
		EnterRule_agentcapabilities_macro_variation();
		EnterRule("agentcapabilities_macro_variation", 91);
		TraceIn("agentcapabilities_macro_variation", 91);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal503 = default(IToken);
		IToken string_literal505 = default(IToken);
		IToken string_literal507 = default(IToken);
		IToken string_literal509 = default(IToken);
		IToken string_literal511 = default(IToken);
		IToken L_BRACE512 = default(IToken);
		IToken COMMA514 = default(IToken);
		IToken R_BRACE516 = default(IToken);
		IToken string_literal517 = default(IToken);
		IToken L_BRACE518 = default(IToken);
		IToken L_BRACE519 = default(IToken);
		IToken LOWER520 = default(IToken);
		IToken COMMA521 = default(IToken);
		IToken LOWER522 = default(IToken);
		IToken R_BRACE523 = default(IToken);
		IToken string_literal525 = default(IToken);
		IToken C_STRING526 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> value504 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> agentcapabilities_macro_syntax506 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> agentcapabilities_macro_syntax508 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> agentcapabilities_macro_access510 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value513 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value515 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value524 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree string_literal503_tree = default(CommonTree);
		CommonTree string_literal505_tree = default(CommonTree);
		CommonTree string_literal507_tree = default(CommonTree);
		CommonTree string_literal509_tree = default(CommonTree);
		CommonTree string_literal511_tree = default(CommonTree);
		CommonTree L_BRACE512_tree = default(CommonTree);
		CommonTree COMMA514_tree = default(CommonTree);
		CommonTree R_BRACE516_tree = default(CommonTree);
		CommonTree string_literal517_tree = default(CommonTree);
		CommonTree L_BRACE518_tree = default(CommonTree);
		CommonTree L_BRACE519_tree = default(CommonTree);
		CommonTree LOWER520_tree = default(CommonTree);
		CommonTree COMMA521_tree = default(CommonTree);
		CommonTree LOWER522_tree = default(CommonTree);
		CommonTree R_BRACE523_tree = default(CommonTree);
		CommonTree string_literal525_tree = default(CommonTree);
		CommonTree C_STRING526_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "agentcapabilities_macro_variation");
		DebugLocation(1000, 58);
		try
		{
			// Smi.g:1000:34: ( 'VARIATION' value ( 'SYNTAX' agentcapabilities_macro_syntax )? ( 'WRITE-SYNTAX' agentcapabilities_macro_syntax )? ( 'ACCESS' agentcapabilities_macro_access )? ( 'CREATION-REQUIRES' L_BRACE value ( COMMA value )* R_BRACE )? ( 'DEFVAL' L_BRACE ( ( L_BRACE ( LOWER | COMMA | R_BRACE ) )=> L_BRACE ( LOWER )? ( COMMA LOWER )* R_BRACE | value ) )? 'DESCRIPTION' C_STRING )
			DebugEnterAlt(1);
			// Smi.g:1000:36: 'VARIATION' value ( 'SYNTAX' agentcapabilities_macro_syntax )? ( 'WRITE-SYNTAX' agentcapabilities_macro_syntax )? ( 'ACCESS' agentcapabilities_macro_access )? ( 'CREATION-REQUIRES' L_BRACE value ( COMMA value )* R_BRACE )? ( 'DEFVAL' L_BRACE ( ( L_BRACE ( LOWER | COMMA | R_BRACE ) )=> L_BRACE ( LOWER )? ( COMMA LOWER )* R_BRACE | value ) )? 'DESCRIPTION' C_STRING
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1000, 36);
			string_literal503=(IToken)Match(input,196,Follow._196_in_agentcapabilities_macro_variation7136); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal503_tree = (CommonTree)adaptor.Create(string_literal503);
			adaptor.AddChild(root_0, string_literal503_tree);
			}
			DebugLocation(1000, 48);
			PushFollow(Follow._value_in_agentcapabilities_macro_variation7138);
			value504=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, value504.Tree);
			DebugLocation(1000, 54);
			// Smi.g:1000:54: ( 'SYNTAX' agentcapabilities_macro_syntax )?
			int alt123=2;
			try { DebugEnterSubRule(123);
			try { DebugEnterDecision(123, false);
			int LA123_1 = input.LA(1);

			if ((LA123_1==187))
			{
				alt123 = 1;
			}
			} finally { DebugExitDecision(123); }
			switch (alt123)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1000:55: 'SYNTAX' agentcapabilities_macro_syntax
				{
				DebugLocation(1000, 55);
				string_literal505=(IToken)Match(input,187,Follow._187_in_agentcapabilities_macro_variation7141); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal505_tree = (CommonTree)adaptor.Create(string_literal505);
				adaptor.AddChild(root_0, string_literal505_tree);
				}
				DebugLocation(1000, 64);
				PushFollow(Follow._agentcapabilities_macro_syntax_in_agentcapabilities_macro_variation7143);
				agentcapabilities_macro_syntax506=agentcapabilities_macro_syntax();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, agentcapabilities_macro_syntax506.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(123); }

			DebugLocation(1000, 97);
			// Smi.g:1000:97: ( 'WRITE-SYNTAX' agentcapabilities_macro_syntax )?
			int alt124=2;
			try { DebugEnterSubRule(124);
			try { DebugEnterDecision(124, false);
			int LA124_1 = input.LA(1);

			if ((LA124_1==197))
			{
				alt124 = 1;
			}
			} finally { DebugExitDecision(124); }
			switch (alt124)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1000:98: 'WRITE-SYNTAX' agentcapabilities_macro_syntax
				{
				DebugLocation(1000, 98);
				string_literal507=(IToken)Match(input,197,Follow._197_in_agentcapabilities_macro_variation7148); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal507_tree = (CommonTree)adaptor.Create(string_literal507);
				adaptor.AddChild(root_0, string_literal507_tree);
				}
				DebugLocation(1000, 113);
				PushFollow(Follow._agentcapabilities_macro_syntax_in_agentcapabilities_macro_variation7150);
				agentcapabilities_macro_syntax508=agentcapabilities_macro_syntax();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, agentcapabilities_macro_syntax508.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(124); }

			DebugLocation(1000, 146);
			// Smi.g:1000:146: ( 'ACCESS' agentcapabilities_macro_access )?
			int alt125=2;
			try { DebugEnterSubRule(125);
			try { DebugEnterDecision(125, false);
			int LA125_1 = input.LA(1);

			if ((LA125_1==130))
			{
				alt125 = 1;
			}
			} finally { DebugExitDecision(125); }
			switch (alt125)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1000:147: 'ACCESS' agentcapabilities_macro_access
				{
				DebugLocation(1000, 147);
				string_literal509=(IToken)Match(input,130,Follow._130_in_agentcapabilities_macro_variation7155); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal509_tree = (CommonTree)adaptor.Create(string_literal509);
				adaptor.AddChild(root_0, string_literal509_tree);
				}
				DebugLocation(1000, 156);
				PushFollow(Follow._agentcapabilities_macro_access_in_agentcapabilities_macro_variation7157);
				agentcapabilities_macro_access510=agentcapabilities_macro_access();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, agentcapabilities_macro_access510.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(125); }

			DebugLocation(1001, 37);
			// Smi.g:1001:37: ( 'CREATION-REQUIRES' L_BRACE value ( COMMA value )* R_BRACE )?
			int alt127=2;
			try { DebugEnterSubRule(127);
			try { DebugEnterDecision(127, false);
			int LA127_1 = input.LA(1);

			if ((LA127_1==139))
			{
				alt127 = 1;
			}
			} finally { DebugExitDecision(127); }
			switch (alt127)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1001:38: 'CREATION-REQUIRES' L_BRACE value ( COMMA value )* R_BRACE
				{
				DebugLocation(1001, 38);
				string_literal511=(IToken)Match(input,139,Follow._139_in_agentcapabilities_macro_variation7199); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal511_tree = (CommonTree)adaptor.Create(string_literal511);
				adaptor.AddChild(root_0, string_literal511_tree);
				}
				DebugLocation(1001, 58);
				L_BRACE512=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_agentcapabilities_macro_variation7201); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE512_tree = (CommonTree)adaptor.Create(L_BRACE512);
				adaptor.AddChild(root_0, L_BRACE512_tree);
				}
				DebugLocation(1001, 66);
				PushFollow(Follow._value_in_agentcapabilities_macro_variation7203);
				value513=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value513.Tree);
				DebugLocation(1001, 72);
				// Smi.g:1001:72: ( COMMA value )*
				try { DebugEnterSubRule(126);
				while (true)
				{
					int alt126=2;
					try { DebugEnterDecision(126, false);
					int LA126_1 = input.LA(1);

					if ((LA126_1==COMMA))
					{
						alt126 = 1;
					}


					} finally { DebugExitDecision(126); }
					switch ( alt126 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:1001:73: COMMA value
						{
						DebugLocation(1001, 73);
						COMMA514=(IToken)Match(input,COMMA,Follow._COMMA_in_agentcapabilities_macro_variation7206); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA514_tree = (CommonTree)adaptor.Create(COMMA514);
						adaptor.AddChild(root_0, COMMA514_tree);
						}
						DebugLocation(1001, 79);
						PushFollow(Follow._value_in_agentcapabilities_macro_variation7208);
						value515=value();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, value515.Tree);

						}
						break;

					default:
						goto loop126;
					}
				}

				loop126:
					;

				} finally { DebugExitSubRule(126); }

				DebugLocation(1001, 87);
				R_BRACE516=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_agentcapabilities_macro_variation7212); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE516_tree = (CommonTree)adaptor.Create(R_BRACE516);
				adaptor.AddChild(root_0, R_BRACE516_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(127); }

			DebugLocation(1002, 37);
			// Smi.g:1002:37: ( 'DEFVAL' L_BRACE ( ( L_BRACE ( LOWER | COMMA | R_BRACE ) )=> L_BRACE ( LOWER )? ( COMMA LOWER )* R_BRACE | value ) )?
			int alt131=2;
			try { DebugEnterSubRule(131);
			try { DebugEnterDecision(131, false);
			int LA131_1 = input.LA(1);

			if ((LA131_1==140))
			{
				alt131 = 1;
			}
			} finally { DebugExitDecision(131); }
			switch (alt131)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1002:38: 'DEFVAL' L_BRACE ( ( L_BRACE ( LOWER | COMMA | R_BRACE ) )=> L_BRACE ( LOWER )? ( COMMA LOWER )* R_BRACE | value )
				{
				DebugLocation(1002, 38);
				string_literal517=(IToken)Match(input,140,Follow._140_in_agentcapabilities_macro_variation7254); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal517_tree = (CommonTree)adaptor.Create(string_literal517);
				adaptor.AddChild(root_0, string_literal517_tree);
				}
				DebugLocation(1002, 47);
				L_BRACE518=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_agentcapabilities_macro_variation7256); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE518_tree = (CommonTree)adaptor.Create(L_BRACE518);
				adaptor.AddChild(root_0, L_BRACE518_tree);
				}
				DebugLocation(1002, 55);
				// Smi.g:1002:55: ( ( L_BRACE ( LOWER | COMMA | R_BRACE ) )=> L_BRACE ( LOWER )? ( COMMA LOWER )* R_BRACE | value )
				int alt130=2;
				try { DebugEnterSubRule(130);
				try { DebugEnterDecision(130, false);
				try
				{
					alt130 = dfa130.Predict(input);
				}
				catch (NoViableAltException nvae)
				{
					DebugRecognitionException(nvae);
					throw;
				}
				} finally { DebugExitDecision(130); }
				switch (alt130)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1002:56: ( L_BRACE ( LOWER | COMMA | R_BRACE ) )=> L_BRACE ( LOWER )? ( COMMA LOWER )* R_BRACE
					{
					DebugLocation(1002, 95);
					L_BRACE519=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_agentcapabilities_macro_variation7277); if (state.failed) return retval;
					if (state.backtracking == 0) {
					L_BRACE519_tree = (CommonTree)adaptor.Create(L_BRACE519);
					adaptor.AddChild(root_0, L_BRACE519_tree);
					}
					DebugLocation(1002, 103);
					// Smi.g:1002:103: ( LOWER )?
					int alt128=2;
					try { DebugEnterSubRule(128);
					try { DebugEnterDecision(128, false);
					int LA128_1 = input.LA(1);

					if ((LA128_1==LOWER))
					{
						alt128 = 1;
					}
					} finally { DebugExitDecision(128); }
					switch (alt128)
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:1002:104: LOWER
						{
						DebugLocation(1002, 104);
						LOWER520=(IToken)Match(input,LOWER,Follow._LOWER_in_agentcapabilities_macro_variation7280); if (state.failed) return retval;
						if (state.backtracking == 0) {
						LOWER520_tree = (CommonTree)adaptor.Create(LOWER520);
						adaptor.AddChild(root_0, LOWER520_tree);
						}

						}
						break;

					}
					} finally { DebugExitSubRule(128); }

					DebugLocation(1002, 112);
					// Smi.g:1002:112: ( COMMA LOWER )*
					try { DebugEnterSubRule(129);
					while (true)
					{
						int alt129=2;
						try { DebugEnterDecision(129, false);
						int LA129_1 = input.LA(1);

						if ((LA129_1==COMMA))
						{
							alt129 = 1;
						}


						} finally { DebugExitDecision(129); }
						switch ( alt129 )
						{
						case 1:
							DebugEnterAlt(1);
							// Smi.g:1002:113: COMMA LOWER
							{
							DebugLocation(1002, 113);
							COMMA521=(IToken)Match(input,COMMA,Follow._COMMA_in_agentcapabilities_macro_variation7285); if (state.failed) return retval;
							if (state.backtracking == 0) {
							COMMA521_tree = (CommonTree)adaptor.Create(COMMA521);
							adaptor.AddChild(root_0, COMMA521_tree);
							}
							DebugLocation(1002, 119);
							LOWER522=(IToken)Match(input,LOWER,Follow._LOWER_in_agentcapabilities_macro_variation7287); if (state.failed) return retval;
							if (state.backtracking == 0) {
							LOWER522_tree = (CommonTree)adaptor.Create(LOWER522);
							adaptor.AddChild(root_0, LOWER522_tree);
							}

							}
							break;

						default:
							goto loop129;
						}
					}

					loop129:
						;

					} finally { DebugExitSubRule(129); }

					DebugLocation(1002, 127);
					R_BRACE523=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_agentcapabilities_macro_variation7291); if (state.failed) return retval;
					if (state.backtracking == 0) {
					R_BRACE523_tree = (CommonTree)adaptor.Create(R_BRACE523);
					adaptor.AddChild(root_0, R_BRACE523_tree);
					}

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// Smi.g:1002:137: value
					{
					DebugLocation(1002, 137);
					PushFollow(Follow._value_in_agentcapabilities_macro_variation7295);
					value524=value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, value524.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(130); }


				}
				break;

			}
			} finally { DebugExitSubRule(131); }

			DebugLocation(1003, 37);
			string_literal525=(IToken)Match(input,141,Follow._141_in_agentcapabilities_macro_variation7338); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal525_tree = (CommonTree)adaptor.Create(string_literal525);
			adaptor.AddChild(root_0, string_literal525_tree);
			}
			DebugLocation(1003, 51);
			C_STRING526=(IToken)Match(input,C_STRING,Follow._C_STRING_in_agentcapabilities_macro_variation7340); if (state.failed) return retval;
			if (state.backtracking == 0) {
			C_STRING526_tree = (CommonTree)adaptor.Create(C_STRING526);
			adaptor.AddChild(root_0, C_STRING526_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("agentcapabilities_macro_variation", 91);
			LeaveRule("agentcapabilities_macro_variation", 91);
			LeaveRule_agentcapabilities_macro_variation();
		}
		DebugLocation(1003, 58);
		} finally { DebugExitRule(GrammarFileName, "agentcapabilities_macro_variation"); }
		return retval;

	}
	// $ANTLR end "agentcapabilities_macro_variation"

	partial void EnterRule_agentcapabilities_macro_syntax();
	partial void LeaveRule_agentcapabilities_macro_syntax();
	// $ANTLR start "agentcapabilities_macro_syntax"
	// Smi.g:1004:1: agentcapabilities_macro_syntax : ( ( smi_type L_BRACE )=> smi_type L_BRACE agentcapabilities_macro_namedbit ( COMMA agentcapabilities_macro_namedbit )* R_BRACE | ( smi_type )=> smi_type ( smi_subtyping )? | type );
	[GrammarRule("agentcapabilities_macro_syntax")]
	private AstParserRuleReturnScope<CommonTree, IToken> agentcapabilities_macro_syntax()
	{
		EnterRule_agentcapabilities_macro_syntax();
		EnterRule("agentcapabilities_macro_syntax", 92);
		TraceIn("agentcapabilities_macro_syntax", 92);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE528 = default(IToken);
		IToken COMMA530 = default(IToken);
		IToken R_BRACE532 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> smi_type527 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> agentcapabilities_macro_namedbit529 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> agentcapabilities_macro_namedbit531 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> smi_type533 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> smi_subtyping534 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> type535 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree L_BRACE528_tree = default(CommonTree);
		CommonTree COMMA530_tree = default(CommonTree);
		CommonTree R_BRACE532_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "agentcapabilities_macro_syntax");
		DebugLocation(1004, 37);
		try
		{
			// Smi.g:1004:31: ( ( smi_type L_BRACE )=> smi_type L_BRACE agentcapabilities_macro_namedbit ( COMMA agentcapabilities_macro_namedbit )* R_BRACE | ( smi_type )=> smi_type ( smi_subtyping )? | type )
			int alt134=3;
			try { DebugEnterDecision(134, false);
			switch (input.LA(1))
			{
			case 137:
				{
				int LA134_2 = input.LA(2);

				if ((LA134_2==L_BRACE) && (EvaluatePredicate(synpred37_Smi_fragment)))
				{
					alt134 = 1;
				}
				else if ((EvaluatePredicate(synpred38_Smi_fragment)))
				{
					alt134 = 2;
				}
				else if ((true))
				{
					alt134 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 134, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case INTEGER_KW:
				{
				int LA134_2 = input.LA(2);

				if ((LA134_2==L_BRACE) && (EvaluatePredicate(synpred37_Smi_fragment)))
				{
					alt134 = 1;
				}
				else if ((EvaluatePredicate(synpred38_Smi_fragment)))
				{
					alt134 = 2;
				}
				else if ((true))
				{
					alt134 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 134, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case OCTET_KW:
				{
				int LA134_2 = input.LA(2);

				if ((LA134_2==STRING_KW))
				{
					int LA134_3 = input.LA(3);

					if ((LA134_3==L_BRACE) && (EvaluatePredicate(synpred37_Smi_fragment)))
					{
						alt134 = 1;
					}
					else if ((EvaluatePredicate(synpred38_Smi_fragment)))
					{
						alt134 = 2;
					}
					else if ((true))
					{
						alt134 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 134, 9, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 134, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case OBJECT_KW:
				{
				int LA134_2 = input.LA(2);

				if ((LA134_2==IDENTIFIER_KW))
				{
					int LA134_3 = input.LA(3);

					if ((LA134_3==L_BRACE) && (EvaluatePredicate(synpred37_Smi_fragment)))
					{
						alt134 = 1;
					}
					else if ((EvaluatePredicate(synpred38_Smi_fragment)))
					{
						alt134 = 2;
					}
					else if ((true))
					{
						alt134 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 134, 10, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 134, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case UPPER:
				{
				int LA134_2 = input.LA(2);

				if ((LA134_2==L_BRACE) && (EvaluatePredicate(synpred37_Smi_fragment)))
				{
					alt134 = 1;
				}
				else if ((EvaluatePredicate(synpred38_Smi_fragment)))
				{
					alt134 = 2;
				}
				else if ((true))
				{
					alt134 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 134, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ANY_KW:
			case BIT_KW:
			case BMP_STR_KW:
			case BOOLEAN_KW:
			case CHARACTER_KW:
			case CHOICE_KW:
			case EMBEDDED_KW:
			case ENUMERATED_KW:
			case ERROR_KW:
			case EXTERNAL_KW:
			case GENERALIZED_TIME_KW:
			case GENERAL_STR_KW:
			case GRAPHIC_STR_KW:
			case IA5_STRING_KW:
			case ISO646_STR_KW:
			case LOWER:
			case L_BRACKET:
			case NULL_KW:
			case NUMERIC_STR_KW:
			case OPERATION_KW:
			case PRINTABLE_STR_KW:
			case REAL_KW:
			case SEQUENCE_KW:
			case SET_KW:
			case T61_STR_KW:
			case TELETEX_STR_KW:
			case UNIVERSAL_STR_KW:
			case UTC_TIME_KW:
			case UTF8_STR_KW:
			case VIDEOTEX_STR_KW:
			case VISIBLE_STR_KW:
			case 131:
			case 158:
			case 159:
			case 160:
			case 161:
			case 163:
			case 164:
			case 165:
			case 179:
			case 188:
			case 191:
				{
				alt134 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 134, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(134); }
			switch (alt134)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1004:33: ( smi_type L_BRACE )=> smi_type L_BRACE agentcapabilities_macro_namedbit ( COMMA agentcapabilities_macro_namedbit )* R_BRACE
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1005, 37);
				PushFollow(Follow._smi_type_in_agentcapabilities_macro_syntax7391);
				smi_type527=smi_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, smi_type527.Tree);
				DebugLocation(1005, 46);
				L_BRACE528=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_agentcapabilities_macro_syntax7393); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE528_tree = (CommonTree)adaptor.Create(L_BRACE528);
				adaptor.AddChild(root_0, L_BRACE528_tree);
				}
				DebugLocation(1005, 54);
				PushFollow(Follow._agentcapabilities_macro_namedbit_in_agentcapabilities_macro_syntax7395);
				agentcapabilities_macro_namedbit529=agentcapabilities_macro_namedbit();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, agentcapabilities_macro_namedbit529.Tree);
				DebugLocation(1005, 87);
				// Smi.g:1005:87: ( COMMA agentcapabilities_macro_namedbit )*
				try { DebugEnterSubRule(132);
				while (true)
				{
					int alt132=2;
					try { DebugEnterDecision(132, false);
					int LA132_1 = input.LA(1);

					if ((LA132_1==COMMA))
					{
						alt132 = 1;
					}


					} finally { DebugExitDecision(132); }
					switch ( alt132 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:1005:88: COMMA agentcapabilities_macro_namedbit
						{
						DebugLocation(1005, 88);
						COMMA530=(IToken)Match(input,COMMA,Follow._COMMA_in_agentcapabilities_macro_syntax7398); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA530_tree = (CommonTree)adaptor.Create(COMMA530);
						adaptor.AddChild(root_0, COMMA530_tree);
						}
						DebugLocation(1005, 94);
						PushFollow(Follow._agentcapabilities_macro_namedbit_in_agentcapabilities_macro_syntax7400);
						agentcapabilities_macro_namedbit531=agentcapabilities_macro_namedbit();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, agentcapabilities_macro_namedbit531.Tree);

						}
						break;

					default:
						goto loop132;
					}
				}

				loop132:
					;

				} finally { DebugExitSubRule(132); }

				DebugLocation(1005, 129);
				R_BRACE532=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_agentcapabilities_macro_syntax7404); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE532_tree = (CommonTree)adaptor.Create(R_BRACE532);
				adaptor.AddChild(root_0, R_BRACE532_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1006:33: ( smi_type )=> smi_type ( smi_subtyping )?
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1006, 47);
				PushFollow(Follow._smi_type_in_agentcapabilities_macro_syntax7444);
				smi_type533=smi_type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, smi_type533.Tree);
				DebugLocation(1006, 56);
				// Smi.g:1006:56: ( smi_subtyping )?
				int alt133=2;
				try { DebugEnterSubRule(133);
				try { DebugEnterDecision(133, false);
				int LA133_1 = input.LA(1);

				if ((LA133_1==L_PAREN))
				{
					alt133 = 1;
				}
				} finally { DebugExitDecision(133); }
				switch (alt133)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1006:57: smi_subtyping
					{
					DebugLocation(1006, 57);
					PushFollow(Follow._smi_subtyping_in_agentcapabilities_macro_syntax7447);
					smi_subtyping534=smi_subtyping();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, smi_subtyping534.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(133); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:1007:33: type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1007, 33);
				PushFollow(Follow._type_in_agentcapabilities_macro_syntax7483);
				type535=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type535.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("agentcapabilities_macro_syntax", 92);
			LeaveRule("agentcapabilities_macro_syntax", 92);
			LeaveRule_agentcapabilities_macro_syntax();
		}
		DebugLocation(1007, 37);
		} finally { DebugExitRule(GrammarFileName, "agentcapabilities_macro_syntax"); }
		return retval;

	}
	// $ANTLR end "agentcapabilities_macro_syntax"

	partial void EnterRule_agentcapabilities_macro_access();
	partial void LeaveRule_agentcapabilities_macro_access();
	// $ANTLR start "agentcapabilities_macro_access"
	// Smi.g:1008:1: agentcapabilities_macro_access : l= LOWER ;
	[GrammarRule("agentcapabilities_macro_access")]
	private AstParserRuleReturnScope<CommonTree, IToken> agentcapabilities_macro_access()
	{
		EnterRule_agentcapabilities_macro_access();
		EnterRule("agentcapabilities_macro_access", 93);
		TraceIn("agentcapabilities_macro_access", 93);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken l = default(IToken);

		CommonTree l_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "agentcapabilities_macro_access");
		DebugLocation(1008, 111);
		try
		{
			// Smi.g:1008:31: (l= LOWER )
			DebugEnterAlt(1);
			// Smi.g:1008:33: l= LOWER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1008, 34);
			l=(IToken)Match(input,LOWER,Follow._LOWER_in_agentcapabilities_macro_access7492); if (state.failed) return retval;
			if (state.backtracking == 0) {
			l_tree = (CommonTree)adaptor.Create(l);
			adaptor.AddChild(root_0, l_tree);
			}
			DebugLocation(1009, 41);
			if (state.backtracking == 0)
			{
				if (l.Text == ("not-implemented") 
				                                                || l.Text == ("accessible-for-notify") 
				                                                || l.Text == ("read-only")
				                                                || l.Text == ("read-write")
				                                                || l.Text == ("read-create")
				                                                || l.Text == ("write-only"))
				                                            {/*DOSOMETHING*/} else {throw new SemanticException("(invalid)");}
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("agentcapabilities_macro_access", 93);
			LeaveRule("agentcapabilities_macro_access", 93);
			LeaveRule_agentcapabilities_macro_access();
		}
		DebugLocation(1015, 111);
		} finally { DebugExitRule(GrammarFileName, "agentcapabilities_macro_access"); }
		return retval;

	}
	// $ANTLR end "agentcapabilities_macro_access"

	partial void EnterRule_agentcapabilities_macro_namedbit();
	partial void LeaveRule_agentcapabilities_macro_namedbit();
	// $ANTLR start "agentcapabilities_macro_namedbit"
	// Smi.g:1016:1: agentcapabilities_macro_namedbit : LOWER L_PAREN NUMBER R_PAREN ;
	[GrammarRule("agentcapabilities_macro_namedbit")]
	private AstParserRuleReturnScope<CommonTree, IToken> agentcapabilities_macro_namedbit()
	{
		EnterRule_agentcapabilities_macro_namedbit();
		EnterRule("agentcapabilities_macro_namedbit", 94);
		TraceIn("agentcapabilities_macro_namedbit", 94);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken LOWER536 = default(IToken);
		IToken L_PAREN537 = default(IToken);
		IToken NUMBER538 = default(IToken);
		IToken R_PAREN539 = default(IToken);

		CommonTree LOWER536_tree = default(CommonTree);
		CommonTree L_PAREN537_tree = default(CommonTree);
		CommonTree NUMBER538_tree = default(CommonTree);
		CommonTree R_PAREN539_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "agentcapabilities_macro_namedbit");
		DebugLocation(1016, 62);
		try
		{
			// Smi.g:1016:33: ( LOWER L_PAREN NUMBER R_PAREN )
			DebugEnterAlt(1);
			// Smi.g:1016:35: LOWER L_PAREN NUMBER R_PAREN
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1016, 35);
			LOWER536=(IToken)Match(input,LOWER,Follow._LOWER_in_agentcapabilities_macro_namedbit7540); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LOWER536_tree = (CommonTree)adaptor.Create(LOWER536);
			adaptor.AddChild(root_0, LOWER536_tree);
			}
			DebugLocation(1016, 41);
			L_PAREN537=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_agentcapabilities_macro_namedbit7542); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_PAREN537_tree = (CommonTree)adaptor.Create(L_PAREN537);
			adaptor.AddChild(root_0, L_PAREN537_tree);
			}
			DebugLocation(1016, 49);
			NUMBER538=(IToken)Match(input,NUMBER,Follow._NUMBER_in_agentcapabilities_macro_namedbit7544); if (state.failed) return retval;
			if (state.backtracking == 0) {
			NUMBER538_tree = (CommonTree)adaptor.Create(NUMBER538);
			adaptor.AddChild(root_0, NUMBER538_tree);
			}
			DebugLocation(1016, 56);
			R_PAREN539=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_agentcapabilities_macro_namedbit7546); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_PAREN539_tree = (CommonTree)adaptor.Create(R_PAREN539);
			adaptor.AddChild(root_0, R_PAREN539_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("agentcapabilities_macro_namedbit", 94);
			LeaveRule("agentcapabilities_macro_namedbit", 94);
			LeaveRule_agentcapabilities_macro_namedbit();
		}
		DebugLocation(1016, 62);
		} finally { DebugExitRule(GrammarFileName, "agentcapabilities_macro_namedbit"); }
		return retval;

	}
	// $ANTLR end "agentcapabilities_macro_namedbit"

	partial void EnterRule_traptype_macro();
	partial void LeaveRule_traptype_macro();
	// $ANTLR start "traptype_macro"
	// Smi.g:1020:1: traptype_macro : 'TRAP-TYPE' 'ENTERPRISE' value ( 'VARIABLES' L_BRACE value ( COMMA value )* R_BRACE )? ( ( 'DESCRIPTION' )=> 'DESCRIPTION' value )? ( 'REFERENCE' value )? ;
	[GrammarRule("traptype_macro")]
	private AstParserRuleReturnScope<CommonTree, IToken> traptype_macro()
	{
		EnterRule_traptype_macro();
		EnterRule("traptype_macro", 95);
		TraceIn("traptype_macro", 95);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken string_literal540 = default(IToken);
		IToken string_literal541 = default(IToken);
		IToken string_literal543 = default(IToken);
		IToken L_BRACE544 = default(IToken);
		IToken COMMA546 = default(IToken);
		IToken R_BRACE548 = default(IToken);
		IToken string_literal549 = default(IToken);
		IToken string_literal551 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> value542 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value545 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value547 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value550 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value552 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree string_literal540_tree = default(CommonTree);
		CommonTree string_literal541_tree = default(CommonTree);
		CommonTree string_literal543_tree = default(CommonTree);
		CommonTree L_BRACE544_tree = default(CommonTree);
		CommonTree COMMA546_tree = default(CommonTree);
		CommonTree R_BRACE548_tree = default(CommonTree);
		CommonTree string_literal549_tree = default(CommonTree);
		CommonTree string_literal551_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "traptype_macro");
		DebugLocation(1020, 83);
		try
		{
			// Smi.g:1020:15: ( 'TRAP-TYPE' 'ENTERPRISE' value ( 'VARIABLES' L_BRACE value ( COMMA value )* R_BRACE )? ( ( 'DESCRIPTION' )=> 'DESCRIPTION' value )? ( 'REFERENCE' value )? )
			DebugEnterAlt(1);
			// Smi.g:1020:17: 'TRAP-TYPE' 'ENTERPRISE' value ( 'VARIABLES' L_BRACE value ( COMMA value )* R_BRACE )? ( ( 'DESCRIPTION' )=> 'DESCRIPTION' value )? ( 'REFERENCE' value )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1020, 17);
			string_literal540=(IToken)Match(input,191,Follow._191_in_traptype_macro7556); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal540_tree = (CommonTree)adaptor.Create(string_literal540);
			adaptor.AddChild(root_0, string_literal540_tree);
			}
			DebugLocation(1020, 29);
			string_literal541=(IToken)Match(input,144,Follow._144_in_traptype_macro7558); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal541_tree = (CommonTree)adaptor.Create(string_literal541);
			adaptor.AddChild(root_0, string_literal541_tree);
			}
			DebugLocation(1020, 42);
			PushFollow(Follow._value_in_traptype_macro7560);
			value542=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, value542.Tree);
			DebugLocation(1020, 48);
			// Smi.g:1020:48: ( 'VARIABLES' L_BRACE value ( COMMA value )* R_BRACE )?
			int alt136=2;
			try { DebugEnterSubRule(136);
			try { DebugEnterDecision(136, false);
			int LA136_1 = input.LA(1);

			if ((LA136_1==195))
			{
				alt136 = 1;
			}
			} finally { DebugExitDecision(136); }
			switch (alt136)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1020:49: 'VARIABLES' L_BRACE value ( COMMA value )* R_BRACE
				{
				DebugLocation(1020, 49);
				string_literal543=(IToken)Match(input,195,Follow._195_in_traptype_macro7563); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal543_tree = (CommonTree)adaptor.Create(string_literal543);
				adaptor.AddChild(root_0, string_literal543_tree);
				}
				DebugLocation(1020, 61);
				L_BRACE544=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_traptype_macro7565); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE544_tree = (CommonTree)adaptor.Create(L_BRACE544);
				adaptor.AddChild(root_0, L_BRACE544_tree);
				}
				DebugLocation(1020, 69);
				PushFollow(Follow._value_in_traptype_macro7567);
				value545=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value545.Tree);
				DebugLocation(1020, 75);
				// Smi.g:1020:75: ( COMMA value )*
				try { DebugEnterSubRule(135);
				while (true)
				{
					int alt135=2;
					try { DebugEnterDecision(135, false);
					int LA135_1 = input.LA(1);

					if ((LA135_1==COMMA))
					{
						alt135 = 1;
					}


					} finally { DebugExitDecision(135); }
					switch ( alt135 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:1020:76: COMMA value
						{
						DebugLocation(1020, 76);
						COMMA546=(IToken)Match(input,COMMA,Follow._COMMA_in_traptype_macro7570); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA546_tree = (CommonTree)adaptor.Create(COMMA546);
						adaptor.AddChild(root_0, COMMA546_tree);
						}
						DebugLocation(1020, 82);
						PushFollow(Follow._value_in_traptype_macro7572);
						value547=value();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, value547.Tree);

						}
						break;

					default:
						goto loop135;
					}
				}

				loop135:
					;

				} finally { DebugExitSubRule(135); }

				DebugLocation(1020, 90);
				R_BRACE548=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_traptype_macro7576); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE548_tree = (CommonTree)adaptor.Create(R_BRACE548);
				adaptor.AddChild(root_0, R_BRACE548_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(136); }

			DebugLocation(1021, 21);
			// Smi.g:1021:21: ( ( 'DESCRIPTION' )=> 'DESCRIPTION' value )?
			int alt137=2;
			try { DebugEnterSubRule(137);
			try { DebugEnterDecision(137, false);
			int LA137_1 = input.LA(1);

			if ((LA137_1==141))
			{
				int LA137_2 = input.LA(2);

				if ((LA137_2==C_STRING))
				{
					int LA137_3 = input.LA(3);

					if ((EvaluatePredicate(synpred39_Smi_fragment)))
					{
						alt137 = 1;
					}
				}
				else if ((LA137_2==TRUE_KW) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt137 = 1;
				}
				else if ((LA137_2==FALSE_KW) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt137 = 1;
				}
				else if ((LA137_2==NULL_KW) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt137 = 1;
				}
				else if ((LA137_2==UPPER) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt137 = 1;
				}
				else if ((LA137_2==LOWER) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt137 = 1;
				}
				else if ((LA137_2==MINUS) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt137 = 1;
				}
				else if ((LA137_2==NUMBER) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt137 = 1;
				}
				else if ((LA137_2==L_BRACE) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt137 = 1;
				}
				else if ((LA137_2==H_STRING) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt137 = 1;
				}
				else if ((LA137_2==B_STRING) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt137 = 1;
				}
				else if ((LA137_2==PLUS_INFINITY_KW) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt137 = 1;
				}
				else if ((LA137_2==MINUS_INFINITY_KW) && (EvaluatePredicate(synpred39_Smi_fragment)))
				{
					alt137 = 1;
				}
			}
			} finally { DebugExitDecision(137); }
			switch (alt137)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1021:22: ( 'DESCRIPTION' )=> 'DESCRIPTION' value
				{
				DebugLocation(1021, 41);
				string_literal549=(IToken)Match(input,141,Follow._141_in_traptype_macro7608); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal549_tree = (CommonTree)adaptor.Create(string_literal549);
				adaptor.AddChild(root_0, string_literal549_tree);
				}
				DebugLocation(1021, 55);
				PushFollow(Follow._value_in_traptype_macro7610);
				value550=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value550.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(137); }

			DebugLocation(1021, 63);
			// Smi.g:1021:63: ( 'REFERENCE' value )?
			int alt138=2;
			try { DebugEnterSubRule(138);
			try { DebugEnterDecision(138, false);
			int LA138_1 = input.LA(1);

			if ((LA138_1==177))
			{
				alt138 = 1;
			}
			} finally { DebugExitDecision(138); }
			switch (alt138)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1021:64: 'REFERENCE' value
				{
				DebugLocation(1021, 64);
				string_literal551=(IToken)Match(input,177,Follow._177_in_traptype_macro7615); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal551_tree = (CommonTree)adaptor.Create(string_literal551);
				adaptor.AddChild(root_0, string_literal551_tree);
				}
				DebugLocation(1021, 76);
				PushFollow(Follow._value_in_traptype_macro7617);
				value552=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value552.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(138); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("traptype_macro", 95);
			LeaveRule("traptype_macro", 95);
			LeaveRule_traptype_macro();
		}
		DebugLocation(1021, 83);
		} finally { DebugExitRule(GrammarFileName, "traptype_macro"); }
		return retval;

	}
	// $ANTLR end "traptype_macro"

	partial void EnterRule_operation_errorlist();
	partial void LeaveRule_operation_errorlist();
	// $ANTLR start "operation_errorlist"
	// Smi.g:1023:1: operation_errorlist : typeorvalue ( COMMA typeorvalue )* ;
	[GrammarRule("operation_errorlist")]
	private AstParserRuleReturnScope<CommonTree, IToken> operation_errorlist()
	{
		EnterRule_operation_errorlist();
		EnterRule("operation_errorlist", 96);
		TraceIn("operation_errorlist", 96);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMMA554 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> typeorvalue553 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> typeorvalue555 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree COMMA554_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "operation_errorlist");
		DebugLocation(1023, 54);
		try
		{
			// Smi.g:1023:20: ( typeorvalue ( COMMA typeorvalue )* )
			DebugEnterAlt(1);
			// Smi.g:1023:22: typeorvalue ( COMMA typeorvalue )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1023, 22);
			PushFollow(Follow._typeorvalue_in_operation_errorlist7627);
			typeorvalue553=typeorvalue();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, typeorvalue553.Tree);
			DebugLocation(1023, 34);
			// Smi.g:1023:34: ( COMMA typeorvalue )*
			try { DebugEnterSubRule(139);
			while (true)
			{
				int alt139=2;
				try { DebugEnterDecision(139, false);
				int LA139_1 = input.LA(1);

				if ((LA139_1==COMMA))
				{
					alt139 = 1;
				}


				} finally { DebugExitDecision(139); }
				switch ( alt139 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1023:35: COMMA typeorvalue
					{
					DebugLocation(1023, 35);
					COMMA554=(IToken)Match(input,COMMA,Follow._COMMA_in_operation_errorlist7630); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA554_tree = (CommonTree)adaptor.Create(COMMA554);
					adaptor.AddChild(root_0, COMMA554_tree);
					}
					DebugLocation(1023, 41);
					PushFollow(Follow._typeorvalue_in_operation_errorlist7632);
					typeorvalue555=typeorvalue();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, typeorvalue555.Tree);

					}
					break;

				default:
					goto loop139;
				}
			}

			loop139:
				;

			} finally { DebugExitSubRule(139); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("operation_errorlist", 96);
			LeaveRule("operation_errorlist", 96);
			LeaveRule_operation_errorlist();
		}
		DebugLocation(1023, 54);
		} finally { DebugExitRule(GrammarFileName, "operation_errorlist"); }
		return retval;

	}
	// $ANTLR end "operation_errorlist"

	partial void EnterRule_linkedOp_list();
	partial void LeaveRule_linkedOp_list();
	// $ANTLR start "linkedOp_list"
	// Smi.g:1025:1: linkedOp_list : typeorvalue ( COMMA typeorvalue )* ;
	[GrammarRule("linkedOp_list")]
	private AstParserRuleReturnScope<CommonTree, IToken> linkedOp_list()
	{
		EnterRule_linkedOp_list();
		EnterRule("linkedOp_list", 97);
		TraceIn("linkedOp_list", 97);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMMA557 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> typeorvalue556 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> typeorvalue558 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree COMMA557_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "linkedOp_list");
		DebugLocation(1025, 48);
		try
		{
			// Smi.g:1025:14: ( typeorvalue ( COMMA typeorvalue )* )
			DebugEnterAlt(1);
			// Smi.g:1025:16: typeorvalue ( COMMA typeorvalue )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1025, 16);
			PushFollow(Follow._typeorvalue_in_linkedOp_list7642);
			typeorvalue556=typeorvalue();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, typeorvalue556.Tree);
			DebugLocation(1025, 28);
			// Smi.g:1025:28: ( COMMA typeorvalue )*
			try { DebugEnterSubRule(140);
			while (true)
			{
				int alt140=2;
				try { DebugEnterDecision(140, false);
				int LA140_1 = input.LA(1);

				if ((LA140_1==COMMA))
				{
					alt140 = 1;
				}


				} finally { DebugExitDecision(140); }
				switch ( alt140 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1025:29: COMMA typeorvalue
					{
					DebugLocation(1025, 29);
					COMMA557=(IToken)Match(input,COMMA,Follow._COMMA_in_linkedOp_list7645); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA557_tree = (CommonTree)adaptor.Create(COMMA557);
					adaptor.AddChild(root_0, COMMA557_tree);
					}
					DebugLocation(1025, 35);
					PushFollow(Follow._typeorvalue_in_linkedOp_list7647);
					typeorvalue558=typeorvalue();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, typeorvalue558.Tree);

					}
					break;

				default:
					goto loop140;
				}
			}

			loop140:
				;

			} finally { DebugExitSubRule(140); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("linkedOp_list", 97);
			LeaveRule("linkedOp_list", 97);
			LeaveRule_linkedOp_list();
		}
		DebugLocation(1025, 48);
		} finally { DebugExitRule(GrammarFileName, "linkedOp_list"); }
		return retval;

	}
	// $ANTLR end "linkedOp_list"

	partial void EnterRule_typeorvalue();
	partial void LeaveRule_typeorvalue();
	// $ANTLR start "typeorvalue"
	// Smi.g:1027:1: typeorvalue : ( ( type )=> type | value );
	[GrammarRule("typeorvalue")]
	private AstParserRuleReturnScope<CommonTree, IToken> typeorvalue()
	{
		EnterRule_typeorvalue();
		EnterRule("typeorvalue", 98);
		TraceIn("typeorvalue", 98);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		AstParserRuleReturnScope<CommonTree, IToken> type559 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value560 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		try { DebugEnterRule(GrammarFileName, "typeorvalue");
		DebugLocation(1027, 35);
		try
		{
			// Smi.g:1027:12: ( ( type )=> type | value )
			int alt141=2;
			try { DebugEnterDecision(141, false);
			int LA141_1 = input.LA(1);

			if ((LA141_1==ANY_KW) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==BIT_KW) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==BOOLEAN_KW) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==CHARACTER_KW) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==BMP_STR_KW||(LA141_1>=GENERALIZED_TIME_KW && LA141_1<=GRAPHIC_STR_KW)||LA141_1==IA5_STRING_KW||LA141_1==ISO646_STR_KW||LA141_1==NUMERIC_STR_KW||LA141_1==PRINTABLE_STR_KW||LA141_1==T61_STR_KW||LA141_1==TELETEX_STR_KW||LA141_1==UNIVERSAL_STR_KW||(LA141_1>=UTC_TIME_KW && LA141_1<=VISIBLE_STR_KW)) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==CHOICE_KW) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==EMBEDDED_KW) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==ENUMERATED_KW) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==EXTERNAL_KW) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==INTEGER_KW) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==NULL_KW))
			{
				int LA141_2 = input.LA(2);

				if ((EvaluatePredicate(synpred40_Smi_fragment)))
				{
					alt141 = 1;
				}
				else if ((true))
				{
					alt141 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 141, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA141_1==OBJECT_KW) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==OCTET_KW) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==REAL_KW) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==179) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==SEQUENCE_KW) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==SET_KW) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==L_BRACKET) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==UPPER))
			{
				int LA141_2 = input.LA(2);

				if ((LA141_2==DOT))
				{
					int LA141_3 = input.LA(3);

					if ((LA141_3==UPPER) && (EvaluatePredicate(synpred40_Smi_fragment)))
					{
						alt141 = 1;
					}
					else if ((LA141_3==LOWER))
					{
						alt141 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 141, 35, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else if ((LA141_2==L_PAREN) && (EvaluatePredicate(synpred40_Smi_fragment)))
				{
					alt141 = 1;
				}
				else if ((LA141_2==COMMA) && (EvaluatePredicate(synpred40_Smi_fragment)))
				{
					alt141 = 1;
				}
				else if ((LA141_2==R_BRACE) && (EvaluatePredicate(synpred40_Smi_fragment)))
				{
					alt141 = 1;
				}
				else if ((LA141_2==EOF) && (EvaluatePredicate(synpred40_Smi_fragment)))
				{
					alt141 = 1;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 141, 19, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA141_1==LOWER))
			{
				int LA141_2 = input.LA(2);

				if ((LA141_2==LESS) && (EvaluatePredicate(synpred40_Smi_fragment)))
				{
					alt141 = 1;
				}
				else if ((LA141_2==EOF||LA141_2==B_STRING||(LA141_2>=COLON && LA141_2<=COMMA)||LA141_2==C_STRING||LA141_2==FALSE_KW||LA141_2==H_STRING||(LA141_2>=LOWER && LA141_2<=L_BRACE)||(LA141_2>=MINUS && LA141_2<=MINUS_INFINITY_KW)||(LA141_2>=NULL_KW && LA141_2<=NUMBER)||LA141_2==PLUS_INFINITY_KW||LA141_2==R_BRACE||LA141_2==TRUE_KW||LA141_2==UPPER))
				{
					alt141 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 141, 20, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA141_1==OPERATION_KW) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==ERROR_KW) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==165) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==159) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==164) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==161) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==188) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==163) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==160) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==158) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==131) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==191) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==137) && (EvaluatePredicate(synpred40_Smi_fragment)))
			{
				alt141 = 1;
			}
			else if ((LA141_1==B_STRING||LA141_1==C_STRING||LA141_1==FALSE_KW||LA141_1==H_STRING||LA141_1==L_BRACE||(LA141_1>=MINUS && LA141_1<=MINUS_INFINITY_KW)||LA141_1==NUMBER||LA141_1==PLUS_INFINITY_KW||LA141_1==TRUE_KW))
			{
				alt141 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 141, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(141); }
			switch (alt141)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1027:14: ( type )=> type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1027, 24);
				PushFollow(Follow._type_in_typeorvalue7663);
				type559=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type559.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1027:31: value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1027, 31);
				PushFollow(Follow._value_in_typeorvalue7667);
				value560=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value560.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeorvalue", 98);
			LeaveRule("typeorvalue", 98);
			LeaveRule_typeorvalue();
		}
		DebugLocation(1027, 35);
		} finally { DebugExitRule(GrammarFileName, "typeorvalue"); }
		return retval;

	}
	// $ANTLR end "typeorvalue"

	partial void EnterRule_typeorvaluelist();
	partial void LeaveRule_typeorvaluelist();
	// $ANTLR start "typeorvaluelist"
	// Smi.g:1030:1: typeorvaluelist : typeorvalue ( COMMA typeorvalue )* ;
	[GrammarRule("typeorvaluelist")]
	private AstParserRuleReturnScope<CommonTree, IToken> typeorvaluelist()
	{
		EnterRule_typeorvaluelist();
		EnterRule("typeorvaluelist", 99);
		TraceIn("typeorvaluelist", 99);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMMA562 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> typeorvalue561 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> typeorvalue563 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree COMMA562_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "typeorvaluelist");
		DebugLocation(1030, 50);
		try
		{
			// Smi.g:1030:16: ( typeorvalue ( COMMA typeorvalue )* )
			DebugEnterAlt(1);
			// Smi.g:1030:18: typeorvalue ( COMMA typeorvalue )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1030, 18);
			PushFollow(Follow._typeorvalue_in_typeorvaluelist7675);
			typeorvalue561=typeorvalue();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, typeorvalue561.Tree);
			DebugLocation(1030, 30);
			// Smi.g:1030:30: ( COMMA typeorvalue )*
			try { DebugEnterSubRule(142);
			while (true)
			{
				int alt142=2;
				try { DebugEnterDecision(142, false);
				int LA142_1 = input.LA(1);

				if ((LA142_1==COMMA))
				{
					alt142 = 1;
				}


				} finally { DebugExitDecision(142); }
				switch ( alt142 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1030:31: COMMA typeorvalue
					{
					DebugLocation(1030, 31);
					COMMA562=(IToken)Match(input,COMMA,Follow._COMMA_in_typeorvaluelist7678); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA562_tree = (CommonTree)adaptor.Create(COMMA562);
					adaptor.AddChild(root_0, COMMA562_tree);
					}
					DebugLocation(1030, 37);
					PushFollow(Follow._typeorvalue_in_typeorvaluelist7680);
					typeorvalue563=typeorvalue();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, typeorvalue563.Tree);

					}
					break;

				default:
					goto loop142;
				}
			}

			loop142:
				;

			} finally { DebugExitSubRule(142); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeorvaluelist", 99);
			LeaveRule("typeorvaluelist", 99);
			LeaveRule_typeorvaluelist();
		}
		DebugLocation(1030, 50);
		} finally { DebugExitRule(GrammarFileName, "typeorvaluelist"); }
		return retval;

	}
	// $ANTLR end "typeorvaluelist"

	partial void EnterRule_elementType();
	partial void LeaveRule_elementType();
	// $ANTLR start "elementType"
	// Smi.g:1033:1: elementType : ( LOWER ( ( L_BRACKET ( NUMBER | UPPER | LOWER ) )=> tag )? ( tag_default )? type ( OPTIONAL_KW | DEFAULT_KW value )? | COMPONENTS_KW OF_KW type );
	[GrammarRule("elementType")]
	private AstParserRuleReturnScope<CommonTree, IToken> elementType()
	{
		EnterRule_elementType();
		EnterRule("elementType", 100);
		TraceIn("elementType", 100);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken LOWER564 = default(IToken);
		IToken OPTIONAL_KW568 = default(IToken);
		IToken DEFAULT_KW569 = default(IToken);
		IToken COMPONENTS_KW571 = default(IToken);
		IToken OF_KW572 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> tag565 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> tag_default566 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> type567 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value570 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> type573 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree LOWER564_tree = default(CommonTree);
		CommonTree OPTIONAL_KW568_tree = default(CommonTree);
		CommonTree DEFAULT_KW569_tree = default(CommonTree);
		CommonTree COMPONENTS_KW571_tree = default(CommonTree);
		CommonTree OF_KW572_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "elementType");
		DebugLocation(1033, 37);
		try
		{
			// Smi.g:1033:12: ( LOWER ( ( L_BRACKET ( NUMBER | UPPER | LOWER ) )=> tag )? ( tag_default )? type ( OPTIONAL_KW | DEFAULT_KW value )? | COMPONENTS_KW OF_KW type )
			int alt146=2;
			try { DebugEnterDecision(146, false);
			int LA146_1 = input.LA(1);

			if ((LA146_1==LOWER))
			{
				alt146 = 1;
			}
			else if ((LA146_1==COMPONENTS_KW))
			{
				alt146 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 146, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(146); }
			switch (alt146)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1033:14: LOWER ( ( L_BRACKET ( NUMBER | UPPER | LOWER ) )=> tag )? ( tag_default )? type ( OPTIONAL_KW | DEFAULT_KW value )?
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1033, 14);
				LOWER564=(IToken)Match(input,LOWER,Follow._LOWER_in_elementType7692); if (state.failed) return retval;
				if (state.backtracking == 0) {
				LOWER564_tree = (CommonTree)adaptor.Create(LOWER564);
				adaptor.AddChild(root_0, LOWER564_tree);
				}
				DebugLocation(1033, 21);
				// Smi.g:1033:21: ( ( L_BRACKET ( NUMBER | UPPER | LOWER ) )=> tag )?
				int alt143=2;
				try { DebugEnterSubRule(143);
				try { DebugEnterDecision(143, false);
				int LA143_1 = input.LA(1);

				if ((LA143_1==L_BRACKET))
				{
					int LA143_2 = input.LA(2);

					if ((EvaluatePredicate(synpred41_Smi_fragment)))
					{
						alt143 = 1;
					}
				}
				} finally { DebugExitDecision(143); }
				switch (alt143)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1033:22: ( L_BRACKET ( NUMBER | UPPER | LOWER ) )=> tag
					{
					DebugLocation(1033, 58);
					PushFollow(Follow._tag_in_elementType7710);
					tag565=tag();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, tag565.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(143); }

				DebugLocation(1034, 21);
				// Smi.g:1034:21: ( tag_default )?
				int alt144=2;
				try { DebugEnterSubRule(144);
				try { DebugEnterDecision(144, false);
				int LA144_1 = input.LA(1);

				if ((LA144_1==AUTOMATIC_KW||LA144_1==EXPLICIT_KW||LA144_1==IMPLICIT_KW))
				{
					alt144 = 1;
				}
				} finally { DebugExitDecision(144); }
				switch (alt144)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1034:22: tag_default
					{
					DebugLocation(1034, 22);
					PushFollow(Follow._tag_default_in_elementType7736);
					tag_default566=tag_default();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, tag_default566.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(144); }

				DebugLocation(1034, 36);
				PushFollow(Follow._type_in_elementType7740);
				type567=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type567.Tree);
				DebugLocation(1034, 41);
				// Smi.g:1034:41: ( OPTIONAL_KW | DEFAULT_KW value )?
				int alt145=3;
				try { DebugEnterSubRule(145);
				try { DebugEnterDecision(145, false);
				int LA145_1 = input.LA(1);

				if ((LA145_1==OPTIONAL_KW))
				{
					alt145 = 1;
				}
				else if ((LA145_1==DEFAULT_KW))
				{
					alt145 = 2;
				}
				} finally { DebugExitDecision(145); }
				switch (alt145)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1034:42: OPTIONAL_KW
					{
					DebugLocation(1034, 42);
					OPTIONAL_KW568=(IToken)Match(input,OPTIONAL_KW,Follow._OPTIONAL_KW_in_elementType7743); if (state.failed) return retval;
					if (state.backtracking == 0) {
					OPTIONAL_KW568_tree = (CommonTree)adaptor.Create(OPTIONAL_KW568);
					adaptor.AddChild(root_0, OPTIONAL_KW568_tree);
					}

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// Smi.g:1034:56: DEFAULT_KW value
					{
					DebugLocation(1034, 56);
					DEFAULT_KW569=(IToken)Match(input,DEFAULT_KW,Follow._DEFAULT_KW_in_elementType7747); if (state.failed) return retval;
					if (state.backtracking == 0) {
					DEFAULT_KW569_tree = (CommonTree)adaptor.Create(DEFAULT_KW569);
					adaptor.AddChild(root_0, DEFAULT_KW569_tree);
					}
					DebugLocation(1034, 67);
					PushFollow(Follow._value_in_elementType7749);
					value570=value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, value570.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(145); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1035:14: COMPONENTS_KW OF_KW type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1035, 14);
				COMPONENTS_KW571=(IToken)Match(input,COMPONENTS_KW,Follow._COMPONENTS_KW_in_elementType7767); if (state.failed) return retval;
				if (state.backtracking == 0) {
				COMPONENTS_KW571_tree = (CommonTree)adaptor.Create(COMPONENTS_KW571);
				adaptor.AddChild(root_0, COMPONENTS_KW571_tree);
				}
				DebugLocation(1035, 28);
				OF_KW572=(IToken)Match(input,OF_KW,Follow._OF_KW_in_elementType7769); if (state.failed) return retval;
				if (state.backtracking == 0) {
				OF_KW572_tree = (CommonTree)adaptor.Create(OF_KW572);
				adaptor.AddChild(root_0, OF_KW572_tree);
				}
				DebugLocation(1035, 34);
				PushFollow(Follow._type_in_elementType7771);
				type573=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type573.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("elementType", 100);
			LeaveRule("elementType", 100);
			LeaveRule_elementType();
		}
		DebugLocation(1035, 37);
		} finally { DebugExitRule(GrammarFileName, "elementType"); }
		return retval;

	}
	// $ANTLR end "elementType"

	partial void EnterRule_namedNumber();
	partial void LeaveRule_namedNumber();
	// $ANTLR start "namedNumber"
	// Smi.g:1039:1: namedNumber : LOWER L_PAREN ( signed_number | defined_value ) R_PAREN ;
	[GrammarRule("namedNumber")]
	private AstParserRuleReturnScope<CommonTree, IToken> namedNumber()
	{
		EnterRule_namedNumber();
		EnterRule("namedNumber", 101);
		TraceIn("namedNumber", 101);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken LOWER574 = default(IToken);
		IToken L_PAREN575 = default(IToken);
		IToken R_PAREN578 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> signed_number576 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> defined_value577 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree LOWER574_tree = default(CommonTree);
		CommonTree L_PAREN575_tree = default(CommonTree);
		CommonTree R_PAREN578_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "namedNumber");
		DebugLocation(1039, 66);
		try
		{
			// Smi.g:1039:12: ( LOWER L_PAREN ( signed_number | defined_value ) R_PAREN )
			DebugEnterAlt(1);
			// Smi.g:1039:14: LOWER L_PAREN ( signed_number | defined_value ) R_PAREN
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1039, 14);
			LOWER574=(IToken)Match(input,LOWER,Follow._LOWER_in_namedNumber7780); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LOWER574_tree = (CommonTree)adaptor.Create(LOWER574);
			adaptor.AddChild(root_0, LOWER574_tree);
			}
			DebugLocation(1039, 20);
			L_PAREN575=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_namedNumber7782); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_PAREN575_tree = (CommonTree)adaptor.Create(L_PAREN575);
			adaptor.AddChild(root_0, L_PAREN575_tree);
			}
			DebugLocation(1039, 28);
			// Smi.g:1039:28: ( signed_number | defined_value )
			int alt147=2;
			try { DebugEnterSubRule(147);
			try { DebugEnterDecision(147, false);
			int LA147_1 = input.LA(1);

			if ((LA147_1==MINUS||LA147_1==NUMBER))
			{
				alt147 = 1;
			}
			else if ((LA147_1==LOWER||LA147_1==UPPER))
			{
				alt147 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 147, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(147); }
			switch (alt147)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1039:29: signed_number
				{
				DebugLocation(1039, 29);
				PushFollow(Follow._signed_number_in_namedNumber7785);
				signed_number576=signed_number();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, signed_number576.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1039:45: defined_value
				{
				DebugLocation(1039, 45);
				PushFollow(Follow._defined_value_in_namedNumber7789);
				defined_value577=defined_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, defined_value577.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(147); }

			DebugLocation(1039, 60);
			R_PAREN578=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_namedNumber7792); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_PAREN578_tree = (CommonTree)adaptor.Create(R_PAREN578);
			adaptor.AddChild(root_0, R_PAREN578_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("namedNumber", 101);
			LeaveRule("namedNumber", 101);
			LeaveRule_namedNumber();
		}
		DebugLocation(1039, 66);
		} finally { DebugExitRule(GrammarFileName, "namedNumber"); }
		return retval;

	}
	// $ANTLR end "namedNumber"

	partial void EnterRule_signed_number();
	partial void LeaveRule_signed_number();
	// $ANTLR start "signed_number"
	// Smi.g:1041:1: signed_number : ( MINUS )? NUMBER ;
	[GrammarRule("signed_number")]
	private AstParserRuleReturnScope<CommonTree, IToken> signed_number()
	{
		EnterRule_signed_number();
		EnterRule("signed_number", 102);
		TraceIn("signed_number", 102);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken MINUS579 = default(IToken);
		IToken NUMBER580 = default(IToken);

		CommonTree MINUS579_tree = default(CommonTree);
		CommonTree NUMBER580_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "signed_number");
		DebugLocation(1041, 30);
		try
		{
			// Smi.g:1041:14: ( ( MINUS )? NUMBER )
			DebugEnterAlt(1);
			// Smi.g:1041:16: ( MINUS )? NUMBER
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1041, 16);
			// Smi.g:1041:16: ( MINUS )?
			int alt148=2;
			try { DebugEnterSubRule(148);
			try { DebugEnterDecision(148, false);
			int LA148_1 = input.LA(1);

			if ((LA148_1==MINUS))
			{
				alt148 = 1;
			}
			} finally { DebugExitDecision(148); }
			switch (alt148)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1041:17: MINUS
				{
				DebugLocation(1041, 17);
				MINUS579=(IToken)Match(input,MINUS,Follow._MINUS_in_signed_number7800); if (state.failed) return retval;
				if (state.backtracking == 0) {
				MINUS579_tree = (CommonTree)adaptor.Create(MINUS579);
				adaptor.AddChild(root_0, MINUS579_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(148); }

			DebugLocation(1041, 25);
			NUMBER580=(IToken)Match(input,NUMBER,Follow._NUMBER_in_signed_number7804); if (state.failed) return retval;
			if (state.backtracking == 0) {
			NUMBER580_tree = (CommonTree)adaptor.Create(NUMBER580);
			adaptor.AddChild(root_0, NUMBER580_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("signed_number", 102);
			LeaveRule("signed_number", 102);
			LeaveRule_signed_number();
		}
		DebugLocation(1041, 30);
		} finally { DebugExitRule(GrammarFileName, "signed_number"); }
		return retval;

	}
	// $ANTLR end "signed_number"

	partial void EnterRule_element_set_specs();
	partial void LeaveRule_element_set_specs();
	// $ANTLR start "element_set_specs"
	// Smi.g:1043:1: element_set_specs : element_set_spec ( COMMA DOTDOTDOT )? ( COMMA element_set_spec )? ;
	[GrammarRule("element_set_specs")]
	private AstParserRuleReturnScope<CommonTree, IToken> element_set_specs()
	{
		EnterRule_element_set_specs();
		EnterRule("element_set_specs", 103);
		TraceIn("element_set_specs", 103);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMMA582 = default(IToken);
		IToken DOTDOTDOT583 = default(IToken);
		IToken COMMA584 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> element_set_spec581 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> element_set_spec585 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree COMMA582_tree = default(CommonTree);
		CommonTree DOTDOTDOT583_tree = default(CommonTree);
		CommonTree COMMA584_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "element_set_specs");
		DebugLocation(1043, 81);
		try
		{
			// Smi.g:1043:18: ( element_set_spec ( COMMA DOTDOTDOT )? ( COMMA element_set_spec )? )
			DebugEnterAlt(1);
			// Smi.g:1043:20: element_set_spec ( COMMA DOTDOTDOT )? ( COMMA element_set_spec )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1043, 20);
			PushFollow(Follow._element_set_spec_in_element_set_specs7811);
			element_set_spec581=element_set_spec();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, element_set_spec581.Tree);
			DebugLocation(1043, 37);
			// Smi.g:1043:37: ( COMMA DOTDOTDOT )?
			int alt149=2;
			try { DebugEnterSubRule(149);
			try { DebugEnterDecision(149, false);
			int LA149_1 = input.LA(1);

			if ((LA149_1==COMMA))
			{
				int LA149_2 = input.LA(2);

				if ((LA149_2==DOTDOTDOT))
				{
					alt149 = 1;
				}
			}
			} finally { DebugExitDecision(149); }
			switch (alt149)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1043:38: COMMA DOTDOTDOT
				{
				DebugLocation(1043, 38);
				COMMA582=(IToken)Match(input,COMMA,Follow._COMMA_in_element_set_specs7814); if (state.failed) return retval;
				if (state.backtracking == 0) {
				COMMA582_tree = (CommonTree)adaptor.Create(COMMA582);
				adaptor.AddChild(root_0, COMMA582_tree);
				}
				DebugLocation(1043, 44);
				DOTDOTDOT583=(IToken)Match(input,DOTDOTDOT,Follow._DOTDOTDOT_in_element_set_specs7816); if (state.failed) return retval;
				if (state.backtracking == 0) {
				DOTDOTDOT583_tree = (CommonTree)adaptor.Create(DOTDOTDOT583);
				adaptor.AddChild(root_0, DOTDOTDOT583_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(149); }

			DebugLocation(1043, 56);
			// Smi.g:1043:56: ( COMMA element_set_spec )?
			int alt150=2;
			try { DebugEnterSubRule(150);
			try { DebugEnterDecision(150, false);
			int LA150_1 = input.LA(1);

			if ((LA150_1==COMMA))
			{
				alt150 = 1;
			}
			} finally { DebugExitDecision(150); }
			switch (alt150)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1043:57: COMMA element_set_spec
				{
				DebugLocation(1043, 57);
				COMMA584=(IToken)Match(input,COMMA,Follow._COMMA_in_element_set_specs7821); if (state.failed) return retval;
				if (state.backtracking == 0) {
				COMMA584_tree = (CommonTree)adaptor.Create(COMMA584);
				adaptor.AddChild(root_0, COMMA584_tree);
				}
				DebugLocation(1043, 63);
				PushFollow(Follow._element_set_spec_in_element_set_specs7823);
				element_set_spec585=element_set_spec();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, element_set_spec585.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(150); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("element_set_specs", 103);
			LeaveRule("element_set_specs", 103);
			LeaveRule_element_set_specs();
		}
		DebugLocation(1043, 81);
		} finally { DebugExitRule(GrammarFileName, "element_set_specs"); }
		return retval;

	}
	// $ANTLR end "element_set_specs"

	partial void EnterRule_exception_spec();
	partial void LeaveRule_exception_spec();
	// $ANTLR start "exception_spec"
	// Smi.g:1045:1: exception_spec : EXCLAMATION ( ( signed_number )=> signed_number | ( defined_value )=> defined_value | type COLON value ) ;
	[GrammarRule("exception_spec")]
	private AstParserRuleReturnScope<CommonTree, IToken> exception_spec()
	{
		EnterRule_exception_spec();
		EnterRule("exception_spec", 104);
		TraceIn("exception_spec", 104);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken EXCLAMATION586 = default(IToken);
		IToken COLON590 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> signed_number587 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> defined_value588 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> type589 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value591 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree EXCLAMATION586_tree = default(CommonTree);
		CommonTree COLON590_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "exception_spec");
		DebugLocation(1045, 17);
		try
		{
			// Smi.g:1045:15: ( EXCLAMATION ( ( signed_number )=> signed_number | ( defined_value )=> defined_value | type COLON value ) )
			DebugEnterAlt(1);
			// Smi.g:1045:17: EXCLAMATION ( ( signed_number )=> signed_number | ( defined_value )=> defined_value | type COLON value )
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1045, 17);
			EXCLAMATION586=(IToken)Match(input,EXCLAMATION,Follow._EXCLAMATION_in_exception_spec7833); if (state.failed) return retval;
			if (state.backtracking == 0) {
			EXCLAMATION586_tree = (CommonTree)adaptor.Create(EXCLAMATION586);
			adaptor.AddChild(root_0, EXCLAMATION586_tree);
			}
			DebugLocation(1046, 17);
			// Smi.g:1046:17: ( ( signed_number )=> signed_number | ( defined_value )=> defined_value | type COLON value )
			int alt151=3;
			try { DebugEnterSubRule(151);
			try { DebugEnterDecision(151, false);
			int LA151_1 = input.LA(1);

			if ((LA151_1==MINUS) && (EvaluatePredicate(synpred42_Smi_fragment)))
			{
				alt151 = 1;
			}
			else if ((LA151_1==NUMBER) && (EvaluatePredicate(synpred42_Smi_fragment)))
			{
				alt151 = 1;
			}
			else if ((LA151_1==UPPER))
			{
				int LA151_2 = input.LA(2);

				if ((LA151_2==DOT))
				{
					int LA151_3 = input.LA(3);

					if ((LA151_3==LOWER) && (EvaluatePredicate(synpred43_Smi_fragment)))
					{
						alt151 = 2;
					}
					else if ((LA151_3==UPPER))
					{
						alt151 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 151, 6, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else if ((LA151_2==COLON||LA151_2==L_PAREN))
				{
					alt151 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 151, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA151_1==LOWER))
			{
				int LA151_2 = input.LA(2);

				if ((LA151_2==LESS))
				{
					alt151 = 3;
				}
				else if ((LA151_2==R_PAREN) && (EvaluatePredicate(synpred43_Smi_fragment)))
				{
					alt151 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 151, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA151_1==ANY_KW||(LA151_1>=BIT_KW && LA151_1<=BOOLEAN_KW)||LA151_1==CHARACTER_KW||LA151_1==CHOICE_KW||LA151_1==EMBEDDED_KW||LA151_1==ENUMERATED_KW||LA151_1==ERROR_KW||LA151_1==EXTERNAL_KW||(LA151_1>=GENERALIZED_TIME_KW && LA151_1<=GRAPHIC_STR_KW)||LA151_1==IA5_STRING_KW||LA151_1==INTEGER_KW||LA151_1==ISO646_STR_KW||LA151_1==L_BRACKET||LA151_1==NULL_KW||LA151_1==NUMERIC_STR_KW||(LA151_1>=OBJECT_KW && LA151_1<=OCTET_KW)||LA151_1==OPERATION_KW||LA151_1==PRINTABLE_STR_KW||LA151_1==REAL_KW||(LA151_1>=SEQUENCE_KW && LA151_1<=SET_KW)||LA151_1==T61_STR_KW||LA151_1==TELETEX_STR_KW||LA151_1==UNIVERSAL_STR_KW||(LA151_1>=UTC_TIME_KW && LA151_1<=VISIBLE_STR_KW)||LA151_1==131||LA151_1==137||(LA151_1>=158 && LA151_1<=161)||(LA151_1>=163 && LA151_1<=165)||LA151_1==179||LA151_1==188||LA151_1==191))
			{
				alt151 = 3;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 151, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(151); }
			switch (alt151)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1046:19: ( signed_number )=> signed_number
				{
				DebugLocation(1046, 38);
				PushFollow(Follow._signed_number_in_exception_spec7860);
				signed_number587=signed_number();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, signed_number587.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1047:21: ( defined_value )=> defined_value
				{
				DebugLocation(1047, 40);
				PushFollow(Follow._defined_value_in_exception_spec7889);
				defined_value588=defined_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, defined_value588.Tree);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:1048:21: type COLON value
				{
				DebugLocation(1048, 21);
				PushFollow(Follow._type_in_exception_spec7912);
				type589=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type589.Tree);
				DebugLocation(1048, 26);
				COLON590=(IToken)Match(input,COLON,Follow._COLON_in_exception_spec7914); if (state.failed) return retval;
				if (state.backtracking == 0) {
				COLON590_tree = (CommonTree)adaptor.Create(COLON590);
				adaptor.AddChild(root_0, COLON590_tree);
				}
				DebugLocation(1048, 32);
				PushFollow(Follow._value_in_exception_spec7916);
				value591=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value591.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(151); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("exception_spec", 104);
			LeaveRule("exception_spec", 104);
			LeaveRule_exception_spec();
		}
		DebugLocation(1049, 17);
		} finally { DebugExitRule(GrammarFileName, "exception_spec"); }
		return retval;

	}
	// $ANTLR end "exception_spec"

	partial void EnterRule_element_set_spec();
	partial void LeaveRule_element_set_spec();
	// $ANTLR start "element_set_spec"
	// Smi.g:1051:1: element_set_spec : ( intersections ( ( BAR | UNION_KW ) intersections )* | ALL_KW EXCEPT_KW constraint_elements );
	[GrammarRule("element_set_spec")]
	private AstParserRuleReturnScope<CommonTree, IToken> element_set_spec()
	{
		EnterRule_element_set_spec();
		EnterRule("element_set_spec", 105);
		TraceIn("element_set_spec", 105);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken set593 = default(IToken);
		IToken ALL_KW595 = default(IToken);
		IToken EXCEPT_KW596 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> intersections592 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> intersections594 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> constraint_elements597 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree set593_tree = default(CommonTree);
		CommonTree ALL_KW595_tree = default(CommonTree);
		CommonTree EXCEPT_KW596_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "element_set_spec");
		DebugLocation(1051, 54);
		try
		{
			// Smi.g:1051:17: ( intersections ( ( BAR | UNION_KW ) intersections )* | ALL_KW EXCEPT_KW constraint_elements )
			int alt153=2;
			try { DebugEnterDecision(153, false);
			int LA153_1 = input.LA(1);

			if ((LA153_1==ANY_KW||(LA153_1>=BIT_KW && LA153_1<=BOOLEAN_KW)||(LA153_1>=B_STRING && LA153_1<=CHARACTER_KW)||LA153_1==CHOICE_KW||LA153_1==C_STRING||LA153_1==EMBEDDED_KW||LA153_1==ENUMERATED_KW||LA153_1==ERROR_KW||(LA153_1>=EXTERNAL_KW && LA153_1<=GRAPHIC_STR_KW)||(LA153_1>=H_STRING && LA153_1<=IA5_STRING_KW)||LA153_1==INCLUDES_KW||LA153_1==INTEGER_KW||LA153_1==ISO646_STR_KW||(LA153_1>=LOWER && LA153_1<=L_PAREN)||(LA153_1>=MINUS && LA153_1<=NUMERIC_STR_KW)||(LA153_1>=OBJECT_KW && LA153_1<=OCTET_KW)||LA153_1==OPERATION_KW||LA153_1==PATTERN_KW||LA153_1==PLUS_INFINITY_KW||LA153_1==PRINTABLE_STR_KW||LA153_1==REAL_KW||(LA153_1>=SEQUENCE_KW && LA153_1<=SET_KW)||LA153_1==SIZE_KW||LA153_1==T61_STR_KW||(LA153_1>=TELETEX_STR_KW && LA153_1<=TRUE_KW)||(LA153_1>=UNIVERSAL_STR_KW && LA153_1<=WITH_KW)||LA153_1==131||LA153_1==137||(LA153_1>=158 && LA153_1<=161)||(LA153_1>=163 && LA153_1<=165)||LA153_1==179||LA153_1==188||LA153_1==191))
			{
				alt153 = 1;
			}
			else if ((LA153_1==ALL_KW))
			{
				alt153 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 153, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(153); }
			switch (alt153)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1051:19: intersections ( ( BAR | UNION_KW ) intersections )*
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1051, 19);
				PushFollow(Follow._intersections_in_element_set_spec7941);
				intersections592=intersections();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, intersections592.Tree);
				DebugLocation(1051, 33);
				// Smi.g:1051:33: ( ( BAR | UNION_KW ) intersections )*
				try { DebugEnterSubRule(152);
				while (true)
				{
					int alt152=2;
					try { DebugEnterDecision(152, false);
					int LA152_1 = input.LA(1);

					if ((LA152_1==BAR||LA152_1==UNION_KW))
					{
						alt152 = 1;
					}


					} finally { DebugExitDecision(152); }
					switch ( alt152 )
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:1051:35: ( BAR | UNION_KW ) intersections
						{
						DebugLocation(1051, 35);

						set593=(IToken)input.LT(1);
						if (input.LA(1)==BAR||input.LA(1)==UNION_KW)
						{
							input.Consume();
							if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set593));
							state.errorRecovery=false;state.failed=false;
						}
						else
						{
							if (state.backtracking>0) {state.failed=true; return retval;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							DebugRecognitionException(mse);
							throw mse;
						}

						DebugLocation(1051, 52);
						PushFollow(Follow._intersections_in_element_set_spec7953);
						intersections594=intersections();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, intersections594.Tree);

						}
						break;

					default:
						goto loop152;
					}
				}

				loop152:
					;

				} finally { DebugExitSubRule(152); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1052:19: ALL_KW EXCEPT_KW constraint_elements
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1052, 19);
				ALL_KW595=(IToken)Match(input,ALL_KW,Follow._ALL_KW_in_element_set_spec7977); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ALL_KW595_tree = (CommonTree)adaptor.Create(ALL_KW595);
				adaptor.AddChild(root_0, ALL_KW595_tree);
				}
				DebugLocation(1052, 26);
				EXCEPT_KW596=(IToken)Match(input,EXCEPT_KW,Follow._EXCEPT_KW_in_element_set_spec7979); if (state.failed) return retval;
				if (state.backtracking == 0) {
				EXCEPT_KW596_tree = (CommonTree)adaptor.Create(EXCEPT_KW596);
				adaptor.AddChild(root_0, EXCEPT_KW596_tree);
				}
				DebugLocation(1052, 36);
				PushFollow(Follow._constraint_elements_in_element_set_spec7981);
				constraint_elements597=constraint_elements();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constraint_elements597.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("element_set_spec", 105);
			LeaveRule("element_set_spec", 105);
			LeaveRule_element_set_spec();
		}
		DebugLocation(1052, 54);
		} finally { DebugExitRule(GrammarFileName, "element_set_spec"); }
		return retval;

	}
	// $ANTLR end "element_set_spec"

	partial void EnterRule_intersections();
	partial void LeaveRule_intersections();
	// $ANTLR start "intersections"
	// Smi.g:1054:1: intersections : constraint_elements ( EXCEPT_KW constraint_elements )? ( ( INTERSECTION | INTERSECTION_KW ) constraint_elements ( EXCEPT_KW constraint_elements )? )* ;
	[GrammarRule("intersections")]
	private AstParserRuleReturnScope<CommonTree, IToken> intersections()
	{
		EnterRule_intersections();
		EnterRule("intersections", 106);
		TraceIn("intersections", 106);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken EXCEPT_KW599 = default(IToken);
		IToken set601 = default(IToken);
		IToken EXCEPT_KW603 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> constraint_elements598 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> constraint_elements600 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> constraint_elements602 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> constraint_elements604 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree EXCEPT_KW599_tree = default(CommonTree);
		CommonTree set601_tree = default(CommonTree);
		CommonTree EXCEPT_KW603_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "intersections");
		DebugLocation(1054, 107);
		try
		{
			// Smi.g:1054:14: ( constraint_elements ( EXCEPT_KW constraint_elements )? ( ( INTERSECTION | INTERSECTION_KW ) constraint_elements ( EXCEPT_KW constraint_elements )? )* )
			DebugEnterAlt(1);
			// Smi.g:1054:16: constraint_elements ( EXCEPT_KW constraint_elements )? ( ( INTERSECTION | INTERSECTION_KW ) constraint_elements ( EXCEPT_KW constraint_elements )? )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1054, 16);
			PushFollow(Follow._constraint_elements_in_intersections7988);
			constraint_elements598=constraint_elements();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, constraint_elements598.Tree);
			DebugLocation(1054, 36);
			// Smi.g:1054:36: ( EXCEPT_KW constraint_elements )?
			int alt154=2;
			try { DebugEnterSubRule(154);
			try { DebugEnterDecision(154, false);
			int LA154_1 = input.LA(1);

			if ((LA154_1==EXCEPT_KW))
			{
				alt154 = 1;
			}
			} finally { DebugExitDecision(154); }
			switch (alt154)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1054:37: EXCEPT_KW constraint_elements
				{
				DebugLocation(1054, 37);
				EXCEPT_KW599=(IToken)Match(input,EXCEPT_KW,Follow._EXCEPT_KW_in_intersections7991); if (state.failed) return retval;
				if (state.backtracking == 0) {
				EXCEPT_KW599_tree = (CommonTree)adaptor.Create(EXCEPT_KW599);
				adaptor.AddChild(root_0, EXCEPT_KW599_tree);
				}
				DebugLocation(1054, 47);
				PushFollow(Follow._constraint_elements_in_intersections7993);
				constraint_elements600=constraint_elements();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constraint_elements600.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(154); }

			DebugLocation(1055, 17);
			// Smi.g:1055:17: ( ( INTERSECTION | INTERSECTION_KW ) constraint_elements ( EXCEPT_KW constraint_elements )? )*
			try { DebugEnterSubRule(156);
			while (true)
			{
				int alt156=2;
				try { DebugEnterDecision(156, false);
				int LA156_1 = input.LA(1);

				if (((LA156_1>=INTERSECTION && LA156_1<=INTERSECTION_KW)))
				{
					alt156 = 1;
				}


				} finally { DebugExitDecision(156); }
				switch ( alt156 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1055:19: ( INTERSECTION | INTERSECTION_KW ) constraint_elements ( EXCEPT_KW constraint_elements )?
					{
					DebugLocation(1055, 19);

					set601=(IToken)input.LT(1);
					if ((input.LA(1)>=INTERSECTION && input.LA(1)<=INTERSECTION_KW))
					{
						input.Consume();
						if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set601));
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(1055, 52);
					PushFollow(Follow._constraint_elements_in_intersections8024);
					constraint_elements602=constraint_elements();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, constraint_elements602.Tree);
					DebugLocation(1055, 72);
					// Smi.g:1055:72: ( EXCEPT_KW constraint_elements )?
					int alt155=2;
					try { DebugEnterSubRule(155);
					try { DebugEnterDecision(155, false);
					int LA155_1 = input.LA(1);

					if ((LA155_1==EXCEPT_KW))
					{
						alt155 = 1;
					}
					} finally { DebugExitDecision(155); }
					switch (alt155)
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:1055:73: EXCEPT_KW constraint_elements
						{
						DebugLocation(1055, 73);
						EXCEPT_KW603=(IToken)Match(input,EXCEPT_KW,Follow._EXCEPT_KW_in_intersections8027); if (state.failed) return retval;
						if (state.backtracking == 0) {
						EXCEPT_KW603_tree = (CommonTree)adaptor.Create(EXCEPT_KW603);
						adaptor.AddChild(root_0, EXCEPT_KW603_tree);
						}
						DebugLocation(1055, 83);
						PushFollow(Follow._constraint_elements_in_intersections8029);
						constraint_elements604=constraint_elements();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, constraint_elements604.Tree);

						}
						break;

					}
					} finally { DebugExitSubRule(155); }


					}
					break;

				default:
					goto loop156;
				}
			}

			loop156:
				;

			} finally { DebugExitSubRule(156); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("intersections", 106);
			LeaveRule("intersections", 106);
			LeaveRule_intersections();
		}
		DebugLocation(1055, 107);
		} finally { DebugExitRule(GrammarFileName, "intersections"); }
		return retval;

	}
	// $ANTLR end "intersections"

	partial void EnterRule_constraint_elements();
	partial void LeaveRule_constraint_elements();
	// $ANTLR start "constraint_elements"
	// Smi.g:1057:1: constraint_elements : ( ( value_range )=> value_range | ( value )=> value | SIZE_KW constraint | FROM_KW constraint | L_PAREN element_set_spec R_PAREN | ( INCLUDES_KW )? type | PATTERN_KW value | WITH_KW ( COMPONENT_KW constraint | COMPONENTS_KW L_BRACE ( DOTDOTDOT COMMA )? type_constraint_list R_BRACE ) );
	[GrammarRule("constraint_elements")]
	private AstParserRuleReturnScope<CommonTree, IToken> constraint_elements()
	{
		EnterRule_constraint_elements();
		EnterRule("constraint_elements", 107);
		TraceIn("constraint_elements", 107);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken SIZE_KW607 = default(IToken);
		IToken FROM_KW609 = default(IToken);
		IToken L_PAREN611 = default(IToken);
		IToken R_PAREN613 = default(IToken);
		IToken INCLUDES_KW614 = default(IToken);
		IToken PATTERN_KW616 = default(IToken);
		IToken WITH_KW618 = default(IToken);
		IToken COMPONENT_KW619 = default(IToken);
		IToken COMPONENTS_KW621 = default(IToken);
		IToken L_BRACE622 = default(IToken);
		IToken DOTDOTDOT623 = default(IToken);
		IToken COMMA624 = default(IToken);
		IToken R_BRACE626 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> value_range605 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value606 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> constraint608 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> constraint610 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> element_set_spec612 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> type615 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value617 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> constraint620 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> type_constraint_list625 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree SIZE_KW607_tree = default(CommonTree);
		CommonTree FROM_KW609_tree = default(CommonTree);
		CommonTree L_PAREN611_tree = default(CommonTree);
		CommonTree R_PAREN613_tree = default(CommonTree);
		CommonTree INCLUDES_KW614_tree = default(CommonTree);
		CommonTree PATTERN_KW616_tree = default(CommonTree);
		CommonTree WITH_KW618_tree = default(CommonTree);
		CommonTree COMPONENT_KW619_tree = default(CommonTree);
		CommonTree COMPONENTS_KW621_tree = default(CommonTree);
		CommonTree L_BRACE622_tree = default(CommonTree);
		CommonTree DOTDOTDOT623_tree = default(CommonTree);
		CommonTree COMMA624_tree = default(CommonTree);
		CommonTree R_BRACE626_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "constraint_elements");
		DebugLocation(1057, 61);
		try
		{
			// Smi.g:1057:20: ( ( value_range )=> value_range | ( value )=> value | SIZE_KW constraint | FROM_KW constraint | L_PAREN element_set_spec R_PAREN | ( INCLUDES_KW )? type | PATTERN_KW value | WITH_KW ( COMPONENT_KW constraint | COMPONENTS_KW L_BRACE ( DOTDOTDOT COMMA )? type_constraint_list R_BRACE ) )
			int alt160=8;
			try { DebugEnterDecision(160, false);
			int LA160_1 = input.LA(1);

			if ((LA160_1==TRUE_KW))
			{
				int LA160_2 = input.LA(2);

				if ((EvaluatePredicate(synpred44_Smi_fragment)))
				{
					alt160 = 1;
				}
				else if ((EvaluatePredicate(synpred45_Smi_fragment)))
				{
					alt160 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 160, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA160_1==FALSE_KW))
			{
				int LA160_2 = input.LA(2);

				if ((EvaluatePredicate(synpred44_Smi_fragment)))
				{
					alt160 = 1;
				}
				else if ((EvaluatePredicate(synpred45_Smi_fragment)))
				{
					alt160 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 160, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA160_1==NULL_KW))
			{
				int LA160_2 = input.LA(2);

				if ((EvaluatePredicate(synpred44_Smi_fragment)))
				{
					alt160 = 1;
				}
				else if ((EvaluatePredicate(synpred45_Smi_fragment)))
				{
					alt160 = 2;
				}
				else if ((true))
				{
					alt160 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 160, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA160_1==C_STRING))
			{
				int LA160_2 = input.LA(2);

				if ((EvaluatePredicate(synpred44_Smi_fragment)))
				{
					alt160 = 1;
				}
				else if ((EvaluatePredicate(synpred45_Smi_fragment)))
				{
					alt160 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 160, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA160_1==UPPER))
			{
				int LA160_2 = input.LA(2);

				if ((EvaluatePredicate(synpred44_Smi_fragment)))
				{
					alt160 = 1;
				}
				else if ((EvaluatePredicate(synpred45_Smi_fragment)))
				{
					alt160 = 2;
				}
				else if ((true))
				{
					alt160 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 160, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA160_1==LOWER))
			{
				int LA160_2 = input.LA(2);

				if ((EvaluatePredicate(synpred44_Smi_fragment)))
				{
					alt160 = 1;
				}
				else if ((EvaluatePredicate(synpred45_Smi_fragment)))
				{
					alt160 = 2;
				}
				else if ((true))
				{
					alt160 = 6;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 160, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA160_1==MINUS))
			{
				int LA160_2 = input.LA(2);

				if ((EvaluatePredicate(synpred44_Smi_fragment)))
				{
					alt160 = 1;
				}
				else if ((EvaluatePredicate(synpred45_Smi_fragment)))
				{
					alt160 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 160, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA160_1==NUMBER))
			{
				int LA160_2 = input.LA(2);

				if ((EvaluatePredicate(synpred44_Smi_fragment)))
				{
					alt160 = 1;
				}
				else if ((EvaluatePredicate(synpred45_Smi_fragment)))
				{
					alt160 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 160, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA160_1==L_BRACE))
			{
				int LA160_2 = input.LA(2);

				if ((EvaluatePredicate(synpred44_Smi_fragment)))
				{
					alt160 = 1;
				}
				else if ((EvaluatePredicate(synpred45_Smi_fragment)))
				{
					alt160 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 160, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA160_1==H_STRING))
			{
				int LA160_2 = input.LA(2);

				if ((EvaluatePredicate(synpred44_Smi_fragment)))
				{
					alt160 = 1;
				}
				else if ((EvaluatePredicate(synpred45_Smi_fragment)))
				{
					alt160 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 160, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA160_1==B_STRING))
			{
				int LA160_2 = input.LA(2);

				if ((EvaluatePredicate(synpred44_Smi_fragment)))
				{
					alt160 = 1;
				}
				else if ((EvaluatePredicate(synpred45_Smi_fragment)))
				{
					alt160 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 160, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA160_1==PLUS_INFINITY_KW))
			{
				int LA160_2 = input.LA(2);

				if ((EvaluatePredicate(synpred44_Smi_fragment)))
				{
					alt160 = 1;
				}
				else if ((EvaluatePredicate(synpred45_Smi_fragment)))
				{
					alt160 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 160, 12, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA160_1==MINUS_INFINITY_KW))
			{
				int LA160_2 = input.LA(2);

				if ((EvaluatePredicate(synpred44_Smi_fragment)))
				{
					alt160 = 1;
				}
				else if ((EvaluatePredicate(synpred45_Smi_fragment)))
				{
					alt160 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 160, 13, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA160_1==MIN_KW) && (EvaluatePredicate(synpred44_Smi_fragment)))
			{
				alt160 = 1;
			}
			else if ((LA160_1==SIZE_KW))
			{
				alt160 = 3;
			}
			else if ((LA160_1==FROM_KW))
			{
				alt160 = 4;
			}
			else if ((LA160_1==L_PAREN))
			{
				alt160 = 5;
			}
			else if ((LA160_1==ANY_KW||(LA160_1>=BIT_KW && LA160_1<=BOOLEAN_KW)||LA160_1==CHARACTER_KW||LA160_1==CHOICE_KW||LA160_1==EMBEDDED_KW||LA160_1==ENUMERATED_KW||LA160_1==ERROR_KW||LA160_1==EXTERNAL_KW||(LA160_1>=GENERALIZED_TIME_KW && LA160_1<=GRAPHIC_STR_KW)||LA160_1==IA5_STRING_KW||LA160_1==INCLUDES_KW||LA160_1==INTEGER_KW||LA160_1==ISO646_STR_KW||LA160_1==L_BRACKET||LA160_1==NUMERIC_STR_KW||(LA160_1>=OBJECT_KW && LA160_1<=OCTET_KW)||LA160_1==OPERATION_KW||LA160_1==PRINTABLE_STR_KW||LA160_1==REAL_KW||(LA160_1>=SEQUENCE_KW && LA160_1<=SET_KW)||LA160_1==T61_STR_KW||LA160_1==TELETEX_STR_KW||LA160_1==UNIVERSAL_STR_KW||(LA160_1>=UTC_TIME_KW && LA160_1<=VISIBLE_STR_KW)||LA160_1==131||LA160_1==137||(LA160_1>=158 && LA160_1<=161)||(LA160_1>=163 && LA160_1<=165)||LA160_1==179||LA160_1==188||LA160_1==191))
			{
				alt160 = 6;
			}
			else if ((LA160_1==PATTERN_KW))
			{
				alt160 = 7;
			}
			else if ((LA160_1==WITH_KW))
			{
				alt160 = 8;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 160, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(160); }
			switch (alt160)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1057:22: ( value_range )=> value_range
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1057, 39);
				PushFollow(Follow._value_range_in_constraint_elements8048);
				value_range605=value_range();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value_range605.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1058:22: ( value )=> value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1058, 33);
				PushFollow(Follow._value_in_constraint_elements8077);
				value606=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value606.Tree);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:1059:22: SIZE_KW constraint
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1059, 22);
				SIZE_KW607=(IToken)Match(input,SIZE_KW,Follow._SIZE_KW_in_constraint_elements8101); if (state.failed) return retval;
				if (state.backtracking == 0) {
				SIZE_KW607_tree = (CommonTree)adaptor.Create(SIZE_KW607);
				adaptor.AddChild(root_0, SIZE_KW607_tree);
				}
				DebugLocation(1059, 30);
				PushFollow(Follow._constraint_in_constraint_elements8103);
				constraint608=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constraint608.Tree);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Smi.g:1060:22: FROM_KW constraint
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1060, 22);
				FROM_KW609=(IToken)Match(input,FROM_KW,Follow._FROM_KW_in_constraint_elements8127); if (state.failed) return retval;
				if (state.backtracking == 0) {
				FROM_KW609_tree = (CommonTree)adaptor.Create(FROM_KW609);
				adaptor.AddChild(root_0, FROM_KW609_tree);
				}
				DebugLocation(1060, 30);
				PushFollow(Follow._constraint_in_constraint_elements8129);
				constraint610=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constraint610.Tree);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Smi.g:1061:22: L_PAREN element_set_spec R_PAREN
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1061, 22);
				L_PAREN611=(IToken)Match(input,L_PAREN,Follow._L_PAREN_in_constraint_elements8153); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_PAREN611_tree = (CommonTree)adaptor.Create(L_PAREN611);
				adaptor.AddChild(root_0, L_PAREN611_tree);
				}
				DebugLocation(1061, 30);
				PushFollow(Follow._element_set_spec_in_constraint_elements8155);
				element_set_spec612=element_set_spec();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, element_set_spec612.Tree);
				DebugLocation(1061, 47);
				R_PAREN613=(IToken)Match(input,R_PAREN,Follow._R_PAREN_in_constraint_elements8157); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_PAREN613_tree = (CommonTree)adaptor.Create(R_PAREN613);
				adaptor.AddChild(root_0, R_PAREN613_tree);
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// Smi.g:1062:22: ( INCLUDES_KW )? type
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1062, 22);
				// Smi.g:1062:22: ( INCLUDES_KW )?
				int alt157=2;
				try { DebugEnterSubRule(157);
				try { DebugEnterDecision(157, false);
				int LA157_1 = input.LA(1);

				if ((LA157_1==INCLUDES_KW))
				{
					alt157 = 1;
				}
				} finally { DebugExitDecision(157); }
				switch (alt157)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1062:23: INCLUDES_KW
					{
					DebugLocation(1062, 23);
					INCLUDES_KW614=(IToken)Match(input,INCLUDES_KW,Follow._INCLUDES_KW_in_constraint_elements8182); if (state.failed) return retval;
					if (state.backtracking == 0) {
					INCLUDES_KW614_tree = (CommonTree)adaptor.Create(INCLUDES_KW614);
					adaptor.AddChild(root_0, INCLUDES_KW614_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(157); }

				DebugLocation(1062, 37);
				PushFollow(Follow._type_in_constraint_elements8186);
				type615=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type615.Tree);

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// Smi.g:1063:22: PATTERN_KW value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1063, 22);
				PATTERN_KW616=(IToken)Match(input,PATTERN_KW,Follow._PATTERN_KW_in_constraint_elements8210); if (state.failed) return retval;
				if (state.backtracking == 0) {
				PATTERN_KW616_tree = (CommonTree)adaptor.Create(PATTERN_KW616);
				adaptor.AddChild(root_0, PATTERN_KW616_tree);
				}
				DebugLocation(1063, 33);
				PushFollow(Follow._value_in_constraint_elements8212);
				value617=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value617.Tree);

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// Smi.g:1064:22: WITH_KW ( COMPONENT_KW constraint | COMPONENTS_KW L_BRACE ( DOTDOTDOT COMMA )? type_constraint_list R_BRACE )
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1064, 22);
				WITH_KW618=(IToken)Match(input,WITH_KW,Follow._WITH_KW_in_constraint_elements8236); if (state.failed) return retval;
				if (state.backtracking == 0) {
				WITH_KW618_tree = (CommonTree)adaptor.Create(WITH_KW618);
				adaptor.AddChild(root_0, WITH_KW618_tree);
				}
				DebugLocation(1064, 30);
				// Smi.g:1064:30: ( COMPONENT_KW constraint | COMPONENTS_KW L_BRACE ( DOTDOTDOT COMMA )? type_constraint_list R_BRACE )
				int alt159=2;
				try { DebugEnterSubRule(159);
				try { DebugEnterDecision(159, false);
				int LA159_1 = input.LA(1);

				if ((LA159_1==COMPONENT_KW))
				{
					alt159 = 1;
				}
				else if ((LA159_1==COMPONENTS_KW))
				{
					alt159 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 159, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(159); }
				switch (alt159)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1064:31: COMPONENT_KW constraint
					{
					DebugLocation(1064, 31);
					COMPONENT_KW619=(IToken)Match(input,COMPONENT_KW,Follow._COMPONENT_KW_in_constraint_elements8239); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMPONENT_KW619_tree = (CommonTree)adaptor.Create(COMPONENT_KW619);
					adaptor.AddChild(root_0, COMPONENT_KW619_tree);
					}
					DebugLocation(1064, 44);
					PushFollow(Follow._constraint_in_constraint_elements8241);
					constraint620=constraint();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, constraint620.Tree);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// Smi.g:1065:33: COMPONENTS_KW L_BRACE ( DOTDOTDOT COMMA )? type_constraint_list R_BRACE
					{
					DebugLocation(1065, 33);
					COMPONENTS_KW621=(IToken)Match(input,COMPONENTS_KW,Follow._COMPONENTS_KW_in_constraint_elements8276); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMPONENTS_KW621_tree = (CommonTree)adaptor.Create(COMPONENTS_KW621);
					adaptor.AddChild(root_0, COMPONENTS_KW621_tree);
					}
					DebugLocation(1065, 47);
					L_BRACE622=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_constraint_elements8278); if (state.failed) return retval;
					if (state.backtracking == 0) {
					L_BRACE622_tree = (CommonTree)adaptor.Create(L_BRACE622);
					adaptor.AddChild(root_0, L_BRACE622_tree);
					}
					DebugLocation(1065, 55);
					// Smi.g:1065:55: ( DOTDOTDOT COMMA )?
					int alt158=2;
					try { DebugEnterSubRule(158);
					try { DebugEnterDecision(158, false);
					int LA158_1 = input.LA(1);

					if ((LA158_1==DOTDOTDOT))
					{
						alt158 = 1;
					}
					} finally { DebugExitDecision(158); }
					switch (alt158)
					{
					case 1:
						DebugEnterAlt(1);
						// Smi.g:1065:56: DOTDOTDOT COMMA
						{
						DebugLocation(1065, 56);
						DOTDOTDOT623=(IToken)Match(input,DOTDOTDOT,Follow._DOTDOTDOT_in_constraint_elements8281); if (state.failed) return retval;
						if (state.backtracking == 0) {
						DOTDOTDOT623_tree = (CommonTree)adaptor.Create(DOTDOTDOT623);
						adaptor.AddChild(root_0, DOTDOTDOT623_tree);
						}
						DebugLocation(1065, 66);
						COMMA624=(IToken)Match(input,COMMA,Follow._COMMA_in_constraint_elements8283); if (state.failed) return retval;
						if (state.backtracking == 0) {
						COMMA624_tree = (CommonTree)adaptor.Create(COMMA624);
						adaptor.AddChild(root_0, COMMA624_tree);
						}

						}
						break;

					}
					} finally { DebugExitSubRule(158); }

					DebugLocation(1066, 33);
					PushFollow(Follow._type_constraint_list_in_constraint_elements8320);
					type_constraint_list625=type_constraint_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type_constraint_list625.Tree);
					DebugLocation(1066, 54);
					R_BRACE626=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_constraint_elements8322); if (state.failed) return retval;
					if (state.backtracking == 0) {
					R_BRACE626_tree = (CommonTree)adaptor.Create(R_BRACE626);
					adaptor.AddChild(root_0, R_BRACE626_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(159); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constraint_elements", 107);
			LeaveRule("constraint_elements", 107);
			LeaveRule_constraint_elements();
		}
		DebugLocation(1066, 61);
		} finally { DebugExitRule(GrammarFileName, "constraint_elements"); }
		return retval;

	}
	// $ANTLR end "constraint_elements"

	partial void EnterRule_value_range();
	partial void LeaveRule_value_range();
	// $ANTLR start "value_range"
	// Smi.g:1068:1: value_range : ( value | MIN_KW ) ( LESS )? DOTDOT ( LESS )? ( value | MAX_KW ) ;
	[GrammarRule("value_range")]
	private AstParserRuleReturnScope<CommonTree, IToken> value_range()
	{
		EnterRule_value_range();
		EnterRule("value_range", 108);
		TraceIn("value_range", 108);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken MIN_KW628 = default(IToken);
		IToken LESS629 = default(IToken);
		IToken DOTDOT630 = default(IToken);
		IToken LESS631 = default(IToken);
		IToken MAX_KW633 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> value627 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value632 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree MIN_KW628_tree = default(CommonTree);
		CommonTree LESS629_tree = default(CommonTree);
		CommonTree DOTDOT630_tree = default(CommonTree);
		CommonTree LESS631_tree = default(CommonTree);
		CommonTree MAX_KW633_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "value_range");
		DebugLocation(1068, 70);
		try
		{
			// Smi.g:1068:12: ( ( value | MIN_KW ) ( LESS )? DOTDOT ( LESS )? ( value | MAX_KW ) )
			DebugEnterAlt(1);
			// Smi.g:1068:14: ( value | MIN_KW ) ( LESS )? DOTDOT ( LESS )? ( value | MAX_KW )
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1068, 14);
			// Smi.g:1068:14: ( value | MIN_KW )
			int alt161=2;
			try { DebugEnterSubRule(161);
			try { DebugEnterDecision(161, false);
			int LA161_1 = input.LA(1);

			if ((LA161_1==B_STRING||LA161_1==C_STRING||LA161_1==FALSE_KW||LA161_1==H_STRING||(LA161_1>=LOWER && LA161_1<=L_BRACE)||(LA161_1>=MINUS && LA161_1<=MINUS_INFINITY_KW)||(LA161_1>=NULL_KW && LA161_1<=NUMBER)||LA161_1==PLUS_INFINITY_KW||LA161_1==TRUE_KW||LA161_1==UPPER))
			{
				alt161 = 1;
			}
			else if ((LA161_1==MIN_KW))
			{
				alt161 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 161, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(161); }
			switch (alt161)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1068:15: value
				{
				DebugLocation(1068, 15);
				PushFollow(Follow._value_in_value_range8331);
				value627=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value627.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1068:23: MIN_KW
				{
				DebugLocation(1068, 23);
				MIN_KW628=(IToken)Match(input,MIN_KW,Follow._MIN_KW_in_value_range8335); if (state.failed) return retval;
				if (state.backtracking == 0) {
				MIN_KW628_tree = (CommonTree)adaptor.Create(MIN_KW628);
				adaptor.AddChild(root_0, MIN_KW628_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(161); }

			DebugLocation(1068, 31);
			// Smi.g:1068:31: ( LESS )?
			int alt162=2;
			try { DebugEnterSubRule(162);
			try { DebugEnterDecision(162, false);
			int LA162_1 = input.LA(1);

			if ((LA162_1==LESS))
			{
				alt162 = 1;
			}
			} finally { DebugExitDecision(162); }
			switch (alt162)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1068:32: LESS
				{
				DebugLocation(1068, 32);
				LESS629=(IToken)Match(input,LESS,Follow._LESS_in_value_range8339); if (state.failed) return retval;
				if (state.backtracking == 0) {
				LESS629_tree = (CommonTree)adaptor.Create(LESS629);
				adaptor.AddChild(root_0, LESS629_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(162); }

			DebugLocation(1068, 39);
			DOTDOT630=(IToken)Match(input,DOTDOT,Follow._DOTDOT_in_value_range8343); if (state.failed) return retval;
			if (state.backtracking == 0) {
			DOTDOT630_tree = (CommonTree)adaptor.Create(DOTDOT630);
			adaptor.AddChild(root_0, DOTDOT630_tree);
			}
			DebugLocation(1068, 46);
			// Smi.g:1068:46: ( LESS )?
			int alt163=2;
			try { DebugEnterSubRule(163);
			try { DebugEnterDecision(163, false);
			int LA163_1 = input.LA(1);

			if ((LA163_1==LESS))
			{
				alt163 = 1;
			}
			} finally { DebugExitDecision(163); }
			switch (alt163)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1068:47: LESS
				{
				DebugLocation(1068, 47);
				LESS631=(IToken)Match(input,LESS,Follow._LESS_in_value_range8346); if (state.failed) return retval;
				if (state.backtracking == 0) {
				LESS631_tree = (CommonTree)adaptor.Create(LESS631);
				adaptor.AddChild(root_0, LESS631_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(163); }

			DebugLocation(1068, 54);
			// Smi.g:1068:54: ( value | MAX_KW )
			int alt164=2;
			try { DebugEnterSubRule(164);
			try { DebugEnterDecision(164, false);
			int LA164_1 = input.LA(1);

			if ((LA164_1==B_STRING||LA164_1==C_STRING||LA164_1==FALSE_KW||LA164_1==H_STRING||(LA164_1>=LOWER && LA164_1<=L_BRACE)||(LA164_1>=MINUS && LA164_1<=MINUS_INFINITY_KW)||(LA164_1>=NULL_KW && LA164_1<=NUMBER)||LA164_1==PLUS_INFINITY_KW||LA164_1==TRUE_KW||LA164_1==UPPER))
			{
				alt164 = 1;
			}
			else if ((LA164_1==MAX_KW))
			{
				alt164 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 164, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(164); }
			switch (alt164)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1068:55: value
				{
				DebugLocation(1068, 55);
				PushFollow(Follow._value_in_value_range8351);
				value632=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value632.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1068:63: MAX_KW
				{
				DebugLocation(1068, 63);
				MAX_KW633=(IToken)Match(input,MAX_KW,Follow._MAX_KW_in_value_range8355); if (state.failed) return retval;
				if (state.backtracking == 0) {
				MAX_KW633_tree = (CommonTree)adaptor.Create(MAX_KW633);
				adaptor.AddChild(root_0, MAX_KW633_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(164); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("value_range", 108);
			LeaveRule("value_range", 108);
			LeaveRule_value_range();
		}
		DebugLocation(1068, 70);
		} finally { DebugExitRule(GrammarFileName, "value_range"); }
		return retval;

	}
	// $ANTLR end "value_range"

	partial void EnterRule_type_constraint_list();
	partial void LeaveRule_type_constraint_list();
	// $ANTLR start "type_constraint_list"
	// Smi.g:1070:1: type_constraint_list : named_constraint ( COMMA named_constraint )* ;
	[GrammarRule("type_constraint_list")]
	private AstParserRuleReturnScope<CommonTree, IToken> type_constraint_list()
	{
		EnterRule_type_constraint_list();
		EnterRule("type_constraint_list", 109);
		TraceIn("type_constraint_list", 109);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMMA635 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> named_constraint634 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> named_constraint636 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree COMMA635_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "type_constraint_list");
		DebugLocation(1070, 65);
		try
		{
			// Smi.g:1070:21: ( named_constraint ( COMMA named_constraint )* )
			DebugEnterAlt(1);
			// Smi.g:1070:23: named_constraint ( COMMA named_constraint )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1070, 23);
			PushFollow(Follow._named_constraint_in_type_constraint_list8364);
			named_constraint634=named_constraint();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, named_constraint634.Tree);
			DebugLocation(1070, 40);
			// Smi.g:1070:40: ( COMMA named_constraint )*
			try { DebugEnterSubRule(165);
			while (true)
			{
				int alt165=2;
				try { DebugEnterDecision(165, false);
				int LA165_1 = input.LA(1);

				if ((LA165_1==COMMA))
				{
					alt165 = 1;
				}


				} finally { DebugExitDecision(165); }
				switch ( alt165 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1070:41: COMMA named_constraint
					{
					DebugLocation(1070, 41);
					COMMA635=(IToken)Match(input,COMMA,Follow._COMMA_in_type_constraint_list8367); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA635_tree = (CommonTree)adaptor.Create(COMMA635);
					adaptor.AddChild(root_0, COMMA635_tree);
					}
					DebugLocation(1070, 47);
					PushFollow(Follow._named_constraint_in_type_constraint_list8369);
					named_constraint636=named_constraint();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, named_constraint636.Tree);

					}
					break;

				default:
					goto loop165;
				}
			}

			loop165:
				;

			} finally { DebugExitSubRule(165); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type_constraint_list", 109);
			LeaveRule("type_constraint_list", 109);
			LeaveRule_type_constraint_list();
		}
		DebugLocation(1070, 65);
		} finally { DebugExitRule(GrammarFileName, "type_constraint_list"); }
		return retval;

	}
	// $ANTLR end "type_constraint_list"

	partial void EnterRule_named_constraint();
	partial void LeaveRule_named_constraint();
	// $ANTLR start "named_constraint"
	// Smi.g:1072:1: named_constraint : LOWER ( constraint )? ( PRESENT_KW | ABSENT_KW | OPTIONAL_KW )? ;
	[GrammarRule("named_constraint")]
	private AstParserRuleReturnScope<CommonTree, IToken> named_constraint()
	{
		EnterRule_named_constraint();
		EnterRule("named_constraint", 110);
		TraceIn("named_constraint", 110);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken LOWER637 = default(IToken);
		IToken set639 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> constraint638 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree LOWER637_tree = default(CommonTree);
		CommonTree set639_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "named_constraint");
		DebugLocation(1072, 78);
		try
		{
			// Smi.g:1072:17: ( LOWER ( constraint )? ( PRESENT_KW | ABSENT_KW | OPTIONAL_KW )? )
			DebugEnterAlt(1);
			// Smi.g:1072:19: LOWER ( constraint )? ( PRESENT_KW | ABSENT_KW | OPTIONAL_KW )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1072, 19);
			LOWER637=(IToken)Match(input,LOWER,Follow._LOWER_in_named_constraint8379); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LOWER637_tree = (CommonTree)adaptor.Create(LOWER637);
			adaptor.AddChild(root_0, LOWER637_tree);
			}
			DebugLocation(1072, 25);
			// Smi.g:1072:25: ( constraint )?
			int alt166=2;
			try { DebugEnterSubRule(166);
			try { DebugEnterDecision(166, false);
			int LA166_1 = input.LA(1);

			if ((LA166_1==L_PAREN))
			{
				alt166 = 1;
			}
			} finally { DebugExitDecision(166); }
			switch (alt166)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1072:26: constraint
				{
				DebugLocation(1072, 26);
				PushFollow(Follow._constraint_in_named_constraint8382);
				constraint638=constraint();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constraint638.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(166); }

			DebugLocation(1072, 39);
			// Smi.g:1072:39: ( PRESENT_KW | ABSENT_KW | OPTIONAL_KW )?
			int alt167=2;
			try { DebugEnterSubRule(167);
			try { DebugEnterDecision(167, false);
			int LA167_1 = input.LA(1);

			if ((LA167_1==ABSENT_KW||LA167_1==OPTIONAL_KW||LA167_1==PRESENT_KW))
			{
				alt167 = 1;
			}
			} finally { DebugExitDecision(167); }
			switch (alt167)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:
				{
				DebugLocation(1072, 39);

				set639=(IToken)input.LT(1);
				if (input.LA(1)==ABSENT_KW||input.LA(1)==OPTIONAL_KW||input.LA(1)==PRESENT_KW)
				{
					input.Consume();
					if (state.backtracking == 0) adaptor.AddChild(root_0, (CommonTree)adaptor.Create(set639));
					state.errorRecovery=false;state.failed=false;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					DebugRecognitionException(mse);
					throw mse;
				}


				}
				break;

			}
			} finally { DebugExitSubRule(167); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("named_constraint", 110);
			LeaveRule("named_constraint", 110);
			LeaveRule_named_constraint();
		}
		DebugLocation(1072, 78);
		} finally { DebugExitRule(GrammarFileName, "named_constraint"); }
		return retval;

	}
	// $ANTLR end "named_constraint"

	partial void EnterRule_choice_value();
	partial void LeaveRule_choice_value();
	// $ANTLR start "choice_value"
	// Smi.g:1074:1: choice_value : LOWER ( COLON )? value ;
	[GrammarRule("choice_value")]
	private AstParserRuleReturnScope<CommonTree, IToken> choice_value()
	{
		EnterRule_choice_value();
		EnterRule("choice_value", 111);
		TraceIn("choice_value", 111);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken LOWER640 = default(IToken);
		IToken COLON641 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> value642 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree LOWER640_tree = default(CommonTree);
		CommonTree COLON641_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "choice_value");
		DebugLocation(1074, 34);
		try
		{
			// Smi.g:1074:13: ( LOWER ( COLON )? value )
			DebugEnterAlt(1);
			// Smi.g:1074:15: LOWER ( COLON )? value
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1074, 15);
			LOWER640=(IToken)Match(input,LOWER,Follow._LOWER_in_choice_value8405); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LOWER640_tree = (CommonTree)adaptor.Create(LOWER640);
			adaptor.AddChild(root_0, LOWER640_tree);
			}
			DebugLocation(1074, 21);
			// Smi.g:1074:21: ( COLON )?
			int alt168=2;
			try { DebugEnterSubRule(168);
			try { DebugEnterDecision(168, false);
			int LA168_1 = input.LA(1);

			if ((LA168_1==COLON))
			{
				alt168 = 1;
			}
			} finally { DebugExitDecision(168); }
			switch (alt168)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1074:22: COLON
				{
				DebugLocation(1074, 22);
				COLON641=(IToken)Match(input,COLON,Follow._COLON_in_choice_value8408); if (state.failed) return retval;
				if (state.backtracking == 0) {
				COLON641_tree = (CommonTree)adaptor.Create(COLON641);
				adaptor.AddChild(root_0, COLON641_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(168); }

			DebugLocation(1074, 30);
			PushFollow(Follow._value_in_choice_value8412);
			value642=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, value642.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("choice_value", 111);
			LeaveRule("choice_value", 111);
			LeaveRule_choice_value();
		}
		DebugLocation(1074, 34);
		} finally { DebugExitRule(GrammarFileName, "choice_value"); }
		return retval;

	}
	// $ANTLR end "choice_value"

	partial void EnterRule_sequence_value();
	partial void LeaveRule_sequence_value();
	// $ANTLR start "sequence_value"
	// Smi.g:1076:1: sequence_value : L_BRACE ( named_value )? ( COMMA named_value )* R_BRACE ;
	[GrammarRule("sequence_value")]
	private AstParserRuleReturnScope<CommonTree, IToken> sequence_value()
	{
		EnterRule_sequence_value();
		EnterRule("sequence_value", 112);
		TraceIn("sequence_value", 112);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE643 = default(IToken);
		IToken COMMA645 = default(IToken);
		IToken R_BRACE647 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> named_value644 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> named_value646 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree L_BRACE643_tree = default(CommonTree);
		CommonTree COMMA645_tree = default(CommonTree);
		CommonTree R_BRACE647_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "sequence_value");
		DebugLocation(1076, 67);
		try
		{
			// Smi.g:1076:15: ( L_BRACE ( named_value )? ( COMMA named_value )* R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:1076:17: L_BRACE ( named_value )? ( COMMA named_value )* R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1076, 17);
			L_BRACE643=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_sequence_value8419); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE643_tree = (CommonTree)adaptor.Create(L_BRACE643);
			adaptor.AddChild(root_0, L_BRACE643_tree);
			}
			DebugLocation(1076, 25);
			// Smi.g:1076:25: ( named_value )?
			int alt169=2;
			try { DebugEnterSubRule(169);
			try { DebugEnterDecision(169, false);
			int LA169_1 = input.LA(1);

			if ((LA169_1==LOWER))
			{
				alt169 = 1;
			}
			} finally { DebugExitDecision(169); }
			switch (alt169)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1076:26: named_value
				{
				DebugLocation(1076, 26);
				PushFollow(Follow._named_value_in_sequence_value8422);
				named_value644=named_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, named_value644.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(169); }

			DebugLocation(1076, 40);
			// Smi.g:1076:40: ( COMMA named_value )*
			try { DebugEnterSubRule(170);
			while (true)
			{
				int alt170=2;
				try { DebugEnterDecision(170, false);
				int LA170_1 = input.LA(1);

				if ((LA170_1==COMMA))
				{
					alt170 = 1;
				}


				} finally { DebugExitDecision(170); }
				switch ( alt170 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1076:41: COMMA named_value
					{
					DebugLocation(1076, 41);
					COMMA645=(IToken)Match(input,COMMA,Follow._COMMA_in_sequence_value8427); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA645_tree = (CommonTree)adaptor.Create(COMMA645);
					adaptor.AddChild(root_0, COMMA645_tree);
					}
					DebugLocation(1076, 47);
					PushFollow(Follow._named_value_in_sequence_value8429);
					named_value646=named_value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, named_value646.Tree);

					}
					break;

				default:
					goto loop170;
				}
			}

			loop170:
				;

			} finally { DebugExitSubRule(170); }

			DebugLocation(1076, 61);
			R_BRACE647=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_sequence_value8433); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE647_tree = (CommonTree)adaptor.Create(R_BRACE647);
			adaptor.AddChild(root_0, R_BRACE647_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("sequence_value", 112);
			LeaveRule("sequence_value", 112);
			LeaveRule_sequence_value();
		}
		DebugLocation(1076, 67);
		} finally { DebugExitRule(GrammarFileName, "sequence_value"); }
		return retval;

	}
	// $ANTLR end "sequence_value"

	partial void EnterRule_sequenceof_value();
	partial void LeaveRule_sequenceof_value();
	// $ANTLR start "sequenceof_value"
	// Smi.g:1078:1: sequenceof_value : L_BRACE ( value )? ( COMMA value )* R_BRACE ;
	[GrammarRule("sequenceof_value")]
	private AstParserRuleReturnScope<CommonTree, IToken> sequenceof_value()
	{
		EnterRule_sequenceof_value();
		EnterRule("sequenceof_value", 113);
		TraceIn("sequenceof_value", 113);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken L_BRACE648 = default(IToken);
		IToken COMMA650 = default(IToken);
		IToken R_BRACE652 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> value649 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> value651 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree L_BRACE648_tree = default(CommonTree);
		CommonTree COMMA650_tree = default(CommonTree);
		CommonTree R_BRACE652_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "sequenceof_value");
		DebugLocation(1078, 57);
		try
		{
			// Smi.g:1078:17: ( L_BRACE ( value )? ( COMMA value )* R_BRACE )
			DebugEnterAlt(1);
			// Smi.g:1078:19: L_BRACE ( value )? ( COMMA value )* R_BRACE
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1078, 19);
			L_BRACE648=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_sequenceof_value8440); if (state.failed) return retval;
			if (state.backtracking == 0) {
			L_BRACE648_tree = (CommonTree)adaptor.Create(L_BRACE648);
			adaptor.AddChild(root_0, L_BRACE648_tree);
			}
			DebugLocation(1078, 27);
			// Smi.g:1078:27: ( value )?
			int alt171=2;
			try { DebugEnterSubRule(171);
			try { DebugEnterDecision(171, false);
			int LA171_1 = input.LA(1);

			if ((LA171_1==B_STRING||LA171_1==C_STRING||LA171_1==FALSE_KW||LA171_1==H_STRING||(LA171_1>=LOWER && LA171_1<=L_BRACE)||(LA171_1>=MINUS && LA171_1<=MINUS_INFINITY_KW)||(LA171_1>=NULL_KW && LA171_1<=NUMBER)||LA171_1==PLUS_INFINITY_KW||LA171_1==TRUE_KW||LA171_1==UPPER))
			{
				alt171 = 1;
			}
			} finally { DebugExitDecision(171); }
			switch (alt171)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1078:28: value
				{
				DebugLocation(1078, 28);
				PushFollow(Follow._value_in_sequenceof_value8443);
				value649=value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, value649.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(171); }

			DebugLocation(1078, 36);
			// Smi.g:1078:36: ( COMMA value )*
			try { DebugEnterSubRule(172);
			while (true)
			{
				int alt172=2;
				try { DebugEnterDecision(172, false);
				int LA172_1 = input.LA(1);

				if ((LA172_1==COMMA))
				{
					alt172 = 1;
				}


				} finally { DebugExitDecision(172); }
				switch ( alt172 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1078:37: COMMA value
					{
					DebugLocation(1078, 37);
					COMMA650=(IToken)Match(input,COMMA,Follow._COMMA_in_sequenceof_value8448); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA650_tree = (CommonTree)adaptor.Create(COMMA650);
					adaptor.AddChild(root_0, COMMA650_tree);
					}
					DebugLocation(1078, 43);
					PushFollow(Follow._value_in_sequenceof_value8450);
					value651=value();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, value651.Tree);

					}
					break;

				default:
					goto loop172;
				}
			}

			loop172:
				;

			} finally { DebugExitSubRule(172); }

			DebugLocation(1078, 51);
			R_BRACE652=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_sequenceof_value8454); if (state.failed) return retval;
			if (state.backtracking == 0) {
			R_BRACE652_tree = (CommonTree)adaptor.Create(R_BRACE652);
			adaptor.AddChild(root_0, R_BRACE652_tree);
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("sequenceof_value", 113);
			LeaveRule("sequenceof_value", 113);
			LeaveRule_sequenceof_value();
		}
		DebugLocation(1078, 57);
		} finally { DebugExitRule(GrammarFileName, "sequenceof_value"); }
		return retval;

	}
	// $ANTLR end "sequenceof_value"

	partial void EnterRule_cstr_value();
	partial void LeaveRule_cstr_value();
	// $ANTLR start "cstr_value"
	// Smi.g:1080:1: cstr_value : ( ( H_STRING )=> H_STRING | ( B_STRING )=> B_STRING | L_BRACE ( ( id_list )=> id_list | ( char_defs_list )=> char_defs_list | tuple_or_quad ) R_BRACE );
	[GrammarRule("cstr_value")]
	private AstParserRuleReturnScope<CommonTree, IToken> cstr_value()
	{
		EnterRule_cstr_value();
		EnterRule("cstr_value", 114);
		TraceIn("cstr_value", 114);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken H_STRING653 = default(IToken);
		IToken B_STRING654 = default(IToken);
		IToken L_BRACE655 = default(IToken);
		IToken R_BRACE659 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> id_list656 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> char_defs_list657 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> tuple_or_quad658 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree H_STRING653_tree = default(CommonTree);
		CommonTree B_STRING654_tree = default(CommonTree);
		CommonTree L_BRACE655_tree = default(CommonTree);
		CommonTree R_BRACE659_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "cstr_value");
		DebugLocation(1080, 21);
		try
		{
			// Smi.g:1080:11: ( ( H_STRING )=> H_STRING | ( B_STRING )=> B_STRING | L_BRACE ( ( id_list )=> id_list | ( char_defs_list )=> char_defs_list | tuple_or_quad ) R_BRACE )
			int alt174=3;
			try { DebugEnterDecision(174, false);
			int LA174_1 = input.LA(1);

			if ((LA174_1==H_STRING) && (EvaluatePredicate(synpred46_Smi_fragment)))
			{
				alt174 = 1;
			}
			else if ((LA174_1==B_STRING) && (EvaluatePredicate(synpred47_Smi_fragment)))
			{
				alt174 = 2;
			}
			else if ((LA174_1==L_BRACE))
			{
				alt174 = 3;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 174, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(174); }
			switch (alt174)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1080:13: ( H_STRING )=> H_STRING
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1080, 27);
				H_STRING653=(IToken)Match(input,H_STRING,Follow._H_STRING_in_cstr_value8467); if (state.failed) return retval;
				if (state.backtracking == 0) {
				H_STRING653_tree = (CommonTree)adaptor.Create(H_STRING653);
				adaptor.AddChild(root_0, H_STRING653_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1081:13: ( B_STRING )=> B_STRING
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1081, 27);
				B_STRING654=(IToken)Match(input,B_STRING,Follow._B_STRING_in_cstr_value8488); if (state.failed) return retval;
				if (state.backtracking == 0) {
				B_STRING654_tree = (CommonTree)adaptor.Create(B_STRING654);
				adaptor.AddChild(root_0, B_STRING654_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:1082:13: L_BRACE ( ( id_list )=> id_list | ( char_defs_list )=> char_defs_list | tuple_or_quad ) R_BRACE
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1082, 13);
				L_BRACE655=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_cstr_value8503); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE655_tree = (CommonTree)adaptor.Create(L_BRACE655);
				adaptor.AddChild(root_0, L_BRACE655_tree);
				}
				DebugLocation(1083, 13);
				// Smi.g:1083:13: ( ( id_list )=> id_list | ( char_defs_list )=> char_defs_list | tuple_or_quad )
				int alt173=3;
				try { DebugEnterSubRule(173);
				try { DebugEnterDecision(173, false);
				int LA173_1 = input.LA(1);

				if ((LA173_1==LOWER))
				{
					int LA173_2 = input.LA(2);

					if ((EvaluatePredicate(synpred48_Smi_fragment)))
					{
						alt173 = 1;
					}
					else if ((EvaluatePredicate(synpred49_Smi_fragment)))
					{
						alt173 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 173, 1, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else if ((LA173_1==C_STRING) && (EvaluatePredicate(synpred49_Smi_fragment)))
				{
					alt173 = 2;
				}
				else if ((LA173_1==L_BRACE) && (EvaluatePredicate(synpred49_Smi_fragment)))
				{
					alt173 = 2;
				}
				else if ((LA173_1==UPPER) && (EvaluatePredicate(synpred49_Smi_fragment)))
				{
					alt173 = 2;
				}
				else if ((LA173_1==MINUS||LA173_1==NUMBER))
				{
					alt173 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 173, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(173); }
				switch (alt173)
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1083:15: ( id_list )=> id_list
					{
					DebugLocation(1083, 28);
					PushFollow(Follow._id_list_in_cstr_value8526);
					id_list656=id_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, id_list656.Tree);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// Smi.g:1084:17: ( char_defs_list )=> char_defs_list
					{
					DebugLocation(1084, 37);
					PushFollow(Follow._char_defs_list_in_cstr_value8551);
					char_defs_list657=char_defs_list();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, char_defs_list657.Tree);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// Smi.g:1085:17: tuple_or_quad
					{
					DebugLocation(1085, 17);
					PushFollow(Follow._tuple_or_quad_in_cstr_value8570);
					tuple_or_quad658=tuple_or_quad();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, tuple_or_quad658.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(173); }

				DebugLocation(1086, 15);
				R_BRACE659=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_cstr_value8586); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE659_tree = (CommonTree)adaptor.Create(R_BRACE659);
				adaptor.AddChild(root_0, R_BRACE659_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("cstr_value", 114);
			LeaveRule("cstr_value", 114);
			LeaveRule_cstr_value();
		}
		DebugLocation(1086, 21);
		} finally { DebugExitRule(GrammarFileName, "cstr_value"); }
		return retval;

	}
	// $ANTLR end "cstr_value"

	partial void EnterRule_id_list();
	partial void LeaveRule_id_list();
	// $ANTLR start "id_list"
	// Smi.g:1088:1: id_list : LOWER ( COMMA LOWER )* ;
	[GrammarRule("id_list")]
	private AstParserRuleReturnScope<CommonTree, IToken> id_list()
	{
		EnterRule_id_list();
		EnterRule("id_list", 115);
		TraceIn("id_list", 115);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken LOWER660 = default(IToken);
		IToken COMMA661 = default(IToken);
		IToken LOWER662 = default(IToken);

		CommonTree LOWER660_tree = default(CommonTree);
		CommonTree COMMA661_tree = default(CommonTree);
		CommonTree LOWER662_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "id_list");
		DebugLocation(1088, 30);
		try
		{
			// Smi.g:1088:8: ( LOWER ( COMMA LOWER )* )
			DebugEnterAlt(1);
			// Smi.g:1088:10: LOWER ( COMMA LOWER )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1088, 10);
			LOWER660=(IToken)Match(input,LOWER,Follow._LOWER_in_id_list8593); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LOWER660_tree = (CommonTree)adaptor.Create(LOWER660);
			adaptor.AddChild(root_0, LOWER660_tree);
			}
			DebugLocation(1088, 16);
			// Smi.g:1088:16: ( COMMA LOWER )*
			try { DebugEnterSubRule(175);
			while (true)
			{
				int alt175=2;
				try { DebugEnterDecision(175, false);
				int LA175_1 = input.LA(1);

				if ((LA175_1==COMMA))
				{
					alt175 = 1;
				}


				} finally { DebugExitDecision(175); }
				switch ( alt175 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1088:17: COMMA LOWER
					{
					DebugLocation(1088, 17);
					COMMA661=(IToken)Match(input,COMMA,Follow._COMMA_in_id_list8596); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA661_tree = (CommonTree)adaptor.Create(COMMA661);
					adaptor.AddChild(root_0, COMMA661_tree);
					}
					DebugLocation(1088, 23);
					LOWER662=(IToken)Match(input,LOWER,Follow._LOWER_in_id_list8598); if (state.failed) return retval;
					if (state.backtracking == 0) {
					LOWER662_tree = (CommonTree)adaptor.Create(LOWER662);
					adaptor.AddChild(root_0, LOWER662_tree);
					}

					}
					break;

				default:
					goto loop175;
				}
			}

			loop175:
				;

			} finally { DebugExitSubRule(175); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("id_list", 115);
			LeaveRule("id_list", 115);
			LeaveRule_id_list();
		}
		DebugLocation(1088, 30);
		} finally { DebugExitRule(GrammarFileName, "id_list"); }
		return retval;

	}
	// $ANTLR end "id_list"

	partial void EnterRule_char_defs_list();
	partial void LeaveRule_char_defs_list();
	// $ANTLR start "char_defs_list"
	// Smi.g:1090:1: char_defs_list : char_defs ( COMMA char_defs )* ;
	[GrammarRule("char_defs_list")]
	private AstParserRuleReturnScope<CommonTree, IToken> char_defs_list()
	{
		EnterRule_char_defs_list();
		EnterRule("char_defs_list", 116);
		TraceIn("char_defs_list", 116);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMMA664 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> char_defs663 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> char_defs665 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree COMMA664_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "char_defs_list");
		DebugLocation(1090, 45);
		try
		{
			// Smi.g:1090:15: ( char_defs ( COMMA char_defs )* )
			DebugEnterAlt(1);
			// Smi.g:1090:17: char_defs ( COMMA char_defs )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1090, 17);
			PushFollow(Follow._char_defs_in_char_defs_list8608);
			char_defs663=char_defs();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, char_defs663.Tree);
			DebugLocation(1090, 27);
			// Smi.g:1090:27: ( COMMA char_defs )*
			try { DebugEnterSubRule(176);
			while (true)
			{
				int alt176=2;
				try { DebugEnterDecision(176, false);
				int LA176_1 = input.LA(1);

				if ((LA176_1==COMMA))
				{
					alt176 = 1;
				}


				} finally { DebugExitDecision(176); }
				switch ( alt176 )
				{
				case 1:
					DebugEnterAlt(1);
					// Smi.g:1090:28: COMMA char_defs
					{
					DebugLocation(1090, 28);
					COMMA664=(IToken)Match(input,COMMA,Follow._COMMA_in_char_defs_list8611); if (state.failed) return retval;
					if (state.backtracking == 0) {
					COMMA664_tree = (CommonTree)adaptor.Create(COMMA664);
					adaptor.AddChild(root_0, COMMA664_tree);
					}
					DebugLocation(1090, 34);
					PushFollow(Follow._char_defs_in_char_defs_list8613);
					char_defs665=char_defs();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, char_defs665.Tree);

					}
					break;

				default:
					goto loop176;
				}
			}

			loop176:
				;

			} finally { DebugExitSubRule(176); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("char_defs_list", 116);
			LeaveRule("char_defs_list", 116);
			LeaveRule_char_defs_list();
		}
		DebugLocation(1090, 45);
		} finally { DebugExitRule(GrammarFileName, "char_defs_list"); }
		return retval;

	}
	// $ANTLR end "char_defs_list"

	partial void EnterRule_tuple_or_quad();
	partial void LeaveRule_tuple_or_quad();
	// $ANTLR start "tuple_or_quad"
	// Smi.g:1093:1: tuple_or_quad : signed_number COMMA signed_number ( COMMA signed_number COMMA signed_number )? ;
	[GrammarRule("tuple_or_quad")]
	private AstParserRuleReturnScope<CommonTree, IToken> tuple_or_quad()
	{
		EnterRule_tuple_or_quad();
		EnterRule("tuple_or_quad", 117);
		TraceIn("tuple_or_quad", 117);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken COMMA667 = default(IToken);
		IToken COMMA669 = default(IToken);
		IToken COMMA671 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> signed_number666 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> signed_number668 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> signed_number670 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> signed_number672 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree COMMA667_tree = default(CommonTree);
		CommonTree COMMA669_tree = default(CommonTree);
		CommonTree COMMA671_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "tuple_or_quad");
		DebugLocation(1093, 92);
		try
		{
			// Smi.g:1093:14: ( signed_number COMMA signed_number ( COMMA signed_number COMMA signed_number )? )
			DebugEnterAlt(1);
			// Smi.g:1093:16: signed_number COMMA signed_number ( COMMA signed_number COMMA signed_number )?
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1093, 16);
			PushFollow(Follow._signed_number_in_tuple_or_quad8624);
			signed_number666=signed_number();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, signed_number666.Tree);
			DebugLocation(1093, 30);
			COMMA667=(IToken)Match(input,COMMA,Follow._COMMA_in_tuple_or_quad8626); if (state.failed) return retval;
			if (state.backtracking == 0) {
			COMMA667_tree = (CommonTree)adaptor.Create(COMMA667);
			adaptor.AddChild(root_0, COMMA667_tree);
			}
			DebugLocation(1093, 36);
			PushFollow(Follow._signed_number_in_tuple_or_quad8628);
			signed_number668=signed_number();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, signed_number668.Tree);
			DebugLocation(1093, 50);
			// Smi.g:1093:50: ( COMMA signed_number COMMA signed_number )?
			int alt177=2;
			try { DebugEnterSubRule(177);
			try { DebugEnterDecision(177, false);
			int LA177_1 = input.LA(1);

			if ((LA177_1==COMMA))
			{
				alt177 = 1;
			}
			} finally { DebugExitDecision(177); }
			switch (alt177)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1093:51: COMMA signed_number COMMA signed_number
				{
				DebugLocation(1093, 51);
				COMMA669=(IToken)Match(input,COMMA,Follow._COMMA_in_tuple_or_quad8631); if (state.failed) return retval;
				if (state.backtracking == 0) {
				COMMA669_tree = (CommonTree)adaptor.Create(COMMA669);
				adaptor.AddChild(root_0, COMMA669_tree);
				}
				DebugLocation(1093, 57);
				PushFollow(Follow._signed_number_in_tuple_or_quad8633);
				signed_number670=signed_number();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, signed_number670.Tree);
				DebugLocation(1093, 71);
				COMMA671=(IToken)Match(input,COMMA,Follow._COMMA_in_tuple_or_quad8635); if (state.failed) return retval;
				if (state.backtracking == 0) {
				COMMA671_tree = (CommonTree)adaptor.Create(COMMA671);
				adaptor.AddChild(root_0, COMMA671_tree);
				}
				DebugLocation(1093, 77);
				PushFollow(Follow._signed_number_in_tuple_or_quad8637);
				signed_number672=signed_number();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, signed_number672.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(177); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("tuple_or_quad", 117);
			LeaveRule("tuple_or_quad", 117);
			LeaveRule_tuple_or_quad();
		}
		DebugLocation(1093, 92);
		} finally { DebugExitRule(GrammarFileName, "tuple_or_quad"); }
		return retval;

	}
	// $ANTLR end "tuple_or_quad"

	partial void EnterRule_char_defs();
	partial void LeaveRule_char_defs();
	// $ANTLR start "char_defs"
	// Smi.g:1096:1: char_defs : ( C_STRING | L_BRACE tuple_or_quad R_BRACE | defined_value );
	[GrammarRule("char_defs")]
	private AstParserRuleReturnScope<CommonTree, IToken> char_defs()
	{
		EnterRule_char_defs();
		EnterRule("char_defs", 118);
		TraceIn("char_defs", 118);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken C_STRING673 = default(IToken);
		IToken L_BRACE674 = default(IToken);
		IToken R_BRACE676 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> tuple_or_quad675 = default(AstParserRuleReturnScope<CommonTree, IToken>);
		AstParserRuleReturnScope<CommonTree, IToken> defined_value677 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree C_STRING673_tree = default(CommonTree);
		CommonTree L_BRACE674_tree = default(CommonTree);
		CommonTree R_BRACE676_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "char_defs");
		DebugLocation(1096, 24);
		try
		{
			// Smi.g:1096:10: ( C_STRING | L_BRACE tuple_or_quad R_BRACE | defined_value )
			int alt178=3;
			try { DebugEnterDecision(178, false);
			switch (input.LA(1))
			{
			case C_STRING:
				{
				alt178 = 1;
				}
				break;
			case L_BRACE:
				{
				alt178 = 2;
				}
				break;
			case LOWER:
			case UPPER:
				{
				alt178 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 178, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(178); }
			switch (alt178)
			{
			case 1:
				DebugEnterAlt(1);
				// Smi.g:1096:12: C_STRING
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1096, 12);
				C_STRING673=(IToken)Match(input,C_STRING,Follow._C_STRING_in_char_defs8648); if (state.failed) return retval;
				if (state.backtracking == 0) {
				C_STRING673_tree = (CommonTree)adaptor.Create(C_STRING673);
				adaptor.AddChild(root_0, C_STRING673_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Smi.g:1097:12: L_BRACE tuple_or_quad R_BRACE
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1097, 12);
				L_BRACE674=(IToken)Match(input,L_BRACE,Follow._L_BRACE_in_char_defs8662); if (state.failed) return retval;
				if (state.backtracking == 0) {
				L_BRACE674_tree = (CommonTree)adaptor.Create(L_BRACE674);
				adaptor.AddChild(root_0, L_BRACE674_tree);
				}
				DebugLocation(1097, 20);
				PushFollow(Follow._tuple_or_quad_in_char_defs8664);
				tuple_or_quad675=tuple_or_quad();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, tuple_or_quad675.Tree);
				DebugLocation(1097, 34);
				R_BRACE676=(IToken)Match(input,R_BRACE,Follow._R_BRACE_in_char_defs8666); if (state.failed) return retval;
				if (state.backtracking == 0) {
				R_BRACE676_tree = (CommonTree)adaptor.Create(R_BRACE676);
				adaptor.AddChild(root_0, R_BRACE676_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Smi.g:1098:12: defined_value
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(1098, 12);
				PushFollow(Follow._defined_value_in_char_defs8679);
				defined_value677=defined_value();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, defined_value677.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("char_defs", 118);
			LeaveRule("char_defs", 118);
			LeaveRule_char_defs();
		}
		DebugLocation(1098, 24);
		} finally { DebugExitRule(GrammarFileName, "char_defs"); }
		return retval;

	}
	// $ANTLR end "char_defs"

	partial void EnterRule_named_value();
	partial void LeaveRule_named_value();
	// $ANTLR start "named_value"
	// Smi.g:1103:1: named_value : LOWER value ;
	[GrammarRule("named_value")]
	private AstParserRuleReturnScope<CommonTree, IToken> named_value()
	{
		EnterRule_named_value();
		EnterRule("named_value", 119);
		TraceIn("named_value", 119);
		AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
		retval.Start = (IToken)input.LT(1);

		CommonTree root_0 = default(CommonTree);

		IToken LOWER678 = default(IToken);
		AstParserRuleReturnScope<CommonTree, IToken> value679 = default(AstParserRuleReturnScope<CommonTree, IToken>);

		CommonTree LOWER678_tree = default(CommonTree);
		try { DebugEnterRule(GrammarFileName, "named_value");
		DebugLocation(1103, 24);
		try
		{
			// Smi.g:1103:12: ( LOWER value )
			DebugEnterAlt(1);
			// Smi.g:1103:14: LOWER value
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(1103, 14);
			LOWER678=(IToken)Match(input,LOWER,Follow._LOWER_in_named_value8689); if (state.failed) return retval;
			if (state.backtracking == 0) {
			LOWER678_tree = (CommonTree)adaptor.Create(LOWER678);
			adaptor.AddChild(root_0, LOWER678_tree);
			}
			DebugLocation(1103, 20);
			PushFollow(Follow._value_in_named_value8691);
			value679=value();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, value679.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (CommonTree)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("named_value", 119);
			LeaveRule("named_value", 119);
			LeaveRule_named_value();
		}
		DebugLocation(1103, 24);
		} finally { DebugExitRule(GrammarFileName, "named_value"); }
		return retval;

	}
	// $ANTLR end "named_value"

	partial void EnterRule_synpred1_Smi_fragment();
	partial void LeaveRule_synpred1_Smi_fragment();

	// $ANTLR start synpred1_Smi
	public void synpred1_Smi_fragment()
	{
		EnterRule_synpred1_Smi_fragment();
		EnterRule("synpred1_Smi_fragment", 120);
		TraceIn("synpred1_Smi_fragment", 120);
		try
		{
			// Smi.g:630:27: ( LOWER ( LOWER | NUMBER ) )
			DebugEnterAlt(1);
			// Smi.g:630:28: LOWER ( LOWER | NUMBER )
			{
			DebugLocation(630, 28);
			Match(input,LOWER,Follow._LOWER_in_synpred1_Smi2040); if (state.failed) return;
			DebugLocation(630, 34);
			if (input.LA(1)==LOWER||input.LA(1)==NUMBER)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("synpred1_Smi_fragment", 120);
			LeaveRule("synpred1_Smi_fragment", 120);
			LeaveRule_synpred1_Smi_fragment();
		}
	}
	// $ANTLR end synpred1_Smi

	partial void EnterRule_synpred2_Smi_fragment();
	partial void LeaveRule_synpred2_Smi_fragment();

	// $ANTLR start synpred2_Smi
	public void synpred2_Smi_fragment()
	{
		EnterRule_synpred2_Smi_fragment();
		EnterRule("synpred2_Smi_fragment", 121);
		TraceIn("synpred2_Smi_fragment", 121);
		try
		{
			// Smi.g:679:29: ( defined_value )
			DebugEnterAlt(1);
			// Smi.g:679:30: defined_value
			{
			DebugLocation(679, 30);
			PushFollow(Follow._defined_value_in_synpred2_Smi2439);
			defined_value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred2_Smi_fragment", 121);
			LeaveRule("synpred2_Smi_fragment", 121);
			LeaveRule_synpred2_Smi_fragment();
		}
	}
	// $ANTLR end synpred2_Smi

	partial void EnterRule_synpred3_Smi_fragment();
	partial void LeaveRule_synpred3_Smi_fragment();

	// $ANTLR start synpred3_Smi
	public void synpred3_Smi_fragment()
	{
		EnterRule_synpred3_Smi_fragment();
		EnterRule("synpred3_Smi_fragment", 122);
		TraceIn("synpred3_Smi_fragment", 122);
		try
		{
			// Smi.g:694:8: ( TRUE_KW )
			DebugEnterAlt(1);
			// Smi.g:694:9: TRUE_KW
			{
			DebugLocation(694, 9);
			Match(input,TRUE_KW,Follow._TRUE_KW_in_synpred3_Smi2655); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred3_Smi_fragment", 122);
			LeaveRule("synpred3_Smi_fragment", 122);
			LeaveRule_synpred3_Smi_fragment();
		}
	}
	// $ANTLR end synpred3_Smi

	partial void EnterRule_synpred4_Smi_fragment();
	partial void LeaveRule_synpred4_Smi_fragment();

	// $ANTLR start synpred4_Smi
	public void synpred4_Smi_fragment()
	{
		EnterRule_synpred4_Smi_fragment();
		EnterRule("synpred4_Smi_fragment", 123);
		TraceIn("synpred4_Smi_fragment", 123);
		try
		{
			// Smi.g:695:8: ( FALSE_KW )
			DebugEnterAlt(1);
			// Smi.g:695:9: FALSE_KW
			{
			DebugLocation(695, 9);
			Match(input,FALSE_KW,Follow._FALSE_KW_in_synpred4_Smi2671); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred4_Smi_fragment", 123);
			LeaveRule("synpred4_Smi_fragment", 123);
			LeaveRule_synpred4_Smi_fragment();
		}
	}
	// $ANTLR end synpred4_Smi

	partial void EnterRule_synpred5_Smi_fragment();
	partial void LeaveRule_synpred5_Smi_fragment();

	// $ANTLR start synpred5_Smi
	public void synpred5_Smi_fragment()
	{
		EnterRule_synpred5_Smi_fragment();
		EnterRule("synpred5_Smi_fragment", 124);
		TraceIn("synpred5_Smi_fragment", 124);
		try
		{
			// Smi.g:696:8: ( NULL_KW )
			DebugEnterAlt(1);
			// Smi.g:696:9: NULL_KW
			{
			DebugLocation(696, 9);
			Match(input,NULL_KW,Follow._NULL_KW_in_synpred5_Smi2687); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred5_Smi_fragment", 124);
			LeaveRule("synpred5_Smi_fragment", 124);
			LeaveRule_synpred5_Smi_fragment();
		}
	}
	// $ANTLR end synpred5_Smi

	partial void EnterRule_synpred6_Smi_fragment();
	partial void LeaveRule_synpred6_Smi_fragment();

	// $ANTLR start synpred6_Smi
	public void synpred6_Smi_fragment()
	{
		EnterRule_synpred6_Smi_fragment();
		EnterRule("synpred6_Smi_fragment", 125);
		TraceIn("synpred6_Smi_fragment", 125);
		try
		{
			// Smi.g:697:8: ( C_STRING )
			DebugEnterAlt(1);
			// Smi.g:697:9: C_STRING
			{
			DebugLocation(697, 9);
			Match(input,C_STRING,Follow._C_STRING_in_synpred6_Smi2704); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred6_Smi_fragment", 125);
			LeaveRule("synpred6_Smi_fragment", 125);
			LeaveRule_synpred6_Smi_fragment();
		}
	}
	// $ANTLR end synpred6_Smi

	partial void EnterRule_synpred7_Smi_fragment();
	partial void LeaveRule_synpred7_Smi_fragment();

	// $ANTLR start synpred7_Smi
	public void synpred7_Smi_fragment()
	{
		EnterRule_synpred7_Smi_fragment();
		EnterRule("synpred7_Smi_fragment", 126);
		TraceIn("synpred7_Smi_fragment", 126);
		try
		{
			// Smi.g:698:8: ( defined_value )
			DebugEnterAlt(1);
			// Smi.g:698:9: defined_value
			{
			DebugLocation(698, 9);
			PushFollow(Follow._defined_value_in_synpred7_Smi2720);
			defined_value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred7_Smi_fragment", 126);
			LeaveRule("synpred7_Smi_fragment", 126);
			LeaveRule_synpred7_Smi_fragment();
		}
	}
	// $ANTLR end synpred7_Smi

	partial void EnterRule_synpred8_Smi_fragment();
	partial void LeaveRule_synpred8_Smi_fragment();

	// $ANTLR start synpred8_Smi
	public void synpred8_Smi_fragment()
	{
		EnterRule_synpred8_Smi_fragment();
		EnterRule("synpred8_Smi_fragment", 127);
		TraceIn("synpred8_Smi_fragment", 127);
		try
		{
			// Smi.g:699:8: ( signed_number )
			DebugEnterAlt(1);
			// Smi.g:699:9: signed_number
			{
			DebugLocation(699, 9);
			PushFollow(Follow._signed_number_in_synpred8_Smi2736);
			signed_number();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred8_Smi_fragment", 127);
			LeaveRule("synpred8_Smi_fragment", 127);
			LeaveRule_synpred8_Smi_fragment();
		}
	}
	// $ANTLR end synpred8_Smi

	partial void EnterRule_synpred9_Smi_fragment();
	partial void LeaveRule_synpred9_Smi_fragment();

	// $ANTLR start synpred9_Smi
	public void synpred9_Smi_fragment()
	{
		EnterRule_synpred9_Smi_fragment();
		EnterRule("synpred9_Smi_fragment", 128);
		TraceIn("synpred9_Smi_fragment", 128);
		try
		{
			// Smi.g:700:8: ( choice_value )
			DebugEnterAlt(1);
			// Smi.g:700:9: choice_value
			{
			DebugLocation(700, 9);
			PushFollow(Follow._choice_value_in_synpred9_Smi2751);
			choice_value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred9_Smi_fragment", 128);
			LeaveRule("synpred9_Smi_fragment", 128);
			LeaveRule_synpred9_Smi_fragment();
		}
	}
	// $ANTLR end synpred9_Smi

	partial void EnterRule_synpred10_Smi_fragment();
	partial void LeaveRule_synpred10_Smi_fragment();

	// $ANTLR start synpred10_Smi
	public void synpred10_Smi_fragment()
	{
		EnterRule_synpred10_Smi_fragment();
		EnterRule("synpred10_Smi_fragment", 129);
		TraceIn("synpred10_Smi_fragment", 129);
		try
		{
			// Smi.g:701:8: ( sequence_value )
			DebugEnterAlt(1);
			// Smi.g:701:9: sequence_value
			{
			DebugLocation(701, 9);
			PushFollow(Follow._sequence_value_in_synpred10_Smi2767);
			sequence_value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred10_Smi_fragment", 129);
			LeaveRule("synpred10_Smi_fragment", 129);
			LeaveRule_synpred10_Smi_fragment();
		}
	}
	// $ANTLR end synpred10_Smi

	partial void EnterRule_synpred11_Smi_fragment();
	partial void LeaveRule_synpred11_Smi_fragment();

	// $ANTLR start synpred11_Smi
	public void synpred11_Smi_fragment()
	{
		EnterRule_synpred11_Smi_fragment();
		EnterRule("synpred11_Smi_fragment", 130);
		TraceIn("synpred11_Smi_fragment", 130);
		try
		{
			// Smi.g:702:8: ( sequenceof_value )
			DebugEnterAlt(1);
			// Smi.g:702:9: sequenceof_value
			{
			DebugLocation(702, 9);
			PushFollow(Follow._sequenceof_value_in_synpred11_Smi2783);
			sequenceof_value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred11_Smi_fragment", 130);
			LeaveRule("synpred11_Smi_fragment", 130);
			LeaveRule_synpred11_Smi_fragment();
		}
	}
	// $ANTLR end synpred11_Smi

	partial void EnterRule_synpred12_Smi_fragment();
	partial void LeaveRule_synpred12_Smi_fragment();

	// $ANTLR start synpred12_Smi
	public void synpred12_Smi_fragment()
	{
		EnterRule_synpred12_Smi_fragment();
		EnterRule("synpred12_Smi_fragment", 131);
		TraceIn("synpred12_Smi_fragment", 131);
		try
		{
			// Smi.g:703:8: ( cstr_value )
			DebugEnterAlt(1);
			// Smi.g:703:9: cstr_value
			{
			DebugLocation(703, 9);
			PushFollow(Follow._cstr_value_in_synpred12_Smi2799);
			cstr_value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred12_Smi_fragment", 131);
			LeaveRule("synpred12_Smi_fragment", 131);
			LeaveRule_synpred12_Smi_fragment();
		}
	}
	// $ANTLR end synpred12_Smi

	partial void EnterRule_synpred13_Smi_fragment();
	partial void LeaveRule_synpred13_Smi_fragment();

	// $ANTLR start synpred13_Smi
	public void synpred13_Smi_fragment()
	{
		EnterRule_synpred13_Smi_fragment();
		EnterRule("synpred13_Smi_fragment", 132);
		TraceIn("synpred13_Smi_fragment", 132);
		try
		{
			// Smi.g:704:8: ( obj_id_comp_lst )
			DebugEnterAlt(1);
			// Smi.g:704:9: obj_id_comp_lst
			{
			DebugLocation(704, 9);
			PushFollow(Follow._obj_id_comp_lst_in_synpred13_Smi2815);
			obj_id_comp_lst();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred13_Smi_fragment", 132);
			LeaveRule("synpred13_Smi_fragment", 132);
			LeaveRule_synpred13_Smi_fragment();
		}
	}
	// $ANTLR end synpred13_Smi

	partial void EnterRule_synpred14_Smi_fragment();
	partial void LeaveRule_synpred14_Smi_fragment();

	// $ANTLR start synpred14_Smi
	public void synpred14_Smi_fragment()
	{
		EnterRule_synpred14_Smi_fragment();
		EnterRule("synpred14_Smi_fragment", 133);
		TraceIn("synpred14_Smi_fragment", 133);
		try
		{
			// Smi.g:705:8: ( PLUS_INFINITY_KW )
			DebugEnterAlt(1);
			// Smi.g:705:9: PLUS_INFINITY_KW
			{
			DebugLocation(705, 9);
			Match(input,PLUS_INFINITY_KW,Follow._PLUS_INFINITY_KW_in_synpred14_Smi2831); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred14_Smi_fragment", 133);
			LeaveRule("synpred14_Smi_fragment", 133);
			LeaveRule_synpred14_Smi_fragment();
		}
	}
	// $ANTLR end synpred14_Smi

	partial void EnterRule_synpred15_Smi_fragment();
	partial void LeaveRule_synpred15_Smi_fragment();

	// $ANTLR start synpred15_Smi
	public void synpred15_Smi_fragment()
	{
		EnterRule_synpred15_Smi_fragment();
		EnterRule("synpred15_Smi_fragment", 134);
		TraceIn("synpred15_Smi_fragment", 134);
		try
		{
			// Smi.g:706:8: ( MINUS_INFINITY_KW )
			DebugEnterAlt(1);
			// Smi.g:706:9: MINUS_INFINITY_KW
			{
			DebugLocation(706, 9);
			Match(input,MINUS_INFINITY_KW,Follow._MINUS_INFINITY_KW_in_synpred15_Smi2847); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred15_Smi_fragment", 134);
			LeaveRule("synpred15_Smi_fragment", 134);
			LeaveRule_synpred15_Smi_fragment();
		}
	}
	// $ANTLR end synpred15_Smi

	partial void EnterRule_synpred16_Smi_fragment();
	partial void LeaveRule_synpred16_Smi_fragment();

	// $ANTLR start synpred16_Smi
	public void synpred16_Smi_fragment()
	{
		EnterRule_synpred16_Smi_fragment();
		EnterRule("synpred16_Smi_fragment", 135);
		TraceIn("synpred16_Smi_fragment", 135);
		try
		{
			// Smi.g:735:36: ( L_BRACE namedNumber )
			DebugEnterAlt(1);
			// Smi.g:735:37: L_BRACE namedNumber
			{
			DebugLocation(735, 37);
			Match(input,L_BRACE,Follow._L_BRACE_in_synpred16_Smi3160); if (state.failed) return;
			DebugLocation(735, 45);
			PushFollow(Follow._namedNumber_in_synpred16_Smi3162);
			namedNumber();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred16_Smi_fragment", 135);
			LeaveRule("synpred16_Smi_fragment", 135);
			LeaveRule_synpred16_Smi_fragment();
		}
	}
	// $ANTLR end synpred16_Smi

	partial void EnterRule_synpred17_Smi_fragment();
	partial void LeaveRule_synpred17_Smi_fragment();

	// $ANTLR start synpred17_Smi
	public void synpred17_Smi_fragment()
	{
		EnterRule_synpred17_Smi_fragment();
		EnterRule("synpred17_Smi_fragment", 136);
		TraceIn("synpred17_Smi_fragment", 136);
		try
		{
			// Smi.g:751:27: ( L_BRACE namedNumber )
			DebugEnterAlt(1);
			// Smi.g:751:28: L_BRACE namedNumber
			{
			DebugLocation(751, 28);
			Match(input,L_BRACE,Follow._L_BRACE_in_synpred17_Smi3253); if (state.failed) return;
			DebugLocation(751, 36);
			PushFollow(Follow._namedNumber_in_synpred17_Smi3255);
			namedNumber();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred17_Smi_fragment", 136);
			LeaveRule("synpred17_Smi_fragment", 136);
			LeaveRule_synpred17_Smi_fragment();
		}
	}
	// $ANTLR end synpred17_Smi

	partial void EnterRule_synpred18_Smi_fragment();
	partial void LeaveRule_synpred18_Smi_fragment();

	// $ANTLR start synpred18_Smi
	public void synpred18_Smi_fragment()
	{
		EnterRule_synpred18_Smi_fragment();
		EnterRule("synpred18_Smi_fragment", 137);
		TraceIn("synpred18_Smi_fragment", 137);
		try
		{
			// Smi.g:795:44: ( LOWER )
			DebugEnterAlt(1);
			// Smi.g:795:45: LOWER
			{
			DebugLocation(795, 45);
			Match(input,LOWER,Follow._LOWER_in_synpred18_Smi3613); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred18_Smi_fragment", 137);
			LeaveRule("synpred18_Smi_fragment", 137);
			LeaveRule_synpred18_Smi_fragment();
		}
	}
	// $ANTLR end synpred18_Smi

	partial void EnterRule_synpred19_Smi_fragment();
	partial void LeaveRule_synpred19_Smi_fragment();

	// $ANTLR start synpred19_Smi
	public void synpred19_Smi_fragment()
	{
		EnterRule_synpred19_Smi_fragment();
		EnterRule("synpred19_Smi_fragment", 138);
		TraceIn("synpred19_Smi_fragment", 138);
		try
		{
			// Smi.g:796:23: ( RESULT_KW )
			DebugEnterAlt(1);
			// Smi.g:796:24: RESULT_KW
			{
			DebugLocation(796, 24);
			Match(input,RESULT_KW,Follow._RESULT_KW_in_synpred19_Smi3651); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred19_Smi_fragment", 138);
			LeaveRule("synpred19_Smi_fragment", 138);
			LeaveRule_synpred19_Smi_fragment();
		}
	}
	// $ANTLR end synpred19_Smi

	partial void EnterRule_synpred20_Smi_fragment();
	partial void LeaveRule_synpred20_Smi_fragment();

	// $ANTLR start synpred20_Smi
	public void synpred20_Smi_fragment()
	{
		EnterRule_synpred20_Smi_fragment();
		EnterRule("synpred20_Smi_fragment", 139);
		TraceIn("synpred20_Smi_fragment", 139);
		try
		{
			// Smi.g:797:26: ( LOWER )
			DebugEnterAlt(1);
			// Smi.g:797:27: LOWER
			{
			DebugLocation(797, 27);
			Match(input,LOWER,Follow._LOWER_in_synpred20_Smi3685); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred20_Smi_fragment", 139);
			LeaveRule("synpred20_Smi_fragment", 139);
			LeaveRule_synpred20_Smi_fragment();
		}
	}
	// $ANTLR end synpred20_Smi

	partial void EnterRule_synpred21_Smi_fragment();
	partial void LeaveRule_synpred21_Smi_fragment();

	// $ANTLR start synpred21_Smi
	public void synpred21_Smi_fragment()
	{
		EnterRule_synpred21_Smi_fragment();
		EnterRule("synpred21_Smi_fragment", 140);
		TraceIn("synpred21_Smi_fragment", 140);
		try
		{
			// Smi.g:797:38: ( LOWER )
			DebugEnterAlt(1);
			// Smi.g:797:39: LOWER
			{
			DebugLocation(797, 39);
			Match(input,LOWER,Follow._LOWER_in_synpred21_Smi3692); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred21_Smi_fragment", 140);
			LeaveRule("synpred21_Smi_fragment", 140);
			LeaveRule_synpred21_Smi_fragment();
		}
	}
	// $ANTLR end synpred21_Smi

	partial void EnterRule_synpred22_Smi_fragment();
	partial void LeaveRule_synpred22_Smi_fragment();

	// $ANTLR start synpred22_Smi
	public void synpred22_Smi_fragment()
	{
		EnterRule_synpred22_Smi_fragment();
		EnterRule("synpred22_Smi_fragment", 141);
		TraceIn("synpred22_Smi_fragment", 141);
		try
		{
			// Smi.g:799:23: ( ERRORS_KW )
			DebugEnterAlt(1);
			// Smi.g:799:24: ERRORS_KW
			{
			DebugLocation(799, 24);
			Match(input,ERRORS_KW,Follow._ERRORS_KW_in_synpred22_Smi3738); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred22_Smi_fragment", 141);
			LeaveRule("synpred22_Smi_fragment", 141);
			LeaveRule_synpred22_Smi_fragment();
		}
	}
	// $ANTLR end synpred22_Smi

	partial void EnterRule_synpred23_Smi_fragment();
	partial void LeaveRule_synpred23_Smi_fragment();

	// $ANTLR start synpred23_Smi
	public void synpred23_Smi_fragment()
	{
		EnterRule_synpred23_Smi_fragment();
		EnterRule("synpred23_Smi_fragment", 142);
		TraceIn("synpred23_Smi_fragment", 142);
		try
		{
			// Smi.g:800:23: ( LINKED_KW )
			DebugEnterAlt(1);
			// Smi.g:800:24: LINKED_KW
			{
			DebugLocation(800, 24);
			Match(input,LINKED_KW,Follow._LINKED_KW_in_synpred23_Smi3781); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred23_Smi_fragment", 142);
			LeaveRule("synpred23_Smi_fragment", 142);
			LeaveRule_synpred23_Smi_fragment();
		}
	}
	// $ANTLR end synpred23_Smi

	partial void EnterRule_synpred24_Smi_fragment();
	partial void LeaveRule_synpred24_Smi_fragment();

	// $ANTLR start synpred24_Smi
	public void synpred24_Smi_fragment()
	{
		EnterRule_synpred24_Smi_fragment();
		EnterRule("synpred24_Smi_fragment", 143);
		TraceIn("synpred24_Smi_fragment", 143);
		try
		{
			// Smi.g:810:39: ( LOWER )
			DebugEnterAlt(1);
			// Smi.g:810:40: LOWER
			{
			DebugLocation(810, 40);
			Match(input,LOWER,Follow._LOWER_in_synpred24_Smi3823); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred24_Smi_fragment", 143);
			LeaveRule("synpred24_Smi_fragment", 143);
			LeaveRule_synpred24_Smi_fragment();
		}
	}
	// $ANTLR end synpred24_Smi

	partial void EnterRule_synpred25_Smi_fragment();
	partial void LeaveRule_synpred25_Smi_fragment();

	// $ANTLR start synpred25_Smi
	public void synpred25_Smi_fragment()
	{
		EnterRule_synpred25_Smi_fragment();
		EnterRule("synpred25_Smi_fragment", 144);
		TraceIn("synpred25_Smi_fragment", 144);
		try
		{
			// Smi.g:841:23: ( smi_type L_BRACE )
			DebugEnterAlt(1);
			// Smi.g:841:24: smi_type L_BRACE
			{
			DebugLocation(841, 24);
			PushFollow(Follow._smi_type_in_synpred25_Smi4153);
			smi_type();
			PopFollow();
			if (state.failed) return;
			DebugLocation(841, 33);
			Match(input,L_BRACE,Follow._L_BRACE_in_synpred25_Smi4155); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred25_Smi_fragment", 144);
			LeaveRule("synpred25_Smi_fragment", 144);
			LeaveRule_synpred25_Smi_fragment();
		}
	}
	// $ANTLR end synpred25_Smi

	partial void EnterRule_synpred26_Smi_fragment();
	partial void LeaveRule_synpred26_Smi_fragment();

	// $ANTLR start synpred26_Smi
	public void synpred26_Smi_fragment()
	{
		EnterRule_synpred26_Smi_fragment();
		EnterRule("synpred26_Smi_fragment", 145);
		TraceIn("synpred26_Smi_fragment", 145);
		try
		{
			// Smi.g:842:24: ( smi_type )
			DebugEnterAlt(1);
			// Smi.g:842:25: smi_type
			{
			DebugLocation(842, 25);
			PushFollow(Follow._smi_type_in_synpred26_Smi4189);
			smi_type();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred26_Smi_fragment", 145);
			LeaveRule("synpred26_Smi_fragment", 145);
			LeaveRule_synpred26_Smi_fragment();
		}
	}
	// $ANTLR end synpred26_Smi

	partial void EnterRule_synpred27_Smi_fragment();
	partial void LeaveRule_synpred27_Smi_fragment();

	// $ANTLR start synpred27_Smi
	public void synpred27_Smi_fragment()
	{
		EnterRule_synpred27_Smi_fragment();
		EnterRule("synpred27_Smi_fragment", 146);
		TraceIn("synpred27_Smi_fragment", 146);
		try
		{
			// Smi.g:851:21: ( 'DESCRIPTION' )
			DebugEnterAlt(1);
			// Smi.g:851:22: 'DESCRIPTION'
			{
			DebugLocation(851, 22);
			Match(input,141,Follow._141_in_synpred27_Smi4493); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred27_Smi_fragment", 146);
			LeaveRule("synpred27_Smi_fragment", 146);
			LeaveRule_synpred27_Smi_fragment();
		}
	}
	// $ANTLR end synpred27_Smi

	partial void EnterRule_synpred28_Smi_fragment();
	partial void LeaveRule_synpred28_Smi_fragment();

	// $ANTLR start synpred28_Smi
	public void synpred28_Smi_fragment()
	{
		EnterRule_synpred28_Smi_fragment();
		EnterRule("synpred28_Smi_fragment", 147);
		TraceIn("synpred28_Smi_fragment", 147);
		try
		{
			// Smi.g:854:7: (~ ( 'PIB-INDEX' ) )
			DebugEnterAlt(1);
			// Smi.g:
			{
			DebugLocation(854, 7);
			if ((input.LA(1)>=ABSENT_KW && input.LA(1)<=169)||(input.LA(1)>=171 && input.LA(1)<=197))
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("synpred28_Smi_fragment", 147);
			LeaveRule("synpred28_Smi_fragment", 147);
			LeaveRule_synpred28_Smi_fragment();
		}
	}
	// $ANTLR end synpred28_Smi

	partial void EnterRule_synpred29_Smi_fragment();
	partial void LeaveRule_synpred29_Smi_fragment();

	// $ANTLR start synpred29_Smi
	public void synpred29_Smi_fragment()
	{
		EnterRule_synpred29_Smi_fragment();
		EnterRule("synpred29_Smi_fragment", 148);
		TraceIn("synpred29_Smi_fragment", 148);
		try
		{
			// Smi.g:861:7: ( 'DEFVAL' )
			DebugEnterAlt(1);
			// Smi.g:861:8: 'DEFVAL'
			{
			DebugLocation(861, 8);
			Match(input,140,Follow._140_in_synpred29_Smi4889); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred29_Smi_fragment", 148);
			LeaveRule("synpred29_Smi_fragment", 148);
			LeaveRule_synpred29_Smi_fragment();
		}
	}
	// $ANTLR end synpred29_Smi

	partial void EnterRule_synpred30_Smi_fragment();
	partial void LeaveRule_synpred30_Smi_fragment();

	// $ANTLR start synpred30_Smi
	public void synpred30_Smi_fragment()
	{
		EnterRule_synpred30_Smi_fragment();
		EnterRule("synpred30_Smi_fragment", 149);
		TraceIn("synpred30_Smi_fragment", 149);
		try
		{
			// Smi.g:862:23: ( L_BRACE LOWER ( COMMA | R_BRACE ) )
			DebugEnterAlt(1);
			// Smi.g:862:24: L_BRACE LOWER ( COMMA | R_BRACE )
			{
			DebugLocation(862, 24);
			Match(input,L_BRACE,Follow._L_BRACE_in_synpred30_Smi4922); if (state.failed) return;
			DebugLocation(862, 32);
			Match(input,LOWER,Follow._LOWER_in_synpred30_Smi4924); if (state.failed) return;
			DebugLocation(862, 38);
			if (input.LA(1)==COMMA||input.LA(1)==R_BRACE)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("synpred30_Smi_fragment", 149);
			LeaveRule("synpred30_Smi_fragment", 149);
			LeaveRule_synpred30_Smi_fragment();
		}
	}
	// $ANTLR end synpred30_Smi

	partial void EnterRule_synpred31_Smi_fragment();
	partial void LeaveRule_synpred31_Smi_fragment();

	// $ANTLR start synpred31_Smi
	public void synpred31_Smi_fragment()
	{
		EnterRule_synpred31_Smi_fragment();
		EnterRule("synpred31_Smi_fragment", 150);
		TraceIn("synpred31_Smi_fragment", 150);
		try
		{
			// Smi.g:926:40: ( smi_type L_BRACE )
			DebugEnterAlt(1);
			// Smi.g:926:41: smi_type L_BRACE
			{
			DebugLocation(926, 41);
			PushFollow(Follow._smi_type_in_synpred31_Smi5844);
			smi_type();
			PopFollow();
			if (state.failed) return;
			DebugLocation(926, 50);
			Match(input,L_BRACE,Follow._L_BRACE_in_synpred31_Smi5846); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred31_Smi_fragment", 150);
			LeaveRule("synpred31_Smi_fragment", 150);
			LeaveRule_synpred31_Smi_fragment();
		}
	}
	// $ANTLR end synpred31_Smi

	partial void EnterRule_synpred32_Smi_fragment();
	partial void LeaveRule_synpred32_Smi_fragment();

	// $ANTLR start synpred32_Smi
	public void synpred32_Smi_fragment()
	{
		EnterRule_synpred32_Smi_fragment();
		EnterRule("synpred32_Smi_fragment", 151);
		TraceIn("synpred32_Smi_fragment", 151);
		try
		{
			// Smi.g:961:42: ( UPPER )
			DebugEnterAlt(1);
			// Smi.g:961:43: UPPER
			{
			DebugLocation(961, 43);
			Match(input,UPPER,Follow._UPPER_in_synpred32_Smi6322); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred32_Smi_fragment", 151);
			LeaveRule("synpred32_Smi_fragment", 151);
			LeaveRule_synpred32_Smi_fragment();
		}
	}
	// $ANTLR end synpred32_Smi

	partial void EnterRule_synpred33_Smi_fragment();
	partial void LeaveRule_synpred33_Smi_fragment();

	// $ANTLR start synpred33_Smi
	public void synpred33_Smi_fragment()
	{
		EnterRule_synpred33_Smi_fragment();
		EnterRule("synpred33_Smi_fragment", 152);
		TraceIn("synpred33_Smi_fragment", 152);
		try
		{
			// Smi.g:961:60: ( value )
			DebugEnterAlt(1);
			// Smi.g:961:61: value
			{
			DebugLocation(961, 61);
			PushFollow(Follow._value_in_synpred33_Smi6331);
			value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred33_Smi_fragment", 152);
			LeaveRule("synpred33_Smi_fragment", 152);
			LeaveRule_synpred33_Smi_fragment();
		}
	}
	// $ANTLR end synpred33_Smi

	partial void EnterRule_synpred34_Smi_fragment();
	partial void LeaveRule_synpred34_Smi_fragment();

	// $ANTLR start synpred34_Smi
	public void synpred34_Smi_fragment()
	{
		EnterRule_synpred34_Smi_fragment();
		EnterRule("synpred34_Smi_fragment", 153);
		TraceIn("synpred34_Smi_fragment", 153);
		try
		{
			// Smi.g:971:32: ( smi_type L_BRACE )
			DebugEnterAlt(1);
			// Smi.g:971:33: smi_type L_BRACE
			{
			DebugLocation(971, 33);
			PushFollow(Follow._smi_type_in_synpred34_Smi6714);
			smi_type();
			PopFollow();
			if (state.failed) return;
			DebugLocation(971, 42);
			Match(input,L_BRACE,Follow._L_BRACE_in_synpred34_Smi6716); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred34_Smi_fragment", 153);
			LeaveRule("synpred34_Smi_fragment", 153);
			LeaveRule_synpred34_Smi_fragment();
		}
	}
	// $ANTLR end synpred34_Smi

	partial void EnterRule_synpred35_Smi_fragment();
	partial void LeaveRule_synpred35_Smi_fragment();

	// $ANTLR start synpred35_Smi
	public void synpred35_Smi_fragment()
	{
		EnterRule_synpred35_Smi_fragment();
		EnterRule("synpred35_Smi_fragment", 154);
		TraceIn("synpred35_Smi_fragment", 154);
		try
		{
			// Smi.g:972:32: ( smi_type )
			DebugEnterAlt(1);
			// Smi.g:972:33: smi_type
			{
			DebugLocation(972, 33);
			PushFollow(Follow._smi_type_in_synpred35_Smi6768);
			smi_type();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred35_Smi_fragment", 154);
			LeaveRule("synpred35_Smi_fragment", 154);
			LeaveRule_synpred35_Smi_fragment();
		}
	}
	// $ANTLR end synpred35_Smi

	partial void EnterRule_synpred36_Smi_fragment();
	partial void LeaveRule_synpred36_Smi_fragment();

	// $ANTLR start synpred36_Smi
	public void synpred36_Smi_fragment()
	{
		EnterRule_synpred36_Smi_fragment();
		EnterRule("synpred36_Smi_fragment", 155);
		TraceIn("synpred36_Smi_fragment", 155);
		try
		{
			// Smi.g:1002:56: ( L_BRACE ( LOWER | COMMA | R_BRACE ) )
			DebugEnterAlt(1);
			// Smi.g:1002:57: L_BRACE ( LOWER | COMMA | R_BRACE )
			{
			DebugLocation(1002, 57);
			Match(input,L_BRACE,Follow._L_BRACE_in_synpred36_Smi7260); if (state.failed) return;
			DebugLocation(1002, 65);
			if (input.LA(1)==COMMA||input.LA(1)==LOWER||input.LA(1)==R_BRACE)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("synpred36_Smi_fragment", 155);
			LeaveRule("synpred36_Smi_fragment", 155);
			LeaveRule_synpred36_Smi_fragment();
		}
	}
	// $ANTLR end synpred36_Smi

	partial void EnterRule_synpred37_Smi_fragment();
	partial void LeaveRule_synpred37_Smi_fragment();

	// $ANTLR start synpred37_Smi
	public void synpred37_Smi_fragment()
	{
		EnterRule_synpred37_Smi_fragment();
		EnterRule("synpred37_Smi_fragment", 156);
		TraceIn("synpred37_Smi_fragment", 156);
		try
		{
			// Smi.g:1004:33: ( smi_type L_BRACE )
			DebugEnterAlt(1);
			// Smi.g:1004:34: smi_type L_BRACE
			{
			DebugLocation(1004, 34);
			PushFollow(Follow._smi_type_in_synpred37_Smi7347);
			smi_type();
			PopFollow();
			if (state.failed) return;
			DebugLocation(1004, 43);
			Match(input,L_BRACE,Follow._L_BRACE_in_synpred37_Smi7349); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred37_Smi_fragment", 156);
			LeaveRule("synpred37_Smi_fragment", 156);
			LeaveRule_synpred37_Smi_fragment();
		}
	}
	// $ANTLR end synpred37_Smi

	partial void EnterRule_synpred38_Smi_fragment();
	partial void LeaveRule_synpred38_Smi_fragment();

	// $ANTLR start synpred38_Smi
	public void synpred38_Smi_fragment()
	{
		EnterRule_synpred38_Smi_fragment();
		EnterRule("synpred38_Smi_fragment", 157);
		TraceIn("synpred38_Smi_fragment", 157);
		try
		{
			// Smi.g:1006:33: ( smi_type )
			DebugEnterAlt(1);
			// Smi.g:1006:34: smi_type
			{
			DebugLocation(1006, 34);
			PushFollow(Follow._smi_type_in_synpred38_Smi7439);
			smi_type();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred38_Smi_fragment", 157);
			LeaveRule("synpred38_Smi_fragment", 157);
			LeaveRule_synpred38_Smi_fragment();
		}
	}
	// $ANTLR end synpred38_Smi

	partial void EnterRule_synpred39_Smi_fragment();
	partial void LeaveRule_synpred39_Smi_fragment();

	// $ANTLR start synpred39_Smi
	public void synpred39_Smi_fragment()
	{
		EnterRule_synpred39_Smi_fragment();
		EnterRule("synpred39_Smi_fragment", 158);
		TraceIn("synpred39_Smi_fragment", 158);
		try
		{
			// Smi.g:1021:22: ( 'DESCRIPTION' )
			DebugEnterAlt(1);
			// Smi.g:1021:23: 'DESCRIPTION'
			{
			DebugLocation(1021, 23);
			Match(input,141,Follow._141_in_synpred39_Smi7603); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred39_Smi_fragment", 158);
			LeaveRule("synpred39_Smi_fragment", 158);
			LeaveRule_synpred39_Smi_fragment();
		}
	}
	// $ANTLR end synpred39_Smi

	partial void EnterRule_synpred40_Smi_fragment();
	partial void LeaveRule_synpred40_Smi_fragment();

	// $ANTLR start synpred40_Smi
	public void synpred40_Smi_fragment()
	{
		EnterRule_synpred40_Smi_fragment();
		EnterRule("synpred40_Smi_fragment", 159);
		TraceIn("synpred40_Smi_fragment", 159);
		try
		{
			// Smi.g:1027:14: ( type )
			DebugEnterAlt(1);
			// Smi.g:1027:15: type
			{
			DebugLocation(1027, 15);
			PushFollow(Follow._type_in_synpred40_Smi7658);
			type();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred40_Smi_fragment", 159);
			LeaveRule("synpred40_Smi_fragment", 159);
			LeaveRule_synpred40_Smi_fragment();
		}
	}
	// $ANTLR end synpred40_Smi

	partial void EnterRule_synpred41_Smi_fragment();
	partial void LeaveRule_synpred41_Smi_fragment();

	// $ANTLR start synpred41_Smi
	public void synpred41_Smi_fragment()
	{
		EnterRule_synpred41_Smi_fragment();
		EnterRule("synpred41_Smi_fragment", 160);
		TraceIn("synpred41_Smi_fragment", 160);
		try
		{
			// Smi.g:1033:22: ( L_BRACKET ( NUMBER | UPPER | LOWER ) )
			DebugEnterAlt(1);
			// Smi.g:1033:23: L_BRACKET ( NUMBER | UPPER | LOWER )
			{
			DebugLocation(1033, 23);
			Match(input,L_BRACKET,Follow._L_BRACKET_in_synpred41_Smi7697); if (state.failed) return;
			DebugLocation(1033, 33);
			if (input.LA(1)==LOWER||input.LA(1)==NUMBER||input.LA(1)==UPPER)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("synpred41_Smi_fragment", 160);
			LeaveRule("synpred41_Smi_fragment", 160);
			LeaveRule_synpred41_Smi_fragment();
		}
	}
	// $ANTLR end synpred41_Smi

	partial void EnterRule_synpred42_Smi_fragment();
	partial void LeaveRule_synpred42_Smi_fragment();

	// $ANTLR start synpred42_Smi
	public void synpred42_Smi_fragment()
	{
		EnterRule_synpred42_Smi_fragment();
		EnterRule("synpred42_Smi_fragment", 161);
		TraceIn("synpred42_Smi_fragment", 161);
		try
		{
			// Smi.g:1046:19: ( signed_number )
			DebugEnterAlt(1);
			// Smi.g:1046:20: signed_number
			{
			DebugLocation(1046, 20);
			PushFollow(Follow._signed_number_in_synpred42_Smi7855);
			signed_number();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred42_Smi_fragment", 161);
			LeaveRule("synpred42_Smi_fragment", 161);
			LeaveRule_synpred42_Smi_fragment();
		}
	}
	// $ANTLR end synpred42_Smi

	partial void EnterRule_synpred43_Smi_fragment();
	partial void LeaveRule_synpred43_Smi_fragment();

	// $ANTLR start synpred43_Smi
	public void synpred43_Smi_fragment()
	{
		EnterRule_synpred43_Smi_fragment();
		EnterRule("synpred43_Smi_fragment", 162);
		TraceIn("synpred43_Smi_fragment", 162);
		try
		{
			// Smi.g:1047:21: ( defined_value )
			DebugEnterAlt(1);
			// Smi.g:1047:22: defined_value
			{
			DebugLocation(1047, 22);
			PushFollow(Follow._defined_value_in_synpred43_Smi7884);
			defined_value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred43_Smi_fragment", 162);
			LeaveRule("synpred43_Smi_fragment", 162);
			LeaveRule_synpred43_Smi_fragment();
		}
	}
	// $ANTLR end synpred43_Smi

	partial void EnterRule_synpred44_Smi_fragment();
	partial void LeaveRule_synpred44_Smi_fragment();

	// $ANTLR start synpred44_Smi
	public void synpred44_Smi_fragment()
	{
		EnterRule_synpred44_Smi_fragment();
		EnterRule("synpred44_Smi_fragment", 163);
		TraceIn("synpred44_Smi_fragment", 163);
		try
		{
			// Smi.g:1057:22: ( value_range )
			DebugEnterAlt(1);
			// Smi.g:1057:23: value_range
			{
			DebugLocation(1057, 23);
			PushFollow(Follow._value_range_in_synpred44_Smi8043);
			value_range();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred44_Smi_fragment", 163);
			LeaveRule("synpred44_Smi_fragment", 163);
			LeaveRule_synpred44_Smi_fragment();
		}
	}
	// $ANTLR end synpred44_Smi

	partial void EnterRule_synpred45_Smi_fragment();
	partial void LeaveRule_synpred45_Smi_fragment();

	// $ANTLR start synpred45_Smi
	public void synpred45_Smi_fragment()
	{
		EnterRule_synpred45_Smi_fragment();
		EnterRule("synpred45_Smi_fragment", 164);
		TraceIn("synpred45_Smi_fragment", 164);
		try
		{
			// Smi.g:1058:22: ( value )
			DebugEnterAlt(1);
			// Smi.g:1058:23: value
			{
			DebugLocation(1058, 23);
			PushFollow(Follow._value_in_synpred45_Smi8072);
			value();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred45_Smi_fragment", 164);
			LeaveRule("synpred45_Smi_fragment", 164);
			LeaveRule_synpred45_Smi_fragment();
		}
	}
	// $ANTLR end synpred45_Smi

	partial void EnterRule_synpred46_Smi_fragment();
	partial void LeaveRule_synpred46_Smi_fragment();

	// $ANTLR start synpred46_Smi
	public void synpred46_Smi_fragment()
	{
		EnterRule_synpred46_Smi_fragment();
		EnterRule("synpred46_Smi_fragment", 165);
		TraceIn("synpred46_Smi_fragment", 165);
		try
		{
			// Smi.g:1080:13: ( H_STRING )
			DebugEnterAlt(1);
			// Smi.g:1080:14: H_STRING
			{
			DebugLocation(1080, 14);
			Match(input,H_STRING,Follow._H_STRING_in_synpred46_Smi8462); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred46_Smi_fragment", 165);
			LeaveRule("synpred46_Smi_fragment", 165);
			LeaveRule_synpred46_Smi_fragment();
		}
	}
	// $ANTLR end synpred46_Smi

	partial void EnterRule_synpred47_Smi_fragment();
	partial void LeaveRule_synpred47_Smi_fragment();

	// $ANTLR start synpred47_Smi
	public void synpred47_Smi_fragment()
	{
		EnterRule_synpred47_Smi_fragment();
		EnterRule("synpred47_Smi_fragment", 166);
		TraceIn("synpred47_Smi_fragment", 166);
		try
		{
			// Smi.g:1081:13: ( B_STRING )
			DebugEnterAlt(1);
			// Smi.g:1081:14: B_STRING
			{
			DebugLocation(1081, 14);
			Match(input,B_STRING,Follow._B_STRING_in_synpred47_Smi8483); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred47_Smi_fragment", 166);
			LeaveRule("synpred47_Smi_fragment", 166);
			LeaveRule_synpred47_Smi_fragment();
		}
	}
	// $ANTLR end synpred47_Smi

	partial void EnterRule_synpred48_Smi_fragment();
	partial void LeaveRule_synpred48_Smi_fragment();

	// $ANTLR start synpred48_Smi
	public void synpred48_Smi_fragment()
	{
		EnterRule_synpred48_Smi_fragment();
		EnterRule("synpred48_Smi_fragment", 167);
		TraceIn("synpred48_Smi_fragment", 167);
		try
		{
			// Smi.g:1083:15: ( id_list )
			DebugEnterAlt(1);
			// Smi.g:1083:16: id_list
			{
			DebugLocation(1083, 16);
			PushFollow(Follow._id_list_in_synpred48_Smi8521);
			id_list();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred48_Smi_fragment", 167);
			LeaveRule("synpred48_Smi_fragment", 167);
			LeaveRule_synpred48_Smi_fragment();
		}
	}
	// $ANTLR end synpred48_Smi

	partial void EnterRule_synpred49_Smi_fragment();
	partial void LeaveRule_synpred49_Smi_fragment();

	// $ANTLR start synpred49_Smi
	public void synpred49_Smi_fragment()
	{
		EnterRule_synpred49_Smi_fragment();
		EnterRule("synpred49_Smi_fragment", 168);
		TraceIn("synpred49_Smi_fragment", 168);
		try
		{
			// Smi.g:1084:17: ( char_defs_list )
			DebugEnterAlt(1);
			// Smi.g:1084:18: char_defs_list
			{
			DebugLocation(1084, 18);
			PushFollow(Follow._char_defs_list_in_synpred49_Smi8546);
			char_defs_list();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred49_Smi_fragment", 168);
			LeaveRule("synpred49_Smi_fragment", 168);
			LeaveRule_synpred49_Smi_fragment();
		}
	}
	// $ANTLR end synpred49_Smi
	#endregion Rules

	#region Synpreds
	private bool EvaluatePredicate(System.Action fragment)
	{
		bool success = false;
		state.backtracking++;
		try { DebugBeginBacktrack(state.backtracking);
		int start = input.Mark();
		try
		{
			fragment();
		}
		catch ( RecognitionException re )
		{
			System.Console.Error.WriteLine("impossible: "+re);
		}
		success = !state.failed;
		input.Rewind(start);
		} finally { DebugEndBacktrack(state.backtracking, success); }
		state.backtracking--;
		state.failed=false;
		return success;
	}
	#endregion Synpreds


	#region DFA
	private DFA49 dfa49;
	private DFA75 dfa75;
	private DFA80 dfa80;
	private DFA97 dfa97;
	private DFA106 dfa106;
	private DFA105 dfa105;
	private DFA130 dfa130;

	protected override void InitDFAs()
	{
		base.InitDFAs();
		dfa49 = new DFA49( this, SpecialStateTransition49 );
		dfa75 = new DFA75( this, SpecialStateTransition75 );
		dfa80 = new DFA80( this, SpecialStateTransition80 );
		dfa97 = new DFA97( this, SpecialStateTransition97 );
		dfa106 = new DFA106( this, SpecialStateTransition106 );
		dfa105 = new DFA105( this, SpecialStateTransition105 );
		dfa130 = new DFA130( this, SpecialStateTransition130 );
	}

	private class DFA49 : DFA
	{
		private const string DFA49_eotS =
			"\x54\xFFFF";
		private const string DFA49_eofS =
			"\x1\x22\x53\xFFFF";
		private const string DFA49_minS =
			"\x1\x7\x1\x0\xB\xFFFF\x1\x0\x6\xFFFF\xD\x0\x33\xFFFF";
		private const string DFA49_maxS =
			"\x1\xC5\x1\x0\xB\xFFFF\x1\x0\x6\xFFFF\xD\x0\x33\xFFFF";
		private const string DFA49_acceptS =
			"\x2\xFFFF\xB\x1\x1\xFFFF\x6\x1\xD\xFFFF\x1\x1\x1\x2\x31\xFFFF";
		private const string DFA49_specialS =
			"\x1\x0\x1\x1\xB\xFFFF\x1\x2\x6\xFFFF\x1\x3\x1\x4\x1\x5\x1\x6\x1\x7\x1"+
			"\x8\x1\x9\x1\xA\x1\xB\x1\xC\x1\xD\x1\xE\x1\xF\x33\xFFFF}>";
		private static readonly string[] DFA49_transitionS =
			{
				"\x1\x2\x2\xFFFF\x1\x22\x1\xFFFF\x1\x22\x3\xFFFF\x1\x3\x1\x6\x1\x4\x3"+
				"\xFFFF\x1\x5\x2\xFFFF\x1\x7\x1\xFFFF\x2\x22\x5\xFFFF\x1\x22\x5\xFFFF"+
				"\x1\x8\x1\x22\x1\x9\x1\x22\x1\x16\x2\x22\x3\xFFFF\x1\xA\x2\xFFFF\x3"+
				"\x6\x2\xFFFF\x1\x6\x6\xFFFF\x1\xB\x2\x22\x1\x6\x1\xFFFF\x1\x22\x1\x1"+
				"\x1\xFFFF\x1\x13\x5\xFFFF\x1\xC\x1\xFFFF\x1\x6\x1\xFFFF\x1\xD\x1\xE"+
				"\x2\xFFFF\x1\x15\x1\x22\x6\xFFFF\x1\x6\x1\xFFFF\x1\xF\x1\xFFFF\x2\x22"+
				"\x1\xFFFF\x1\x22\x1\xFFFF\x1\x11\x1\x12\x4\xFFFF\x1\x6\x1\xFFFF\x1\x6"+
				"\x2\xFFFF\x1\x22\x2\xFFFF\x1\x6\x1\x14\x4\x6\x2\xFFFF\x5\x22\x1\x1F"+
				"\x3\x22\x1\xFFFF\x1\x22\x1\x21\x1\xFFFF\x3\x22\x1\xFFFF\x1\x22\x2\xFFFF"+
				"\x3\x22\x6\xFFFF\x2\x22\x1\xFFFF\x1\x1E\x1\x18\x1\x1D\x1\x1A\x1\xFFFF"+
				"\x1\x1C\x1\x19\x1\x17\x2\xFFFF\x1\x22\x2\xFFFF\x4\x22\x1\xFFFF\x1\x22"+
				"\x1\xFFFF\x1\x22\x1\x10\x1\xFFFF\x4\x22\x3\xFFFF\x1\x1B\x2\x22\x1\x20"+
				"\x1\x22\x1\xFFFF\x1\x22\x2\xFFFF\x1\x22",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				""
			};

		private static readonly short[] DFA49_eot = DFA.UnpackEncodedString(DFA49_eotS);
		private static readonly short[] DFA49_eof = DFA.UnpackEncodedString(DFA49_eofS);
		private static readonly char[] DFA49_min = DFA.UnpackEncodedStringToUnsignedChars(DFA49_minS);
		private static readonly char[] DFA49_max = DFA.UnpackEncodedStringToUnsignedChars(DFA49_maxS);
		private static readonly short[] DFA49_accept = DFA.UnpackEncodedString(DFA49_acceptS);
		private static readonly short[] DFA49_special = DFA.UnpackEncodedString(DFA49_specialS);
		private static readonly short[][] DFA49_transition;

		static DFA49()
		{
			int numStates = DFA49_transitionS.Length;
			DFA49_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA49_transition[i] = DFA.UnpackEncodedString(DFA49_transitionS[i]);
			}
		}

		public DFA49( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 49;
			this.eot = DFA49_eot;
			this.eof = DFA49_eof;
			this.min = DFA49_min;
			this.max = DFA49_max;
			this.accept = DFA49_accept;
			this.special = DFA49_special;
			this.transition = DFA49_transition;
		}

		public override string Description { get { return "797:25: ( ( LOWER )=> ( ( LOWER )=> LOWER )? type )?"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition49(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA49_1 = input.LA(1);
		int index49_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((LA49_1==LOWER)) {s = 1;}

				else if ((LA49_1==ANY_KW) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 2;}

				else if ((LA49_1==BIT_KW) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 3;}

				else if ((LA49_1==BOOLEAN_KW) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 4;}

				else if ((LA49_1==CHARACTER_KW) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 5;}

				else if ((LA49_1==BMP_STR_KW||(LA49_1>=GENERALIZED_TIME_KW && LA49_1<=GRAPHIC_STR_KW)||LA49_1==IA5_STRING_KW||LA49_1==ISO646_STR_KW||LA49_1==NUMERIC_STR_KW||LA49_1==PRINTABLE_STR_KW||LA49_1==T61_STR_KW||LA49_1==TELETEX_STR_KW||LA49_1==UNIVERSAL_STR_KW||(LA49_1>=UTC_TIME_KW && LA49_1<=VISIBLE_STR_KW)) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 6;}

				else if ((LA49_1==CHOICE_KW) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 7;}

				else if ((LA49_1==EMBEDDED_KW) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 8;}

				else if ((LA49_1==ENUMERATED_KW) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 9;}

				else if ((LA49_1==EXTERNAL_KW) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 10;}

				else if ((LA49_1==INTEGER_KW) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 11;}

				else if ((LA49_1==NULL_KW) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 12;}

				else if ((LA49_1==OBJECT_KW)) {s = 13;}

				else if ((LA49_1==OCTET_KW) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 14;}

				else if ((LA49_1==REAL_KW) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 15;}

				else if ((LA49_1==179) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 16;}

				else if ((LA49_1==SEQUENCE_KW) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 17;}

				else if ((LA49_1==SET_KW) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 18;}

				else if ((LA49_1==L_BRACKET) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 19;}

				else if ((LA49_1==UPPER)) {s = 20;}

				else if ((LA49_1==OPERATION_KW)) {s = 21;}

				else if ((LA49_1==ERROR_KW)) {s = 22;}

				else if ((LA49_1==165)) {s = 23;}

				else if ((LA49_1==159)) {s = 24;}

				else if ((LA49_1==164)) {s = 25;}

				else if ((LA49_1==161)) {s = 26;}

				else if ((LA49_1==188)) {s = 27;}

				else if ((LA49_1==163)) {s = 28;}

				else if ((LA49_1==160)) {s = 29;}

				else if ((LA49_1==158)) {s = 30;}

				else if ((LA49_1==131)) {s = 31;}

				else if ((LA49_1==191)) {s = 32;}

				else if ((LA49_1==137) && (EvaluatePredicate(synpred20_Smi_fragment))) {s = 33;}

				else if ((LA49_1==EOF||LA49_1==ASSIGN_OP||LA49_1==BAR||(LA49_1>=COLON && LA49_1<=COMMA)||LA49_1==DEFAULT_KW||LA49_1==END_KW||LA49_1==ERRORS_KW||(LA49_1>=EXCEPT_KW && LA49_1<=EXCLAMATION)||(LA49_1>=INTERSECTION && LA49_1<=INTERSECTION_KW)||LA49_1==LINKED_KW||LA49_1==OPTIONAL_KW||(LA49_1>=RESULT_KW && LA49_1<=R_BRACE)||LA49_1==R_PAREN||LA49_1==UNION_KW||(LA49_1>=126 && LA49_1<=130)||(LA49_1>=132 && LA49_1<=134)||LA49_1==136||(LA49_1>=139 && LA49_1<=141)||LA49_1==143||(LA49_1>=146 && LA49_1<=148)||(LA49_1>=155 && LA49_1<=156)||LA49_1==168||(LA49_1>=171 && LA49_1<=174)||LA49_1==176||LA49_1==178||(LA49_1>=181 && LA49_1<=184)||(LA49_1>=189 && LA49_1<=190)||LA49_1==192||LA49_1==194||LA49_1==197)) {s = 34;}

				input.Seek(index49_1);
				break;
			}
		case 1:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred20_Smi_fragment))) {s = 33;}

				else if ((true)) {s = 34;}

				input.Seek(index49_1);
				break;
			}
		case 2:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred20_Smi_fragment))) {s = 33;}

				else if ((true)) {s = 34;}

				input.Seek(index49_1);
				break;
			}
		case 3:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred20_Smi_fragment))) {s = 33;}

				else if ((true)) {s = 34;}

				input.Seek(index49_1);
				break;
			}
		case 4:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred20_Smi_fragment))) {s = 33;}

				else if ((true)) {s = 34;}

				input.Seek(index49_1);
				break;
			}
		case 5:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred20_Smi_fragment))) {s = 33;}

				else if ((true)) {s = 34;}

				input.Seek(index49_1);
				break;
			}
		case 6:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred20_Smi_fragment))) {s = 33;}

				else if ((true)) {s = 34;}

				input.Seek(index49_1);
				break;
			}
		case 7:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred20_Smi_fragment))) {s = 33;}

				else if ((true)) {s = 34;}

				input.Seek(index49_1);
				break;
			}
		case 8:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred20_Smi_fragment))) {s = 33;}

				else if ((true)) {s = 34;}

				input.Seek(index49_1);
				break;
			}
		case 9:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred20_Smi_fragment))) {s = 33;}

				else if ((true)) {s = 34;}

				input.Seek(index49_1);
				break;
			}
		case 10:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred20_Smi_fragment))) {s = 33;}

				else if ((true)) {s = 34;}

				input.Seek(index49_1);
				break;
			}
		case 11:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred20_Smi_fragment))) {s = 33;}

				else if ((true)) {s = 34;}

				input.Seek(index49_1);
				break;
			}
		case 12:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred20_Smi_fragment))) {s = 33;}

				else if ((true)) {s = 34;}

				input.Seek(index49_1);
				break;
			}
		case 13:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred20_Smi_fragment))) {s = 33;}

				else if ((true)) {s = 34;}

				input.Seek(index49_1);
				break;
			}
		case 14:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred20_Smi_fragment))) {s = 33;}

				else if ((true)) {s = 34;}

				input.Seek(index49_1);
				break;
			}
		case 15:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred20_Smi_fragment))) {s = 33;}

				else if ((true)) {s = 34;}

				input.Seek(index49_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 49, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA75 : DFA
	{
		private const string DFA75_eotS =
			"\x3F\xFFFF";
		private const string DFA75_eofS =
			"\x1\x5\x3E\xFFFF";
		private const string DFA75_minS =
			"\x1\xA\x1\x0\x3D\xFFFF";
		private const string DFA75_maxS =
			"\x1\xC5\x1\x0\x3D\xFFFF";
		private const string DFA75_acceptS =
			"\x2\xFFFF\x1\x2\x1\x3\x1\x4\x1\x5\x38\xFFFF\x1\x1";
		private const string DFA75_specialS =
			"\x1\xFFFF\x1\x0\x3D\xFFFF}>";
		private static readonly string[] DFA75_transitionS =
			{
				"\x1\x5\x1\xFFFF\x1\x5\xE\xFFFF\x2\x5\x5\xFFFF\x1\x5\x6\xFFFF\x1\x5\x1"+
				"\xFFFF\x4\x5\x13\xFFFF\x2\x5\x2\xFFFF\x2\x5\xB\xFFFF\x1\x5\x3\xFFFF"+
				"\x2\x5\xA\xFFFF\x2\x5\x1\xFFFF\x1\x5\xC\xFFFF\x1\x5\x3\xFFFF\x1\x5\x6"+
				"\xFFFF\x9\x5\x1\x2\x1\x5\x2\xFFFF\x3\x5\x1\xFFFF\x1\x5\x1\xFFFF\x1\x4"+
				"\x3\x5\x1\xFFFF\x1\x1\x4\xFFFF\x2\x5\x1\xFFFF\x4\x5\x1\xFFFF\x3\x5\x2"+
				"\xFFFF\x1\x5\x1\xFFFF\x1\x3\x4\x5\x1\xFFFF\x1\x5\x1\xFFFF\x1\x5\x2\xFFFF"+
				"\x4\x5\x3\xFFFF\x7\x5\x2\xFFFF\x1\x5",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				""
			};

		private static readonly short[] DFA75_eot = DFA.UnpackEncodedString(DFA75_eotS);
		private static readonly short[] DFA75_eof = DFA.UnpackEncodedString(DFA75_eofS);
		private static readonly char[] DFA75_min = DFA.UnpackEncodedStringToUnsignedChars(DFA75_minS);
		private static readonly char[] DFA75_max = DFA.UnpackEncodedStringToUnsignedChars(DFA75_maxS);
		private static readonly short[] DFA75_accept = DFA.UnpackEncodedString(DFA75_acceptS);
		private static readonly short[] DFA75_special = DFA.UnpackEncodedString(DFA75_specialS);
		private static readonly short[][] DFA75_transition;

		static DFA75()
		{
			int numStates = DFA75_transitionS.Length;
			DFA75_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA75_transition[i] = DFA.UnpackEncodedString(DFA75_transitionS[i]);
			}
		}

		public DFA75( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 75;
			this.eot = DFA75_eot;
			this.eof = DFA75_eof;
			this.min = DFA75_min;
			this.max = DFA75_max;
			this.accept = DFA75_accept;
			this.special = DFA75_special;
			this.transition = DFA75_transition;
		}

		public override string Description { get { return "854:5: ( (~ ( 'PIB-INDEX' ) )=> 'INDEX' objecttype_macro_index | 'AUGMENTS' objecttype_macro_augments | 'PIB-INDEX' L_BRACE value R_BRACE | 'EXTENDS' L_BRACE value R_BRACE )?"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition75(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA75_1 = input.LA(1);
		int index75_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred28_Smi_fragment))) {s = 62;}

				else if ((true)) {s = 5;}

				input.Seek(index75_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 75, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA80 : DFA
	{
		private const string DFA80_eotS =
			"\xA\xFFFF";
		private const string DFA80_eofS =
			"\xA\xFFFF";
		private const string DFA80_minS =
			"\x2\x15\x1\xFFFF\x2\x15\x1\x0\x1\x15\x1\xFFFF\x1\x0\x1\x15";
		private const string DFA80_maxS =
			"\x2\x77\x1\xFFFF\x2\x77\x1\x0\x1\x77\x1\xFFFF\x1\x0\x1\x77";
		private const string DFA80_acceptS =
			"\x2\xFFFF\x1\x2\x4\xFFFF\x1\x1\x2\xFFFF";
		private const string DFA80_specialS =
			"\x5\xFFFF\x1\x0\x2\xFFFF\x1\x1\x1\xFFFF}>";
		private static readonly string[] DFA80_transitionS =
			{
				"\x1\x2\xB\xFFFF\x1\x2\x11\xFFFF\x1\x2\x5\xFFFF\x1\x2\xD\xFFFF\x1\x2"+
				"\x1\x1\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\xC\xFFFF\x1\x2\x13\xFFFF\x1\x2"+
				"\x5\xFFFF\x1\x2",
				"\x1\x2\x6\xFFFF\x1\x2\x4\xFFFF\x1\x2\x11\xFFFF\x1\x2\x5\xFFFF\x1\x2"+
				"\xD\xFFFF\x1\x3\x1\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\xC\xFFFF\x1\x2\x6"+
				"\xFFFF\x1\x2\xC\xFFFF\x1\x2\x5\xFFFF\x1\x2",
				"",
				"\x1\x2\x5\xFFFF\x1\x2\x1\x4\x4\xFFFF\x1\x2\x11\xFFFF\x1\x2\x5\xFFFF"+
				"\x1\x2\xD\xFFFF\x2\x2\x1\xFFFF\x1\x2\x1\xFFFF\x2\x2\x1\xFFFF\x2\x2\xC"+
				"\xFFFF\x1\x2\x6\xFFFF\x1\x5\xC\xFFFF\x1\x2\x5\xFFFF\x1\x2",
				"\x1\x2\xB\xFFFF\x1\x2\x11\xFFFF\x1\x2\x5\xFFFF\x1\x2\xD\xFFFF\x1\x6"+
				"\x1\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\xC\xFFFF\x1\x2\x13\xFFFF\x1\x2"+
				"\x5\xFFFF\x1\x2",
				"\x1\xFFFF",
				"\x1\x2\x5\xFFFF\x1\x2\x1\x9\x4\xFFFF\x1\x2\x11\xFFFF\x1\x2\x5\xFFFF"+
				"\x1\x2\xD\xFFFF\x2\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\xC\xFFFF\x1\x2\x6"+
				"\xFFFF\x1\x8\xC\xFFFF\x1\x2\x5\xFFFF\x1\x2",
				"",
				"\x1\xFFFF",
				"\x1\x2\xB\xFFFF\x1\x2\x11\xFFFF\x1\x2\x5\xFFFF\x1\x2\xD\xFFFF\x1\x6"+
				"\x1\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\xC\xFFFF\x1\x2\x13\xFFFF\x1\x2"+
				"\x5\xFFFF\x1\x2"
			};

		private static readonly short[] DFA80_eot = DFA.UnpackEncodedString(DFA80_eotS);
		private static readonly short[] DFA80_eof = DFA.UnpackEncodedString(DFA80_eofS);
		private static readonly char[] DFA80_min = DFA.UnpackEncodedStringToUnsignedChars(DFA80_minS);
		private static readonly char[] DFA80_max = DFA.UnpackEncodedStringToUnsignedChars(DFA80_maxS);
		private static readonly short[] DFA80_accept = DFA.UnpackEncodedString(DFA80_acceptS);
		private static readonly short[] DFA80_special = DFA.UnpackEncodedString(DFA80_specialS);
		private static readonly short[][] DFA80_transition;

		static DFA80()
		{
			int numStates = DFA80_transitionS.Length;
			DFA80_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA80_transition[i] = DFA.UnpackEncodedString(DFA80_transitionS[i]);
			}
		}

		public DFA80( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 80;
			this.eot = DFA80_eot;
			this.eof = DFA80_eof;
			this.min = DFA80_min;
			this.max = DFA80_max;
			this.accept = DFA80_accept;
			this.special = DFA80_special;
			this.transition = DFA80_transition;
		}

		public override string Description { get { return "862:21: ( ( L_BRACE LOWER ( COMMA | R_BRACE ) )=> objecttype_macro_bitsvalue | value )"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition80(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA80_1 = input.LA(1);
		int index80_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred30_Smi_fragment))) {s = 7;}

				else if ((true)) {s = 2;}

				input.Seek(index80_1);
				break;
			}
		case 1:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred30_Smi_fragment))) {s = 7;}

				else if ((true)) {s = 2;}

				input.Seek(index80_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 80, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA97 : DFA
	{
		private const string DFA97_eotS =
			"\x18\xFFFF";
		private const string DFA97_eofS =
			"\x1\xFFFF\x2\x6\x2\xFFFF\x1\x6\x3\xFFFF\x2\x6\xD\xFFFF";
		private const string DFA97_minS =
			"\x1\x7\x2\xA\x1\x6D\x1\x3B\x1\xA\x2\xFFFF\x1\x47\x2\xA\x1\x4A\x1\x47"+
			"\x1\x50\x1\x66\x1\x1C\x1\x47\x1\x0\x1\x4A\x1\x47\x1\x50\x1\x66\x1\x1C"+
			"\x1\x0";
		private const string DFA97_maxS =
			"\x1\xBF\x2\xC5\x1\x6D\x1\x3B\x1\xC5\x2\xFFFF\x1\x47\x2\xC5\x1\x4A\x1"+
			"\x77\x1\x50\x1\x66\x1\x64\x1\x47\x1\x0\x1\x4A\x1\x77\x1\x50\x1\x66\x1"+
			"\x64\x1\x0";
		private const string DFA97_acceptS =
			"\x6\xFFFF\x1\x2\x1\x1\x10\xFFFF";
		private const string DFA97_specialS =
			"\x1\xFFFF\x1\x0\x3\xFFFF\x1\x1\x3\xFFFF\x1\x2\x1\x3\x6\xFFFF\x1\x4\x5"+
			"\xFFFF\x1\x5}>";
		private static readonly string[] DFA97_transitionS =
			{
				"\x1\x6\x8\xFFFF\x3\x6\x3\xFFFF\x1\x6\x2\xFFFF\x1\x6\xE\xFFFF\x1\x6\x1"+
				"\xFFFF\x1\x6\x1\xFFFF\x1\x6\x5\xFFFF\x1\x6\x2\xFFFF\x3\x6\x2\xFFFF\x1"+
				"\x6\x6\xFFFF\x1\x2\x2\xFFFF\x1\x6\x2\xFFFF\x1\x6\x1\xFFFF\x1\x6\x5\xFFFF"+
				"\x1\x6\x1\xFFFF\x1\x6\x1\xFFFF\x1\x4\x1\x3\x2\xFFFF\x1\x6\x7\xFFFF\x1"+
				"\x6\x1\xFFFF\x1\x6\x6\xFFFF\x2\x6\x4\xFFFF\x1\x6\x1\xFFFF\x1\x6\x5\xFFFF"+
				"\x1\x6\x1\x5\x4\x6\x7\xFFFF\x1\x6\x5\xFFFF\x1\x1\x14\xFFFF\x4\x6\x1"+
				"\xFFFF\x3\x6\xD\xFFFF\x1\x6\x8\xFFFF\x1\x6\x2\xFFFF\x1\x6",
				"\x1\x6\x1\xFFFF\x1\x6\xE\xFFFF\x2\x6\x5\xFFFF\x1\x6\x6\xFFFF\x1\x6\x1"+
				"\xFFFF\x4\x6\x13\xFFFF\x2\x6\x2\xFFFF\x2\x6\x1\x7\xA\xFFFF\x1\x6\x3"+
				"\xFFFF\x2\x6\xA\xFFFF\x2\x6\x1\xFFFF\x1\x6\xC\xFFFF\x1\x6\x3\xFFFF\x1"+
				"\x6\x6\xFFFF\x9\x6\x1\xFFFF\x1\x6\x2\xFFFF\x3\x6\x1\xFFFF\x1\x6\x2\xFFFF"+
				"\x3\x6\x6\xFFFF\x2\x6\x1\xFFFF\x4\x6\x1\xFFFF\x3\x6\x2\xFFFF\x1\x6\x2"+
				"\xFFFF\x4\x6\x1\xFFFF\x1\x6\x1\xFFFF\x1\x6\x2\xFFFF\x4\x6\x3\xFFFF\x5"+
				"\x6\x1\xFFFF\x1\x6\x2\xFFFF\x1\x6",
				"\x1\x6\x1\xFFFF\x1\x6\xE\xFFFF\x2\x6\x5\xFFFF\x1\x6\x6\xFFFF\x1\x6\x1"+
				"\xFFFF\x4\x6\x13\xFFFF\x2\x6\x2\xFFFF\x2\x6\x1\x8\x1\xFFFF\x1\x6\x8"+
				"\xFFFF\x1\x6\x3\xFFFF\x2\x6\xA\xFFFF\x2\x6\x1\xFFFF\x1\x6\xC\xFFFF\x1"+
				"\x6\x3\xFFFF\x1\x6\x6\xFFFF\x9\x6\x1\xFFFF\x1\x6\x2\xFFFF\x3\x6\x1\xFFFF"+
				"\x1\x6\x2\xFFFF\x3\x6\x6\xFFFF\x2\x6\x1\xFFFF\x4\x6\x1\xFFFF\x3\x6\x2"+
				"\xFFFF\x1\x6\x2\xFFFF\x4\x6\x1\xFFFF\x1\x6\x1\xFFFF\x1\x6\x2\xFFFF\x4"+
				"\x6\x3\xFFFF\x5\x6\x1\xFFFF\x1\x6\x2\xFFFF\x1\x6",
				"\x1\x9",
				"\x1\xA",
				"\x1\x6\x1\xFFFF\x1\x6\xE\xFFFF\x2\x6\x5\xFFFF\x1\x6\x2\xFFFF\x1\x6\x3"+
				"\xFFFF\x1\x6\x1\xFFFF\x4\x6\x13\xFFFF\x2\x6\x2\xFFFF\x2\x6\x1\x7\x1"+
				"\xFFFF\x1\x6\x8\xFFFF\x1\x6\x3\xFFFF\x2\x6\xA\xFFFF\x2\x6\x1\xFFFF\x1"+
				"\x6\xC\xFFFF\x1\x6\x3\xFFFF\x1\x6\x6\xFFFF\x9\x6\x1\xFFFF\x1\x6\x2\xFFFF"+
				"\x3\x6\x1\xFFFF\x1\x6\x2\xFFFF\x3\x6\x6\xFFFF\x2\x6\x1\xFFFF\x4\x6\x1"+
				"\xFFFF\x3\x6\x2\xFFFF\x1\x6\x2\xFFFF\x4\x6\x1\xFFFF\x1\x6\x1\xFFFF\x1"+
				"\x6\x2\xFFFF\x4\x6\x3\xFFFF\x5\x6\x1\xFFFF\x1\x6\x2\xFFFF\x1\x6",
				"",
				"",
				"\x1\xB",
				"\x1\x6\x1\xFFFF\x1\x6\xE\xFFFF\x2\x6\x5\xFFFF\x1\x6\x6\xFFFF\x1\x6\x1"+
				"\xFFFF\x4\x6\x13\xFFFF\x2\x6\x2\xFFFF\x2\x6\x1\x7\x1\xFFFF\x1\x6\x8"+
				"\xFFFF\x1\x6\x3\xFFFF\x2\x6\xA\xFFFF\x2\x6\x1\xFFFF\x1\x6\xC\xFFFF\x1"+
				"\x6\x3\xFFFF\x1\x6\x6\xFFFF\x9\x6\x1\xFFFF\x1\x6\x2\xFFFF\x3\x6\x1\xFFFF"+
				"\x1\x6\x2\xFFFF\x3\x6\x6\xFFFF\x2\x6\x1\xFFFF\x4\x6\x1\xFFFF\x3\x6\x2"+
				"\xFFFF\x1\x6\x2\xFFFF\x4\x6\x1\xFFFF\x1\x6\x1\xFFFF\x1\x6\x2\xFFFF\x4"+
				"\x6\x3\xFFFF\x5\x6\x1\xFFFF\x1\x6\x2\xFFFF\x1\x6",
				"\x1\x6\x1\xFFFF\x1\x6\xE\xFFFF\x2\x6\x5\xFFFF\x1\x6\x6\xFFFF\x1\x6\x1"+
				"\xFFFF\x4\x6\x13\xFFFF\x2\x6\x2\xFFFF\x2\x6\x1\x7\xA\xFFFF\x1\x6\x3"+
				"\xFFFF\x2\x6\xA\xFFFF\x2\x6\x1\xFFFF\x1\x6\xC\xFFFF\x1\x6\x3\xFFFF\x1"+
				"\x6\x6\xFFFF\x9\x6\x1\xFFFF\x1\x6\x2\xFFFF\x3\x6\x1\xFFFF\x1\x6\x2\xFFFF"+
				"\x3\x6\x6\xFFFF\x2\x6\x1\xFFFF\x4\x6\x1\xFFFF\x3\x6\x2\xFFFF\x1\x6\x2"+
				"\xFFFF\x4\x6\x1\xFFFF\x1\x6\x1\xFFFF\x1\x6\x2\xFFFF\x4\x6\x3\xFFFF\x5"+
				"\x6\x1\xFFFF\x1\x6\x2\xFFFF\x1\x6",
				"\x1\xC",
				"\x1\x6\x4\xFFFF\x1\xD\x3\xFFFF\x1\xE\x26\xFFFF\x1\x6",
				"\x1\xE",
				"\x1\xF",
				"\x1\x10\x47\xFFFF\x1\x11",
				"\x1\x12",
				"\x1\xFFFF",
				"\x1\x13",
				"\x1\x6\x4\xFFFF\x1\x14\x3\xFFFF\x1\x15\x26\xFFFF\x1\x6",
				"\x1\x15",
				"\x1\x16",
				"\x1\x10\x47\xFFFF\x1\x17",
				"\x1\xFFFF"
			};

		private static readonly short[] DFA97_eot = DFA.UnpackEncodedString(DFA97_eotS);
		private static readonly short[] DFA97_eof = DFA.UnpackEncodedString(DFA97_eofS);
		private static readonly char[] DFA97_min = DFA.UnpackEncodedStringToUnsignedChars(DFA97_minS);
		private static readonly char[] DFA97_max = DFA.UnpackEncodedStringToUnsignedChars(DFA97_maxS);
		private static readonly short[] DFA97_accept = DFA.UnpackEncodedString(DFA97_acceptS);
		private static readonly short[] DFA97_special = DFA.UnpackEncodedString(DFA97_specialS);
		private static readonly short[][] DFA97_transition;

		static DFA97()
		{
			int numStates = DFA97_transitionS.Length;
			DFA97_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA97_transition[i] = DFA.UnpackEncodedString(DFA97_transitionS[i]);
			}
		}

		public DFA97( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 97;
			this.eot = DFA97_eot;
			this.eof = DFA97_eof;
			this.min = DFA97_min;
			this.max = DFA97_max;
			this.accept = DFA97_accept;
			this.special = DFA97_special;
			this.transition = DFA97_transition;
		}

		public override string Description { get { return "926:38: ( ( smi_type L_BRACE )=> smi_type L_BRACE textualconvention_macro_namedbit ( COMMA textualconvention_macro_namedbit )* R_BRACE | type )"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition97(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA97_1 = input.LA(1);
		int index97_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((LA97_1==L_BRACE) && (EvaluatePredicate(synpred31_Smi_fragment))) {s = 7;}

				else if ((LA97_1==EOF||LA97_1==ASSIGN_OP||LA97_1==BAR||(LA97_1>=COLON && LA97_1<=COMMA)||LA97_1==DEFAULT_KW||LA97_1==END_KW||(LA97_1>=ERRORS_KW && LA97_1<=EXCLAMATION)||(LA97_1>=INTERSECTION && LA97_1<=INTERSECTION_KW)||(LA97_1>=LINKED_KW && LA97_1<=LOWER)||LA97_1==OBJECT_KW||(LA97_1>=OPERATION_KW && LA97_1<=OPTIONAL_KW)||(LA97_1>=RESULT_KW && LA97_1<=R_BRACE)||LA97_1==R_PAREN||LA97_1==UNION_KW||LA97_1==UPPER||(LA97_1>=126 && LA97_1<=134)||LA97_1==136||(LA97_1>=139 && LA97_1<=141)||LA97_1==143||(LA97_1>=146 && LA97_1<=148)||(LA97_1>=155 && LA97_1<=156)||(LA97_1>=158 && LA97_1<=161)||(LA97_1>=163 && LA97_1<=165)||LA97_1==168||(LA97_1>=171 && LA97_1<=174)||LA97_1==176||LA97_1==178||(LA97_1>=181 && LA97_1<=184)||(LA97_1>=188 && LA97_1<=192)||LA97_1==194||LA97_1==197)) {s = 6;}

				input.Seek(index97_1);
				break;
			}
		case 1:
			{
				input.Rewind();
				if ((LA97_1==EOF||LA97_1==ASSIGN_OP||LA97_1==BAR||(LA97_1>=COLON && LA97_1<=COMMA)||LA97_1==DEFAULT_KW||LA97_1==DOT||LA97_1==END_KW||(LA97_1>=ERRORS_KW && LA97_1<=EXCLAMATION)||(LA97_1>=INTERSECTION && LA97_1<=INTERSECTION_KW)||(LA97_1>=LINKED_KW && LA97_1<=LOWER)||LA97_1==L_PAREN||LA97_1==OBJECT_KW||(LA97_1>=OPERATION_KW && LA97_1<=OPTIONAL_KW)||(LA97_1>=RESULT_KW && LA97_1<=R_BRACE)||LA97_1==R_PAREN||LA97_1==UNION_KW||LA97_1==UPPER||(LA97_1>=126 && LA97_1<=134)||LA97_1==136||(LA97_1>=139 && LA97_1<=141)||LA97_1==143||(LA97_1>=146 && LA97_1<=148)||(LA97_1>=155 && LA97_1<=156)||(LA97_1>=158 && LA97_1<=161)||(LA97_1>=163 && LA97_1<=165)||LA97_1==168||(LA97_1>=171 && LA97_1<=174)||LA97_1==176||LA97_1==178||(LA97_1>=181 && LA97_1<=184)||(LA97_1>=188 && LA97_1<=192)||LA97_1==194||LA97_1==197)) {s = 6;}

				else if ((LA97_1==L_BRACE) && (EvaluatePredicate(synpred31_Smi_fragment))) {s = 7;}

				input.Seek(index97_1);
				break;
			}
		case 2:
			{
				input.Rewind();
				if ((LA97_1==L_BRACE) && (EvaluatePredicate(synpred31_Smi_fragment))) {s = 7;}

				else if ((LA97_1==EOF||LA97_1==ASSIGN_OP||LA97_1==BAR||(LA97_1>=COLON && LA97_1<=COMMA)||LA97_1==DEFAULT_KW||LA97_1==END_KW||(LA97_1>=ERRORS_KW && LA97_1<=EXCLAMATION)||(LA97_1>=INTERSECTION && LA97_1<=INTERSECTION_KW)||(LA97_1>=LINKED_KW && LA97_1<=LOWER)||LA97_1==L_PAREN||LA97_1==OBJECT_KW||(LA97_1>=OPERATION_KW && LA97_1<=OPTIONAL_KW)||(LA97_1>=RESULT_KW && LA97_1<=R_BRACE)||LA97_1==R_PAREN||LA97_1==UNION_KW||LA97_1==UPPER||(LA97_1>=126 && LA97_1<=134)||LA97_1==136||(LA97_1>=139 && LA97_1<=141)||LA97_1==143||(LA97_1>=146 && LA97_1<=148)||(LA97_1>=155 && LA97_1<=156)||(LA97_1>=158 && LA97_1<=161)||(LA97_1>=163 && LA97_1<=165)||LA97_1==168||(LA97_1>=171 && LA97_1<=174)||LA97_1==176||LA97_1==178||(LA97_1>=181 && LA97_1<=184)||(LA97_1>=188 && LA97_1<=192)||LA97_1==194||LA97_1==197)) {s = 6;}

				input.Seek(index97_1);
				break;
			}
		case 3:
			{
				input.Rewind();
				if ((LA97_1==L_BRACE) && (EvaluatePredicate(synpred31_Smi_fragment))) {s = 7;}

				else if ((LA97_1==EOF||LA97_1==ASSIGN_OP||LA97_1==BAR||(LA97_1>=COLON && LA97_1<=COMMA)||LA97_1==DEFAULT_KW||LA97_1==END_KW||(LA97_1>=ERRORS_KW && LA97_1<=EXCLAMATION)||(LA97_1>=INTERSECTION && LA97_1<=INTERSECTION_KW)||(LA97_1>=LINKED_KW && LA97_1<=LOWER)||LA97_1==OBJECT_KW||(LA97_1>=OPERATION_KW && LA97_1<=OPTIONAL_KW)||(LA97_1>=RESULT_KW && LA97_1<=R_BRACE)||LA97_1==R_PAREN||LA97_1==UNION_KW||LA97_1==UPPER||(LA97_1>=126 && LA97_1<=134)||LA97_1==136||(LA97_1>=139 && LA97_1<=141)||LA97_1==143||(LA97_1>=146 && LA97_1<=148)||(LA97_1>=155 && LA97_1<=156)||(LA97_1>=158 && LA97_1<=161)||(LA97_1>=163 && LA97_1<=165)||LA97_1==168||(LA97_1>=171 && LA97_1<=174)||LA97_1==176||LA97_1==178||(LA97_1>=181 && LA97_1<=184)||(LA97_1>=188 && LA97_1<=192)||LA97_1==194||LA97_1==197)) {s = 6;}

				input.Seek(index97_1);
				break;
			}
		case 4:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred31_Smi_fragment))) {s = 7;}

				else if ((true)) {s = 6;}

				input.Seek(index97_1);
				break;
			}
		case 5:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred31_Smi_fragment))) {s = 7;}

				else if ((true)) {s = 6;}

				input.Seek(index97_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 97, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA106 : DFA
	{
		private const string DFA106_eotS =
			"\x67\xFFFF";
		private const string DFA106_eofS =
			"\x1\x2\x1\x3F\x65\xFFFF";
		private const string DFA106_minS =
			"\x2\xA\x1\xFFFF\x1\x7\x45\xFFFF\x1\x0\x1\x25\x1\x15\xA\xFFFF\x1\x47\x10"+
			"\xFFFF";
		private const string DFA106_maxS =
			"\x2\xC5\x1\xFFFF\x1\xBF\x45\xFFFF\x1\x0\x2\xC0\xA\xFFFF\x1\x77\x10\xFFFF";
		private const string DFA106_acceptS =
			"\x2\xFFFF\x1\x2\x1\xFFFF\x45\x1\x3\xFFFF\xA\x1\x1\xFFFF\x10\x1";
		private const string DFA106_specialS =
			"\x1\xFFFF\x1\x0\x1\xFFFF\x1\x1\x45\xFFFF\x1\x2\x1\xFFFF\x1\x3\xA\xFFFF"+
			"\x1\x4\x10\xFFFF}>";
		private static readonly string[] DFA106_transitionS =
			{
				"\x1\x2\x1\xFFFF\x1\x2\xE\xFFFF\x2\x2\x5\xFFFF\x1\x2\x6\xFFFF\x1\x2\x1"+
				"\xFFFF\x4\x2\x13\xFFFF\x2\x2\x2\xFFFF\x2\x2\xB\xFFFF\x1\x2\x3\xFFFF"+
				"\x2\x2\xA\xFFFF\x2\x2\x1\xFFFF\x1\x2\xC\xFFFF\x1\x2\x3\xFFFF\x1\x1\x6"+
				"\xFFFF\x9\x2\x1\xFFFF\x1\x2\x2\xFFFF\x3\x2\x1\xFFFF\x1\x2\x2\xFFFF\x4"+
				"\x2\x4\xFFFF\x8\x2\x1\xFFFF\x3\x2\x2\xFFFF\x1\x2\x2\xFFFF\x4\x2\x1\xFFFF"+
				"\x1\x2\x1\xFFFF\x1\x2\x2\xFFFF\x4\x2\x3\xFFFF\x5\x2\x1\xFFFF\x1\x2\x2"+
				"\xFFFF\x1\x2",
				"\x1\x3\x1\xFFFF\x1\x47\x8\xFFFF\x1\xE\x5\xFFFF\x1\x42\x1\x3D\x4\xFFFF"+
				"\x1\x7\x1\x41\x6\xFFFF\x1\x14\x1\xFFFF\x1\x2E\x1\x16\x1\x45\x1\x43\x4"+
				"\xFFFF\x1\x5\x5\xFFFF\x1\xD\x8\xFFFF\x2\x46\x2\xFFFF\x1\x2F\x1\x9\x1"+
				"\xC\x3\xFFFF\x1\xA\x1\x10\x1\xFFFF\x1\x6\x1\xB\x2\xFFFF\x1\x13\x3\xFFFF"+
				"\x1\x15\x1\x40\x4\xFFFF\x1\xF\x5\xFFFF\x1\x2D\x1\x3E\x1\xFFFF\x1\x44"+
				"\xA\xFFFF\x1\x4\x1\xFFFF\x1\x47\x3\xFFFF\x1\x8\x6\xFFFF\x1\x23\x1\x26"+
				"\x1\x25\x1\x24\x1\x31\x1\x2C\x1\x27\x1\x1A\x1\x19\x1\xFFFF\x1\x17\x2"+
				"\xFFFF\x1\x3B\x1\x3C\x1\x39\x1\xFFFF\x1\x28\x2\xFFFF\x1\x1B\x1\x1D\x1"+
				"\x1C\x1\x12\x3\xFFFF\x1\x2\x1\x11\x1\x3A\x1\x37\x1\x48\x4\x2C\x1\xFFFF"+
				"\x3\x2C\x2\xFFFF\x1\x32\x2\xFFFF\x1\x38\x1\x33\x1\x34\x1\x21\x1\xFFFF"+
				"\x1\x2B\x1\xFFFF\x1\x22\x2\xFFFF\x1\x20\x1\x2A\x1\x29\x1\x35\x3\xFFFF"+
				"\x1\x2C\x1\x1E\x1\x1F\x1\x2C\x1\x18\x1\xFFFF\x1\x30\x2\xFFFF\x1\x36",
				"",
				"\x1\x2\x8\xFFFF\x3\x2\x2\xFFFF\x1\x53\x1\x2\x2\xFFFF\x1\x2\x7\xFFFF"+
				"\x1\x4E\x6\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x5\xFFFF\x1\x2"+
				"\x1\x4D\x1\xFFFF\x3\x2\x1\xFFFF\x1\x52\x1\x2\x6\xFFFF\x1\x2\x2\xFFFF"+
				"\x1\x2\x2\xFFFF\x1\x4B\x1\x51\x1\x2\x2\xFFFF\x1\x4F\x1\x55\x1\xFFFF"+
				"\x1\x49\x1\x50\x1\x2\x1\xFFFF\x2\x2\x2\xFFFF\x1\x2\x5\xFFFF\x1\x54\x1"+
				"\xFFFF\x1\x2\x1\xFFFF\x1\x2\x6\xFFFF\x2\x2\x4\xFFFF\x1\x2\x1\xFFFF\x1"+
				"\x2\x1\x4C\x4\xFFFF\x1\x2\x1\x4A\x4\x2\x7\xFFFF\x1\x2\x5\xFFFF\x1\x2"+
				"\x14\xFFFF\x4\x2\x1\xFFFF\x3\x2\xD\xFFFF\x1\x2\x8\xFFFF\x1\x2\x2\xFFFF"+
				"\x1\x2",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"\x1\x56\x3\xFFFF\x1\x2\x2\xFFFF\x1\x2\x1A\xFFFF\x1\x2\x2\xFFFF\x1\x2"+
				"\x8\xFFFF\x1\x2\x3\xFFFF\x1\x2\x1F\xFFFF\x1\x2\x6\xFFFF\x4\x2\x1\xFFFF"+
				"\x4\x2\x1\xFFFF\x1\x2\x6\xFFFF\x1\x2\x2\xFFFF\x3\x2\x9\xFFFF\x4\x2\x1"+
				"\xFFFF\x3\x2\x8\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2\xFFFF\x3"+
				"\x2\x4\xFFFF\x5\x2",
				"\x1\x63\x5\xFFFF\x1\x5A\x5\xFFFF\x1\x5E\x7\xFFFF\x1\x14\x2\xFFFF\x1"+
				"\x16\x6\xFFFF\x1\x5C\x5\xFFFF\x1\x62\xB\xFFFF\x1\x2\x1\xFFFF\x1\x58"+
				"\x1\x61\x3\xFFFF\x1\x5F\x1\x65\x1\xFFFF\x1\x5D\x1\x60\x2\xFFFF\x1\x59"+
				"\x3\xFFFF\x1\x15\x5\xFFFF\x1\x64\x13\xFFFF\x1\x5B\x5\xFFFF\x1\x57\x6"+
				"\xFFFF\x1\x23\x1\x26\x1\x25\x1\x24\x1\xFFFF\x1\x2C\x1\x27\x1\x1A\x1"+
				"\x19\x1\xFFFF\x1\x17\x6\xFFFF\x1\x28\x2\xFFFF\x1\x1B\x1\x1D\x1\x1C\x9"+
				"\xFFFF\x4\x2C\x1\xFFFF\x3\x2C\x8\xFFFF\x1\x21\x1\xFFFF\x1\x2B\x1\xFFFF"+
				"\x1\x22\x2\xFFFF\x1\x20\x1\x2A\x1\x29\x4\xFFFF\x1\x2C\x1\x1E\x1\x1F"+
				"\x1\x2C\x1\x18",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\x66\x2F\xFFFF\x1\x2",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				""
			};

		private static readonly short[] DFA106_eot = DFA.UnpackEncodedString(DFA106_eotS);
		private static readonly short[] DFA106_eof = DFA.UnpackEncodedString(DFA106_eofS);
		private static readonly char[] DFA106_min = DFA.UnpackEncodedStringToUnsignedChars(DFA106_minS);
		private static readonly char[] DFA106_max = DFA.UnpackEncodedStringToUnsignedChars(DFA106_maxS);
		private static readonly short[] DFA106_accept = DFA.UnpackEncodedString(DFA106_acceptS);
		private static readonly short[] DFA106_special = DFA.UnpackEncodedString(DFA106_specialS);
		private static readonly short[][] DFA106_transition;

		static DFA106()
		{
			int numStates = DFA106_transitionS.Length;
			DFA106_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA106_transition[i] = DFA.UnpackEncodedString(DFA106_transitionS[i]);
			}
		}

		public DFA106( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 106;
			this.eot = DFA106_eot;
			this.eof = DFA106_eof;
			this.min = DFA106_min;
			this.max = DFA106_max;
			this.accept = DFA106_accept;
			this.special = DFA106_special;
			this.transition = DFA106_transition;
		}

		public override string Description { get { return "961:41: ( ( UPPER )=> UPPER ( ( value )=> value )? )?"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition106(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA106_1 = input.LA(1);
		int index106_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((LA106_1==ASSIGN_OP)) {s = 3;}

				else if ((LA106_1==TRUE_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 4;}

				else if ((LA106_1==FALSE_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 5;}

				else if ((LA106_1==NULL_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 6;}

				else if ((LA106_1==C_STRING) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 7;}

				else if ((LA106_1==UPPER) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 8;}

				else if ((LA106_1==LOWER) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 9;}

				else if ((LA106_1==MINUS) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 10;}

				else if ((LA106_1==NUMBER) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 11;}

				else if ((LA106_1==L_BRACE) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 12;}

				else if ((LA106_1==H_STRING) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 13;}

				else if ((LA106_1==B_STRING) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 14;}

				else if ((LA106_1==PLUS_INFINITY_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 15;}

				else if ((LA106_1==MINUS_INFINITY_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 16;}

				else if ((LA106_1==154) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 17;}

				else if ((LA106_1==149) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 18;}

				else if ((LA106_1==OBJECT_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 19;}

				else if ((LA106_1==END_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 20;}

				else if ((LA106_1==OPERATION_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 21;}

				else if ((LA106_1==ERROR_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 22;}

				else if ((LA106_1==136) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 23;}

				else if ((LA106_1==192) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 24;}

				else if ((LA106_1==134) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 25;}

				else if ((LA106_1==133) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 26;}

				else if ((LA106_1==146) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 27;}

				else if ((LA106_1==148) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 28;}

				else if ((LA106_1==147) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 29;}

				else if ((LA106_1==189) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 30;}

				else if ((LA106_1==190) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 31;}

				else if ((LA106_1==181) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 32;}

				else if ((LA106_1==174) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 33;}

				else if ((LA106_1==178) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 34;}

				else if ((LA106_1==126) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 35;}

				else if ((LA106_1==129) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 36;}

				else if ((LA106_1==128) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 37;}

				else if ((LA106_1==127) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 38;}

				else if ((LA106_1==132) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 39;}

				else if ((LA106_1==143) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 40;}

				else if ((LA106_1==183) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 41;}

				else if ((LA106_1==182) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 42;}

				else if ((LA106_1==176) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 43;}

				else if ((LA106_1==131||(LA106_1>=158 && LA106_1<=161)||(LA106_1>=163 && LA106_1<=165)||LA106_1==188||LA106_1==191) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 44;}

				else if ((LA106_1==RESULT_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 45;}

				else if ((LA106_1==ERRORS_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 46;}

				else if ((LA106_1==LINKED_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 47;}

				else if ((LA106_1==194) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 48;}

				else if ((LA106_1==130) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 49;}

				else if ((LA106_1==168) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 50;}

				else if ((LA106_1==172) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 51;}

				else if ((LA106_1==173) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 52;}

				else if ((LA106_1==184) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 53;}

				else if ((LA106_1==197) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 54;}

				else if ((LA106_1==156) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 55;}

				else if ((LA106_1==171) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 56;}

				else if ((LA106_1==141) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 57;}

				else if ((LA106_1==155) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 58;}

				else if ((LA106_1==139) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 59;}

				else if ((LA106_1==140) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 60;}

				else if ((LA106_1==COMMA) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 61;}

				else if ((LA106_1==R_BRACE) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 62;}

				else if ((LA106_1==EOF) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 63;}

				else if ((LA106_1==OPTIONAL_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 64;}

				else if ((LA106_1==DEFAULT_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 65;}

				else if ((LA106_1==COLON) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 66;}

				else if ((LA106_1==EXCLAMATION) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 67;}

				else if ((LA106_1==R_PAREN) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 68;}

				else if ((LA106_1==EXCEPT_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 69;}

				else if (((LA106_1>=INTERSECTION && LA106_1<=INTERSECTION_KW)) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 70;}

				else if ((LA106_1==BAR||LA106_1==UNION_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 71;}

				else if ((LA106_1==157) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 72;}

				else if ((LA106_1==153)) {s = 2;}

				input.Seek(index106_1);
				break;
			}
		case 1:
			{
				input.Rewind();
				if ((LA106_1==ANY_KW||(LA106_1>=BIT_KW && LA106_1<=BOOLEAN_KW)||LA106_1==CHARACTER_KW||LA106_1==CHOICE_KW||LA106_1==EMBEDDED_KW||LA106_1==ENUMERATED_KW||LA106_1==ERROR_KW||LA106_1==EXTERNAL_KW||(LA106_1>=GENERALIZED_TIME_KW && LA106_1<=GRAPHIC_STR_KW)||LA106_1==IA5_STRING_KW||LA106_1==INTEGER_KW||LA106_1==ISO646_STR_KW||LA106_1==L_BRACKET||LA106_1==NUMERIC_STR_KW||(LA106_1>=OBJECT_KW && LA106_1<=OCTET_KW)||LA106_1==OPERATION_KW||LA106_1==PRINTABLE_STR_KW||LA106_1==REAL_KW||(LA106_1>=SEQUENCE_KW && LA106_1<=SET_KW)||LA106_1==T61_STR_KW||LA106_1==TELETEX_STR_KW||LA106_1==UNIVERSAL_STR_KW||(LA106_1>=UTC_TIME_KW && LA106_1<=VISIBLE_STR_KW)||LA106_1==131||LA106_1==137||(LA106_1>=158 && LA106_1<=161)||(LA106_1>=163 && LA106_1<=165)||LA106_1==179||LA106_1==188||LA106_1==191)) {s = 2;}

				else if ((LA106_1==NULL_KW)) {s = 73;}

				else if ((LA106_1==UPPER)) {s = 74;}

				else if ((LA106_1==LOWER)) {s = 75;}

				else if ((LA106_1==TRUE_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 76;}

				else if ((LA106_1==FALSE_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 77;}

				else if ((LA106_1==C_STRING) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 78;}

				else if ((LA106_1==MINUS) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 79;}

				else if ((LA106_1==NUMBER) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 80;}

				else if ((LA106_1==L_BRACE) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 81;}

				else if ((LA106_1==H_STRING) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 82;}

				else if ((LA106_1==B_STRING) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 83;}

				else if ((LA106_1==PLUS_INFINITY_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 84;}

				else if ((LA106_1==MINUS_INFINITY_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 85;}

				input.Seek(index106_1);
				break;
			}
		case 2:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred32_Smi_fragment))) {s = 85;}

				else if ((true)) {s = 2;}

				input.Seek(index106_1);
				break;
			}
		case 3:
			{
				input.Rewind();
				if ((LA106_1==LESS)) {s = 2;}

				else if ((LA106_1==END_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 20;}

				else if ((LA106_1==UPPER) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 87;}

				else if ((LA106_1==LOWER) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 88;}

				else if ((LA106_1==OPERATION_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 21;}

				else if ((LA106_1==ERROR_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 22;}

				else if ((LA106_1==136) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 23;}

				else if ((LA106_1==192) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 24;}

				else if ((LA106_1==134) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 25;}

				else if ((LA106_1==133) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 26;}

				else if ((LA106_1==146) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 27;}

				else if ((LA106_1==148) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 28;}

				else if ((LA106_1==147) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 29;}

				else if ((LA106_1==189) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 30;}

				else if ((LA106_1==190) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 31;}

				else if ((LA106_1==181) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 32;}

				else if ((LA106_1==OBJECT_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 89;}

				else if ((LA106_1==174) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 33;}

				else if ((LA106_1==178) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 34;}

				else if ((LA106_1==126) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 35;}

				else if ((LA106_1==129) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 36;}

				else if ((LA106_1==128) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 37;}

				else if ((LA106_1==127) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 38;}

				else if ((LA106_1==132) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 39;}

				else if ((LA106_1==143) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 40;}

				else if ((LA106_1==183) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 41;}

				else if ((LA106_1==182) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 42;}

				else if ((LA106_1==176) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 43;}

				else if ((LA106_1==131||(LA106_1>=158 && LA106_1<=161)||(LA106_1>=163 && LA106_1<=165)||LA106_1==188||LA106_1==191) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 44;}

				else if ((LA106_1==COLON) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 90;}

				else if ((LA106_1==TRUE_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 91;}

				else if ((LA106_1==FALSE_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 92;}

				else if ((LA106_1==NULL_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 93;}

				else if ((LA106_1==C_STRING) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 94;}

				else if ((LA106_1==MINUS) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 95;}

				else if ((LA106_1==NUMBER) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 96;}

				else if ((LA106_1==L_BRACE) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 97;}

				else if ((LA106_1==H_STRING) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 98;}

				else if ((LA106_1==B_STRING) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 99;}

				else if ((LA106_1==PLUS_INFINITY_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 100;}

				else if ((LA106_1==MINUS_INFINITY_KW) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 101;}

				input.Seek(index106_1);
				break;
			}
		case 4:
			{
				input.Rewind();
				if ((LA106_1==UPPER)) {s = 2;}

				else if ((LA106_1==LOWER) && (EvaluatePredicate(synpred32_Smi_fragment))) {s = 102;}

				input.Seek(index106_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 106, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA105 : DFA
	{
		private const string DFA105_eotS =
			"\x47\xFFFF";
		private const string DFA105_eofS =
			"\x1\xE\x46\xFFFF";
		private const string DFA105_minS =
			"\x1\xA\x4\xFFFF\x2\x0\x40\xFFFF";
		private const string DFA105_maxS =
			"\x1\xC5\x4\xFFFF\x2\x0\x40\xFFFF";
		private const string DFA105_acceptS =
			"\x1\xFFFF\x4\x1\x2\xFFFF\x7\x1\x1\x2\x38\xFFFF";
		private const string DFA105_specialS =
			"\x1\x0\x4\xFFFF\x1\x1\x1\x2\x40\xFFFF}>";
		private static readonly string[] DFA105_transitionS =
			{
				"\x1\xE\x1\xFFFF\x1\xE\x8\xFFFF\x1\xB\x5\xFFFF\x2\xE\x4\xFFFF\x1\x4\x1"+
				"\xE\x6\xFFFF\x1\xE\x1\xFFFF\x4\xE\x4\xFFFF\x1\x2\x5\xFFFF\x1\xA\x8\xFFFF"+
				"\x2\xE\x2\xFFFF\x1\xE\x1\x6\x1\x9\x3\xFFFF\x1\x7\x1\xD\x1\xFFFF\x1\x3"+
				"\x1\x8\x2\xFFFF\x1\xE\x3\xFFFF\x2\xE\x4\xFFFF\x1\xC\x5\xFFFF\x2\xE\x1"+
				"\xFFFF\x1\xE\xA\xFFFF\x1\x1\x1\xFFFF\x1\xE\x3\xFFFF\x1\x5\x6\xFFFF\x9"+
				"\xE\x1\xFFFF\x1\xE\x2\xFFFF\x3\xE\x1\xFFFF\x1\xE\x2\xFFFF\x4\xE\x4\xFFFF"+
				"\x8\xE\x1\xFFFF\x3\xE\x2\xFFFF\x1\xE\x2\xFFFF\x4\xE\x1\xFFFF\x1\xE\x1"+
				"\xFFFF\x1\xE\x2\xFFFF\x4\xE\x3\xFFFF\x5\xE\x1\xFFFF\x1\xE\x2\xFFFF\x1"+
				"\xE",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				""
			};

		private static readonly short[] DFA105_eot = DFA.UnpackEncodedString(DFA105_eotS);
		private static readonly short[] DFA105_eof = DFA.UnpackEncodedString(DFA105_eofS);
		private static readonly char[] DFA105_min = DFA.UnpackEncodedStringToUnsignedChars(DFA105_minS);
		private static readonly char[] DFA105_max = DFA.UnpackEncodedStringToUnsignedChars(DFA105_maxS);
		private static readonly short[] DFA105_accept = DFA.UnpackEncodedString(DFA105_acceptS);
		private static readonly short[] DFA105_special = DFA.UnpackEncodedString(DFA105_specialS);
		private static readonly short[][] DFA105_transition;

		static DFA105()
		{
			int numStates = DFA105_transitionS.Length;
			DFA105_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA105_transition[i] = DFA.UnpackEncodedString(DFA105_transitionS[i]);
			}
		}

		public DFA105( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 105;
			this.eot = DFA105_eot;
			this.eof = DFA105_eof;
			this.min = DFA105_min;
			this.max = DFA105_max;
			this.accept = DFA105_accept;
			this.special = DFA105_special;
			this.transition = DFA105_transition;
		}

		public override string Description { get { return "961:59: ( ( value )=> value )?"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition105(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA105_1 = input.LA(1);
		int index105_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((LA105_1==TRUE_KW) && (EvaluatePredicate(synpred33_Smi_fragment))) {s = 1;}

				else if ((LA105_1==FALSE_KW) && (EvaluatePredicate(synpred33_Smi_fragment))) {s = 2;}

				else if ((LA105_1==NULL_KW) && (EvaluatePredicate(synpred33_Smi_fragment))) {s = 3;}

				else if ((LA105_1==C_STRING) && (EvaluatePredicate(synpred33_Smi_fragment))) {s = 4;}

				else if ((LA105_1==UPPER)) {s = 5;}

				else if ((LA105_1==LOWER)) {s = 6;}

				else if ((LA105_1==MINUS) && (EvaluatePredicate(synpred33_Smi_fragment))) {s = 7;}

				else if ((LA105_1==NUMBER) && (EvaluatePredicate(synpred33_Smi_fragment))) {s = 8;}

				else if ((LA105_1==L_BRACE) && (EvaluatePredicate(synpred33_Smi_fragment))) {s = 9;}

				else if ((LA105_1==H_STRING) && (EvaluatePredicate(synpred33_Smi_fragment))) {s = 10;}

				else if ((LA105_1==B_STRING) && (EvaluatePredicate(synpred33_Smi_fragment))) {s = 11;}

				else if ((LA105_1==PLUS_INFINITY_KW) && (EvaluatePredicate(synpred33_Smi_fragment))) {s = 12;}

				else if ((LA105_1==MINUS_INFINITY_KW) && (EvaluatePredicate(synpred33_Smi_fragment))) {s = 13;}

				else if ((LA105_1==EOF||LA105_1==ASSIGN_OP||LA105_1==BAR||(LA105_1>=COLON && LA105_1<=COMMA)||LA105_1==DEFAULT_KW||LA105_1==END_KW||(LA105_1>=ERRORS_KW && LA105_1<=EXCLAMATION)||(LA105_1>=INTERSECTION && LA105_1<=INTERSECTION_KW)||LA105_1==LINKED_KW||LA105_1==OBJECT_KW||(LA105_1>=OPERATION_KW && LA105_1<=OPTIONAL_KW)||(LA105_1>=RESULT_KW && LA105_1<=R_BRACE)||LA105_1==R_PAREN||LA105_1==UNION_KW||(LA105_1>=126 && LA105_1<=134)||LA105_1==136||(LA105_1>=139 && LA105_1<=141)||LA105_1==143||(LA105_1>=146 && LA105_1<=149)||(LA105_1>=154 && LA105_1<=161)||(LA105_1>=163 && LA105_1<=165)||LA105_1==168||(LA105_1>=171 && LA105_1<=174)||LA105_1==176||LA105_1==178||(LA105_1>=181 && LA105_1<=184)||(LA105_1>=188 && LA105_1<=192)||LA105_1==194||LA105_1==197)) {s = 14;}

				input.Seek(index105_1);
				break;
			}
		case 1:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred33_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 14;}

				input.Seek(index105_1);
				break;
			}
		case 2:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred33_Smi_fragment))) {s = 13;}

				else if ((true)) {s = 14;}

				input.Seek(index105_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 105, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA130 : DFA
	{
		private const string DFA130_eotS =
			"\x11\xFFFF";
		private const string DFA130_eofS =
			"\x11\xFFFF";
		private const string DFA130_minS =
			"\x2\x15\x1\xFFFF\x2\x15\x1\x0\x1\x15\x1\x0\x1\x15\x1\xFFFF\x1\x15\x1"+
			"\x0\x1\x15\x1\x0\x2\x15\x1\x0";
		private const string DFA130_maxS =
			"\x2\x77\x1\xFFFF\x2\x77\x1\x0\x1\x77\x1\x0\x1\x77\x1\xFFFF\x1\x77\x1"+
			"\x0\x1\x77\x1\x0\x2\x77\x1\x0";
		private const string DFA130_acceptS =
			"\x2\xFFFF\x1\x2\x6\xFFFF\x1\x1\x7\xFFFF";
		private const string DFA130_specialS =
			"\x5\xFFFF\x1\x0\x1\xFFFF\x1\x1\x3\xFFFF\x1\x2\x1\xFFFF\x1\x3\x2\xFFFF"+
			"\x1\x4}>";
		private static readonly string[] DFA130_transitionS =
			{
				"\x1\x2\xB\xFFFF\x1\x2\x11\xFFFF\x1\x2\x5\xFFFF\x1\x2\xD\xFFFF\x1\x2"+
				"\x1\x1\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\xC\xFFFF\x1\x2\x13\xFFFF\x1\x2"+
				"\x5\xFFFF\x1\x2",
				"\x1\x2\x6\xFFFF\x1\x4\x4\xFFFF\x1\x2\x11\xFFFF\x1\x2\x5\xFFFF\x1\x2"+
				"\xD\xFFFF\x1\x3\x1\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\xC\xFFFF\x1\x2\x6"+
				"\xFFFF\x1\x5\xC\xFFFF\x1\x2\x5\xFFFF\x1\x2",
				"",
				"\x1\x2\x5\xFFFF\x1\x2\x1\x6\x4\xFFFF\x1\x2\x11\xFFFF\x1\x2\x5\xFFFF"+
				"\x1\x2\xD\xFFFF\x2\x2\x1\xFFFF\x1\x2\x1\xFFFF\x2\x2\x1\xFFFF\x2\x2\xC"+
				"\xFFFF\x1\x2\x6\xFFFF\x1\x7\xC\xFFFF\x1\x2\x5\xFFFF\x1\x2",
				"\x1\x2\xB\xFFFF\x1\x2\x11\xFFFF\x1\x2\x5\xFFFF\x1\x2\xD\xFFFF\x1\x8"+
				"\x1\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\xC\xFFFF\x1\x2\x13\xFFFF\x1\x2"+
				"\x5\xFFFF\x1\x2",
				"\x1\xFFFF",
				"\x1\x2\xB\xFFFF\x1\x2\x11\xFFFF\x1\x2\x5\xFFFF\x1\x2\xD\xFFFF\x1\xA"+
				"\x1\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\xC\xFFFF\x1\x2\x13\xFFFF\x1\x2"+
				"\x5\xFFFF\x1\x2",
				"\x1\xFFFF",
				"\x1\x2\x5\xFFFF\x1\x2\x1\xC\x4\xFFFF\x1\x2\x11\xFFFF\x1\x2\x5\xFFFF"+
				"\x1\x2\xD\xFFFF\x2\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\xC\xFFFF\x1\x2\x6"+
				"\xFFFF\x1\xB\xC\xFFFF\x1\x2\x5\xFFFF\x1\x2",
				"",
				"\x1\x2\x5\xFFFF\x1\x2\x1\xE\x4\xFFFF\x1\x2\x11\xFFFF\x1\x2\x5\xFFFF"+
				"\x1\x2\xD\xFFFF\x2\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\xC\xFFFF\x1\x2\x6"+
				"\xFFFF\x1\xD\xC\xFFFF\x1\x2\x5\xFFFF\x1\x2",
				"\x1\xFFFF",
				"\x1\x2\xB\xFFFF\x1\x2\x11\xFFFF\x1\x2\x5\xFFFF\x1\x2\xD\xFFFF\x1\xF"+
				"\x1\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\xC\xFFFF\x1\x2\x13\xFFFF\x1\x2"+
				"\x5\xFFFF\x1\x2",
				"\x1\xFFFF",
				"\x1\x2\xB\xFFFF\x1\x2\x11\xFFFF\x1\x2\x5\xFFFF\x1\x2\xD\xFFFF\x1\xA"+
				"\x1\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\xC\xFFFF\x1\x2\x13\xFFFF\x1\x2"+
				"\x5\xFFFF\x1\x2",
				"\x1\x2\x5\xFFFF\x1\x2\x1\xC\x4\xFFFF\x1\x2\x11\xFFFF\x1\x2\x5\xFFFF"+
				"\x1\x2\xD\xFFFF\x2\x2\x3\xFFFF\x2\x2\x1\xFFFF\x2\x2\xC\xFFFF\x1\x2\x6"+
				"\xFFFF\x1\x10\xC\xFFFF\x1\x2\x5\xFFFF\x1\x2",
				"\x1\xFFFF"
			};

		private static readonly short[] DFA130_eot = DFA.UnpackEncodedString(DFA130_eotS);
		private static readonly short[] DFA130_eof = DFA.UnpackEncodedString(DFA130_eofS);
		private static readonly char[] DFA130_min = DFA.UnpackEncodedStringToUnsignedChars(DFA130_minS);
		private static readonly char[] DFA130_max = DFA.UnpackEncodedStringToUnsignedChars(DFA130_maxS);
		private static readonly short[] DFA130_accept = DFA.UnpackEncodedString(DFA130_acceptS);
		private static readonly short[] DFA130_special = DFA.UnpackEncodedString(DFA130_specialS);
		private static readonly short[][] DFA130_transition;

		static DFA130()
		{
			int numStates = DFA130_transitionS.Length;
			DFA130_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA130_transition[i] = DFA.UnpackEncodedString(DFA130_transitionS[i]);
			}
		}

		public DFA130( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 130;
			this.eot = DFA130_eot;
			this.eof = DFA130_eof;
			this.min = DFA130_min;
			this.max = DFA130_max;
			this.accept = DFA130_accept;
			this.special = DFA130_special;
			this.transition = DFA130_transition;
		}

		public override string Description { get { return "1002:55: ( ( L_BRACE ( LOWER | COMMA | R_BRACE ) )=> L_BRACE ( LOWER )? ( COMMA LOWER )* R_BRACE | value )"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition130(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA130_1 = input.LA(1);
		int index130_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred36_Smi_fragment))) {s = 9;}

				else if ((true)) {s = 2;}

				input.Seek(index130_1);
				break;
			}
		case 1:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred36_Smi_fragment))) {s = 9;}

				else if ((true)) {s = 2;}

				input.Seek(index130_1);
				break;
			}
		case 2:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred36_Smi_fragment))) {s = 9;}

				else if ((true)) {s = 2;}

				input.Seek(index130_1);
				break;
			}
		case 3:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred36_Smi_fragment))) {s = 9;}

				else if ((true)) {s = 2;}

				input.Seek(index130_1);
				break;
			}
		case 4:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred36_Smi_fragment))) {s = 9;}

				else if ((true)) {s = 2;}

				input.Seek(index130_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 130, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}

	#endregion DFA

	#region Follow sets
	private static class Follow
	{
		public static readonly BitSet _module_definition_in_statement1872 = new BitSet(new ulong[]{0x0UL});
		public static readonly BitSet _EOF_in_statement1878 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _module_identifier_in_module_definition1903 = new BitSet(new ulong[]{0x1000000000UL,0x0UL,0x20000000000UL});
		public static readonly BitSet _set_in_module_definition1905 = new BitSet(new ulong[]{0x1002800000000C00UL});
		public static readonly BitSet _set_in_module_definition1918 = new BitSet(new ulong[]{0x0UL,0x800000000000UL});
		public static readonly BitSet _TAGS_KW_in_module_definition1930 = new BitSet(new ulong[]{0x2000000000400UL});
		public static readonly BitSet _EXTENSIBILITY_KW_in_module_definition1939 = new BitSet(new ulong[]{0x2000000000000000UL});
		public static readonly BitSet _IMPLIED_KW_in_module_definition1941 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _ASSIGN_OP_in_module_definition1947 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _BEGIN_KW_in_module_definition1949 = new BitSet(new ulong[]{0x4001120000000000UL,0xC080000000880080UL,0xF0E5403BC01C817BUL,0x1UL});
		public static readonly BitSet _module_body_in_module_definition1953 = new BitSet(new ulong[]{0x20000000000UL});
		public static readonly BitSet _END_KW_in_module_definition1955 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UPPER_in_module_identifier1972 = new BitSet(new ulong[]{0x2UL,0x100UL});
		public static readonly BitSet _obj_id_comp_lst_in_module_identifier1975 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _exports_in_module_body2000 = new BitSet(new ulong[]{0x4000100000000002UL,0xC080000000880080UL,0xF0E5403BC01C817BUL,0x1UL});
		public static readonly BitSet _imports_in_module_body2011 = new BitSet(new ulong[]{0x100000000002UL,0xC080000000880080UL,0xF0E5403BC01C817BUL,0x1UL});
		public static readonly BitSet _assignment_in_module_body2022 = new BitSet(new ulong[]{0x100000000002UL,0xC080000000880080UL,0xF0E5403BC01C817BUL,0x1UL});
		public static readonly BitSet _L_BRACE_in_obj_id_comp_lst2036 = new BitSet(new ulong[]{0x0UL,0x80000000010080UL});
		public static readonly BitSet _defined_value_in_obj_id_comp_lst2051 = new BitSet(new ulong[]{0x0UL,0x10080UL});
		public static readonly BitSet _obj_id_component_in_obj_id_comp_lst2056 = new BitSet(new ulong[]{0x0UL,0x1000010080UL});
		public static readonly BitSet _R_BRACE_in_obj_id_comp_lst2060 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UPPER_in_defined_value2071 = new BitSet(new ulong[]{0x2000000000UL});
		public static readonly BitSet _DOT_in_defined_value2073 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _LOWER_in_defined_value2077 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NUMBER_in_obj_id_component2087 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_obj_id_component2108 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _L_PAREN_in_obj_id_component2111 = new BitSet(new ulong[]{0x0UL,0x10000UL});
		public static readonly BitSet _NUMBER_in_obj_id_component2113 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _R_PAREN_in_obj_id_component2115 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _EXPORTS_KW_in_exports2155 = new BitSet(new ulong[]{0x100000000040UL,0xC080008000880080UL,0xF0E5403BC01C817BUL,0x1UL});
		public static readonly BitSet _symbol_list_in_exports2167 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _ALL_KW_in_exports2178 = new BitSet(new ulong[]{0x0UL,0x8000000000UL});
		public static readonly BitSet _SEMI_in_exports2189 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IMPORTS_KW_in_imports2208 = new BitSet(new ulong[]{0x100000000000UL,0xC080008000880080UL,0xF0E5403BC01C817BUL,0x1UL});
		public static readonly BitSet _symbols_from_module_in_imports2213 = new BitSet(new ulong[]{0x100000000000UL,0xC080008000880080UL,0xF0E5403BC01C817BUL,0x1UL});
		public static readonly BitSet _SEMI_in_imports2219 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UPPER_in_assignment2241 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _ASSIGN_OP_in_assignment2243 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _type_in_assignment2245 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_assignment2260 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _type_in_assignment2262 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _ASSIGN_OP_in_assignment2264 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_assignment2266 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UPPER_in_assignment2282 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000000UL});
		public static readonly BitSet _macroName_in_assignment2286 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000000UL});
		public static readonly BitSet _153_in_assignment2289 = new BitSet(new ulong[]{0x400UL});
		public static readonly BitSet _ASSIGN_OP_in_assignment2291 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _BEGIN_KW_in_assignment2293 = new BitSet(new ulong[]{0xFFFFFFFFFFFFFFF0UL,0xFFFFFFFFFFFFFFFFUL,0xFFFFFFFFFFFFFFFFUL,0x3FUL});
		public static readonly BitSet _END_KW_in_assignment2303 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _symbol_in_symbol_list2331 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _COMMA_in_symbol_list2338 = new BitSet(new ulong[]{0x100000000000UL,0xC080000000880080UL,0xF0E5403BC01C817BUL,0x1UL});
		public static readonly BitSet _symbol_in_symbol_list2342 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _symbol_list_in_symbols_from_module2368 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _FROM_KW_in_symbols_from_module2373 = new BitSet(new ulong[]{0x0UL,0x80000000000000UL});
		public static readonly BitSet _UPPER_in_symbols_from_module2377 = new BitSet(new ulong[]{0x2UL,0x80000000000180UL});
		public static readonly BitSet _obj_id_comp_lst_in_symbols_from_module2407 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_value_in_symbols_from_module2444 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UPPER_in_symbol2480 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_symbol2484 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _macroName_in_symbol2488 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OPERATION_KW_in_macroName2495 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ERROR_KW_in_macroName2499 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _136_in_macroName2504 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _192_in_macroName2508 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _134_in_macroName2522 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _133_in_macroName2526 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _146_in_macroName2530 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _148_in_macroName2544 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _147_in_macroName2548 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _189_in_macroName2552 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _190_in_macroName2556 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _181_in_macroName2563 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OBJECT_KW_in_macroName2567 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _174_in_macroName2571 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _178_in_macroName2575 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _126_in_macroName2579 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _129_in_macroName2586 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _128_in_macroName2590 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _127_in_macroName2594 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _132_in_macroName2601 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _143_in_macroName2605 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _183_in_macroName2609 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _182_in_macroName2613 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _176_in_macroName2617 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_macros_in_macroName2624 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _built_in_type_in_type2631 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_type_in_type2635 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _selection_type_in_type2639 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _macros_type_in_type2643 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_type2647 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _TRUE_KW_in_value2660 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FALSE_KW_in_value2676 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NULL_KW_in_value2692 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _C_STRING_in_value2709 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_value_in_value2725 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _signed_number_in_value2741 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _choice_value_in_value2756 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _sequence_value_in_value2772 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _sequenceof_value_in_value2788 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _cstr_value_in_value2804 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _obj_id_comp_lst_in_value2820 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PLUS_INFINITY_KW_in_value2836 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _MINUS_INFINITY_KW_in_value2852 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _any_type_in_built_in_type2859 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _bit_string_type_in_built_in_type2877 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _boolean_type_in_built_in_type2895 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _character_str_type_in_built_in_type2913 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _choice_type_in_built_in_type2931 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _embedded_type_in_built_in_type2948 = new BitSet(new ulong[]{0x10000000000UL});
		public static readonly BitSet _EMBEDDED_KW_in_built_in_type2950 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _PDV_KW_in_built_in_type2952 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enum_type_in_built_in_type2970 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _external_type_in_built_in_type2987 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _integer_type_in_built_in_type2997 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _null_type_in_built_in_type3007 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _object_identifier_type_in_built_in_type3017 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _octetString_type_in_built_in_type3027 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _real_type_in_built_in_type3037 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _relativeOid_type_in_built_in_type3047 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _sequence_type_in_built_in_type3057 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _sequenceof_type_in_built_in_type3067 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _set_type_in_built_in_type3077 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _setof_type_in_built_in_type3087 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _tagged_type_in_built_in_type3097 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UPPER_in_defined_type3105 = new BitSet(new ulong[]{0x2000000000UL});
		public static readonly BitSet _DOT_in_defined_type3107 = new BitSet(new ulong[]{0x0UL,0x80000000000000UL});
		public static readonly BitSet _UPPER_in_defined_type3111 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _constraint_in_defined_type3114 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_selection_type3124 = new BitSet(new ulong[]{0x0UL,0x20UL});
		public static readonly BitSet _LESS_in_selection_type3126 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _type_in_selection_type3128 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ANY_KW_in_any_type3135 = new BitSet(new ulong[]{0x800000002UL});
		public static readonly BitSet _DEFINED_KW_in_any_type3138 = new BitSet(new ulong[]{0x80000UL});
		public static readonly BitSet _BY_KW_in_any_type3140 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _LOWER_in_any_type3142 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BIT_KW_in_bit_string_type3154 = new BitSet(new ulong[]{0x0UL,0x200000000000UL});
		public static readonly BitSet _STRING_KW_in_bit_string_type3156 = new BitSet(new ulong[]{0x2UL,0x500UL});
		public static readonly BitSet _namedNumber_list_in_bit_string_type3167 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _constraint_in_bit_string_type3172 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _BOOLEAN_KW_in_boolean_type3183 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CHARACTER_KW_in_character_str_type3190 = new BitSet(new ulong[]{0x0UL,0x200000000000UL});
		public static readonly BitSet _STRING_KW_in_character_str_type3192 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _character_set_in_character_str_type3196 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _constraint_in_character_str_type3199 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CHOICE_KW_in_choice_type3209 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_choice_type3211 = new BitSet(new ulong[]{0x40000000UL,0x80UL});
		public static readonly BitSet _elementType_list_in_choice_type3213 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_choice_type3215 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _EMBEDDED_KW_in_embedded_type3222 = new BitSet(new ulong[]{0x0UL,0x8000000UL});
		public static readonly BitSet _PDV_KW_in_embedded_type3224 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ENUMERATED_KW_in_enum_type3231 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _namedNumber_list_in_enum_type3233 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _EXTERNAL_KW_in_external_type3240 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _INTEGER_KW_in_integer_type3249 = new BitSet(new ulong[]{0x2UL,0x500UL});
		public static readonly BitSet _namedNumber_list_in_integer_type3260 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constraint_in_integer_type3264 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NULL_KW_in_null_type3275 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OBJECT_KW_in_object_identifier_type3282 = new BitSet(new ulong[]{0x800000000000000UL});
		public static readonly BitSet _IDENTIFIER_KW_in_object_identifier_type3284 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OCTET_KW_in_octetString_type3291 = new BitSet(new ulong[]{0x0UL,0x200000000000UL});
		public static readonly BitSet _STRING_KW_in_octetString_type3293 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _constraint_in_octetString_type3296 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _REAL_KW_in_real_type3306 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _179_in_relativeOid_type3315 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEQUENCE_KW_in_sequence_type3323 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_sequence_type3325 = new BitSet(new ulong[]{0x40000000UL,0x1000000080UL});
		public static readonly BitSet _elementType_list_in_sequence_type3328 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_sequence_type3332 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SEQUENCE_KW_in_sequenceof_type3340 = new BitSet(new ulong[]{0x0UL,0x80000200000UL});
		public static readonly BitSet _SIZE_KW_in_sequenceof_type3343 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _constraint_in_sequenceof_type3345 = new BitSet(new ulong[]{0x0UL,0x200000UL});
		public static readonly BitSet _OF_KW_in_sequenceof_type3349 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _type_in_sequenceof_type3351 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SET_KW_in_set_type3358 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_set_type3360 = new BitSet(new ulong[]{0x40000000UL,0x1000000080UL});
		public static readonly BitSet _elementType_list_in_set_type3363 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_set_type3367 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SET_KW_in_setof_type3374 = new BitSet(new ulong[]{0x0UL,0x80000200000UL});
		public static readonly BitSet _SIZE_KW_in_setof_type3377 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _constraint_in_setof_type3379 = new BitSet(new ulong[]{0x0UL,0x200000UL});
		public static readonly BitSet _OF_KW_in_setof_type3383 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _type_in_setof_type3385 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _tag_in_tagged_type3392 = new BitSet(new ulong[]{0x14E4950002470880UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _tag_default_in_tagged_type3395 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _type_in_tagged_type3399 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_namedNumber_list3406 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _namedNumber_in_namedNumber_list3408 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_namedNumber_list3411 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _namedNumber_in_namedNumber_list3413 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_namedNumber_list3417 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_PAREN_in_constraint3424 = new BitSet(new ulong[]{0x86FC5502026700C0UL,0x1FC34B42A49BF792UL,0x9008003BC0000208UL});
		public static readonly BitSet _element_set_specs_in_constraint3427 = new BitSet(new ulong[]{0x400000000000UL,0x4000000000UL});
		public static readonly BitSet _exception_spec_in_constraint3432 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _R_PAREN_in_constraint3436 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _elementType_in_elementType_list3545 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _COMMA_in_elementType_list3548 = new BitSet(new ulong[]{0x40000000UL,0x80UL});
		public static readonly BitSet _elementType_in_elementType_list3550 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _L_BRACKET_in_tag3560 = new BitSet(new ulong[]{0x100UL,0xA0000100010080UL});
		public static readonly BitSet _clazz_in_tag3563 = new BitSet(new ulong[]{0x0UL,0x80000000010080UL});
		public static readonly BitSet _class_NUMBER_in_tag3567 = new BitSet(new ulong[]{0x0UL,0x2000000000UL});
		public static readonly BitSet _R_BRACKET_in_tag3569 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NUMBER_in_class_NUMBER3593 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_value_in_class_NUMBER3597 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OPERATION_KW_in_operation_macro3606 = new BitSet(new ulong[]{0x80000000202UL,0x800000040UL});
		public static readonly BitSet _ARGUMENT_KW_in_operation_macro3609 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _LOWER_in_operation_macro3618 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _type_in_operation_macro3622 = new BitSet(new ulong[]{0x80000000002UL,0x800000040UL});
		public static readonly BitSet _RESULT_KW_in_operation_macro3656 = new BitSet(new ulong[]{0x4E41D0002470082UL,0xFC14302809A82D2UL,0x9008003BC0000208UL});
		public static readonly BitSet _LOWER_in_operation_macro3697 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _type_in_operation_macro3701 = new BitSet(new ulong[]{0x80000000002UL,0x40UL});
		public static readonly BitSet _ERRORS_KW_in_operation_macro3743 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_operation_macro3745 = new BitSet(new ulong[]{0x6EC150202670080UL,0xFC34312A09BB392UL,0x9008003BC0000208UL});
		public static readonly BitSet _operation_errorlist_in_operation_macro3748 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_operation_macro3752 = new BitSet(new ulong[]{0x2UL,0x40UL});
		public static readonly BitSet _LINKED_KW_in_operation_macro3786 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_operation_macro3788 = new BitSet(new ulong[]{0x6EC150202670080UL,0xFC34312A09BB392UL,0x9008003BC0000208UL});
		public static readonly BitSet _linkedOp_list_in_operation_macro3791 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_operation_macro3795 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ERROR_KW_in_error_macro3815 = new BitSet(new ulong[]{0x2UL,0x2000000UL});
		public static readonly BitSet _PARAMETER_KW_in_error_macro3819 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _LOWER_in_error_macro3828 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _type_in_error_macro3832 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _operation_macro_in_macros_type3850 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _error_macro_in_macros_type3854 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _objecttype_macro_in_macros_type3858 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _moduleidentity_macro_in_macros_type3862 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _objectidentity_macro_in_macros_type3878 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _notificationtype_macro_in_macros_type3882 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _textualconvention_macro_in_macros_type3886 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _objectgroup_macro_in_macros_type3902 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _notificationgroup_macro_in_macros_type3906 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modulecompliance_macro_in_macros_type3910 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _agentcapabilities_macro_in_macros_type3926 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _traptype_macro_in_macros_type3930 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _137_in_smi_type4004 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _INTEGER_KW_in_smi_type4008 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OCTET_KW_in_smi_type4012 = new BitSet(new ulong[]{0x0UL,0x200000000000UL});
		public static readonly BitSet _STRING_KW_in_smi_type4014 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OBJECT_KW_in_smi_type4018 = new BitSet(new ulong[]{0x800000000000000UL});
		public static readonly BitSet _IDENTIFIER_KW_in_smi_type4020 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UPPER_in_smi_type4024 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_PAREN_in_smi_subtyping4038 = new BitSet(new ulong[]{0x200000000200000UL,0x11000UL});
		public static readonly BitSet _subtype_range_in_smi_subtyping4040 = new BitSet(new ulong[]{0x1000UL,0x4000000000UL});
		public static readonly BitSet _BAR_in_smi_subtyping4043 = new BitSet(new ulong[]{0x200000000200000UL,0x11000UL});
		public static readonly BitSet _subtype_range_in_smi_subtyping4045 = new BitSet(new ulong[]{0x1000UL,0x4000000000UL});
		public static readonly BitSet _R_PAREN_in_smi_subtyping4049 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_PAREN_in_smi_subtyping4066 = new BitSet(new ulong[]{0x0UL,0x80000000000UL});
		public static readonly BitSet _SIZE_KW_in_smi_subtyping4068 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _L_PAREN_in_smi_subtyping4070 = new BitSet(new ulong[]{0x200000000200000UL,0x11000UL});
		public static readonly BitSet _subtype_range_in_smi_subtyping4072 = new BitSet(new ulong[]{0x1000UL,0x4000000000UL});
		public static readonly BitSet _BAR_in_smi_subtyping4075 = new BitSet(new ulong[]{0x200000000200000UL,0x11000UL});
		public static readonly BitSet _subtype_range_in_smi_subtyping4077 = new BitSet(new ulong[]{0x1000UL,0x4000000000UL});
		public static readonly BitSet _R_PAREN_in_smi_subtyping4081 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _R_PAREN_in_smi_subtyping4083 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _subtype_value_in_subtype_range4089 = new BitSet(new ulong[]{0x4000000002UL});
		public static readonly BitSet _DOTDOT_in_subtype_range4092 = new BitSet(new ulong[]{0x200000000200000UL,0x11000UL});
		public static readonly BitSet _subtype_value_in_subtype_range4094 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _MINUS_in_subtype_value4104 = new BitSet(new ulong[]{0x0UL,0x10000UL});
		public static readonly BitSet _NUMBER_in_subtype_value4108 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _B_STRING_in_subtype_value4112 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _H_STRING_in_subtype_value4116 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _165_in_objecttype_macro4125 = new BitSet(new ulong[]{0x0UL,0x0UL,0x800000000000000UL});
		public static readonly BitSet _187_in_objecttype_macro4127 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _smi_type_in_objecttype_macro4160 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _objecttype_macro_namedbits_in_objecttype_macro4162 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100310008000004UL,0x4UL});
		public static readonly BitSet _smi_type_in_objecttype_macro4194 = new BitSet(new ulong[]{0x0UL,0x400UL,0x100310008000004UL,0x4UL});
		public static readonly BitSet _smi_subtyping_in_objecttype_macro4197 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100310008000004UL,0x4UL});
		public static readonly BitSet _type_in_objecttype_macro4224 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100310008000004UL,0x4UL});
		public static readonly BitSet _194_in_objecttype_macro4268 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_objecttype_macro4270 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100310008000004UL});
		public static readonly BitSet _set_in_objecttype_macro4295 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _objecttype_macro_accesstypes_in_objecttype_macro4303 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100300000000000UL});
		public static readonly BitSet _168_in_objecttype_macro4327 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _objecttype_macro_pibaccess_in_objecttype_macro4329 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100300000000000UL});
		public static readonly BitSet _172_in_objecttype_macro4367 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro4369 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_objecttype_macro4371 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro4373 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100200000000000UL});
		public static readonly BitSet _173_in_objecttype_macro4414 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro4416 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_objecttype_macro4418 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro4420 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100000000000000UL});
		public static readonly BitSet _184_in_objecttype_macro4467 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _objecttype_macro_statustypes_in_objecttype_macro4469 = new BitSet(new ulong[]{0x2UL,0x0UL,0x2040000C23080UL,0x2UL});
		public static readonly BitSet _141_in_objecttype_macro4498 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_objecttype_macro4500 = new BitSet(new ulong[]{0x2UL,0x0UL,0x2040000C21080UL,0x2UL});
		public static readonly BitSet _151_in_objecttype_macro4556 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro4558 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _objecttype_macro_error_in_objecttype_macro4560 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_objecttype_macro4563 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _objecttype_macro_error_in_objecttype_macro4565 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro4569 = new BitSet(new ulong[]{0x2UL,0x0UL,0x2040000421080UL,0x2UL});
		public static readonly BitSet _177_in_objecttype_macro4584 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_objecttype_macro4586 = new BitSet(new ulong[]{0x2UL,0x0UL,0x40000421080UL,0x2UL});
		public static readonly BitSet _150_in_objecttype_macro4607 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _objecttype_macro_index_in_objecttype_macro4609 = new BitSet(new ulong[]{0x2UL,0x0UL,0x401000UL,0x2UL});
		public static readonly BitSet _135_in_objecttype_macro4634 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _objecttype_macro_augments_in_objecttype_macro4636 = new BitSet(new ulong[]{0x2UL,0x0UL,0x401000UL,0x2UL});
		public static readonly BitSet _170_in_objecttype_macro4661 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro4663 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_objecttype_macro4665 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro4667 = new BitSet(new ulong[]{0x2UL,0x0UL,0x401000UL,0x2UL});
		public static readonly BitSet _145_in_objecttype_macro4713 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro4715 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_objecttype_macro4717 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro4719 = new BitSet(new ulong[]{0x2UL,0x0UL,0x401000UL,0x2UL});
		public static readonly BitSet _150_in_objecttype_macro4787 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _objecttype_macro_index_in_objecttype_macro4789 = new BitSet(new ulong[]{0x2UL,0x0UL,0x1000UL,0x2UL});
		public static readonly BitSet _193_in_objecttype_macro4838 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro4840 = new BitSet(new ulong[]{0x208000200200000UL,0x8200102001B180UL});
		public static readonly BitSet _value_in_objecttype_macro4843 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_objecttype_macro4846 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_objecttype_macro4848 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro4855 = new BitSet(new ulong[]{0x2UL,0x0UL,0x1000UL});
		public static readonly BitSet _140_in_objecttype_macro4894 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro4896 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _objecttype_macro_bitsvalue_in_objecttype_macro4937 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _value_in_objecttype_macro4964 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro4988 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_objecttype_macro_accesstypes5002 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_objecttype_macro_pibaccess5055 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_objecttype_macro_statustypes5108 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro_index5158 = new BitSet(new ulong[]{0x2208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _objecttype_macro_indextype_in_objecttype_macro_index5160 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_objecttype_macro_index5163 = new BitSet(new ulong[]{0x2208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _objecttype_macro_indextype_in_objecttype_macro_index5165 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro_index5169 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IMPLIED_KW_in_objecttype_macro_indextype5183 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_objecttype_macro_indextype5187 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro_augments5193 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_objecttype_macro_augments5195 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro_augments5197 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro_namedbits5207 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _LOWER_in_objecttype_macro_namedbits5210 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _L_PAREN_in_objecttype_macro_namedbits5213 = new BitSet(new ulong[]{0x0UL,0x10000UL});
		public static readonly BitSet _NUMBER_in_objecttype_macro_namedbits5215 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _R_PAREN_in_objecttype_macro_namedbits5217 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_objecttype_macro_namedbits5220 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _LOWER_in_objecttype_macro_namedbits5223 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _L_PAREN_in_objecttype_macro_namedbits5226 = new BitSet(new ulong[]{0x0UL,0x10000UL});
		public static readonly BitSet _NUMBER_in_objecttype_macro_namedbits5228 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _R_PAREN_in_objecttype_macro_namedbits5230 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro_namedbits5234 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_objecttype_macro_bitsvalue5245 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _LOWER_in_objecttype_macro_bitsvalue5247 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_objecttype_macro_bitsvalue5250 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _LOWER_in_objecttype_macro_bitsvalue5252 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_objecttype_macro_bitsvalue5256 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_objecttype_macro_error5267 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _L_PAREN_in_objecttype_macro_error5269 = new BitSet(new ulong[]{0x0UL,0x10000UL});
		public static readonly BitSet _NUMBER_in_objecttype_macro_error5271 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _R_PAREN_in_objecttype_macro_error5273 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _159_in_moduleidentity_macro5282 = new BitSet(new ulong[]{0x0UL,0x0UL,0x200000001000000UL});
		public static readonly BitSet _185_in_moduleidentity_macro5310 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_moduleidentity_macro5312 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _moduleidentity_macro_categories_in_moduleidentity_macro5314 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_moduleidentity_macro5316 = new BitSet(new ulong[]{0x0UL,0x0UL,0x1000000UL});
		public static readonly BitSet _152_in_moduleidentity_macro5346 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_moduleidentity_macro5348 = new BitSet(new ulong[]{0x0UL,0x0UL,0x8000000000UL});
		public static readonly BitSet _167_in_moduleidentity_macro5350 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_moduleidentity_macro5352 = new BitSet(new ulong[]{0x0UL,0x0UL,0x400UL});
		public static readonly BitSet _138_in_moduleidentity_macro5354 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_moduleidentity_macro5356 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000UL});
		public static readonly BitSet _141_in_moduleidentity_macro5383 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_moduleidentity_macro5385 = new BitSet(new ulong[]{0x2UL,0x0UL,0x10000000000000UL});
		public static readonly BitSet _moduleidentity_macro_revision_in_moduleidentity_macro5388 = new BitSet(new ulong[]{0x2UL,0x0UL,0x10000000000000UL});
		public static readonly BitSet _180_in_moduleidentity_macro_revision5397 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_moduleidentity_macro_revision5399 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000UL});
		public static readonly BitSet _141_in_moduleidentity_macro_revision5401 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_moduleidentity_macro_revision5403 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_moduleidentity_macro_categories5412 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _moduleidentity_macro_categoryid_in_moduleidentity_macro_categories5450 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _COMMA_in_moduleidentity_macro_categories5453 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _moduleidentity_macro_categoryid_in_moduleidentity_macro_categories5455 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _LOWER_in_moduleidentity_macro_categoryid5463 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _L_PAREN_in_moduleidentity_macro_categoryid5465 = new BitSet(new ulong[]{0x0UL,0x10000UL});
		public static readonly BitSet _NUMBER_in_moduleidentity_macro_categoryid5467 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _R_PAREN_in_moduleidentity_macro_categoryid5469 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _164_in_objectidentity_macro5479 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100000000000000UL});
		public static readonly BitSet _184_in_objectidentity_macro5481 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _objectidentity_macro_statustypes_in_objectidentity_macro5483 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000UL});
		public static readonly BitSet _141_in_objectidentity_macro5485 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_objectidentity_macro5487 = new BitSet(new ulong[]{0x2UL,0x0UL,0x2000000000000UL});
		public static readonly BitSet _177_in_objectidentity_macro5490 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_objectidentity_macro5492 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_objectidentity_macro_statustypes5505 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _161_in_notificationtype_macro5558 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100004000000000UL});
		public static readonly BitSet _166_in_notificationtype_macro5561 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_notificationtype_macro5563 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_notificationtype_macro5565 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_notificationtype_macro5568 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_notificationtype_macro5570 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_notificationtype_macro5574 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100000000000000UL});
		public static readonly BitSet _184_in_notificationtype_macro5623 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _notificationtype_macro_status_in_notificationtype_macro5625 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000UL});
		public static readonly BitSet _141_in_notificationtype_macro5627 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_notificationtype_macro5629 = new BitSet(new ulong[]{0x2UL,0x0UL,0x2000000000000UL});
		public static readonly BitSet _177_in_notificationtype_macro5632 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_notificationtype_macro5634 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_notificationtype_macro_status5647 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _188_in_textualconvention_macro5699 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100000000004000UL});
		public static readonly BitSet _142_in_textualconvention_macro5702 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_textualconvention_macro5704 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100000000000000UL});
		public static readonly BitSet _184_in_textualconvention_macro5737 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _textualconvention_macro_status_in_textualconvention_macro5739 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000UL});
		public static readonly BitSet _141_in_textualconvention_macro5770 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_textualconvention_macro5772 = new BitSet(new ulong[]{0x0UL,0x0UL,0x802000000000000UL});
		public static readonly BitSet _177_in_textualconvention_macro5804 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_textualconvention_macro5806 = new BitSet(new ulong[]{0x0UL,0x0UL,0x800000000000000UL});
		public static readonly BitSet _187_in_textualconvention_macro5839 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _smi_type_in_textualconvention_macro5851 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_textualconvention_macro5853 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _textualconvention_macro_namedbit_in_textualconvention_macro5855 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_textualconvention_macro5895 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _textualconvention_macro_namedbit_in_textualconvention_macro5897 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_textualconvention_macro5901 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_textualconvention_macro5905 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_textualconvention_macro_status5916 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_textualconvention_macro_namedbit5965 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _L_PAREN_in_textualconvention_macro_namedbit5967 = new BitSet(new ulong[]{0x0UL,0x11000UL});
		public static readonly BitSet _MINUS_in_textualconvention_macro_namedbit5970 = new BitSet(new ulong[]{0x0UL,0x10000UL});
		public static readonly BitSet _NUMBER_in_textualconvention_macro_namedbit5974 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _R_PAREN_in_textualconvention_macro_namedbit5976 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _163_in_objectgroup_macro5985 = new BitSet(new ulong[]{0x0UL,0x0UL,0x4000000000UL});
		public static readonly BitSet _166_in_objectgroup_macro5987 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_objectgroup_macro5989 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_objectgroup_macro5991 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_objectgroup_macro5994 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_objectgroup_macro5996 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_objectgroup_macro6000 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100000000000000UL});
		public static readonly BitSet _184_in_objectgroup_macro6027 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _objectgroup_macro_status_in_objectgroup_macro6029 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000UL});
		public static readonly BitSet _141_in_objectgroup_macro6031 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_objectgroup_macro6033 = new BitSet(new ulong[]{0x2UL,0x0UL,0x2000000000000UL});
		public static readonly BitSet _177_in_objectgroup_macro6036 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_objectgroup_macro6038 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_objectgroup_macro_status6049 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _160_in_notificationgroup_macro6101 = new BitSet(new ulong[]{0x0UL,0x0UL,0x400000000UL});
		public static readonly BitSet _162_in_notificationgroup_macro6103 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_notificationgroup_macro6105 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_notificationgroup_macro6107 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_notificationgroup_macro6110 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_notificationgroup_macro6112 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_notificationgroup_macro6116 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100000000000000UL});
		public static readonly BitSet _184_in_notificationgroup_macro6143 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _notificationgroup_macro_status_in_notificationgroup_macro6145 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000UL});
		public static readonly BitSet _141_in_notificationgroup_macro6147 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_notificationgroup_macro6149 = new BitSet(new ulong[]{0x2UL,0x0UL,0x2000000000000UL});
		public static readonly BitSet _177_in_notificationgroup_macro6152 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_notificationgroup_macro6154 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_notificationgroup_macro_status6165 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _158_in_modulecompliance_macro6217 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100000000000000UL});
		public static readonly BitSet _184_in_modulecompliance_macro6219 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _modulecompliance_macro_status_in_modulecompliance_macro6221 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000UL});
		public static readonly BitSet _141_in_modulecompliance_macro6247 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_modulecompliance_macro6249 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000020000000UL});
		public static readonly BitSet _177_in_modulecompliance_macro6252 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_modulecompliance_macro6254 = new BitSet(new ulong[]{0x0UL,0x0UL,0x20000000UL});
		public static readonly BitSet _modulecompliance_macro_module_in_modulecompliance_macro6259 = new BitSet(new ulong[]{0x2UL,0x0UL,0x20000000UL});
		public static readonly BitSet _LOWER_in_modulecompliance_macro_status6270 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _157_in_modulecompliance_macro_module6318 = new BitSet(new ulong[]{0x2UL,0x80000000080000UL,0x4200000UL});
		public static readonly BitSet _UPPER_in_modulecompliance_macro_module6327 = new BitSet(new ulong[]{0x208000200200002UL,0x8200002009B180UL,0x4200000UL});
		public static readonly BitSet _value_in_modulecompliance_macro_module6336 = new BitSet(new ulong[]{0x2UL,0x80000UL,0x4200000UL});
		public static readonly BitSet _154_in_modulecompliance_macro_module6377 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_modulecompliance_macro_module6379 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_modulecompliance_macro_module6381 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_modulecompliance_macro_module6384 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_modulecompliance_macro_module6386 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_modulecompliance_macro_module6390 = new BitSet(new ulong[]{0x2UL,0x80000UL,0x200000UL});
		public static readonly BitSet _modulecompliance_macro_compliance_in_modulecompliance_macro_module6427 = new BitSet(new ulong[]{0x2UL,0x80000UL,0x200000UL});
		public static readonly BitSet _149_in_modulecompliance_macro_compliance6436 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_modulecompliance_macro_compliance6438 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000UL});
		public static readonly BitSet _141_in_modulecompliance_macro_compliance6440 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_modulecompliance_macro_compliance6442 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OBJECT_KW_in_modulecompliance_macro_compliance6479 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_modulecompliance_macro_compliance6481 = new BitSet(new ulong[]{0x0UL,0x0UL,0x800080010002000UL,0x20UL});
		public static readonly BitSet _187_in_modulecompliance_macro_compliance6521 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _modulecompliance_macro_syntax_in_modulecompliance_macro_compliance6523 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80010002000UL,0x20UL});
		public static readonly BitSet _197_in_modulecompliance_macro_compliance6565 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _modulecompliance_macro_syntax_in_modulecompliance_macro_compliance6567 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80010002000UL});
		public static readonly BitSet _156_in_modulecompliance_macro_compliance6614 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _modulecompliance_macro_access_in_modulecompliance_macro_compliance6616 = new BitSet(new ulong[]{0x0UL,0x0UL,0x80000002000UL});
		public static readonly BitSet _171_in_modulecompliance_macro_compliance6658 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _modulecompliance_macro_pibaccess_in_modulecompliance_macro_compliance6660 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000UL});
		public static readonly BitSet _141_in_modulecompliance_macro_compliance6705 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_modulecompliance_macro_compliance6707 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_modulecompliance_macro_syntax6721 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_modulecompliance_macro_syntax6723 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _modulecompliance_macro_namedbit_in_modulecompliance_macro_syntax6725 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_modulecompliance_macro_syntax6728 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _modulecompliance_macro_namedbit_in_modulecompliance_macro_syntax6730 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_modulecompliance_macro_syntax6734 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_modulecompliance_macro_syntax6773 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _smi_subtyping_in_modulecompliance_macro_syntax6776 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_modulecompliance_macro_syntax6811 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_modulecompliance_macro_namedbit6817 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _L_PAREN_in_modulecompliance_macro_namedbit6819 = new BitSet(new ulong[]{0x0UL,0x10000UL});
		public static readonly BitSet _NUMBER_in_modulecompliance_macro_namedbit6821 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _R_PAREN_in_modulecompliance_macro_namedbit6823 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_modulecompliance_macro_access6831 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_modulecompliance_macro_pibaccess6881 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _131_in_agentcapabilities_macro6932 = new BitSet(new ulong[]{0x0UL,0x0UL,0x800000000000UL});
		public static readonly BitSet _175_in_agentcapabilities_macro6934 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_agentcapabilities_macro6936 = new BitSet(new ulong[]{0x0UL,0x0UL,0x100000000000000UL});
		public static readonly BitSet _184_in_agentcapabilities_macro6938 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _agentcapabilities_macro_status_in_agentcapabilities_macro6940 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000UL});
		public static readonly BitSet _141_in_agentcapabilities_macro6967 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_agentcapabilities_macro6969 = new BitSet(new ulong[]{0x2UL,0x0UL,0x402000000000000UL});
		public static readonly BitSet _177_in_agentcapabilities_macro6972 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_agentcapabilities_macro6974 = new BitSet(new ulong[]{0x2UL,0x0UL,0x400000000000000UL});
		public static readonly BitSet _agentcapabilities_macro_module_in_agentcapabilities_macro6979 = new BitSet(new ulong[]{0x2UL,0x0UL,0x400000000000000UL});
		public static readonly BitSet _LOWER_in_agentcapabilities_macro_status6989 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _186_in_agentcapabilities_macro_module7037 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _LOWER_in_agentcapabilities_macro_module7039 = new BitSet(new ulong[]{0x8208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_agentcapabilities_macro_module7042 = new BitSet(new ulong[]{0x8000000000000000UL});
		public static readonly BitSet _INCLUDES_KW_in_agentcapabilities_macro_module7079 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_agentcapabilities_macro_module7081 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_agentcapabilities_macro_module7083 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_agentcapabilities_macro_module7086 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_agentcapabilities_macro_module7088 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_agentcapabilities_macro_module7092 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x10UL});
		public static readonly BitSet _agentcapabilities_macro_variation_in_agentcapabilities_macro_module7128 = new BitSet(new ulong[]{0x2UL,0x0UL,0x0UL,0x10UL});
		public static readonly BitSet _196_in_agentcapabilities_macro_variation7136 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_agentcapabilities_macro_variation7138 = new BitSet(new ulong[]{0x0UL,0x0UL,0x800000000003804UL,0x20UL});
		public static readonly BitSet _187_in_agentcapabilities_macro_variation7141 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _agentcapabilities_macro_syntax_in_agentcapabilities_macro_variation7143 = new BitSet(new ulong[]{0x0UL,0x0UL,0x3804UL,0x20UL});
		public static readonly BitSet _197_in_agentcapabilities_macro_variation7148 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _agentcapabilities_macro_syntax_in_agentcapabilities_macro_variation7150 = new BitSet(new ulong[]{0x0UL,0x0UL,0x3804UL});
		public static readonly BitSet _130_in_agentcapabilities_macro_variation7155 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _agentcapabilities_macro_access_in_agentcapabilities_macro_variation7157 = new BitSet(new ulong[]{0x0UL,0x0UL,0x3800UL});
		public static readonly BitSet _139_in_agentcapabilities_macro_variation7199 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_agentcapabilities_macro_variation7201 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_agentcapabilities_macro_variation7203 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_agentcapabilities_macro_variation7206 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_agentcapabilities_macro_variation7208 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_agentcapabilities_macro_variation7212 = new BitSet(new ulong[]{0x0UL,0x0UL,0x3000UL});
		public static readonly BitSet _140_in_agentcapabilities_macro_variation7254 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_agentcapabilities_macro_variation7256 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _L_BRACE_in_agentcapabilities_macro_variation7277 = new BitSet(new ulong[]{0x10000000UL,0x1000000080UL});
		public static readonly BitSet _LOWER_in_agentcapabilities_macro_variation7280 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_agentcapabilities_macro_variation7285 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _LOWER_in_agentcapabilities_macro_variation7287 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_agentcapabilities_macro_variation7291 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000UL});
		public static readonly BitSet _value_in_agentcapabilities_macro_variation7295 = new BitSet(new ulong[]{0x0UL,0x0UL,0x2000UL});
		public static readonly BitSet _141_in_agentcapabilities_macro_variation7338 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _C_STRING_in_agentcapabilities_macro_variation7340 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_agentcapabilities_macro_syntax7391 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_agentcapabilities_macro_syntax7393 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _agentcapabilities_macro_namedbit_in_agentcapabilities_macro_syntax7395 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_agentcapabilities_macro_syntax7398 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _agentcapabilities_macro_namedbit_in_agentcapabilities_macro_syntax7400 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_agentcapabilities_macro_syntax7404 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_agentcapabilities_macro_syntax7444 = new BitSet(new ulong[]{0x2UL,0x400UL});
		public static readonly BitSet _smi_subtyping_in_agentcapabilities_macro_syntax7447 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_agentcapabilities_macro_syntax7483 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_agentcapabilities_macro_access7492 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_agentcapabilities_macro_namedbit7540 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _L_PAREN_in_agentcapabilities_macro_namedbit7542 = new BitSet(new ulong[]{0x0UL,0x10000UL});
		public static readonly BitSet _NUMBER_in_agentcapabilities_macro_namedbit7544 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _R_PAREN_in_agentcapabilities_macro_namedbit7546 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _191_in_traptype_macro7556 = new BitSet(new ulong[]{0x0UL,0x0UL,0x10000UL});
		public static readonly BitSet _144_in_traptype_macro7558 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_traptype_macro7560 = new BitSet(new ulong[]{0x2UL,0x0UL,0x2000000002000UL,0x8UL});
		public static readonly BitSet _195_in_traptype_macro7563 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_traptype_macro7565 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_traptype_macro7567 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_traptype_macro7570 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_traptype_macro7572 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_traptype_macro7576 = new BitSet(new ulong[]{0x2UL,0x0UL,0x2000000002000UL});
		public static readonly BitSet _141_in_traptype_macro7608 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_traptype_macro7610 = new BitSet(new ulong[]{0x2UL,0x0UL,0x2000000000000UL});
		public static readonly BitSet _177_in_traptype_macro7615 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_traptype_macro7617 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _typeorvalue_in_operation_errorlist7627 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _COMMA_in_operation_errorlist7630 = new BitSet(new ulong[]{0x6EC150202670080UL,0xFC34302A09BB392UL,0x9008003BC0000208UL});
		public static readonly BitSet _typeorvalue_in_operation_errorlist7632 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _typeorvalue_in_linkedOp_list7642 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _COMMA_in_linkedOp_list7645 = new BitSet(new ulong[]{0x6EC150202670080UL,0xFC34302A09BB392UL,0x9008003BC0000208UL});
		public static readonly BitSet _typeorvalue_in_linkedOp_list7647 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _type_in_typeorvalue7663 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _value_in_typeorvalue7667 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _typeorvalue_in_typeorvaluelist7675 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _COMMA_in_typeorvaluelist7678 = new BitSet(new ulong[]{0x6EC150202670080UL,0xFC34302A09BB392UL,0x9008003BC0000208UL});
		public static readonly BitSet _typeorvalue_in_typeorvaluelist7680 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _LOWER_in_elementType7692 = new BitSet(new ulong[]{0x14E4950002470880UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _tag_in_elementType7710 = new BitSet(new ulong[]{0x14E4950002470880UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _tag_default_in_elementType7736 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _type_in_elementType7740 = new BitSet(new ulong[]{0x400000002UL,0x1000000UL});
		public static readonly BitSet _OPTIONAL_KW_in_elementType7743 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DEFAULT_KW_in_elementType7747 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_elementType7749 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _COMPONENTS_KW_in_elementType7767 = new BitSet(new ulong[]{0x0UL,0x200000UL});
		public static readonly BitSet _OF_KW_in_elementType7769 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _type_in_elementType7771 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_namedNumber7780 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _L_PAREN_in_namedNumber7782 = new BitSet(new ulong[]{0x0UL,0x80000000011080UL});
		public static readonly BitSet _signed_number_in_namedNumber7785 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _defined_value_in_namedNumber7789 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _R_PAREN_in_namedNumber7792 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _MINUS_in_signed_number7800 = new BitSet(new ulong[]{0x0UL,0x10000UL});
		public static readonly BitSet _NUMBER_in_signed_number7804 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _element_set_spec_in_element_set_specs7811 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _COMMA_in_element_set_specs7814 = new BitSet(new ulong[]{0x8000000000UL});
		public static readonly BitSet _DOTDOTDOT_in_element_set_specs7816 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _COMMA_in_element_set_specs7821 = new BitSet(new ulong[]{0x86FC1502026700C0UL,0x1FC34B02A49BF792UL,0x9008003BC0000208UL});
		public static readonly BitSet _element_set_spec_in_element_set_specs7823 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _EXCLAMATION_in_exception_spec7833 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809B9292UL,0x9008003BC0000208UL});
		public static readonly BitSet _signed_number_in_exception_spec7860 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_value_in_exception_spec7889 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_exception_spec7912 = new BitSet(new ulong[]{0x8000000UL});
		public static readonly BitSet _COLON_in_exception_spec7914 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_exception_spec7916 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _intersections_in_element_set_spec7941 = new BitSet(new ulong[]{0x1002UL,0x8000000000000UL});
		public static readonly BitSet _set_in_element_set_spec7945 = new BitSet(new ulong[]{0x86FC150202670080UL,0x1FC34B02A49BF792UL,0x9008003BC0000208UL});
		public static readonly BitSet _intersections_in_element_set_spec7953 = new BitSet(new ulong[]{0x1002UL,0x8000000000000UL});
		public static readonly BitSet _ALL_KW_in_element_set_spec7977 = new BitSet(new ulong[]{0x200000000000UL});
		public static readonly BitSet _EXCEPT_KW_in_element_set_spec7979 = new BitSet(new ulong[]{0x86FC150202670080UL,0x1FC34B02A49BF792UL,0x9008003BC0000208UL});
		public static readonly BitSet _constraint_elements_in_element_set_spec7981 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constraint_elements_in_intersections7988 = new BitSet(new ulong[]{0x200000000002UL,0xCUL});
		public static readonly BitSet _EXCEPT_KW_in_intersections7991 = new BitSet(new ulong[]{0x86FC150202670080UL,0x1FC34B02A49BF792UL,0x9008003BC0000208UL});
		public static readonly BitSet _constraint_elements_in_intersections7993 = new BitSet(new ulong[]{0x2UL,0xCUL});
		public static readonly BitSet _set_in_intersections8016 = new BitSet(new ulong[]{0x86FC150202670080UL,0x1FC34B02A49BF792UL,0x9008003BC0000208UL});
		public static readonly BitSet _constraint_elements_in_intersections8024 = new BitSet(new ulong[]{0x200000000002UL,0xCUL});
		public static readonly BitSet _EXCEPT_KW_in_intersections8027 = new BitSet(new ulong[]{0x86FC150202670080UL,0x1FC34B02A49BF792UL,0x9008003BC0000208UL});
		public static readonly BitSet _constraint_elements_in_intersections8029 = new BitSet(new ulong[]{0x2UL,0xCUL});
		public static readonly BitSet _value_range_in_constraint_elements8048 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _value_in_constraint_elements8077 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _SIZE_KW_in_constraint_elements8101 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _constraint_in_constraint_elements8103 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FROM_KW_in_constraint_elements8127 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _constraint_in_constraint_elements8129 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_PAREN_in_constraint_elements8153 = new BitSet(new ulong[]{0x86FC1502026700C0UL,0x1FC34B02A49BF792UL,0x9008003BC0000208UL});
		public static readonly BitSet _element_set_spec_in_constraint_elements8155 = new BitSet(new ulong[]{0x0UL,0x4000000000UL});
		public static readonly BitSet _R_PAREN_in_constraint_elements8157 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _INCLUDES_KW_in_constraint_elements8182 = new BitSet(new ulong[]{0x4E4150002470080UL,0xFC14302809A8292UL,0x9008003BC0000208UL});
		public static readonly BitSet _type_in_constraint_elements8186 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PATTERN_KW_in_constraint_elements8210 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_constraint_elements8212 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _WITH_KW_in_constraint_elements8236 = new BitSet(new ulong[]{0xC0000000UL});
		public static readonly BitSet _COMPONENT_KW_in_constraint_elements8239 = new BitSet(new ulong[]{0x0UL,0x400UL});
		public static readonly BitSet _constraint_in_constraint_elements8241 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _COMPONENTS_KW_in_constraint_elements8276 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_constraint_elements8278 = new BitSet(new ulong[]{0x8000000000UL,0x80UL});
		public static readonly BitSet _DOTDOTDOT_in_constraint_elements8281 = new BitSet(new ulong[]{0x10000000UL});
		public static readonly BitSet _COMMA_in_constraint_elements8283 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _type_constraint_list_in_constraint_elements8320 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_constraint_elements8322 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _value_in_value_range8331 = new BitSet(new ulong[]{0x4000000000UL,0x20UL});
		public static readonly BitSet _MIN_KW_in_value_range8335 = new BitSet(new ulong[]{0x4000000000UL,0x20UL});
		public static readonly BitSet _LESS_in_value_range8339 = new BitSet(new ulong[]{0x4000000000UL});
		public static readonly BitSet _DOTDOT_in_value_range8343 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B9A0UL});
		public static readonly BitSet _LESS_in_value_range8346 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B980UL});
		public static readonly BitSet _value_in_value_range8351 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _MAX_KW_in_value_range8355 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _named_constraint_in_type_constraint_list8364 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _COMMA_in_type_constraint_list8367 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _named_constraint_in_type_constraint_list8369 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _LOWER_in_named_constraint8379 = new BitSet(new ulong[]{0x12UL,0x41000400UL});
		public static readonly BitSet _constraint_in_named_constraint8382 = new BitSet(new ulong[]{0x12UL,0x41000000UL});
		public static readonly BitSet _LOWER_in_choice_value8405 = new BitSet(new ulong[]{0x208000208200000UL,0x8200002001B180UL});
		public static readonly BitSet _COLON_in_choice_value8408 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_choice_value8412 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_sequence_value8419 = new BitSet(new ulong[]{0x10000000UL,0x1000000080UL});
		public static readonly BitSet _named_value_in_sequence_value8422 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_sequence_value8427 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _named_value_in_sequence_value8429 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_sequence_value8433 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_sequenceof_value8440 = new BitSet(new ulong[]{0x208000210200000UL,0x8200102001B180UL});
		public static readonly BitSet _value_in_sequenceof_value8443 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _COMMA_in_sequenceof_value8448 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_sequenceof_value8450 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_sequenceof_value8454 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _H_STRING_in_cstr_value8467 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _B_STRING_in_cstr_value8488 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_cstr_value8503 = new BitSet(new ulong[]{0x200000000UL,0x80000000011180UL});
		public static readonly BitSet _id_list_in_cstr_value8526 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _char_defs_list_in_cstr_value8551 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _tuple_or_quad_in_cstr_value8570 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_cstr_value8586 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_id_list8593 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _COMMA_in_id_list8596 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _LOWER_in_id_list8598 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _char_defs_in_char_defs_list8608 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _COMMA_in_char_defs_list8611 = new BitSet(new ulong[]{0x200000000UL,0x80000000000180UL});
		public static readonly BitSet _char_defs_in_char_defs_list8613 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _signed_number_in_tuple_or_quad8624 = new BitSet(new ulong[]{0x10000000UL});
		public static readonly BitSet _COMMA_in_tuple_or_quad8626 = new BitSet(new ulong[]{0x0UL,0x11000UL});
		public static readonly BitSet _signed_number_in_tuple_or_quad8628 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _COMMA_in_tuple_or_quad8631 = new BitSet(new ulong[]{0x0UL,0x11000UL});
		public static readonly BitSet _signed_number_in_tuple_or_quad8633 = new BitSet(new ulong[]{0x10000000UL});
		public static readonly BitSet _COMMA_in_tuple_or_quad8635 = new BitSet(new ulong[]{0x0UL,0x11000UL});
		public static readonly BitSet _signed_number_in_tuple_or_quad8637 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _C_STRING_in_char_defs8648 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_char_defs8662 = new BitSet(new ulong[]{0x0UL,0x11000UL});
		public static readonly BitSet _tuple_or_quad_in_char_defs8664 = new BitSet(new ulong[]{0x0UL,0x1000000000UL});
		public static readonly BitSet _R_BRACE_in_char_defs8666 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_value_in_char_defs8679 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_named_value8689 = new BitSet(new ulong[]{0x208000200200000UL,0x8200002001B180UL});
		public static readonly BitSet _value_in_named_value8691 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_synpred1_Smi2040 = new BitSet(new ulong[]{0x0UL,0x10080UL});
		public static readonly BitSet _set_in_synpred1_Smi2042 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_value_in_synpred2_Smi2439 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _TRUE_KW_in_synpred3_Smi2655 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FALSE_KW_in_synpred4_Smi2671 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _NULL_KW_in_synpred5_Smi2687 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _C_STRING_in_synpred6_Smi2704 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_value_in_synpred7_Smi2720 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _signed_number_in_synpred8_Smi2736 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _choice_value_in_synpred9_Smi2751 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _sequence_value_in_synpred10_Smi2767 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _sequenceof_value_in_synpred11_Smi2783 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _cstr_value_in_synpred12_Smi2799 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _obj_id_comp_lst_in_synpred13_Smi2815 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _PLUS_INFINITY_KW_in_synpred14_Smi2831 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _MINUS_INFINITY_KW_in_synpred15_Smi2847 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_synpred16_Smi3160 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _namedNumber_in_synpred16_Smi3162 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_synpred17_Smi3253 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _namedNumber_in_synpred17_Smi3255 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_synpred18_Smi3613 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _RESULT_KW_in_synpred19_Smi3651 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_synpred20_Smi3685 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_synpred21_Smi3692 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ERRORS_KW_in_synpred22_Smi3738 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LINKED_KW_in_synpred23_Smi3781 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _LOWER_in_synpred24_Smi3823 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_synpred25_Smi4153 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_synpred25_Smi4155 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_synpred26_Smi4189 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _141_in_synpred27_Smi4493 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _140_in_synpred29_Smi4889 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_synpred30_Smi4922 = new BitSet(new ulong[]{0x0UL,0x80UL});
		public static readonly BitSet _LOWER_in_synpred30_Smi4924 = new BitSet(new ulong[]{0x10000000UL,0x1000000000UL});
		public static readonly BitSet _set_in_synpred30_Smi4926 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_synpred31_Smi5844 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_synpred31_Smi5846 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _UPPER_in_synpred32_Smi6322 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _value_in_synpred33_Smi6331 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_synpred34_Smi6714 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_synpred34_Smi6716 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_synpred35_Smi6768 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACE_in_synpred36_Smi7260 = new BitSet(new ulong[]{0x10000000UL,0x1000000080UL});
		public static readonly BitSet _set_in_synpred36_Smi7262 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_synpred37_Smi7347 = new BitSet(new ulong[]{0x0UL,0x100UL});
		public static readonly BitSet _L_BRACE_in_synpred37_Smi7349 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _smi_type_in_synpred38_Smi7439 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _141_in_synpred39_Smi7603 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_synpred40_Smi7658 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _L_BRACKET_in_synpred41_Smi7697 = new BitSet(new ulong[]{0x0UL,0x80000000010080UL});
		public static readonly BitSet _set_in_synpred41_Smi7699 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _signed_number_in_synpred42_Smi7855 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _defined_value_in_synpred43_Smi7884 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _value_range_in_synpred44_Smi8043 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _value_in_synpred45_Smi8072 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _H_STRING_in_synpred46_Smi8462 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _B_STRING_in_synpred47_Smi8483 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _id_list_in_synpred48_Smi8521 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _char_defs_list_in_synpred49_Smi8546 = new BitSet(new ulong[]{0x2UL});
	}
	#endregion Follow sets
}

} // namespace  Lextm.SharpSnmpLib.Mib.Ast.ANTLR 
