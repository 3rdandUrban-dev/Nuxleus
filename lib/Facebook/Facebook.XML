<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Facebook</name>
  </assembly>
  <members>
    <member name="M:Facebook.External.HttpUtility.HtmlDecode(System.String)">
      <summary>
            Decodes an HTML-encoded string and returns the decoded string.
            </summary>
      <param name="s">The HTML string to decode. </param>
      <returns>The decoded text.</returns>
    </member>
    <member name="M:Facebook.External.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)">
      <summary>
            Decodes an HTML-encoded string and sends the resulting output to a TextWriter output stream.
            </summary>
      <param name="s">The HTML string to decode</param>
      <param name="output">The TextWriter output stream containing the decoded string. </param>
    </member>
    <member name="M:Facebook.External.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)">
      <summary>
            HTML-encodes a string and sends the resulting output to a TextWriter output stream.
            </summary>
      <param name="s">The string to encode. </param>
      <param name="output">The TextWriter output stream containing the encoded string. </param>
    </member>
    <member name="T:Facebook.FacebookApiLimitException">
      <summary>
            Represents errors that occur as a result of problems with the OAuth access token.
            </summary>
    </member>
    <member name="T:Facebook.FacebookApiException">
      <summary>
            Represent errors that occur while calling a Facebook API.
            </summary>
    </member>
    <member name="M:Facebook.FacebookApiException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookApiException" /> class.
            </summary>
    </member>
    <member name="M:Facebook.FacebookApiException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookApiException" /> class.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Facebook.FacebookApiException.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookApiException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="errorType">Type of the error.</param>
    </member>
    <member name="M:Facebook.FacebookApiException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookApiException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Facebook.FacebookApiException.#ctor(System.String,System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookApiException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="errorType">Type of the error.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Facebook.FacebookApiException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookApiException" /> class.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
    </member>
    <member name="M:Facebook.FacebookApiException.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
      <ensures inheritedFrom="M:System.Object.ToString" inheritedFromTypeName="Object">Contract.Result&lt;string&gt;() != null</ensures>
    </member>
    <member name="P:Facebook.FacebookApiException.ErrorType">
      <summary>
            Gets or sets the type of the error.
            </summary>
      <value>The type of the error.</value>
    </member>
    <member name="P:Facebook.FacebookApiException.Message">
      <summary>
            Gets a message that describes the current exception.
            </summary>
      <value />
      <returns>The error message that explains the reason for the exception, or an empty string("").</returns>
      <getter>
        <ensures inheritedFrom="M:System.Exception.get_Message" inheritedFromTypeName="Exception">Contract.Result&lt;string&gt;() != null</ensures>
      </getter>
    </member>
    <member name="M:Facebook.FacebookApiLimitException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookOAuthException" /> class.
            </summary>
    </member>
    <member name="M:Facebook.FacebookApiLimitException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookOAuthException" /> class.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Facebook.FacebookApiLimitException.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookOAuthException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="errorType">Type of the error.</param>
    </member>
    <member name="M:Facebook.FacebookApiLimitException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookOAuthException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Facebook.FacebookApiLimitException.#ctor(System.String,System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookOAuthException" /> class.
            </summary>
      <param name="message">The error message text.</param>
      <param name="errorType">Type of the facebook error.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Facebook.FacebookApiLimitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookOAuthException" /> class.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
    </member>
    <member name="T:Facebook.FacebookClient">
      <summary>
            Provides access to the Facebook Platform.
            </summary>
      <invariant>this.maxRetries &gt;= 0</invariant>
      <invariant>this.retryDelay &gt;= 0</invariant>
      <invariant>retryErrorTypes != null</invariant>
    </member>
    <member name="T:Facebook.FacebookClientBase">
      <summary>
            Represents the core Facebook functionality.
            </summary>
      <invariant>_domainMaps != null</invariant>
      <invariant>_dropQueryParameters != null</invariant>
      <invariant>_readOnlyCalls != null</invariant>
    </member>
    <member name="M:Facebook.FacebookClientBase.CleanUrl(System.Uri)">
      <summary>
            Cleans the URL or known Facebook querystring values.
            </summary>
      <param name="uri">The URI.</param>
      <returns>
            Returns the url.
            </returns>
      <requires>uri != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Api(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Make an API call.
            </summary>
      <param name="parameters">Dynamic object of the request parameters.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <requires>parameters != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Api(System.String)">
      <summary>
            Make an api call.
            </summary>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>!String.IsNullOrEmpty(path)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Api(System.String,Facebook.HttpMethod)">
      <summary>
            Make an api call.
            </summary>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="httpMethod">The http method for the request. Default is 'GET'.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <requires>!String.IsNullOrEmpty(path)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Api(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod)">
      <summary>
            Make an api call.
            </summary>
      <param name="parameters">Dynamic object of the request parameters.</param>
      <param name="httpMethod">The http method for the request. Default is 'GET'.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <requires>parameters != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Api(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Make an api call.
            </summary>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="parameters">Dynamic object of the request parameters.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Api(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod)">
      <summary>
            Make an api call.
            </summary>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="parameters">Dynamic object of the request parameters.</param>
      <param name="httpMethod">The http method for the request. Default is 'GET'.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Api(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,Facebook.HttpMethod)">
      <summary>
            Make an api call.
            </summary>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="parameters">Dynamic object of the request parameters.</param>
      <param name="resultType">The type of the API request result to deserialize the response data.</param>
      <param name="httpMethod">The http method for the request. Default is 'GET'.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Delete(System.String)">
      <summary>
            Makes a DELETE request to the Facebook server.
            </summary>
      <param name="path">
            The resource path.
            </param>
      <returns>
            Returns the json result.
            </returns>
      <requires>!String.IsNullOrEmpty(path)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Delete(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Makes a DELETE Facebook api.
            </summary>
      <param name="path">
            The path.
            </param>
      <param name="parameters">
            The parameters.
            </param>
      <returns>
            The result.
            </returns>
    </member>
    <member name="M:Facebook.FacebookClientBase.Get(System.String)">
      <summary>
            Make an api call.
            </summary>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>!String.IsNullOrEmpty(path)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Get(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Make an api call.
            </summary>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="parameters">Dynamic object of the request parameters.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Get(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Make an api call.
            </summary>
      <param name="parameters">Dynamic object of the request parameters.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>parameters != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Get``1(System.String)">
      <summary>
            Make an api call.
            </summary>
      <typeparam name="T">The result of the API call.</typeparam>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <returns>
            A dynamic object with the resulting data.
            </returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>!String.IsNullOrEmpty(path)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Get``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Make an api call.
            </summary>
      <typeparam name="T">The result of the API call.</typeparam>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="parameters">Dynamic object of the request parameters.</param>
      <returns>
            A dynamic object with the resulting data.
            </returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Get``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Make an api call.
            </summary>
      <param name="parameters">Dynamic object of the request parameters.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>parameters != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Post(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Make an api call.
            </summary>
      <param name="path">The path.</param>
      <param name="parameters">The parameters.</param>
      <returns />
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Post(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Make an api call.
            </summary>
      <param name="parameters">The parameters.</param>
      <returns />
      <requires>parameters != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Post(System.Object)">
      <summary>
            Make an api call.
            </summary>
      <param name="parameters">
            The parameters.
            </param>
      <returns>
            The result.
            </returns>
      <requires>parameters != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.Post(System.String,System.Object)">
      <summary>
            Make an api call.
            </summary>
      <param name="path">
            The path.
            </param>
      <param name="parameters">
            The parameters.
            </param>
      <returns>
            The result.
            </returns>
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.ApiAsync(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make an API call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="state">The async state.</param>
      <param name="parameters">object of url parameters.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <requires>callback != null</requires>
      <requires>parameters != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.ApiAsync(System.String,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="state">The async state.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!String.IsNullOrEmpty(path)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.ApiAsync(System.String,Facebook.HttpMethod,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="state">The async state.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="httpMethod">The http method for the request. Default is 'GET'.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <requires>callback != null</requires>
      <requires>!String.IsNullOrEmpty(path)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.ApiAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="state">The async state.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="parameters">object of url parameters.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.ApiAsync(Facebook.FacebookAsyncCallback,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="state">The async state.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="parameters">object of url parameters.</param>
      <param name="httpMethod">The http method for the request.</param>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.ApiAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="state">The async state.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="parameters">object of url parameters.</param>
      <param name="httpMethod">The http method for the request.</param>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.ApiAsync``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,Facebook.FacebookAsyncCallback{``0},System.Object)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="state">The async state.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="parameters">object of url parameters.</param>
      <param name="httpMethod">The http method for the request.</param>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.DeleteAsync(System.String,Facebook.FacebookAsyncCallback)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!String.IsNullOrEmpty(path)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.DeleteAsync(System.String,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="state">The async state.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!String.IsNullOrEmpty(path)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.DeleteAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="parameters">object of url parameters.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.DeleteAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="state">The async state.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="parameters">object of url parameters.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.GetAsync(System.String,Facebook.FacebookAsyncCallback)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!String.IsNullOrEmpty(path)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.GetAsync(System.String,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="state">The async state.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!String.IsNullOrEmpty(path)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.GetAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="parameters">object of url parameters.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.GetAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="state">The async state.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="parameters">object of url parameters.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.GetAsync(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback)">
      <summary>
            Make an API call.
            </summary>
      <param name="parameters">object of url parameters.</param>
      <param name="callback">The async callback.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <requires>callback != null</requires>
      <requires>parameters != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.GetAsync(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make an API call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="state">The async state.</param>
      <param name="parameters">object of url parameters.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <requires>callback != null</requires>
      <requires>parameters != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.GetAsync``1(System.String,Facebook.FacebookAsyncCallback{``0})">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!String.IsNullOrEmpty(path)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.GetAsync``1(System.String,Facebook.FacebookAsyncCallback{``0},System.Object)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="state">The async state.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!String.IsNullOrEmpty(path)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.GetAsync``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback{``0})">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="parameters">object of url parameters.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.GetAsync``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback{``0},System.Object)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="state">The async state.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="parameters">object of url parameters.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.GetAsync``1(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback{``0})">
      <summary>
            Make an API call.
            </summary>
      <param name="parameters">object of url parameters.</param>
      <param name="callback">The async callback.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <requires>callback != null</requires>
      <requires>parameters != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.GetAsync``1(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback{``0},System.Object)">
      <summary>
            Make an API call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="state">The async state.</param>
      <param name="parameters">object of url parameters.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <requires>callback != null</requires>
      <requires>parameters != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.PostAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="parameters">object of url parameters.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.PostAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make an api call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="state">The async state.</param>
      <param name="path">The path of the url to call such as 'me/friends'.</param>
      <param name="parameters">object of url parameters.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.PostAsync(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback)">
      <summary>
            Make an API call.
            </summary>
      <param name="parameters">object of url parameters.</param>
      <param name="callback">The async callback.</param>
      <returns>A dynamic object with the resulting data.</returns>
      <requires>callback != null</requires>
      <requires>parameters != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.PostAsync(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make an API call.
            </summary>
      <param name="callback">The async callback.</param>
      <param name="state">The async state.</param>
      <param name="parameters">object of url parameters.</param>
      <requires>callback != null</requires>
      <requires>parameters != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.PostAsync(System.String,System.Object,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make an API call.
            </summary>
      <param name="path">
            The path.
            </param>
      <param name="parameters">
            The parameters.
            </param>
      <param name="callback">
            The async callback.
            </param>
      <param name="state">
            The state.
            </param>
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
      <requires>callback != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.PostAsync(System.Object,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make an API call.
            </summary>
      <param name="parameters">
            The parameters.
            </param>
      <param name="callback">
            The async callback.
            </param>
      <param name="state">
            The state.
            </param>
      <requires>parameters != null</requires>
      <requires>callback != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.PostAsync(System.Object,Facebook.FacebookAsyncCallback)">
      <summary>
            Make an API call.
            </summary>
      <param name="parameters">
            The parameters.
            </param>
      <param name="callback">
            The async callback.
            </param>
      <requires>parameters != null</requires>
      <requires>callback != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.PostAsync(System.String,System.Object,Facebook.FacebookAsyncCallback)">
      <summary>
            Make an API call.
            </summary>
      <param name="path">
            The path.
            </param>
      <param name="parameters">
            The parameters.
            </param>
      <param name="callback">
            The async callback.
            </param>
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
      <requires>callback != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.RestServer(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type)">
      <summary>
            Invoke the old restserver.php endpoint.
            </summary>
      <param name="parameters">
            The parameters for the server call.
            </param>
      <param name="httpMethod">
            The http method for the request.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <returns>
            The decoded response object.
            </returns>
      <requires>parameters != null</requires>
      <requires>parameters.ContainsKey("method") &amp;&amp; !String.IsNullOrEmpty((string)parameters["method"])</requires>
      <ensures>Contract.Result&lt;object&gt;() != null</ensures>
    </member>
    <member name="M:Facebook.FacebookClientBase.Graph(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type)">
      <summary>
            Invoke the Graph API.
            </summary>
      <param name="path">
            The path of the url to call such as 'me/friends'.
            </param>
      <param name="parameters">
            object of url parameters.
            </param>
      <param name="httpMethod">
            The http method for the request.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <returns>
            A dynamic object with the resulting data.
            </returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.OAuthRequest(System.Uri,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,System.Boolean)">
      <summary>
            Make a OAuth Request
            </summary>
      <param name="uri">
            The url to make the request.
            </param>
      <param name="parameters">
            The parameters of the request.
            </param>
      <param name="httpMethod">
            The http method for the request.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <param name="restApi">
            The rest Api.
            </param>
      <returns>
            The decoded response object.
            </returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>uri != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.RestServerAsync(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Invoke the old restserver.php endpoint.
            </summary>
      <param name="parameters">
            The parameters for the server call.
            </param>
      <param name="httpMethod">
            The http method for the request.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <param name="callback">
            The async callback.
            </param>
      <param name="state">
            The async state.
            </param>
      <requires>callback != null</requires>
      <requires>parameters != null</requires>
      <requires>parameters.ContainsKey("method") &amp;&amp; !String.IsNullOrEmpty((string)parameters["method"])</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.GraphAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Invoke the Graph API.
            </summary>
      <param name="path">
            The path of the url to call such as 'me/friends'.
            </param>
      <param name="parameters">
            object of url parameters.
            </param>
      <param name="httpMethod">
            The http method for the request.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <param name="callback">
            The async callback.
            </param>
      <param name="state">
            The async state.
            </param>
      <returns>
            A dynamic object with the resulting data.
            </returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.OAuthRequestAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,System.Boolean,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make a OAuth Request
            </summary>
      <param name="uri">
            The url to make the request.
            </param>
      <param name="parameters">
            The parameters of the request.
            </param>
      <param name="httpMethod">
            The http method for the request.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <param name="restApi">
            The rest Api.
            </param>
      <param name="callback">
            The async callback.
            </param>
      <param name="state">
            The async state.
            </param>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires>callback != null</requires>
      <requires>uri != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.GetApiUrl(System.String)">
      <summary>
            Build the URL for api given parameters.
            </summary>
      <param name="method">The method name.</param>
      <returns>The Url for the given parameters.</returns>
      <requires>!String.IsNullOrEmpty(method)</requires>
      <ensures>Contract.Result&lt;Uri&gt;() != default(Uri)</ensures>
    </member>
    <member name="M:Facebook.FacebookClientBase.GetUrl(System.String)">
      <summary>
            Build the URL for given domain alias, path and parameters.
            </summary>
      <param name="name">The name of the domain (from the domain maps).</param>
      <returns>The string of the url for the given parameters.</returns>
      <requires>!String.IsNullOrEmpty(name)</requires>
      <ensures>Contract.Result&lt;Uri&gt;() != default(Uri)</ensures>
    </member>
    <member name="M:Facebook.FacebookClientBase.GetUrl(System.String,System.String)">
      <summary>
            Build the URL for given domain alias, path and parameters.
            </summary>
      <param name="name">The name of the domain (from the domain maps).</param>
      <param name="path">Path (without a leading slash)</param>
      <returns>The string of the url for the given parameters.</returns>
      <requires>!String.IsNullOrEmpty(name)</requires>
      <ensures>Contract.Result&lt;Uri&gt;() != default(Uri)</ensures>
    </member>
    <member name="M:Facebook.FacebookClientBase.GetUrl(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Build the URL for given domain alias, path and parameters.
            </summary>
      <param name="name">The name of the domain (from the domain maps).</param>
      <param name="parameters">Optional query parameters</param>
      <returns>The string of the url for the given parameters.</returns>
      <requires>!String.IsNullOrEmpty(name)</requires>
      <ensures>Contract.Result&lt;Uri&gt;() != default(Uri)</ensures>
    </member>
    <member name="M:Facebook.FacebookClientBase.GetUrl(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Build the URL for given domain alias, path and parameters.
            </summary>
      <param name="name">The name of the domain (from the domain maps).</param>
      <param name="path">Optional path (without a leading slash)</param>
      <param name="parameters">Optional query parameters</param>
      <returns>The string of the url for the given parameters.</returns>
      <requires>!String.IsNullOrEmpty(name)</requires>
      <ensures>Contract.Result&lt;Uri&gt;() != default(Uri)</ensures>
    </member>
    <member name="M:Facebook.FacebookClientBase.ParseQueryParametersToDictionary(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Removes the querystring parameters from the path value and adds them
            to the parameters dictionary.
            </summary>
      <param name="path">The path to parse.</param>
      <param name="parameters">The dictionary</param>
      <returns />
      <requires>parameters != null</requires>
    </member>
    <member name="M:Facebook.FacebookClientBase.InvarientObject">
      <summary>
            The code contracts invarient object method.
            </summary>
    </member>
    <member name="P:Facebook.FacebookClientBase.DropQueryParameters">
      <summary>
            Gets the list of query parameters that get automatically dropped when rebuilding the current URL.
            </summary>
      <getter>
        <ensures>Contract.Result&lt;ICollection&lt;string&gt;&gt;() != null</ensures>
      </getter>
    </member>
    <member name="P:Facebook.FacebookClientBase.DomainMaps">
      <summary>
            Gets the aliases to Facebook domains.
            </summary>
      <getter>
        <ensures>Contract.Result&lt;Dictionary&lt;string, Uri&gt;&gt;() != null</ensures>
      </getter>
    </member>
    <member name="P:Facebook.FacebookClientBase.AccessToken">
      <summary>
            Gets or sets the access token.
            </summary>
    </member>
    <member name="F:Facebook.FacebookClient.Prefix">
      <summary>
            The multi-part form prefix characters.
            </summary>
    </member>
    <member name="F:Facebook.FacebookClient.NewLine">
      <summary>
            The multi-part form new line characters.
            </summary>
    </member>
    <member name="F:Facebook.FacebookClient.retryErrorTypes">
      <summary>
            The collection of Facebook error types that should be retried.
            </summary>
    </member>
    <member name="F:Facebook.FacebookClient.maxRetries">
      <summary>
            How many times to retry a command if an error occurs until we give up.
            </summary>
    </member>
    <member name="F:Facebook.FacebookClient.retryDelay">
      <summary>
            How long in milliseconds to wait before retrying.
            </summary>
    </member>
    <member name="M:Facebook.FacebookClient.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookClient" />.
            </summary>
    </member>
    <member name="M:Facebook.FacebookClient.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookClient" />.
            </summary>
      <param name="accessToken">The Facebook access token.</param>
      <requires>!String.IsNullOrEmpty(accessToken)</requires>
    </member>
    <member name="M:Facebook.FacebookClient.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookClient" />.
            </summary>
      <param name="appId">The Facebook application id.</param>
      <param name="appSecret">The Facebook application secret.</param>
      <requires>!String.IsNullOrEmpty(appId)</requires>
      <requires>!String.IsNullOrEmpty(appSecret)</requires>
    </member>
    <member name="M:Facebook.FacebookClient.#ctor(Facebook.IFacebookApplication)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookClient" /> class.
            </summary>
      <param name="facebookApplication">
            The facebook application.
            </param>
    </member>
    <member name="M:Facebook.FacebookClient.Query(System.String)">
      <summary>
            Executes a FQL query.
            </summary>
      <param name="fql">
            The FQL query.
            </param>
      <returns>
            The FQL query result.
            </returns>
      <requires>!String.IsNullOrEmpty(fql)</requires>
    </member>
    <member name="M:Facebook.FacebookClient.Query(System.String[])">
      <summary>
            Executes a FQL multiquery.
            </summary>
      <param name="fql">
            The FQL queries.
            </param>
      <returns>
            A collection of the FQL query results.
            </returns>
      <requires>fql != null</requires>
    </member>
    <member name="M:Facebook.FacebookClient.QueryAsync(System.String,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Executes a FQL query asynchronously.
            </summary>
      <param name="fql">
            The FQL query.
            </param>
      <param name="callback">
            The callback.
            </param>
      <param name="state">
            The state.
            </param>
      <requires>!String.IsNullOrEmpty(fql)</requires>
    </member>
    <member name="M:Facebook.FacebookClient.QueryAsync(System.String,Facebook.FacebookAsyncCallback)">
      <summary>
            Executes a FQL query asynchronously.
            </summary>
      <param name="fql">
            The FQL query.
            </param>
      <param name="callback">
            The callback.
            </param>
    </member>
    <member name="M:Facebook.FacebookClient.QueryAsync(System.String[],Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Executes a FQL multiquery asynchronously.
            </summary>
      <param name="fql">
            The FQL queries.
            </param>
      <param name="callback">
            The callback.
            </param>
      <param name="state">
            The state.
            </param>
      <requires>fql != null</requires>
      <requires>fql.Length &gt; 0</requires>
    </member>
    <member name="M:Facebook.FacebookClient.QueryAsync(System.String[],Facebook.FacebookAsyncCallback)">
      <summary>
            Executes a FQL multiquery asynchronously.
            </summary>
      <param name="fql">
            The FQL queries.
            </param>
      <param name="callback">
            The callback.
            </param>
    </member>
    <member name="M:Facebook.FacebookClient.RestServer(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type)">
      <summary>
            Invoke the old restserver.php endpoint.
            </summary>
      <param name="parameters">
            The parameters of the method call.
            </param>
      <param name="httpMethod">
            The http method for the request. Default is 'GET'.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <returns>
            The decoded response object.
            </returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires inheritedFrom="M:Facebook.FacebookClientBase.RestServer(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type)" inheritedFromTypeName="FacebookClientBase">parameters != null</requires>
      <requires inheritedFrom="M:Facebook.FacebookClientBase.RestServer(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type)" inheritedFromTypeName="FacebookClientBase">parameters.ContainsKey("method") &amp;&amp; !String.IsNullOrEmpty((string)parameters["method"])</requires>
      <ensures inheritedFrom="M:Facebook.FacebookClientBase.RestServer(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type)" inheritedFromTypeName="FacebookClientBase">Contract.Result&lt;object&gt;() != null</ensures>
    </member>
    <member name="M:Facebook.FacebookClient.Graph(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type)">
      <summary>
            Make a graph api call.
            </summary>
      <param name="path">
            The path of the url to call such as 'me/friends'.
            </param>
      <param name="parameters">
            JsonObject of url parameters.
            </param>
      <param name="httpMethod">
            The http method for the request.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <returns>
            A dynamic object with the resulting data.
            </returns>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires inheritedFrom="M:Facebook.FacebookClientBase.Graph(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type)" inheritedFromTypeName="FacebookClientBase">!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClient.OAuthRequest(System.Uri,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,System.Boolean)">
      <summary>
            Make a OAuth Request
            </summary>
      <param name="uri">
            The url to make the request.
            </param>
      <param name="parameters">
            The parameters of the request.
            </param>
      <param name="httpMethod">
            The http method for the request.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <param name="restApi">
            The rest Api.
            </param>
      <returns>
            The decoded response object.
            </returns>
      <requires inheritedFrom="M:Facebook.FacebookClientBase.OAuthRequest(System.Uri,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,System.Boolean)" inheritedFromTypeName="FacebookClientBase">uri != null</requires>
    </member>
    <member name="M:Facebook.FacebookClient.RestServerAsync(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Invoke the old restserver.php endpoint.
            </summary>
      <param name="parameters">
            The parameters of the method call.
            </param>
      <param name="httpMethod">
            The http method for the request.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <param name="callback">
            The async callback.
            </param>
      <param name="state">
            The async state.
            </param>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires inheritedFrom="M:Facebook.FacebookClientBase.RestServerAsync(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,Facebook.FacebookAsyncCallback,System.Object)" inheritedFromTypeName="FacebookClientBase">callback != null</requires>
      <requires inheritedFrom="M:Facebook.FacebookClientBase.RestServerAsync(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,Facebook.FacebookAsyncCallback,System.Object)" inheritedFromTypeName="FacebookClientBase">parameters != null</requires>
      <requires inheritedFrom="M:Facebook.FacebookClientBase.RestServerAsync(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,Facebook.FacebookAsyncCallback,System.Object)" inheritedFromTypeName="FacebookClientBase">parameters.ContainsKey("method") &amp;&amp; !String.IsNullOrEmpty((string)parameters["method"])</requires>
    </member>
    <member name="M:Facebook.FacebookClient.GraphAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make a graph api call.
            </summary>
      <param name="path">
            The path of the url to call such as 'me/friends'.
            </param>
      <param name="parameters">
            JsonObject of url parameters.
            </param>
      <param name="httpMethod">
            The http method for the request.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <param name="callback">
            The async callback.
            </param>
      <param name="state">
            The async state.
            </param>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires inheritedFrom="M:Facebook.FacebookClientBase.GraphAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,Facebook.FacebookAsyncCallback,System.Object)" inheritedFromTypeName="FacebookClientBase">callback != null</requires>
      <requires inheritedFrom="M:Facebook.FacebookClientBase.GraphAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,Facebook.FacebookAsyncCallback,System.Object)" inheritedFromTypeName="FacebookClientBase">!(String.IsNullOrEmpty(path) &amp;&amp; parameters == null)</requires>
    </member>
    <member name="M:Facebook.FacebookClient.OAuthRequestAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,System.Boolean,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make a OAuth Request
            </summary>
      <param name="uri">
            The url to make the request.
            </param>
      <param name="parameters">
            The parameters of the request.
            </param>
      <param name="httpMethod">
            The http method of the request.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <param name="restApi">
            The rest Api.
            </param>
      <param name="callback">
            The async callback.
            </param>
      <param name="state">
            The async state.
            </param>
      <exception cref="T:Facebook.FacebookApiException" />
      <requires inheritedFrom="M:Facebook.FacebookClientBase.OAuthRequestAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,System.Boolean,Facebook.FacebookAsyncCallback,System.Object)" inheritedFromTypeName="FacebookClientBase">callback != null</requires>
      <requires inheritedFrom="M:Facebook.FacebookClientBase.OAuthRequestAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,System.Boolean,Facebook.FacebookAsyncCallback,System.Object)" inheritedFromTypeName="FacebookClientBase">uri != null</requires>
    </member>
    <member name="M:Facebook.FacebookClient.WithMirrorRetry``1(System.Func{``0})">
      <summary>
            This method invokes the supplied delegate with retry logic wrapped around it and returns the value of the delegate.
            If the delegate raises recoverable Facebook server or client errors, then the supplied delegate is reinvoked after
            a certain amount of delay until the retry limit is exceeded, at which point the exception is rethrown. Other
            exceptions are not caught and will be visible to callers.
            </summary>
      <typeparam name="TReturn">The type of object being returned</typeparam>
      <param name="body">The delegate to invoke within the retry logic which will produce the value to return</param>
      <returns>The value the delegate returns</returns>
      <requires>body != null</requires>
    </member>
    <member name="M:Facebook.FacebookClient.BuildRequestData(System.Uri,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.String,System.Uri@,System.String@)">
      <summary>
            Builds the request post data and request uri based on the given parameters.
            </summary>
      <param name="uri">The request uri.</param>
      <param name="parameters">The request parameters.</param>
      <param name="httpMethod">The http method.</param>
      <param name="accessToken">The access token.</param>
      <param name="requestUrl">The outputted request uri.</param>
      <param name="contentType">The request content type.</param>
      <returns>The request post data.</returns>
      <requires>uri != null</requires>
      <requires>parameters != null</requires>
    </member>
    <member name="M:Facebook.FacebookClient.BuildMediaObjectPostData(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>
            Builds the request post data if the request contains a media object
            such as an image or video to upload.
            </summary>
      <param name="parameters">The request parameters.</param>
      <param name="boundary">The multipart form request boundary.</param>
      <returns>The request post data.</returns>
    </member>
    <member name="M:Facebook.FacebookClient.MakeRequest(Facebook.HttpMethod,System.Uri,System.Byte[],System.String,System.Type,System.Boolean)">
      <summary>
            Make the API Request
            </summary>
      <param name="httpMethod">
            The http method to use. GET, POST, DELETE.
            </param>
      <param name="requestUrl">
            The uri of the request.
            </param>
      <param name="postData">
            The request data.
            </param>
      <param name="contentType">
            The request content type.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <param name="restApi">
            The rest api.
            </param>
      <returns>
            The decoded response object.
            </returns>
      <exception cref="T:Facebook.FacebookApiException" />
    </member>
    <member name="M:Facebook.FacebookClient.MakeRequestAsync(Facebook.HttpMethod,System.Uri,System.Byte[],System.String,System.Type,System.Boolean,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make the API Request
            </summary>
      <param name="httpMethod">
            The http method to use. GET, POST, DELETE.
            </param>
      <param name="requestUrl">
            The uri of the request.
            </param>
      <param name="postData">
            The request data.
            </param>
      <param name="contentType">
            The request content type.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <param name="restApi">
            The rest api.
            </param>
      <param name="callback">
            The async callback.
            </param>
      <param name="state">
            The async state.
            </param>
      <exception cref="T:Facebook.FacebookApiException" />
    </member>
    <member name="M:Facebook.FacebookClient.RequestCallback(System.IAsyncResult,System.Byte[],Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            The asynchronous web request callback.
            </summary>
      <param name="asyncResult">The asynchronous result.</param>
      <param name="postData">The post data.</param>
      <param name="callback">The callback method.</param>
      <param name="state">The asynchronous state.</param>
    </member>
    <member name="M:Facebook.FacebookClient.ResponseCallback(System.IAsyncResult,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            The asynchronous web response callback.
            </summary>
      <param name="asyncResult">The asynchronous result.</param>
      <param name="callback">The callback method.</param>
      <param name="state">The asynchronous state.</param>
    </member>
    <member name="M:Facebook.FacebookClient.GetGraphRequestUri(System.String)">
      <summary>
            Gets the graph request url in the proper format.
            </summary>
      <param name="path">The request url path.</param>
      <returns>The fully qualified uri for the request.</returns>
    </member>
    <member name="M:Facebook.FacebookClient.InvarientObject">
      <summary>
            The code contracts invariant object method.
            </summary>
    </member>
    <member name="P:Facebook.FacebookClient.MaxRetries">
      <summary>
            Gets or sets the maximum number of times to retry an api
            call after experiencing a recoverable exception.
            </summary>
      <value>The max retries.</value>
      <setter>
        <requires>value &gt;= 0</requires>
      </setter>
    </member>
    <member name="P:Facebook.FacebookClient.RetryDelay">
      <summary>
            Gets or sets the value in seconds to wait before retrying, with exponential roll off.
            </summary>
      <value>The retry delay.</value>
      <setter>
        <requires>value &gt;= 0</requires>
      </setter>
    </member>
    <member name="P:Facebook.FacebookClient.RetryErrorTypes">
      <summary>
            Gets a collection of Facebook error types that
            should be retried in the event of a failure.
            </summary>
    </member>
    <member name="T:Facebook.FacebookClientBaseContracts">
      <summary>
            Represents the inheritable contracts for the <see cref="T:Facebook.FacebookClientBase" /> class.
            </summary>
    </member>
    <member name="M:Facebook.FacebookClientBaseContracts.RestServer(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type)">
      <summary>
            Invoke the old restserver.php endpoint.
            </summary>
      <param name="parameters">
            The parameters for the server call.
            </param>
      <param name="httpMethod">
            The http method for the request.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <returns>
            The decoded response object.
            </returns>
    </member>
    <member name="M:Facebook.FacebookClientBaseContracts.Graph(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type)">
      <summary>
            Invoke the Graph API.
            </summary>
      <param name="path">
            The path of the url to call such as 'me/friends'.
            </param>
      <param name="parameters">
            object of url parameters.
            </param>
      <param name="httpMethod">
            The http method for the request.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <returns>
            A dynamic object with the resulting data.
            </returns>
      <exception cref="T:Facebook.FacebookApiException" />
    </member>
    <member name="M:Facebook.FacebookClientBaseContracts.OAuthRequest(System.Uri,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,System.Boolean)">
      <summary>
            Make a OAuth Request
            </summary>
      <param name="uri">
            The url to make the request.
            </param>
      <param name="parameters">
            The parameters of the request.
            </param>
      <param name="httpMethod">
            The http method for the request.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <param name="restApi">
            The rest aSpi.
            </param>
      <returns>
            The decoded response object.
            </returns>
      <exception cref="T:Facebook.FacebookApiException" />
    </member>
    <member name="M:Facebook.FacebookClientBaseContracts.RestServerAsync(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Invoke the old restserver.php endpoint.
            </summary>
      <param name="parameters">
            The parameters for the server call.
            </param>
      <param name="httpMethod">
            The http method for the request.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <param name="callback">
            The async callback.
            </param>
      <param name="state">
            The async state.
            </param>
    </member>
    <member name="M:Facebook.FacebookClientBaseContracts.GraphAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Invoke the Graph API.
            </summary>
      <param name="path">
            The path of the url to call such as 'me/friends'.
            </param>
      <param name="parameters">
            object of url parameters.
            </param>
      <param name="httpMethod">
            The http method for the request.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <param name="callback">
            The async callback.
            </param>
      <param name="state">
            The async state.
            </param>
      <exception cref="T:Facebook.FacebookApiException" />
    </member>
    <member name="M:Facebook.FacebookClientBaseContracts.OAuthRequestAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,System.Type,System.Boolean,Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Make a OAuth Request
            </summary>
      <param name="uri">
            The url to make the request.
            </param>
      <param name="parameters">
            The parameters of the request.
            </param>
      <param name="httpMethod">
            The http method for the request.
            </param>
      <param name="resultType">
            The result type.
            </param>
      <param name="restApi">
            The rest Api.
            </param>
      <param name="callback">
            The async callback.
            </param>
      <param name="state">
            The async state.
            </param>
      <exception cref="T:Facebook.FacebookApiException" />
    </member>
    <member name="T:Facebook.FacebookAsyncCallback">
      <summary>
            Represents the method that handles the post-call result.
            </summary>
      <param name="asyncResult">The Facebook asynchronous result.</param>
    </member>
    <member name="T:Facebook.FacebookAsyncCallback`1">
      <summary>
            Represents the method that handles the post-call result.
            </summary>
      <param name="asyncResult">The Facebook asynchronous result.</param>
    </member>
    <member name="T:Facebook.FacebookAsyncResult">
      <summary>
            Represents the status of an asynchronous Facebook api call.
            </summary>
    </member>
    <member name="F:Facebook.FacebookAsyncResult.result">
      <summary>
            The result of the asynchronous operation.
            </summary>
    </member>
    <member name="F:Facebook.FacebookAsyncResult.asyncState">
      <summary>
            The user-defined object that qualifies or contains information about an asynchronous operation
            </summary>
    </member>
    <member name="F:Facebook.FacebookAsyncResult.asyncWaitHandle">
      <summary>
            A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.
            </summary>
    </member>
    <member name="F:Facebook.FacebookAsyncResult.completedSynchronously">
      <summary>
            A value that indicates whether the asynchronous operation completed synchronously.
            </summary>
    </member>
    <member name="F:Facebook.FacebookAsyncResult.isCompleted">
      <summary>
            A value that indicates whether the asynchronous operation has completed.
            </summary>
    </member>
    <member name="F:Facebook.FacebookAsyncResult.error">
      <summary>
            The error that occurred processing this api call.
            </summary>
    </member>
    <member name="M:Facebook.FacebookAsyncResult.#ctor(System.Object,System.Object,System.Threading.WaitHandle,System.Boolean,System.Boolean,Facebook.FacebookApiException)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookAsyncResult" /> class.
            </summary>
      <param name="result">The result.</param>
      <param name="asyncState">State of the async.</param>
      <param name="asyncWaitHandle">The async wait handle.</param>
      <param name="completedSynchronously">if set to <c>true</c> [completed synchronously].</param>
      <param name="isCompleted">if set to <c>true</c> [is completed].</param>
      <param name="error">The error.</param>
    </member>
    <member name="P:Facebook.FacebookAsyncResult.Error">
      <summary>
            Gets the error that occurred processing this api call.
            </summary>
      <value>The error.</value>
    </member>
    <member name="P:Facebook.FacebookAsyncResult.Result">
      <summary>
            Gets the result of an asynchronous operation.
            </summary>
      <value>The result.</value>
    </member>
    <member name="P:Facebook.FacebookAsyncResult.AsyncState">
      <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
      <value />
      <returns>A user-defined object that qualifies or contains information about an asynchronous operation.</returns>
    </member>
    <member name="P:Facebook.FacebookAsyncResult.AsyncWaitHandle">
      <summary>
            Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.
            </summary>
      <value />
      <returns>A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</returns>
    </member>
    <member name="P:Facebook.FacebookAsyncResult.CompletedSynchronously">
      <summary>
            Gets a value indicating whether the asynchronous operation completed synchronously.
            </summary>
      <value />
      <returns>true if the asynchronous operation completed synchronously; otherwise, false.</returns>
    </member>
    <member name="P:Facebook.FacebookAsyncResult.IsCompleted">
      <summary>
            Gets a value indicating whether the asynchronous operation has completed.
            </summary>
      <value />
      <returns>true if the operation is complete; otherwise, false.</returns>
    </member>
    <member name="M:Facebook.FacebookAsyncResult`1.#ctor(System.Object,System.Object,System.Threading.WaitHandle,System.Boolean,System.Boolean,Facebook.FacebookApiException)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookAsyncResult" /> class.
            </summary>
      <param name="result">The result.</param>
      <param name="asyncState">State of the async.</param>
      <param name="asyncWaitHandle">The async wait handle.</param>
      <param name="completedSynchronously">if set to <c>true</c> [completed synchronously].</param>
      <param name="isCompleted">if set to <c>true</c> [is completed].</param>
      <param name="error">The error.</param>
    </member>
    <member name="P:Facebook.FacebookAsyncResult`1.Result">
      <summary>
            Gets the result of an asynchronous operation.
            </summary>
      <value>The result.</value>
    </member>
    <member name="T:Facebook.FacebookConfigurationSection">
      <summary>
            Represents the Facebook section in a configuration file.
            </summary>
    </member>
    <member name="T:Facebook.IFacebookApplication">
      <summary>
            Represents a Facebook Application.
            </summary>
    </member>
    <member name="P:Facebook.IFacebookApplication.AppId">
      <summary>
            Gets the application id.
            </summary>
    </member>
    <member name="P:Facebook.IFacebookApplication.AppSecret">
      <summary>
            Gets the application secret.
            </summary>
    </member>
    <member name="P:Facebook.IFacebookApplication.SiteUrl">
      <summary>
            Gets the site url.
            </summary>
    </member>
    <member name="P:Facebook.IFacebookApplication.CanvasPage">
      <summary>
            Gets the canvas page.
            </summary>
    </member>
    <member name="P:Facebook.IFacebookApplication.CanvasUrl">
      <summary>
            Gets the canvas url.
            </summary>
    </member>
    <member name="P:Facebook.IFacebookApplication.CancelUrlPath">
      <summary>
            Gets the url to return the user after they cancel authorization.
            </summary>
    </member>
    <member name="F:Facebook.FacebookConfigurationSection.current">
      <summary>
            The current facebook settings stored in the configuration file.
            </summary>
    </member>
    <member name="P:Facebook.FacebookConfigurationSection.AppId">
      <summary>
            Gets or sets the app id.
            </summary>
      <value>The app id.</value>
    </member>
    <member name="P:Facebook.FacebookConfigurationSection.AppSecret">
      <summary>
            Gets or sets the API secret.
            </summary>
      <value>The API secret.</value>
    </member>
    <member name="P:Facebook.FacebookConfigurationSection.SiteUrl">
      <summary>
            Gets or sets the site url.
            </summary>
    </member>
    <member name="P:Facebook.FacebookConfigurationSection.CanvasPage">
      <summary>
            Gets or sets the canvas page.
            </summary>
    </member>
    <member name="P:Facebook.FacebookConfigurationSection.CanvasUrl">
      <summary>
            Gets or sets the canvas url.
            </summary>
    </member>
    <member name="P:Facebook.FacebookConfigurationSection.CancelUrlPath">
      <summary>
            Gets or sets the url to return the user after they cancel authorization.
            </summary>
    </member>
    <member name="P:Facebook.FacebookConfigurationSection.Current">
      <summary>
            Gets the Facebook settings stored in the configuration file.
            </summary>
    </member>
    <member name="T:Facebook.FacebookContext">
      <summary>
            Represents the Facebook Context class.
            </summary>
    </member>
    <member name="F:Facebook.FacebookContext.Instance">
      <summary>
            Current Facebook application.
            </summary>
    </member>
    <member name="M:Facebook.FacebookContext.SetApplication(Facebook.IFacebookApplication)">
      <summary>
            Set the current facebook application.
            </summary>
      <param name="facebookApplication">
            The facebook application.
            </param>
      <requires>facebookApplication != null</requires>
    </member>
    <member name="M:Facebook.FacebookContext.SetApplication(System.Func{Facebook.IFacebookApplication})">
      <summary>
            Set the current facebook application.
            </summary>
      <param name="getFacebookApplication">
            The get facebook application.
            </param>
      <requires>getFacebookApplication != null</requires>
    </member>
    <member name="F:Facebook.FacebookContext.current">
      <summary>
            The current facebook application.
            </summary>
    </member>
    <member name="M:Facebook.FacebookContext.InnerSetApplication(Facebook.IFacebookApplication)">
      <summary>
            Set the inner application.
            </summary>
      <param name="facebookApplication">
            The facebook application.
            </param>
      <requires>facebookApplication != null</requires>
    </member>
    <member name="M:Facebook.FacebookContext.InnerSetApplication(System.Func{Facebook.IFacebookApplication})">
      <summary>
            Set the inner application.
            </summary>
      <param name="getFacebookApplication">
            The get facebook application.
            </param>
      <requires>getFacebookApplication != null</requires>
    </member>
    <member name="P:Facebook.FacebookContext.Current">
      <summary>
            Gets the current Facebook application.
            </summary>
      <getter>
        <ensures>Contract.Result&lt;IFacebookApplication&gt;() != null</ensures>
      </getter>
    </member>
    <member name="P:Facebook.FacebookContext.InnerCurrent">
      <summary>
            Gets InnerCurrent.
            </summary>
      <getter>
        <ensures>Contract.Result&lt;IFacebookApplication&gt;() != null</ensures>
      </getter>
    </member>
    <member name="T:Facebook.FacebookContext.NullFacebookApplication">
      <summary>
            Represents a null Facebook application.
            </summary>
    </member>
    <member name="P:Facebook.FacebookContext.NullFacebookApplication.AppId">
      <summary>
            Gets the application id.
            </summary>
    </member>
    <member name="P:Facebook.FacebookContext.NullFacebookApplication.AppSecret">
      <summary>
            Gets the application secret.
            </summary>
    </member>
    <member name="P:Facebook.FacebookContext.NullFacebookApplication.SiteUrl">
      <summary>
            Gets the site url.
            </summary>
    </member>
    <member name="P:Facebook.FacebookContext.NullFacebookApplication.CanvasPage">
      <summary>
            Gets the canvas page.
            </summary>
    </member>
    <member name="P:Facebook.FacebookContext.NullFacebookApplication.CanvasUrl">
      <summary>
            Gets the canvas url.
            </summary>
    </member>
    <member name="P:Facebook.FacebookContext.NullFacebookApplication.CancelUrlPath">
      <summary>
            Gets the url to return the user after they cancel authorization.
            </summary>
    </member>
    <member name="T:Facebook.FacebookMediaObject">
      <summary>
            Represents a media object such as a photo or video.
            </summary>
    </member>
    <member name="F:Facebook.FacebookMediaObject.value">
      <summary>
            The value of the media object.
            </summary>
    </member>
    <member name="M:Facebook.FacebookMediaObject.SetValue(System.Byte[])">
      <summary>
            Sets the value of the media object.
            </summary>
      <param name="value">The media object value.</param>
    </member>
    <member name="M:Facebook.FacebookMediaObject.GetValue">
      <summary>
            Gets the value of the media object.
            </summary>
      <returns>The value of the media object.</returns>
    </member>
    <member name="P:Facebook.FacebookMediaObject.ContentType">
      <summary>
            Gets or sets the type of the content.
            </summary>
      <value>The type of the content.</value>
    </member>
    <member name="P:Facebook.FacebookMediaObject.FileName">
      <summary>
            Gets or sets the name of the file.
            </summary>
      <value>The name of the file.</value>
    </member>
    <member name="T:Facebook.FacebookOAuthClient">
      <summary>
            Represents the Facebook OAuth Helpers
            </summary>
    </member>
    <member name="M:Facebook.FacebookOAuthClient.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookOAuthClient" /> class.
            </summary>
    </member>
    <member name="M:Facebook.FacebookOAuthClient.#ctor(Facebook.IFacebookApplication)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookOAuthClient" /> class.
            </summary>
      <param name="facebookApplication">
            The facebook application.
            </param>
    </member>
    <member name="M:Facebook.FacebookOAuthClient.GetLoginUrl(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Gets the login uri.
            </summary>
      <param name="parameters">
            The parameters.
            </param>
      <returns>
            Returns the facebook login uri.
            </returns>
      <remarks>
            http://developers.facebook.com/docs/reference/dialogs/oauth
            Parameters that can be used:
                client_id     : Your application's identifier. This is called client_id instead of app_id for this particular method to be compliant with the OAuth 2.0 specification. Required, but automatically specified by most SDKs.
                redirect_uri  : The URL to redirect to after the user clicks a button on the dialog. Required, but automatically specified by most SDKs.
                scope         : Optional. A comma-delimited list of permissions.
                state         : Optional. An opaque string used to maintain application state between the request and callback. When Facebook redirects the user back to your redirect_uri, this value will be included unchanged in the response.
                response_type : Optional, default is token. The requested response: an access token (token), an authorization code (code), or both (code_and_token).
                display       : The display mode in which to render the dialog. The default is page on the www subdomain and wap on the m subdomain. This is automatically specified by most SDKs. (For WP7 builds it is set to touch.)
            </remarks>
      <ensures>Contract.Result&lt;Uri&gt;() != null</ensures>
    </member>
    <member name="M:Facebook.FacebookOAuthClient.GetLogoutUrl(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Gets the logout url.
            </summary>
      <param name="parameters">
            The parameters.
            </param>
      <returns>
            Returns the logout url.
            </returns>
    </member>
    <member name="M:Facebook.FacebookOAuthClient.ExchangeCodeForAccessToken(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Gets the access token by exchanging the code.
            </summary>
      <param name="code">
            The code to exchange.
            </param>
      <param name="parameters">
            The parameters.
            </param>
      <returns>
            Returns the access token or expires if exists.
            </returns>
      <requires>!string.IsNullOrEmpty(code)</requires>
    </member>
    <member name="M:Facebook.FacebookOAuthClient.ExchangeCodeForAccessTokenAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Gets the access token by exchanging the code.
            </summary>
      <param name="code">
            The code to exchange.
            </param>
      <param name="parameters">
            The parameters.
            </param>
      <param name="callback">
            The callback.
            </param>
      <param name="state">
            The state.
            </param>
      <requires>!string.IsNullOrEmpty(code)</requires>
    </member>
    <member name="M:Facebook.FacebookOAuthClient.ExchangeCodeForAccessTokenAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback)">
      <summary>
            Gets the access token by exchanging the code.
            </summary>
      <param name="code">
            The code to exchange.
            </param>
      <param name="parameters">
            The parameters.
            </param>
      <param name="callback">
            The callback.
            </param>
    </member>
    <member name="M:Facebook.FacebookOAuthClient.GetApplicationAccessToken">
      <summary>
            Gets the application access token.
            </summary>
      <returns>
            The application access token.
            </returns>
    </member>
    <member name="M:Facebook.FacebookOAuthClient.GetApplicationAccessTokenAsync(Facebook.FacebookAsyncCallback,System.Object)">
      <summary>
            Get the application access token asynchronously.
            </summary>
      <param name="callback">
            The callback.
            </param>
      <param name="state">
            The state.
            </param>
      <example>
        <code>
             var oauth = new FacebookOAuthClient { ClientId = "{appid}", ClientSecret = "{appsecret}" };
             oauth.GetApplicationAccessTokenAsync(
                 ar =&gt;
                 {
                     dynamic result = ar.Result;
                     Console.WriteLine(result.access_token);
                 }, null);
            </code>
      </example>
    </member>
    <member name="M:Facebook.FacebookOAuthClient.GetApplicationAccessTokenAsync(Facebook.FacebookAsyncCallback)">
      <summary>
            Get the application access token asynchronously.
            </summary>
      <param name="callback">
            The callback.
            </param>
    </member>
    <member name="P:Facebook.FacebookOAuthClient.ClientId">
      <summary>
            Gets or sets the client id.
            </summary>
    </member>
    <member name="P:Facebook.FacebookOAuthClient.ClientSecret">
      <summary>
            Gets or sets the client secret.
            </summary>
    </member>
    <member name="P:Facebook.FacebookOAuthClient.RedirectUri">
      <summary>
            Gets or sets the redirect uri.
            </summary>
    </member>
    <member name="T:Facebook.FacebookOAuthException">
      <summary>
            Represents errors that occur as a result of problems with the OAuth access token.
            </summary>
    </member>
    <member name="M:Facebook.FacebookOAuthException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookOAuthException" /> class.
            </summary>
    </member>
    <member name="M:Facebook.FacebookOAuthException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookOAuthException" /> class.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Facebook.FacebookOAuthException.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookOAuthException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="errorType">Type of the error.</param>
    </member>
    <member name="M:Facebook.FacebookOAuthException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookOAuthException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Facebook.FacebookOAuthException.#ctor(System.String,System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookOAuthException" /> class.
            </summary>
      <param name="message">The error message text.</param>
      <param name="errorType">Type of the facebook error.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Facebook.FacebookOAuthException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookOAuthException" /> class.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
    </member>
    <member name="T:Facebook.FacebookOAuthResult">
      <summary>
            Represents the authentication result of Facebook.
            </summary>
    </member>
    <member name="F:Facebook.FacebookOAuthResult.accessToken">
      <summary>
            The access token.
            </summary>
    </member>
    <member name="F:Facebook.FacebookOAuthResult.expires">
      <summary>
            Date and Time when the access token expires.
            </summary>
    </member>
    <member name="F:Facebook.FacebookOAuthResult.errorReason">
      <summary>
            Short error reason for failed authentication if there was an error.
            </summary>
    </member>
    <member name="F:Facebook.FacebookOAuthResult.errorDescription">
      <summary>
            Long error description for failed authentication if there was an error.
            </summary>
    </member>
    <member name="F:Facebook.FacebookOAuthResult.code">
      <summary>
            The code used to exchange access token.
            </summary>
    </member>
    <member name="F:Facebook.FacebookOAuthResult.state">
      <summary>
            Gets or sets an opaque state used to maintain application state between the request and callback.
            </summary>
    </member>
    <member name="M:Facebook.FacebookOAuthResult.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookOAuthResult" /> class.
            </summary>
      <param name="parameters">
            The parameters.
            </param>
      <remarks>
            The values of parameters should not be url encoded.
            </remarks>
      <requires>parameters != null</requires>
    </member>
    <member name="M:Facebook.FacebookOAuthResult.Parse(System.String)">
      <summary>
            Parse the uri to <see cref="T:Facebook.FacebookOAuthResult" />.
            </summary>
      <param name="uriString">
            The uri string.
            </param>
      <returns>
            Returns an instance of <see cref="T:Facebook.FacebookOAuthResult" />.
            </returns>
    </member>
    <member name="M:Facebook.FacebookOAuthResult.Parse(System.Uri)">
      <summary>
            Parse the uri to <see cref="T:Facebook.FacebookOAuthResult" />.
            </summary>
      <param name="uri">
            The uri.
            </param>
      <returns>
            Returns an instance of <see cref="T:Facebook.FacebookOAuthResult" />.
            </returns>
    </member>
    <member name="M:Facebook.FacebookOAuthResult.TryParse(System.String,Facebook.FacebookOAuthResult@)">
      <summary>
            Try parsing the uri to <see cref="T:Facebook.FacebookOAuthResult" />.
            </summary>
      <param name="uriString">
            The uri string.
            </param>
      <param name="result">
            An instance of <see cref="T:Facebook.FacebookOAuthResult" />.
            </param>
      <returns>
            Returns true if parsing was successful otherwise false.
            </returns>
    </member>
    <member name="M:Facebook.FacebookOAuthResult.TryParse(System.Uri,Facebook.FacebookOAuthResult@)">
      <summary>
            Try parsing the uri to <see cref="T:Facebook.FacebookOAuthResult" />.
            </summary>
      <param name="uri">
            The uri.
            </param>
      <param name="result">
            An instance of <see cref="T:Facebook.FacebookOAuthResult" />.
            </param>
      <returns>
            Returns true if parsing was successful otherwise false.
            </returns>
    </member>
    <member name="P:Facebook.FacebookOAuthResult.ErrorReason">
      <summary>
            Gets the short error reason for failed authentication if an error occurred.
            </summary>
    </member>
    <member name="P:Facebook.FacebookOAuthResult.ErrorDescription">
      <summary>
            Gets the long error description for failed authentication if an error occurred.
            </summary>
    </member>
    <member name="P:Facebook.FacebookOAuthResult.Expires">
      <summary>
            Gets the <see cref="T:System.DateTime" /> when the access token will expire.
            </summary>
    </member>
    <member name="P:Facebook.FacebookOAuthResult.AccessToken">
      <summary>
            Gets the access token.
            </summary>
    </member>
    <member name="P:Facebook.FacebookOAuthResult.IsSuccess">
      <summary>
            Gets a value indicating whether access token or code was successfully retrieved.
            </summary>
    </member>
    <member name="P:Facebook.FacebookOAuthResult.Code">
      <summary>
            Gets the code used to exchange with facebook to retrieve access token.
            </summary>
    </member>
    <member name="P:Facebook.FacebookOAuthResult.State">
      <summary>
            Gets an opaque state used to maintain application state between the request and callback.
            </summary>
    </member>
    <member name="T:Facebook.FacebookUtils">
      <summary>
            Helper methods for Facebook.
            </summary>
    </member>
    <member name="M:Facebook.FacebookUtils.FromUnixTime(System.Double)">
      <summary>
            Converts a unix time string to a DateTime object.
            </summary>
      <param name="unixTime">The unix time.</param>
      <returns>The DateTime object.</returns>
    </member>
    <member name="M:Facebook.FacebookUtils.FromUnixTime(System.String)">
      <summary>
            Converts a unix time string to a DateTime object.
            </summary>
      <param name="unixTime">The string representation of the unix time.</param>
      <returns>The DateTime object.</returns>
    </member>
    <member name="M:Facebook.FacebookUtils.ToUnixTime(System.DateTime)">
      <summary>
            Converts a DateTime object to unix time.
            </summary>
      <param name="dateTime">The date time.</param>
      <returns>The unix date time.</returns>
      <requires>dateTime &gt;= Epoch</requires>
    </member>
    <member name="M:Facebook.FacebookUtils.ToUnixTime(System.DateTimeOffset)">
      <summary>
            Converts a DateTimeOffset object to unix time.
            </summary>
      <param name="dateTime">The date time.</param>
      <returns>The unix date time.</returns>
      <requires>dateTime &gt;= Epoch</requires>
    </member>
    <member name="M:Facebook.FacebookUtils.ToIso8601FormattedDateTime(System.DateTime)">
      <summary>
            Converts to specified <see cref="T:System.DateTime" /> to ISO-8601 format (yyyy-MM-ddTHH:mm:ssZ).
            </summary>
      <param name="dateTime">
            The date time.
            </param>
      <returns>
            Returns the string representation of date time in ISO-8601 format (yyyy-MM-ddTHH:mm:ssZ).
            </returns>
      <requires>dateTime != null</requires>
    </member>
    <member name="M:Facebook.FacebookUtils.FromIso8601FormattedDateTime(System.String)">
      <summary>
            Converts ISO-8601 format (yyyy-MM-ddTHH:mm:ssZ) date time to <see cref="T:System.DateTime" />.
            </summary>
      <param name="iso8601DateTime">
            The iso 8601 formatted date time.
            </param>
      <returns>
            Returns the <see cref="T:System.DateTime" /> equivalent to the ISO-8601 formatted date time. 
            </returns>
      <requires>!string.IsNullOrEmpty(iso8601DateTime)</requires>
    </member>
    <member name="M:Facebook.FacebookUtils.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Merges two dictionaries.
            </summary>
      <param name="first">Default values, only used if second does not contain a value.</param>
      <param name="second">Every value of the merged object is used.</param>
      <returns>The merged dictionary</returns>
      <ensures>Contract.Result&lt;IDictionary&lt;string, object&gt;&gt;() != null</ensures>
    </member>
    <member name="M:Facebook.FacebookUtils.ToDictionary(System.Object)">
      <summary>
            Convert the object to dictionary.
            </summary>
      <param name="parameters">
            The parameters.
            </param>
      <returns>
            Returns the dictionary equivalent of the specified object.
            </returns>
      <requires>parameters != null</requires>
    </member>
    <member name="M:Facebook.FacebookUtils.ToJsonQueryString(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Converts the dictionary to a json formatted query string.
            </summary>
      <param name="dictionary">The dictionary.</param>
      <returns>A Json formatted querystring.</returns>
      <requires>dictionary != null</requires>
      <ensures>Contract.Result&lt;string&gt;() != null</ensures>
    </member>
    <member name="M:Facebook.FacebookUtils.ToJsonQueryString(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            Converts the dictionary to a json formatted query string.
            </summary>
      <param name="dictionary">The dictionary.</param>
      <returns>A Json formatted querystring.</returns>
      <requires>dictionary != null</requires>
      <ensures>Contract.Result&lt;string&gt;() != null</ensures>
    </member>
    <member name="M:Facebook.FacebookUtils.ToJsonQueryString(System.Collections.Specialized.NameValueCollection)">
      <summary>
            Converts the NameValueCollection to a json formatted query string.
            </summary>
      <param name="collection">The collection.</param>
      <returns>A Json formatted querystring.</returns>
      <requires>collection != null</requires>
      <ensures>Contract.Result&lt;string&gt;() != null</ensures>
    </member>
    <member name="M:Facebook.FacebookUtils.ParseUrlQueryString(System.String)">
      <summary>
            Parse a URL query and fragment parameters into a key-value bundle.
            </summary>
      <param name="query">
            The URL query to parse.
            </param>
      <returns>
            Returns a dictionary of keys and values for the querystring.
            </returns>
      <ensures>Contract.Result&lt;IDictionary&lt;string, object&gt;&gt;() != null</ensures>
    </member>
    <member name="P:Facebook.FacebookUtils.Epoch">
      <summary>
            Gets the epoch time.
            </summary>
      <value>The epoch time.</value>
    </member>
    <member name="T:Facebook.ExceptionFactory">
      <summary>
            A utility for generating facebook exceptions.
            </summary>
    </member>
    <member name="M:Facebook.ExceptionFactory.GetRestException(System.Object)">
      <summary>
            Gets the rest exception if possible.
            </summary>
      <param name="result">The web request result object to check for exception information.</param>
      <returns>The Facebook API exception or null.</returns>
    </member>
    <member name="M:Facebook.ExceptionFactory.GetGraphException(System.Net.WebException)">
      <summary>
            Gets the graph exception if possible.
            </summary>
      <param name="exception">The web exception.</param>
      <returns>A Facebook API exception or null.</returns>
      <requires>exception != null</requires>
    </member>
    <member name="P:Facebook.ExceptionFactory.PathOrParametersRequired">
      <summary>
            Gets the path or parameters required exception.
            </summary>
      <value>The path or parameters required exception.</value>
    </member>
    <member name="P:Facebook.ExceptionFactory.MethodRequiredForRestCall">
      <summary>
            Gets the method required for rest call exception.
            </summary>
      <value>The method required for rest call exception.</value>
    </member>
    <member name="P:Facebook.ExceptionFactory.CannotIncludeMultipleMediaObjects">
      <summary>
            Gets the cannot include multiple media objects exception.
            </summary>
      <value>The cannot include multiple media objects exception.</value>
    </member>
    <member name="P:Facebook.ExceptionFactory.MediaObjectMustHavePropertiesSet">
      <summary>
            Gets the media object must have properties set exception.
            </summary>
      <value>The media object must have properties set exception.</value>
    </member>
    <member name="P:Facebook.ExceptionFactory.InvalidCookie">
      <summary>
            Gets the invalid cookie exception.
            </summary>
      <value>The invalid cookie exception.</value>
    </member>
    <member name="T:Facebook.JsonArray">
      <summary>
            Represents a json array.
            </summary>
    </member>
    <member name="M:Facebook.JsonArray.ToString">
      <summary>
            Json string representation of <see cref="T:Facebook.JsonArray" />.
            </summary>
      <returns>
            Returns the Json string representation of <see cref="T:Facebook.JsonArray" />.
            </returns>
      <ensures inheritedFrom="M:System.Object.ToString" inheritedFromTypeName="Object">Contract.Result&lt;string&gt;() != null</ensures>
    </member>
    <member name="T:Facebook.JsonObject">
      <summary>
            Represents a JSON object.
            </summary>
      <invariant>members != null</invariant>
    </member>
    <member name="F:Facebook.JsonObject.members">
      <summary>
            The internal member dictionary.
            </summary>
    </member>
    <member name="M:Facebook.JsonObject.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Facebook.JsonObject" /> class.
            </summary>
    </member>
    <member name="M:Facebook.JsonObject.Add(System.String,System.Object)">
      <summary>
            Adds the specified key.
            </summary>
      <param name="key">The key.</param>
      <param name="value">The value.</param>
    </member>
    <member name="M:Facebook.JsonObject.ContainsKey(System.String)">
      <summary>
            Determines whether the specified key contains key.
            </summary>
      <param name="key">The key.</param>
      <returns>
        <c>true</c> if the specified key contains key; otherwise, <c>false</c>.
            </returns>
      <ensures inheritedFrom="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)" inheritedFromTypeName="IDictionary">!Contract.Result&lt;bool&gt;() || @this.Count &gt; 0</ensures>
    </member>
    <member name="M:Facebook.JsonObject.Remove(System.String)">
      <summary>
            Removes the specified key.
            </summary>
      <param name="key">The key.</param>
      <returns />
    </member>
    <member name="M:Facebook.JsonObject.TryGetValue(System.String,System.Object@)">
      <summary>
            Tries the get value.
            </summary>
      <param name="key">The key.</param>
      <param name="value">The value.</param>
      <returns />
      <ensures inheritedFrom="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)" inheritedFromTypeName="IDictionary">Contract.Result&lt;bool&gt;() == @this.ContainsKey(key)</ensures>
    </member>
    <member name="M:Facebook.JsonObject.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>
            Adds the specified item.
            </summary>
      <param name="item">The item.</param>
      <ensures inheritedFrom="M:System.Collections.Generic.ICollection`1.Add(`0)" inheritedFromTypeName="ICollection">this.Count &gt;= Contract.OldValue(this.Count)</ensures>
    </member>
    <member name="M:Facebook.JsonObject.Clear">
      <summary>
            Clears this instance.
            </summary>
      <ensures inheritedFrom="M:System.Collections.Generic.ICollection`1.Clear" inheritedFromTypeName="ICollection">this.Count == 0</ensures>
    </member>
    <member name="M:Facebook.JsonObject.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>
            Determines whether [contains] [the specified item].
            </summary>
      <param name="item">The item.</param>
      <returns>
        <c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.
            </returns>
      <ensures inheritedFrom="M:System.Collections.Generic.ICollection`1.Contains(`0)" inheritedFromTypeName="ICollection">!Contract.Result&lt;bool&gt;() || this.Count &gt; 0</ensures>
    </member>
    <member name="M:Facebook.JsonObject.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>
            Copies to.
            </summary>
      <param name="array">The array.</param>
      <param name="arrayIndex">Index of the array.</param>
      <requires inheritedFrom="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" inheritedFromTypeName="ICollection">array != null</requires>
      <requires inheritedFrom="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" inheritedFromTypeName="ICollection">arrayIndex &gt;= 0</requires>
      <requires inheritedFrom="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" inheritedFromTypeName="ICollection">arrayIndex + this.Count  &lt;= array.Length</requires>
    </member>
    <member name="M:Facebook.JsonObject.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>
            Removes the specified item.
            </summary>
      <param name="item">The item.</param>
      <returns />
    </member>
    <member name="M:Facebook.JsonObject.GetEnumerator">
      <summary>
            Gets the enumerator.
            </summary>
      <returns />
      <ensures inheritedFrom="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" inheritedFromTypeName="IEnumerable">Contract.Result&lt;IEnumerator&lt;T&gt;&gt;() != null</ensures>
      <ensures inheritedFrom="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" inheritedFromTypeName="IEnumerable">Contract.Result&lt;IEnumerator&lt;T&gt;&gt;().Model == ((IEnumerable)this).Model</ensures>
    </member>
    <member name="M:Facebook.JsonObject.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
      <ensures inheritedFrom="M:System.Collections.IEnumerable.GetEnumerator" inheritedFromTypeName="IEnumerable">Contract.Result&lt;IEnumerator&gt;() != null</ensures>
      <ensures inheritedFrom="M:System.Collections.IEnumerable.GetEnumerator" inheritedFromTypeName="IEnumerable">Contract.Result&lt;IEnumerator&gt;().Model == this.Model</ensures>
      <ensures inheritedFrom="M:System.Collections.IEnumerable.GetEnumerator" inheritedFromTypeName="IEnumerable">Contract.Result&lt;IEnumerator&gt;().CurrentIndex == -1</ensures>
    </member>
    <member name="M:Facebook.JsonObject.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
      <summary>
            Provides implementation for type conversion operations. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations that convert an object from one type to another.
            </summary>
      <param name="binder">Provides information about the conversion operation. The binder.Type property provides the type to which the object must be converted. For example, for the statement (String)sampleObject in C# (CType(sampleObject, Type) in Visual Basic), where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, binder.Type returns the <see cref="T:System.String" /> type. The binder.Explicit property provides information about the kind of conversion that occurs. It returns true for explicit conversion and false for implicit conversion.</param>
      <param name="result">The result of the type conversion operation.</param>
      <returns>
            Alwasy returns true.
            </returns>
    </member>
    <member name="M:Facebook.JsonObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)">
      <summary>
            Provides the implementation for operations that delete an object member. This method is not intended for use in C# or Visual Basic.
            </summary>
      <param name="binder">Provides information about the deletion.</param>
      <returns>
            Alwasy returns true.
            </returns>
    </member>
    <member name="M:Facebook.JsonObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
      <summary>
            Provides the implementation for operations that get a value by index. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for indexing operations.
            </summary>
      <param name="binder">Provides information about the operation.</param>
      <param name="indexes">The indexes that are used in the operation. For example, for the sampleObject[3] operation in C# (sampleObject(3) in Visual Basic), where sampleObject is derived from the DynamicObject class, <paramref name="indexes" /> is equal to 3.</param>
      <param name="result">The result of the index operation.</param>
      <returns>
            Alwasy returns true.
            </returns>
    </member>
    <member name="M:Facebook.JsonObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>
            Provides the implementation for operations that get member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations such as getting a value for a property.
            </summary>
      <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member on which the dynamic operation is performed. For example, for the Console.WriteLine(sampleObject.SampleProperty) statement, where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
      <param name="result">The result of the get operation. For example, if the method is called for a property, you can assign the property value to <paramref name="result" />.</param>
      <returns>
            Alwasy returns true.
            </returns>
    </member>
    <member name="M:Facebook.JsonObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
      <summary>
            Provides the implementation for operations that set a value by index. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations that access objects by a specified index.
            </summary>
      <param name="binder">Provides information about the operation.</param>
      <param name="indexes">The indexes that are used in the operation. For example, for the sampleObject[3] = 10 operation in C# (sampleObject(3) = 10 in Visual Basic), where sampleObject is derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, <paramref name="indexes" /> is equal to 3.</param>
      <param name="value">The value to set to the object that has the specified index. For example, for the sampleObject[3] = 10 operation in C# (sampleObject(3) = 10 in Visual Basic), where sampleObject is derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, <paramref name="value" /> is equal to 10.</param>
      <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.
            </returns>
    </member>
    <member name="M:Facebook.JsonObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>
            Provides the implementation for operations that set member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations such as setting a value for a property.
            </summary>
      <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member to which the value is being assigned. For example, for the statement sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
      <param name="value">The value to set to the member. For example, for sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, the <paramref name="value" /> is "Test".</param>
      <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)
            </returns>
    </member>
    <member name="M:Facebook.JsonObject.GetDynamicMemberNames">
      <summary>
            Returns the enumeration of all dynamic member names.
            </summary>
      <returns>
            A sequence that contains dynamic member names.
            </returns>
    </member>
    <member name="P:Facebook.JsonObject.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:System.Object" /> at the specified index.
            </summary>
      <value />
    </member>
    <member name="P:Facebook.JsonObject.Keys">
      <summary>
            Gets the keys.
            </summary>
      <value>The keys.</value>
      <getter>
        <ensures inheritedFrom="M:System.Collections.Generic.IDictionary`2.get_Keys" inheritedFromTypeName="IDictionary">Contract.Result&lt;ICollection&lt;TKey&gt;&gt;() != null</ensures>
      </getter>
    </member>
    <member name="P:Facebook.JsonObject.Values">
      <summary>
            Gets the values.
            </summary>
      <value>The values.</value>
      <getter>
        <ensures inheritedFrom="M:System.Collections.Generic.IDictionary`2.get_Values" inheritedFromTypeName="IDictionary">Contract.Result&lt;ICollection&lt;TValue&gt;&gt;() != null</ensures>
      </getter>
    </member>
    <member name="P:Facebook.JsonObject.Item(System.String)">
      <summary>
            Gets or sets the <see cref="T:System.Object" /> with the specified key.
            </summary>
      <value />
    </member>
    <member name="P:Facebook.JsonObject.Count">
      <summary>
            Gets the count.
            </summary>
      <value>The count.</value>
      <getter>
        <ensures inheritedFrom="M:System.Collections.Generic.ICollection`1.get_Count" inheritedFromTypeName="ICollection">Contract.Result&lt;int&gt;() &gt;= 0</ensures>
      </getter>
    </member>
    <member name="P:Facebook.JsonObject.IsReadOnly">
      <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
      <value>
        <c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Facebook.Properties.Resources">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:Facebook.Properties.Resources.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:Facebook.Properties.Resources.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:Facebook.Properties.Resources.InvalidSignedRequest">
      <summary>
              Looks up a localized string similar to Invalid signed request..
            </summary>
    </member>
    <member name="T:Facebook.HttpMethod">
      <summary>
            Represents an HTTP request type.
            </summary>
    </member>
    <member name="F:Facebook.HttpMethod.Get">
      <summary>
            A GET Request
            </summary>
    </member>
    <member name="F:Facebook.HttpMethod.Post">
      <summary>
            A POST Request
            </summary>
    </member>
    <member name="F:Facebook.HttpMethod.Delete">
      <summary>
            A DELETE Request
            </summary>
    </member>
    <member name="M:Facebook.JsonSerializer.DeserializeObject(System.IO.Stream)">
      <requires>stream != null</requires>
    </member>
    <member name="M:Facebook.External.HttpUtility.HttpQSCollection.ToString">
      <ensures inheritedFrom="M:System.Object.ToString" inheritedFromTypeName="Object">Contract.Result&lt;string&gt;() != null</ensures>
    </member>
    <member name="M:Facebook.JsonObject.ToString">
      <ensures inheritedFrom="M:System.Object.ToString" inheritedFromTypeName="Object">Contract.Result&lt;string&gt;() != null</ensures>
    </member>
    <member name="M:Facebook.FacebookUtils.ComputerMd5Hash(System.Byte[])">
      <requires>data != null</requires>
      <ensures>Contract.Result&lt;byte[]&gt;() != null</ensures>
    </member>
    <member name="M:Facebook.FacebookUtils.RemoveTrailingSlash(System.String)">
      <ensures>Contract.Result&lt;string&gt;() != null</ensures>
    </member>
    <member name="M:Facebook.FacebookUtils.Base64UrlEncode(System.Byte[])">
      <requires>input != null</requires>
      <ensures>!string.IsNullOrEmpty(Contract.Result&lt;string&gt;())</ensures>
    </member>
    <member name="M:Facebook.FacebookUtils.RemoveTrailingSlash(System.Uri)">
      <requires>url != null</requires>
      <ensures>Contract.Result&lt;Uri&gt;() != null</ensures>
    </member>
    <member name="M:Facebook.FacebookUtils.ComputeHmacSha256Hash(System.Byte[],System.Byte[])">
      <requires>data != null</requires>
      <requires>key != null</requires>
      <ensures>Contract.Result&lt;byte[]&gt;() != null</ensures>
    </member>
    <member name="M:Facebook.FacebookUtils.DecryptAes256CBCNoPadding(System.Byte[],System.Byte[],System.Byte[])">
      <requires>encryptedData != null</requires>
      <requires>key != null</requires>
      <requires>iv != null</requires>
      <ensures>!string.IsNullOrEmpty(Contract.Result&lt;string&gt;())</ensures>
    </member>
    <member name="M:Facebook.FacebookUtils.Base64UrlDecode(System.String)">
      <requires>!string.IsNullOrEmpty(base64UrlSafeString)</requires>
      <ensures>Contract.Result&lt;byte[]&gt;() != null</ensures>
    </member>
  </members>
</doc>