//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Mvp.Xml.Common
{
  using System;
  using System.Resources;
  using System.Threading;


  /// <summary>Contains resources for the application.</summary>
  internal static class SR
  {

    private static ResourceManager _resourceManager =
      new ResourceManager(typeof(SR).FullName, typeof(SR).Module.Assembly);

    /// <summary>
    /// Gets the specified resource for the <see cref='Thread.CurrentUICulture'/>.
    /// </summary>
    /// <param name='key'>The key of the resource to retrieve.</param>
    /// <returns>The object resource.</returns>
    internal static object GetObject(string key)
    {
      return _resourceManager.GetObject(key);
    }

    /// <summary>
    /// Gets the specified resource for the <see cref='Thread.CurrentUICulture'/>.
    /// </summary>
    /// <param name='key'>The key of the resource to retrieve.</param>
    /// <returns>The string resource.</returns>
    internal static string GetString(string key)
    {
      return _resourceManager.GetString(key);
    }

    /// <summary>
    /// Gets the specified resource for the <see cref='Thread.CurrentUICulture'/> and 
    /// formats it with the arguments received.
    /// </summary>
    /// <param name='key'>The key of the resource to retrieve.</param>
    /// <param name='args'>The arguments to format the resource with.</param>
    /// <returns>The string resource.</returns>
    internal static string GetString(string key, params object[] args)
    {
      return String.Format(GetString(key), args);
    }

    /// <summary>The factory received an XPathNodeIterator that was not obtained from querying an XmlDocument or XmlNode.</summary>
    public static string XmlNodeListFactory_IHasXmlNodeMissing
    {
      get
      {
        return SR.GetString("XmlNodeListFactory_IHasXmlNodeMissing");
      }
    }

    /// <summary>The key() function was called with invalid number of args.</summary>
    public static string IndexingXPathNavigator_KeyWrongArguments
    {
      get
      {
        return SR.GetString("IndexingXPathNavigator_KeyWrongArguments");
      }
    }

    /// <summary></summary>
    public static string IndexingXPathNavigator_KeyArgumentNotString
    {
      get
      {
        return SR.GetString("IndexingXPathNavigator_KeyArgumentNotString");
      }
    }

    /// <summary>The read method was called while the class is already in EOF.</summary>
    public static string XmlFragmentStream_EOF
    {
      get
      {
        return SR.GetString("XmlFragmentStream_EOF");
      }
    }

    /// <summary>Sort expression is invalid.</summary>
    public static string XPathCache_BadSortObject
    {
      get
      {
        return SR.GetString("XPathCache_BadSortObject");
      }
    }

    /// <summary>All methods except for WriteTo() are unimplemented.</summary>
    public static string XmlDocumentFactory_NotImplementedDOM
    {
      get
      {
        return SR.GetString("XmlDocumentFactory_NotImplementedDOM");
      }
    }

    /// <summary>Can't add new elements after the iterator has moved.</summary>
    public static string XPathNavigatorIterator_CantAddAfterMove
    {
      get
      {
        return SR.GetString("XPathNavigatorIterator_CantAddAfterMove");
      }
    }
  }
}
